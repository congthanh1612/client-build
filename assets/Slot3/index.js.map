{"version":3,"sources":["assets/Slot3/Slot3Script/Slot3.Cmd.ts","assets/Slot3/Slot3Script/Slot3.PopupBonus.ts","assets/Slot3/Slot3Script/Slot3.PopupGuide.ts","assets/Slot3/Slot3Script/Slot3.PopupHistory.ts","assets/Slot3/Slot3Script/Slot3.PopupJackpotHistory.ts","assets/Slot3/Slot3Script/Slot3.PopupSelectLine.ts","assets/Slot3/Slot3Script/Slot3.Slot3Controller.ts","assets/Slot3/Slot3Script/Slot3.TrialResults.ts"],"names":["cmd","Network_InPacket_1","require","Network_OutPacket_1","cc","_decorator","ccclass","Code","SUBCRIBE","UNSUBCRIBE","CHANGE_ROOM","PLAY","UPDATE_POT","AUTO","FORCE_STOP_AUTO","DATE_X2","BIG_WIN","FREE","FREE_DAI_LY","MINIMIZE","ReceiveFreeDaiLy","_super","data","_this","call","this","freeSpin","getByte","__extends","default","SendSubcribe","roomId","initData","setControllerId","setCmdId","packHeader","putByte","updateSize","SendUnSubcribe","SendPlay","lines","putString","ReceiveDateX2","ngayX2","remain","currentMoney","currentRoom","getString","getLong","SendChangeRoom","roomLeavedId","roomJoinedId","ReceiveUpdatePot","jackpot","x2","ReceivePlay","ref","result","matrix","linesWin","haiSao","prize","isFree","itemsWild","ratio","currentNumberFreeSpin","getBool","exports","Dialog_1","Tween_1","_a","property","PopupBonus","apply","arguments","items","nodeBoxNotify","txtNotify","lblLeft","lblHeso","lblWin","listItem","factor","left","betValue","onFinished","onSpecialFinished","dataBonus","dataSpecial","heso","win","controller","prototype","start","_loop_1","i","node","this_1","getChildByName","getComponent","Button","Label","on","onBtnSoundTouchBonus","value","length","active","string","numberTo","hidden","showBonus","bonus","tween","set","y","winSize","height","to","easing","sineIn","btn","interactable","arrBonus","split","push","Number","onBtnSoundSumary","showPopup","parent","onClickAutoOpen","randomList","sort","Math","random","_loop_2","this_2","delay","emit","onBtnExit","hidePopup","scheduleOnce","backIn","__decorate","Node","PopupGuide","pageView","btnNext","btnPrev","soundClick","page","soundSlotState","show","canPlaySound","audioEngine","play","getCurrentPageIndex","actNext","getPages","scrollToPage","actPrev","dismiss","soundSave","sys","localStorage","getItem","parseInt","PageView","type","AudioClip","Configs_1","Http_1","App_1","Utils_1","PopupHistory","lblPage","itemTemplate","maxPage","Array","_onShowed","loadData","actNextPage","actPrevPage","instance","showLoading","get","App","API","c","p","un","Login","Nickname","gn","err","res","item","instantiate","destroy","i_1","itemData","opacity","formatNumber","PopupJackpotHistory","PopupSelectLine","buttonsLine","btnClose","atlasPopup","listBtn","onSelectedChanged","SELECTED","children","getSelectedLines","childrenCount","onClickOptionLine","resetSpriteButton","listSpriteName","Sprite","spriteFrame","getSpriteFrame","actSelectAll","even","target","actSelectEven","actSelectOdd","actDeselectAll","SpriteAtlas","Slot3_Cmd_1","Slot3_PopupSelectLine_1","Slot3_PopupBonus_1","Slot3_TrialResults_1","BroadcastReceiver_1","SlotNetworkClient_1","BundleControl_1","Slot3_PopupGuide_1","Slot3_PopupHistory_1","Slot3_PopupJackpotHistory_1","Lobby_Cmd_1","TW","Slot3Controller","nodeCoin","toggleMusic","sprFrameItems","sprFrameItemsBlur","columns","iconWildColumns","lblJackpot","lblBet","lblLine","lblTotalBet","lblCoin","lblWinNow","lblFreeSpinCount","toggleAuto","toggleBoost","toggleTrial","btnSpin","btnBack","btnBetUp","btnBetDown","btnLine","toast","effectWinCash","effectBigWin","effectJackpot","effectBonus","effectFreeSpin","popupSelectLine","popupGuide","popupJackpotHistory","popupHistory","popupBonus","soundBg","soundBgBonus","soundBonusFail","soundFreeSpin","soundGoldEarn","soundJackpot","soundSpinResult","soundSpinSpinning","spineIcon","spineIconList","daiLyFreeSpin","rollStartItemCount","rollAddItemCount","spinDuration","addSpinDuration","itemHeight","betIdx","listBet","listBetLabel","arrLineSelect","isSpined","wildItemId","mapLine","lastSpinRes","columnsWild","mutipleJpNode","musicSlotState","remoteMusicBackground","musicSave","setItem","isChecked","randomBetween","playMusic","column","count","j","getComponentInChildren","sp","Skeleton","setItemSprite","randomRangeInt","removeFromParent","getInstance","addOnClose","actBack","send","addListener","getCmdId","UPDATE_JACKPOT_SLOTS","ResUpdateJackpotSlots","JSON","parse","pots","toString","onSpinResult","stopShowLinesWin","changeItemToDark","formatMoney","register","USER_UPDATE_COIN","Coin","showErrLoading","checkConnect","by","angle","repeatForever","initMutipleJPNode","assetManager","getBundle","load","Prefab","err1","prefab","director","getScene","setInfo","showToast","msg","stopAllActions","runAction","sequence","delayTime","callFunc","moneyToK","money","setEnabledAllButtons","enabled","Tween","stopAllByTarget","stopAllEffects","stopAllItemEffect","col","scale","spin","rIdx","results","alertDialog","showMsg","getTextLang","curMoney","stopSpin","roll","setPosition","v2","getPosition","x","showLineWins","zIndex","removeDups","splice","linesWinChildren","rolls","actions","indexOf","showWinCash","lineIdx","line","mLine","countItemWin","fisrtItemId","itemId","itemRow","scaleTo","setDarkItem","showCoins","number","cash","label","fadeIn","fadeOut","showEffectFreeSpin","cb","spine","setAnimation","setCompleteListener","showEffectBigWin","showEffectJackpot","showEffectBonus","timeScale","step1Pos","step2Pos","step3Pos","position","quadOut","quadInOut","quadIn","itemAnimIcon","skeletonData","animation","loop","i_2","spined","item1","item2","item3","checkIconSpine","idSprite","sprite","animName","spr","frame","sizeMode","SizeMode","TRIMMED","setContentSize","size","width","actPopupBonus","stopAll","loadScene","actHidden","actBetUp","n","actBetDown","min","max","floor","settingMusic","stop","loadPrefabGame","finish","total","actLine","actGuide","actHistoryJackpot","actHistory","toggleTrialOnCheck","toggleAutoOnCheck","toggleBoostOnCheck","state","color","Color","GRAY","WHITE","Toggle","SpriteFrame","SkeletonData","Component","TrialResults","_pos","_data","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","_length","_controllerId","_cmdId","_error"],"mappings":"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","sourcesContent":["import InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport OutPacket from \"../../Lobby/LobbyScript/Script/networks/Network.OutPacket\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\nexport namespace cmd {\r\n    export class Code {\r\n        static SUBCRIBE = 12003;\r\n        static UNSUBCRIBE = 12004;\r\n        static CHANGE_ROOM = 12005;\r\n        static PLAY = 12001;\r\n        static UPDATE_POT = 12002;\r\n        static AUTO = 12006;\r\n        static FORCE_STOP_AUTO = 12008;\r\n        static DATE_X2 = 12009;\r\n        static BIG_WIN = 12010;\r\n        static FREE = 12011;\r\n        static FREE_DAI_LY = 12012;\r\n        static MINIMIZE = 12013;\r\n    }\r\n\r\n    export class ReceiveFreeDaiLy extends InPacket {\r\n      \r\n        freeSpin = 0;\r\n\r\n      \r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n           \r\n            this.freeSpin = this.getByte();\r\n            \r\n        }\r\n    }\r\n    \r\n    export class SendSubcribe extends OutPacket {\r\n        constructor(roomId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE);\r\n            this.packHeader();\r\n            this.putByte(roomId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendUnSubcribe extends OutPacket {\r\n        constructor(roomId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.UNSUBCRIBE);\r\n            this.packHeader();\r\n            this.putByte(roomId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendPlay extends OutPacket {\r\n        constructor(lines: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.PLAY);\r\n            this.packHeader();\r\n            this.putString(lines);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReceiveDateX2 extends InPacket {\r\n        \r\n        ngayX2 = \"\";\r\n        remain = 0;\r\n        currentMoney = 0;\r\n        freeSpin = 0;\r\n        lines = \"\";\r\n        currentRoom = 0;\r\n\r\n      \r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n           \r\n            this.ngayX2 = this.getString();\r\n            this.remain = this.getByte();\r\n            this.currentMoney = this.getLong();\r\n            this.freeSpin = this.getByte();\r\n            this.lines = this.getString();\r\n            this.currentRoom = this.getByte();\r\n        }\r\n    }\r\n    \r\n    export class SendChangeRoom extends OutPacket {\r\n        constructor(roomLeavedId: number, roomJoinedId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHANGE_ROOM);\r\n            this.packHeader();\r\n            this.putByte(roomLeavedId);\r\n            this.putByte(roomJoinedId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ReceiveUpdatePot extends InPacket {\r\n        jackpot = 0;\r\n        x2 = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.jackpot = this.getLong();\r\n            this.x2 = this.getByte();\r\n        }\r\n    }\r\n    export class ReceivePlay extends InPacket {\r\n        ref = 0;\r\n        result = 0;\r\n        matrix = \"\";\r\n        linesWin = \"\";\r\n        haiSao = \"\";\r\n        prize = 0;\r\n        currentMoney = 0;\r\n        freeSpin = 0;\r\n        isFree = false;\r\n        itemsWild = \"\";\r\n        ratio = 0;\r\n        currentNumberFreeSpin = 0;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.ref = this.getLong();\r\n            this.result = this.getByte();\r\n            this.matrix = this.getString();\r\n            this.linesWin = this.getString();\r\n            this.haiSao = this.getString();\r\n            this.prize = this.getLong();\r\n            this.currentMoney = this.getLong();\r\n            this.freeSpin = this.getByte();\r\n            this.isFree = this.getBool();\r\n            this.itemsWild = this.getString();\r\n            this.ratio = this.getByte();\r\n            this.currentNumberFreeSpin = this.getByte();\r\n        }\r\n    }\r\n}\r\nexport default cmd;","import Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Slot4Controller from \"../../Slot4/Slot4Script/Slot4Controller\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupBonus extends Dialog {\r\n    @property(cc.Node)\r\n    items: cc.Node = null;\r\n    @property(cc.Node)\r\n    nodeBoxNotify: cc.Node = null;\r\n    @property(cc.Label)\r\n    txtNotify: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblLeft: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblHeso: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblWin: cc.Label = null;\r\n    @property([cc.Node])\r\n    listItem: cc.Node[] = [];\r\n    private factor = 1;\r\n    private left = 0;\r\n    private betValue = 0;\r\n    private onFinished: () => void = null;\r\n    private onSpecialFinished: () => void = null;\r\n    private dataBonus: Array<number> = [];\r\n    private dataSpecial: number = -1;\r\n    private heso: number = 0;\r\n    private win: number = 0;\r\n    private controller: Slot4Controller = null;\r\n    start() {\r\n\r\n        // for (let i = 0; i < this.items.childrenCount; i++) {\r\n        for (let i = 0; i < this.listItem.length; i++) {\r\n            // let node = this.items.children[i];\r\n            let node = this.listItem[i];\r\n            node[\"btn\"] = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            node[\"label\"] = node.getChildByName(\"label\").getComponent(cc.Label);\r\n            node[\"shadow\"] = node.getChildByName(\"shadow\");\r\n            node[\"icon\"] = node.getChildByName(\"icon\");\r\n            node[\"factor\"] = node.getChildByName(\"factor\");\r\n            node[\"btn\"].node.on(\"click\", () => {\r\n                this.controller.onBtnSoundTouchBonus();\r\n                var value = this.dataBonus[this.dataBonus.length - this.left];\r\n                //  cc.log(\"click:\" + value + \" : \" + node[\"is_open\"]);\r\n                if (node[\"is_open\"] == false && this.left > 0) {\r\n                    node[\"is_open\"] = true;\r\n                    switch (value) {\r\n                        case 0:\r\n                            this.factor++;\r\n                            node[\"btn\"].node.active = false;\r\n                            node[\"factor\"].active = true;\r\n                            break;\r\n                        case 1:\r\n                            node[\"btn\"].node.active = false;\r\n                            node[\"icon\"].active = true;\r\n                            node[\"label\"].node.active = true\r\n                            node[\"shadow\"].active = true\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"], 4 * this.betValue, 0.3);\r\n                            this.win += 4 * this.betValue;\r\n                            Tween.numberTo(this.lblWin, this.win, 0.3);\r\n                            break;\r\n\r\n                        case 2:\r\n                            node[\"btn\"].node.active = false;\r\n                            node[\"icon\"].active = true;\r\n                            node[\"label\"].node.active = true\r\n                            node[\"shadow\"].active = true\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"], 10 * this.betValue * this.factor, 0.3);\r\n                            this.win += 10 * this.betValue * this.factor;\r\n                            Tween.numberTo(this.lblWin, this.win, 0.3);\r\n                            break;\r\n                        case 3:\r\n                            node[\"btn\"].node.active = false;\r\n                            node[\"icon\"].active = true;\r\n                            node[\"label\"].node.active = true\r\n                            node[\"shadow\"].active = true\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"], 15 * this.betValue * this.factor, 0.3);\r\n                            this.win += 15 * this.betValue * this.factor;\r\n                            Tween.numberTo(this.lblWin, this.win, 0.3);\r\n                            break;\r\n                        case 4:\r\n                            node[\"btn\"].node.active = false;\r\n                            node[\"icon\"].active = true;\r\n                            node[\"label\"].node.active = true\r\n                            node[\"shadow\"].active = true\r\n                            node[\"label\"].string = \"0\";\r\n                            this.win += 20 * this.betValue * this.factor;\r\n                            Tween.numberTo(node[\"label\"], 20 * this.betValue * this.factor, 0.3);\r\n                            Tween.numberTo(this.lblWin, this.win, 0.3);\r\n                            break;\r\n\r\n\r\n                    }\r\n                    this.left--;\r\n                    this.lblLeft.string = \"\" + this.left;\r\n                    if (this.left <= 0) {\r\n                        this.hidden();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showBonus(betValue: number, bonus: string, controller, onFinished: () => void) {\r\n        // super.show();\r\n        this.node.active = true;\r\n        cc.tween(this.node).set({ y: cc.winSize.height }).to(0.5, { y: 0 }, { easing: cc.easing.sineIn }).start();\r\n        this.controller = controller;\r\n        this.win = 0;\r\n        Tween.numberTo(this.lblWin, this.win, 0.3);\r\n        // for (let i = 0; i < this.items.childrenCount; i++) {\r\n        for (let i = 0; i < this.listItem.length; i++) {\r\n            let node = this.listItem[i];\r\n            node[\"btn\"] = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            node[\"icon\"] = node.getChildByName(\"icon\");\r\n            node[\"factor\"] = node.getChildByName(\"factor\");\r\n            node[\"icon\"].active = false;\r\n            node[\"factor\"].active = false;\r\n            node[\"is_open\"] = false;\r\n        }\r\n        for (let i = 0; i < this.listItem.length; i++) {\r\n            let node = this.listItem[i];\r\n            let btn = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            btn.node.active = true;\r\n            btn.interactable = true;\r\n            node.getChildByName(\"label\").active = false;\r\n            node.getChildByName(\"shadow\").active = false;\r\n        }\r\n        this.betValue = betValue;\r\n        this.onFinished = onFinished;\r\n        let arrBonus = bonus.split(\",\");\r\n        this.dataBonus = [];\r\n        for (let i = 0; i < arrBonus.length; i++) {\r\n            this.dataBonus.push(Number(arrBonus[i]));\r\n        }\r\n        this.left = this.dataBonus.length - 1;\r\n        this.factor = 1;\r\n        this.lblLeft.string = \"\" + this.left;\r\n        this.heso = this.dataBonus[0];\r\n        this.lblHeso.string = this.heso + \"\";\r\n    }\r\n\r\n\r\n    hidden() {\r\n        this.controller.onBtnSoundSumary();\r\n        Tween.showPopup(this.nodeBoxNotify, this.nodeBoxNotify.parent);\r\n        Tween.numberTo(this.txtNotify, this.win, 0.3);\r\n\r\n    }\r\n    onClickAutoOpen() {\r\n        let randomList = [];\r\n        for (let i = 0; i < this.listItem.length; i++) {\r\n            randomList.push(i);\r\n        }\r\n        randomList.sort(() => Math.random() - 0.5);\r\n        for (let i = 0; i < this.listItem.length; i++) {\r\n            let node = this.listItem[randomList[i]];\r\n            if (this.left > 0) {\r\n                cc.tween(node).delay(0.1 * i).call(() => {\r\n                    node.getChildByName(\"btn\").emit(\"click\");\r\n                }).start();\r\n            }\r\n            // this.controller.onBtnSoundTouchBonus();\r\n            // var value = this.dataBonus[this.dataBonus.length - this.left];\r\n            // if (this.left > 0)\r\n            //     switch (value) {\r\n            //         case 0:\r\n            //             this.factor++;\r\n            //             break;\r\n            //         case 1:\r\n            //             this.win += 4 * this.betValue;\r\n            //             break;\r\n            //         case 2:\r\n            //             this.win += 10 * this.betValue * this.factor;\r\n            //             break;\r\n            //         case 3:\r\n            //             this.win += 15 * this.betValue * this.factor;\r\n            //             break;\r\n            //         case 4:\r\n            //             this.win += 20 * this.betValue * this.factor;\r\n            //             break;\r\n            //     }\r\n            // this.left--;\r\n        }\r\n    }\r\n    onBtnExit() {\r\n        Tween.hidePopup(this.nodeBoxNotify, this.nodeBoxNotify.parent, false);\r\n        this.scheduleOnce(() => {\r\n            // this.dismiss();\r\n            cc.tween(this.node).to(0.5, { y: cc.winSize.height }, { easing: cc.easing.backIn }).call(() => {\r\n                this.node.active = false;\r\n            }).start();\r\n            this.onFinished();\r\n        }, 1.5);\r\n    }\r\n}\r\nexport default PopupBonus;","import Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupGuide extends Dialog {\r\n\r\n    @property(cc.PageView)\r\n    pageView : cc.PageView = null;\r\n\r\n    // @property([cc.Node])\r\n    // pages: cc.Node[] = [];\r\n    @property(cc.Node)\r\n    btnNext: cc.Node = null;\r\n    @property(cc.Node)\r\n    btnPrev: cc.Node = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n\r\n    private page = 0;\r\n\r\n    private soundSlotState = null;\r\n\r\n    start() {\r\n    }\r\n\r\n\r\n    show() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.show();\r\n        this.page = this.pageView.getCurrentPageIndex();\r\n        // this.btnPrev.active = true;\r\n    }\r\n\r\n    actNext() {\r\n        if (this.page < this.pageView.getPages().length - 1) {\r\n            this.page++;\r\n        }\r\n\r\n        // if (this.page == this.pageView.getPages().length - 1) {\r\n        //     this.btnNext.active = false;\r\n        // }\r\n        // this.btnPrev.active = true;\r\n\r\n        this.pageView.scrollToPage(this.page,0.2);\r\n    }\r\n\r\n    actPrev() {\r\n        if (this.page > 0) {\r\n            this.page--;\r\n        }\r\n\r\n        // if (this.page == 0) {\r\n        //     this.btnPrev.active = false;\r\n        // }\r\n        // this.btnNext.active = true;\r\n\r\n        this.pageView.scrollToPage(this.page,0.2);\r\n    }\r\n\r\n \r\n    dismiss() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.dismiss();\r\n    }\r\n\r\n    canPlaySound() {\r\n        if(this.soundClick == null) return false;\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_3\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nexport default PopupGuide;","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupHistory extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    private soundSlotState = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.show();\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 137, \"p\": this.page, \"un\": Configs.Login.Nickname, \"gn\": \"Spartan\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (!res[\"success\"]) return;\r\n            //  cc.log(res);\r\n            if (this.items.length == 0) {\r\n                for (var i = 0; i < 10; i++) {\r\n                    let item = cc.instantiate(this.itemTemplate);\r\n                    item.parent = this.itemTemplate.parent;\r\n                    this.items.push(item);\r\n                }\r\n                this.itemTemplate.destroy();\r\n                this.itemTemplate = null;\r\n            }\r\n\r\n            this.maxPage = res[\"totalPages\"];\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                let item = this.items[i];\r\n                if (i < res[\"results\"].length) {\r\n                    let itemData = res[\"results\"][i];\r\n                    item.getChildByName(\"bg\").opacity = i % 2 == 0 ? 255 : 0;\r\n                    item.getChildByName(\"Session\").getComponent(cc.Label).string = itemData[\"rf\"];\r\n                    item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"];\r\n                    item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                    item.getChildByName(\"LineBet\").getComponent(cc.Label).string = itemData[\"lb\"] === \"\" ? 0 : itemData[\"lb\"].split(\",\").length;\r\n                    item.getChildByName(\"LineWin\").getComponent(cc.Label).string = itemData[\"lw\"] === \"\" ? 0 : itemData[\"lw\"].split(\",\").length;\r\n                    item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    canPlaySound() {\r\n        if(this.soundClick == null) return false;\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_1\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupJackpotHistory extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    private soundSlotState = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.show();\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 138, \"p\": this.page, \"gn\": \"Spartan\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (!res[\"success\"]) return;\r\n            if (this.items.length == 0) {\r\n                for (var i = 0; i < 10; i++) {\r\n                    let item = cc.instantiate(this.itemTemplate);\r\n                    item.parent = this.itemTemplate.parent;\r\n                    this.items.push(item);\r\n                }\r\n                this.itemTemplate.destroy();\r\n                this.itemTemplate = null;\r\n            }\r\n\r\n            this.maxPage = res[\"totalPages\"];\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                let item = this.items[i];\r\n                if (i < res[\"results\"].length) {\r\n                    let itemData = res[\"results\"][i];\r\n                    item.getChildByName(\"bg\").opacity = i % 2 == 0 ? 255 : 0;\r\n                    item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"];\r\n                    item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                    item.getChildByName(\"Type\").getComponent(cc.Label).string = itemData[\"rs\"] == 3 ? \"Nổ hũ\" : \"Thắng lớn\";\r\n                    item.getChildByName(\"Account\").getComponent(cc.Label).string = itemData[\"un\"];\r\n                    item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    canPlaySound() {\r\n        if(this.soundClick == null) return false;\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_1\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nexport default PopupJackpotHistory;","import BundleControl from \"../../Loading/src/BundleControl\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupSelectLine extends Dialog {\r\n    @property(cc.Node)\r\n    buttonsLine: cc.Node = null;\r\n    @property(cc.Button)\r\n    btnClose: cc.Button = null;\r\n    @property(cc.SpriteAtlas)\r\n    atlasPopup: cc.SpriteAtlas = null;\r\n    @property([cc.Button])\r\n    listBtn: cc.Button[] = [];\r\n\r\n    onSelectedChanged: (lines: Array<number>) => void = null;\r\n    private readonly SELECTED = \"selected\";\r\n\r\n    start() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = true;\r\n            node.on(\"click\", () => {\r\n                node[this.SELECTED] = !node[this.SELECTED];\r\n                node.opacity = node[this.SELECTED] ? 255 : 80;\r\n                if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n                this.btnClose.interactable = this.getSelectedLines().length > 0;\r\n            });\r\n        }\r\n    }\r\n    onClickOptionLine(even, data) {\r\n\r\n    }\r\n    resetSpriteButton() {\r\n        let listSpriteName = [\"btn_bochon\", \"btn_chonchan\", \"btn_chonle\", \"btn_tatca\"];\r\n        for (let i = 0; i < this.listBtn.length; i++) {\r\n            //  cc.log(\"name sprite==\")\r\n            this.listBtn[i].node.getComponent(cc.Sprite).spriteFrame = this.atlasPopup.getSpriteFrame(listSpriteName[i]);\r\n        }\r\n    }\r\n    actSelectAll(even) {\r\n        this.resetSpriteButton();\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = true;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n        even.target.getComponent(cc.Sprite).spriteFrame = this.atlasPopup.getSpriteFrame(\"btn_tatca_on\");\r\n    }\r\n\r\n    actSelectEven(even) {\r\n        this.resetSpriteButton();\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = i % 2 != 0;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n        even.target.getComponent(cc.Sprite).spriteFrame = this.atlasPopup.getSpriteFrame(\"btn_chonchan_on\");\r\n    }\r\n\r\n    actSelectOdd(even) {\r\n        this.resetSpriteButton();\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = i % 2 == 0;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n        even.target.getComponent(cc.Sprite).spriteFrame = this.atlasPopup.getSpriteFrame(\"btn_chonle_on\");\r\n    }\r\n\r\n    actDeselectAll(even) {\r\n        this.resetSpriteButton();\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = false;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = false;\r\n        even.target.getComponent(cc.Sprite).spriteFrame = this.atlasPopup.getSpriteFrame(\"btn_bochon_on\");\r\n    }\r\n\r\n    private getSelectedLines() {\r\n        let lines = new Array<number>();\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            if (typeof node[this.SELECTED] == \"undefined\" || node[this.SELECTED]) {\r\n                lines.push(i + 1);\r\n            }\r\n        }\r\n        return lines;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.getSelectedLines().length > 0) {\r\n            super.dismiss();\r\n        }\r\n    }\r\n}\r\nexport default PopupSelectLine;","import cmd from \"./Slot3.Cmd\";\r\n\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport PopupSelectLine from \"./Slot3.PopupSelectLine\";\r\nimport PopupBonus from \"./Slot3.PopupBonus\";\r\nimport TrialResults from \"./Slot3.TrialResults\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport BroadcastReceiver from \"../../Lobby/LobbyScript/Script/common/BroadcastReceiver\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\nimport InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport SlotNetworkClient from \"../../Lobby/LobbyScript/Script/networks/SlotNetworkClient\";\r\nimport BundleControl from \"../../Loading/src/BundleControl\";\r\nimport PopupGuide from \"./Slot3.PopupGuide\";\r\nimport PopupHistory from \"./Slot3.PopupHistory\";\r\nimport PopupJackpotHistory from \"./Slot3.PopupJackpotHistory\";\r\nimport lobbyCMD from \"../../Lobby/LobbyScript/Lobby.Cmd\";\r\nvar TW = cc.tween;\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot3Controller extends cc.Component {\r\n    @property(cc.Node)\r\n    nodeCoin: cc.Node = null;\r\n    @property(cc.Toggle)\r\n    toggleMusic: cc.Toggle = null;\r\n    @property([cc.SpriteFrame])\r\n    sprFrameItems: cc.SpriteFrame[] = [];\r\n    @property([cc.SpriteFrame])\r\n    sprFrameItemsBlur: cc.SpriteFrame[] = [];\r\n\r\n    @property(cc.Node)\r\n    columns: cc.Node = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n    @property(cc.Node)\r\n    linesWin: cc.Node = null;\r\n    @property(cc.Node)\r\n    iconWildColumns: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lblJackpot: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblBet: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblLine: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblTotalBet: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblCoin: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblWinNow: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblFreeSpinCount: cc.Label = null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleAuto: cc.Toggle = null;\r\n    @property(cc.Toggle)\r\n    toggleBoost: cc.Toggle = null;\r\n    @property(cc.Toggle)\r\n    toggleTrial: cc.Toggle = null;\r\n\r\n    @property(cc.Button)\r\n    btnSpin: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnBack: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnBetUp: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnBetDown: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnLine: cc.Button = null;\r\n\r\n    @property(cc.Node)\r\n    toast: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    effectWinCash: cc.Node = null;\r\n    @property(cc.Node)\r\n    effectBigWin: cc.Node = null;\r\n    @property(cc.Node)\r\n    effectJackpot: cc.Node = null;\r\n    @property(cc.Node)\r\n    effectBonus: cc.Node = null;\r\n    @property(cc.Node)\r\n    effectFreeSpin: cc.Node = null;\r\n\r\n    @property(PopupSelectLine)\r\n    popupSelectLine: PopupSelectLine = null;\r\n    @property(PopupGuide)\r\n    popupGuide: PopupGuide = null;\r\n    @property(PopupJackpotHistory)\r\n    popupJackpotHistory: PopupJackpotHistory = null;\r\n    @property(PopupHistory)\r\n    popupHistory: PopupHistory = null;\r\n    @property(PopupBonus)\r\n    popupBonus: PopupBonus = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundBg: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundBgBonus: cc.AudioClip = null;\r\n\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundBonusFail: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundFreeSpin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundGoldEarn: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundJackpot: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundSpinResult: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundSpinSpinning: cc.AudioClip = null;\r\n\r\n\r\n    @property({ type: sp.SkeletonData })\r\n    spineIcon: sp.SkeletonData = null;\r\n    @property([sp.SkeletonData])\r\n    spineIconList: sp.SkeletonData[] = [];\r\n    public daiLyFreeSpin = 0;\r\n    private rollStartItemCount = 15;\r\n    private rollAddItemCount = 10;\r\n    private spinDuration = 1.2;\r\n    private addSpinDuration = 0.3;\r\n    private itemHeight = 0;\r\n    private betIdx = 0;\r\n    private listBet = [100, 1000, 10000];\r\n    private listBetLabel = [\"100\", \"1.000\", \"10.000\"];\r\n    private arrLineSelect = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25];\r\n    private isSpined = true;\r\n    private readonly wildItemId = 2;\r\n    private readonly mapLine = [\r\n        [5, 6, 7, 8, 9],//1\r\n        [0, 1, 2, 3, 4],//2\r\n        [10, 11, 12, 13, 14],//3\r\n        [10, 6, 2, 8, 14],//4\r\n        [0, 6, 12, 8, 4],//5\r\n        [5, 1, 2, 3, 9],//6\r\n        [5, 11, 12, 13, 9],//7\r\n        [0, 1, 7, 13, 14],//8\r\n        [10, 11, 7, 3, 4],//9\r\n        [5, 11, 7, 3, 9],//10\r\n        [5, 1, 7, 13, 9],//11\r\n        [0, 6, 7, 8, 4],//12\r\n        [10, 6, 7, 8, 14],//13\r\n        [0, 6, 2, 8, 4],//14\r\n        [10, 6, 12, 8, 14],//15\r\n        [5, 6, 2, 8, 9],//16\r\n        [5, 6, 12, 8, 9],//17\r\n        [0, 1, 12, 3, 4],//18\r\n        [10, 11, 2, 13, 14],//19\r\n        [0, 11, 12, 13, 4],//20\r\n        [10, 1, 2, 3, 14],//21\r\n        [5, 1, 12, 3, 9],//23\r\n        [5, 11, 2, 13, 9],//22\r\n        [0, 11, 2, 13, 4],//24\r\n        [10, 1, 12, 3, 14]//25\r\n    ];\r\n    private lastSpinRes: cmd.ReceivePlay = null;\r\n    private columnsWild = [];\r\n    private currentNumberFreeSpin = 0;\r\n    private mutipleJpNode = null;\r\n    start() {\r\n        this.daiLyFreeSpin = 0;\r\n        var musicSave = cc.sys.localStorage.getItem(\"music_Slot_3\");\r\n\r\n        if (musicSave != null) {\r\n            this.musicSlotState = parseInt(musicSave);\r\n        } else {\r\n            this.musicSlotState = 1;\r\n            cc.sys.localStorage.setItem(\"music_Slot_3\", \"1\");\r\n        }\r\n\r\n        // soundSave :   0 == OFF , 1 == ON\r\n        var soundSave = cc.sys.localStorage.getItem(\"music_Slot_3\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n            cc.sys.localStorage.setItem(\"music_Slot_3\", \"1\");\r\n        }\r\n\r\n        if (this.musicSlotState == 0) {\r\n            this.toggleMusic.isChecked = true;\r\n        } else {\r\n            this.toggleMusic.isChecked = false;\r\n        }\r\n\r\n        if (this.musicSlotState == 1) {\r\n            var musicId = this.randomBetween(0, 4);\r\n            this.remoteMusicBackground = cc.audioEngine.playMusic(this.soundBg, true);\r\n        }\r\n        // cc.audioEngine.play(this.soundBg, true, 1);\r\n        this.itemHeight = this.itemTemplate.height;\r\n        for (let i = 0; i < this.columns.childrenCount; i++) {\r\n            let column = this.columns.children[i];\r\n            let count = this.rollStartItemCount + i * this.rollAddItemCount;\r\n            for (let j = 0; j < count; j++) {\r\n                let item = cc.instantiate(this.itemTemplate);\r\n                item.getComponentInChildren(sp.Skeleton).node.active = false;\r\n                item.parent = column;\r\n                if (j >= 3) {\r\n                    this.setItemSprite(item.children[0].getComponent(cc.Sprite), this.sprFrameItemsBlur[Utils.randomRangeInt(0, this.sprFrameItemsBlur.length)]);\r\n                } else {\r\n                    this.setItemSprite(item.children[0].getComponent(cc.Sprite), this.sprFrameItems[Utils.randomRangeInt(0, this.sprFrameItems.length)]);\r\n                }\r\n            }\r\n        }\r\n        this.itemTemplate.removeFromParent();\r\n        this.itemTemplate = null;\r\n\r\n        SlotNetworkClient.getInstance().addOnClose(() => {\r\n            this.actBack();\r\n        }, this);\r\n        SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(this.betIdx));\r\n        SlotNetworkClient.getInstance().addListener((data) => {\r\n            let inpacket = new InPacket(data);\r\n            switch (inpacket.getCmdId()) {\r\n                case lobbyCMD.Code.UPDATE_JACKPOT_SLOTS:\r\n                    {\r\n                        let res = new lobbyCMD.ResUpdateJackpotSlots(data);\r\n                        let resJson = JSON.parse(res.pots);\r\n                        // //  cc.log(\"UPDATE_JACKPOT_SLOTS:\"+JSON.stringify(resJson));\r\n\r\n                    }\r\n                    break;\r\n                case cmd.Code.FREE_DAI_LY:\r\n                    {\r\n                        if (!this.toggleTrial.isChecked) {\r\n                            let res = new cmd.ReceiveFreeDaiLy(data);\r\n                            this.daiLyFreeSpin = res.freeSpin;\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case cmd.Code.DATE_X2:\r\n                    {\r\n                        let res = new cmd.ReceiveDateX2(data);\r\n\r\n                        //  cc.log(\"DATE_X2:\" + JSON.stringify(res));\r\n                        this.currentNumberFreeSpin = res.freeSpin + this.daiLyFreeSpin;\r\n                        if (res.freeSpin > 0) {\r\n                            this.lblFreeSpinCount.node.parent.active = true;\r\n                            this.lblFreeSpinCount.string = res.freeSpin.toString();\r\n                        }\r\n                        else {\r\n                            this.lblFreeSpinCount.node.parent.active = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case cmd.Code.UPDATE_POT:\r\n                    {\r\n                        let res = new cmd.ReceiveUpdatePot(data);\r\n                        Tween.numberTo(this.lblJackpot, res.jackpot, 0.3);\r\n                    }\r\n                    break;\r\n                case cmd.Code.PLAY:\r\n                    {\r\n                        let res = new cmd.ReceivePlay(data);\r\n                        // //  cc.log(res);\r\n                        this.onSpinResult(res);\r\n                    }\r\n                    break;\r\n            }\r\n        }, this);\r\n\r\n\r\n       \r\n        this.stopShowLinesWin();\r\n        this.changeItemToDark(false);\r\n        this.toast.active = false;\r\n        this.effectWinCash.active = false;\r\n        this.effectJackpot.active = false;\r\n        this.effectBigWin.active = false;\r\n        this.lblTotalBet.string = Utils.formatMoney(this.arrLineSelect.length * this.listBet[this.betIdx]);\r\n\r\n\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\r\n            Tween.numberTo(this.lblCoin, Configs.Login.Coin, 0.3);\r\n        }, this);\r\n        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n\r\n        App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n        SlotNetworkClient.getInstance().checkConnect(() => {\r\n            App.instance.showLoading(false);\r\n        });\r\n        cc.tween(this.btnSpin.node.getChildByName(\"ic_arrow\")).by(1.0, { angle: -360 }).repeatForever().start();\r\n        //this.initMutipleJPNode();\r\n    }\r\n    initMutipleJPNode() {\r\n        if (!this.mutipleJpNode) {\r\n            cc.assetManager.getBundle(\"Lobby\").load(\"prefabs/MutipleJackpotPr\", cc.Prefab, function (finish, total, item) {\r\n            }, (err1, prefab: cc.Prefab) => {\r\n                if (err1 != null) {\r\n                    //  cc.log(\"errr load game TIENLEN:\", err1);\r\n                } else {\r\n                    this.mutipleJpNode = cc.instantiate(prefab).getComponent(\"MutipleJackpot\");\r\n                    this.mutipleJpNode.node.parent = cc.director.getScene().getChildByName(\"Canvas\")\r\n                    this.mutipleJpNode.setInfo(\"THANTAI\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    private showToast(msg: string) {\r\n        this.toast.getComponentInChildren(cc.Label).string = msg;\r\n        this.toast.stopAllActions();\r\n        this.toast.active = true;\r\n        this.toast.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(() => {\r\n            this.toast.active = false;\r\n        })));\r\n    }\r\n\r\n    private moneyToK(money: number): string {\r\n        // if (money < 10000) {\r\n        //     return money.toString();\r\n        // }\r\n        // money = parseInt((money / 1000).toString());\r\n        return Utils.formatMoney(money);\r\n        // return money.toString();\r\n    }\r\n\r\n    private setEnabledAllButtons(enabled: boolean) {\r\n        this.btnSpin.interactable = enabled;\r\n        this.btnBack.interactable = enabled;\r\n        this.btnBetUp.interactable = enabled;\r\n        this.btnBetDown.interactable = enabled;\r\n        this.btnLine.interactable = enabled;\r\n        this.toggleTrial.interactable = enabled;\r\n        if (enabled) {\r\n            this.btnSpin.node.getChildByName(\"ic_arrow\").active = true;\r\n            cc.Tween.stopAllByTarget(this.btnSpin.node.getChildByName(\"ic_arrow\"));\r\n            cc.tween(this.btnSpin.node.getChildByName(\"ic_arrow\")).by(1.0, { angle: -360 }).repeatForever().start();\r\n        } else {\r\n            this.btnSpin.node.getChildByName(\"ic_arrow\").active = false;\r\n        }\r\n\r\n    }\r\n\r\n    private stopAllEffects() {\r\n        this.effectJackpot.stopAllActions();\r\n        this.effectJackpot.active = false;\r\n        this.effectBigWin.stopAllActions();\r\n        this.effectBigWin.active = false;\r\n        this.effectFreeSpin.stopAllActions();\r\n        this.effectFreeSpin.active = false;\r\n    }\r\n\r\n    private stopShowLinesWin() {\r\n        this.linesWin.stopAllActions();\r\n        for (var i = 0; i < this.linesWin.childrenCount; i++) {\r\n            this.linesWin.children[i].active = false;\r\n        }\r\n        for (var i = 0; i < this.iconWildColumns.childrenCount; i++) {\r\n            this.iconWildColumns.children[i].active = false;\r\n        }\r\n        this.stopAllItemEffect();\r\n    }\r\n\r\n    private stopAllItemEffect() {\r\n        for (let i = 0; i < this.columns.childrenCount; i++) {\r\n            let col = this.columns.children[i];\r\n            for (let j = 0; j < col.childrenCount; j++) {\r\n                let item = col.children[j];\r\n                item.stopAllActions();\r\n                item.scale = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    private spin() {\r\n        if (!this.isSpined) return;\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundSpinSpinning, false, 1);\r\n        }\r\n\r\n\r\n        if (!this.toggleTrial.isChecked) {\r\n\r\n\r\n            if (this.currentNumberFreeSpin <= 0) {\r\n                if (Configs.Login.Coin < this.listBet[this.betIdx] * this.arrLineSelect.length) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_not_enough\"));\r\n                    return;\r\n                }\r\n                let curMoney = Configs.Login.Coin - this.arrLineSelect.length * this.listBet[this.betIdx];\r\n                Tween.numberTo(this.lblCoin, curMoney, 0.3);\r\n            }\r\n            else {\r\n                this.currentNumberFreeSpin--;\r\n                this.lblFreeSpinCount.string = this.currentNumberFreeSpin + \"\";\r\n                if (this.currentNumberFreeSpin <= 0) {\r\n                    this.currentNumberFreeSpin = 0;\r\n                    this.lblFreeSpinCount.node.parent.active = false;\r\n                }\r\n            }\r\n            this.isSpined = false;\r\n            this.changeItemToDark(false);\r\n            this.stopAllEffects();\r\n            this.stopShowLinesWin();\r\n            this.setEnabledAllButtons(false);\r\n            SlotNetworkClient.getInstance().send(new cmd.SendPlay(this.arrLineSelect.toString()));\r\n        } else {\r\n            this.isSpined = false;\r\n            this.changeItemToDark(false);\r\n            this.stopAllEffects();\r\n            this.stopShowLinesWin();\r\n            this.setEnabledAllButtons(false);\r\n            var rIdx = Utils.randomRangeInt(0, TrialResults.results.length);\r\n            this.onSpinResult(TrialResults.results[rIdx]);\r\n        }\r\n    }\r\n\r\n    private stopSpin() {\r\n        for (var i = 0; i < this.columns.childrenCount; i++) {\r\n            var roll = this.columns.children[i];\r\n            roll.stopAllActions();\r\n            roll.setPosition(cc.v2(roll.getPosition().x, 0));\r\n        }\r\n    }\r\n\r\n    private showLineWins() {\r\n        this.isSpined = true;\r\n        this.linesWin.zIndex = 2;\r\n        this.columns.zIndex = 1;\r\n        Tween.numberTo(this.lblWinNow, this.lastSpinRes.prize, 0.3);\r\n        if (!this.toggleTrial.isChecked) BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n        if (!this.toggleAuto.isChecked && !this.toggleBoost.isChecked) this.setEnabledAllButtons(true);\r\n\r\n        this.linesWin.stopAllActions();\r\n        let linesWin = this.lastSpinRes.linesWin.split(\",\");\r\n        linesWin = Utils.removeDups(linesWin);\r\n        for (let i = 0; i < linesWin.length; i++) {\r\n            if (linesWin[i] == \"0\") {\r\n                linesWin.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n        let matrix = this.lastSpinRes.matrix.split(\",\");\r\n        let linesWinChildren = this.linesWin.children;\r\n        let rolls = this.columns.children;\r\n        let actions = [];\r\n        for (let i = 0; i < linesWinChildren.length; i++) {\r\n            linesWinChildren[i].active = linesWin.indexOf(\"\" + (i + 1)) >= 0;;\r\n        }\r\n        if (this.lastSpinRes.prize > 0) {\r\n            this.changeItemToDark(true);\r\n            this.showWinCash(this.lastSpinRes.prize);\r\n            actions.push(cc.delayTime(1.5));\r\n            actions.push(cc.callFunc(function () {\r\n                for (let i = 0; i < linesWinChildren.length; i++) {\r\n                    linesWinChildren[i].active = false;\r\n                }\r\n            }));\r\n            actions.push(cc.delayTime(0.3));\r\n            if (!this.toggleBoost.isChecked) {\r\n                for (let i = 0; i < linesWin.length; i++) {\r\n                    let lineIdx = parseInt(linesWin[i]) - 1;\r\n                    let line = linesWinChildren[lineIdx];\r\n                    actions.push(cc.callFunc(() => {\r\n                        this.linesWin.zIndex = 1;\r\n                        this.columns.zIndex = 2;\r\n                        // //  cc.log(\"================: \" + lineIdx);\r\n                        line.active = true;\r\n                        let mLine = this.mapLine[lineIdx];\r\n                        let countItemWin = 0;\r\n                        let fisrtItemId = matrix[mLine[0]];\r\n                        for (let j = 0; j < mLine.length; j++) {\r\n                            let itemId = matrix[mLine[j]];\r\n                            if (fisrtItemId == itemId || parseInt(itemId) == this.wildItemId || this.columnsWild.indexOf(j) >= 0) {\r\n                                // //  cc.log(\"==\" + itemId + \" j:\" + j);\r\n                                countItemWin++;\r\n                            } else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        for (let j = 0; j < countItemWin; j++) {\r\n                            let itemRow = parseInt((mLine[j] / 5).toString());\r\n                            let item = rolls[j].children[2 - itemRow];\r\n                            item.stopAllActions();\r\n                            item.runAction(cc.repeatForever(cc.sequence(\r\n                                cc.scaleTo(0.2, 1.1),\r\n                                cc.scaleTo(0.2, 1)\r\n                            )));\r\n                            this.setDarkItem(item, false);\r\n                        }\r\n                        // //  cc.log(\"lineIdx: \" + lineIdx + \"fisrtItemId: \" + fisrtItemId + \" countItemWin: \" + countItemWin);\r\n                    }));\r\n                    actions.push(cc.delayTime(1));\r\n                    actions.push(cc.callFunc(() => {\r\n                        line.active = false;\r\n                        this.changeItemToDark(true);\r\n                        this.stopAllItemEffect();\r\n                    }));\r\n                    actions.push(cc.delayTime(0.1));\r\n                }\r\n            }\r\n        }\r\n        if (actions.length == 0) {\r\n            actions.push(cc.callFunc(() => {\r\n                //fixed call cc.sequence.apply\r\n            }))\r\n        }\r\n        actions.push(cc.callFunc(() => {\r\n            this.changeItemToDark(false);\r\n            if (this.toggleBoost.isChecked || this.toggleAuto.isChecked) {\r\n                this.spin();\r\n            }\r\n        }));\r\n        this.linesWin.runAction(cc.sequence.apply(null, actions));\r\n    }\r\n    private showCoins(prize) {\r\n        var number = prize / 20000;\r\n        if (number <= 10) number = 10;\r\n        else if (number >= 30) number = 30;\r\n        //  cc.log(\"showCoins:\" + number);\r\n        App.instance.showCoins(number, this.effectWinCash, this.nodeCoin);\r\n    }\r\n    private showWinCash(cash: number) {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundGoldEarn, false, 1);\r\n        }\r\n        this.showCoins(cash);\r\n        this.effectWinCash.stopAllActions();\r\n        this.effectWinCash.active = true;\r\n        let label = this.effectWinCash.getComponentInChildren(cc.Label);\r\n        label.string = \"0\";\r\n        this.effectWinCash.opacity = 0;\r\n        this.effectWinCash.runAction(cc.sequence(\r\n            cc.fadeIn(0.3),\r\n            cc.callFunc(() => {\r\n                Tween.numberTo(label, cash, 0.5);\r\n            }),\r\n            cc.delayTime(1.5),\r\n            cc.fadeOut(0.3),\r\n            cc.callFunc(() => {\r\n                this.effectWinCash.active = false;\r\n            })\r\n        ));\r\n    }\r\n\r\n    private showEffectFreeSpin(cb: () => void) {\r\n        this.effectFreeSpin.stopAllActions();\r\n        this.effectFreeSpin.active = true;\r\n        let spine = this.effectFreeSpin.getComponentInChildren(sp.Skeleton);\r\n        spine.setAnimation(0, \"animation\", false);\r\n        spine.setCompleteListener(() => {\r\n            this.effectFreeSpin.active = false;\r\n            if (cb != null) cb();\r\n        });\r\n\r\n\r\n        // this.effectFreeSpin.runAction(cc.sequence(\r\n        //     cc.delayTime(1),\r\n        //     cc.delayTime(3),\r\n        //     cc.callFunc(() => {\r\n\r\n        //     })\r\n        // ));\r\n    }\r\n\r\n    private showEffectBigWin(cash: number, cb: () => void) {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundGoldEarn, false, 1);\r\n        }\r\n        this.effectBigWin.stopAllActions();\r\n        this.effectBigWin.active = true;\r\n        this.effectBigWin.getComponentInChildren(sp.Skeleton).setAnimation(0, \"thang sieu lon2\", true);\r\n        let label = this.effectBigWin.getComponentInChildren(cc.Label);\r\n        label.node.active = false;\r\n\r\n        this.effectBigWin.runAction(cc.sequence(\r\n            // cc.delayTime(1),\r\n            cc.callFunc(() => {\r\n                label.string = \"\";\r\n                label.node.active = true;\r\n                Tween.numberTo(label, cash, 1);\r\n            }),\r\n            cc.delayTime(3),\r\n            cc.callFunc(() => {\r\n                this.effectBigWin.active = false;\r\n                if (cb != null) cb();\r\n            })\r\n        ));\r\n    }\r\n\r\n    private showEffectJackpot(cash: number, cb: () => void = null) {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundJackpot, false, 1);\r\n        }\r\n        this.effectJackpot.stopAllActions();\r\n        this.effectJackpot.active = true;\r\n        this.effectJackpot.getComponentInChildren(sp.Skeleton).setAnimation(0, \"animation\", true);\r\n        let label = this.effectJackpot.getComponentInChildren(cc.Label);\r\n        label.node.active = false;\r\n\r\n        this.effectJackpot.runAction(cc.sequence(\r\n            // cc.delayTime(1),\r\n            cc.callFunc(() => {\r\n                label.string = \"\";\r\n                label.node.active = true;\r\n                Tween.numberTo(label, cash, 1);\r\n            }),\r\n            cc.delayTime(3),\r\n            cc.callFunc(() => {\r\n                this.effectJackpot.active = false;\r\n                if (cb != null) cb();\r\n            })\r\n        ));\r\n    }\r\n\r\n    private showEffectBonus(cb: () => void) {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundSpinResult, false, 1);\r\n        }\r\n        this.effectBonus.stopAllActions();\r\n        this.effectBonus.active = true;\r\n        // this.effectBonus.getComponentInChildren(sp.Skeleton).setAnimation(0, \"animation\", false);\r\n\r\n        // this.effectBonus.runAction(cc.sequence(\r\n        //     cc.delayTime(3),\r\n        //     cc.callFunc(() => {\r\n        // this.effectBonus.active = false;\r\n        // if (cb != null) cb();\r\n        //     })\r\n        // ));\r\n        cc.tween(this.effectBonus).call(() => {\r\n            this.effectBonus.getComponentInChildren(sp.Skeleton).setAnimation(0, \"animation\", true);\r\n        }).delay(3.0).call(() => {\r\n            this.effectBonus.active = false;\r\n            if (cb != null) cb();\r\n        }).start();\r\n\r\n    }\r\n\r\n    private onSpinResult(res: cmd.ReceivePlay | any) {\r\n        this.stopSpin();\r\n        //  cc.log(\"onSpinResult:\" + JSON.stringify(res));\r\n        var successResult = [0, 1, 2, 3, 4, 5, 6];\r\n        //res.result == 5 //bonus\r\n        //res.result == 0 //khong an\r\n        //res.result == 1 //thang thuong\r\n        //res.result == 2 //thang lon\r\n        //res.result == 3 //no hu\r\n        //res.result == 6 //thang cuc lon\r\n        // res = JSON.parse('{\"_pos\":136,\"_data\":{\"0\":1,\"1\":46,\"2\":225,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":16,\"11\":162,\"12\":2,\"13\":0,\"14\":30,\"15\":53,\"16\":44,\"17\":49,\"18\":48,\"19\":44,\"20\":56,\"21\":44,\"22\":51,\"23\":44,\"24\":54,\"25\":44,\"26\":53,\"27\":44,\"28\":54,\"29\":44,\"30\":52,\"31\":44,\"32\":51,\"33\":44,\"34\":52,\"35\":44,\"36\":52,\"37\":44,\"38\":50,\"39\":44,\"40\":50,\"41\":44,\"42\":52,\"43\":44,\"44\":52,\"45\":0,\"46\":65,\"47\":49,\"48\":44,\"49\":50,\"50\":44,\"51\":51,\"52\":44,\"53\":52,\"54\":44,\"55\":53,\"56\":44,\"57\":54,\"58\":44,\"59\":55,\"60\":44,\"61\":56,\"62\":44,\"63\":57,\"64\":44,\"65\":49,\"66\":48,\"67\":44,\"68\":49,\"69\":49,\"70\":44,\"71\":49,\"72\":50,\"73\":44,\"74\":49,\"75\":51,\"76\":44,\"77\":49,\"78\":52,\"79\":44,\"80\":49,\"81\":53,\"82\":44,\"83\":49,\"84\":54,\"85\":44,\"86\":49,\"87\":55,\"88\":44,\"89\":49,\"90\":56,\"91\":44,\"92\":49,\"93\":57,\"94\":44,\"95\":50,\"96\":48,\"97\":44,\"98\":50,\"99\":49,\"100\":44,\"101\":50,\"102\":50,\"103\":44,\"104\":50,\"105\":51,\"106\":44,\"107\":50,\"108\":52,\"109\":44,\"110\":50,\"111\":53,\"112\":0,\"113\":0,\"114\":0,\"115\":0,\"116\":0,\"117\":0,\"118\":0,\"119\":1,\"120\":1,\"121\":208,\"122\":0,\"123\":0,\"124\":0,\"125\":0,\"126\":2,\"127\":100,\"128\":111,\"129\":84,\"130\":0,\"131\":0,\"132\":0,\"133\":0,\"134\":0,\"135\":0},\"_length\":136,\"_controllerId\":1,\"_cmdId\":12001,\"_error\":0,\"ref\":4258,\"result\":2,\"matrix\":\"5,10,8,3,6,5,6,4,3,4,4,2,2,4,4\",\"linesWin\":\"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25\",\"haiSao\":\"\",\"prize\":66000,\"currentMoney\":40136532,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0}');\r\n        if (successResult.indexOf(res.result) === -1) {\r\n            this.isSpined = true;\r\n\r\n            this.toggleAuto.isChecked = false;\r\n            this.toggleAuto.interactable = true;\r\n            this.toggleBoost.isChecked = false;\r\n            this.toggleBoost.interactable = true;\r\n\r\n\r\n            this.setEnabledAllButtons(true);\r\n            switch (res.result) {\r\n                case 102:\r\n                    this.showToast(App.instance.getTextLang('txt_not_enough'));\r\n                    break;\r\n                default:\r\n                    this.showToast(App.instance.getTextLang('txt_unknown_error1'));\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n        this.currentNumberFreeSpin = res.currentNumberFreeSpin;\r\n        this.lastSpinRes = res;\r\n        this.columnsWild.length = 0;\r\n\r\n        if (!this.toggleTrial.isChecked) {\r\n            Configs.Login.Coin = res.currentMoney;\r\n        }\r\n\r\n        let matrix = res.matrix.split(\",\");\r\n        let timeScale = this.toggleBoost.isChecked ? 0.5 : 1;\r\n        for (let i = 0; i < this.columns.childrenCount; i++) {\r\n            let roll = this.columns.children[i];\r\n            let step1Pos = this.itemHeight * 0.3;\r\n            let step2Pos = -this.itemHeight * roll.childrenCount + this.itemHeight * 3 - this.itemHeight * 0.3;\r\n            let step3Pos = -this.itemHeight * roll.childrenCount + this.itemHeight * 3;\r\n            TW(roll).delay(0.2 * i * timeScale)\r\n                .to(0.2 * timeScale, { x: roll.position.x, y: step1Pos }, { easing: cc.easing.quadOut })\r\n                .to(this.spinDuration + this.addSpinDuration * i, { x: roll.position.x, y: step2Pos }, { easing: cc.easing.quadInOut })\r\n                .to(0.2 * timeScale, { x: roll.x, y: step3Pos }, { easing: cc.easing.quadIn })\r\n                .call(() => {\r\n                    roll.setPosition(cc.v2(roll.position.x, 0));\r\n                    if (i == 4) {\r\n                        //find columns wild\r\n                        for (let j = 0; j < matrix.length; j++) {\r\n                            if (parseInt(matrix[j]) == this.wildItemId) {\r\n                                let c = j % 5;\r\n                                if (this.columnsWild.indexOf(c) == -1) this.columnsWild.push(c);\r\n                            }\r\n                        }\r\n                        //replace wild items in columns\r\n                        for (let j = 0; j < this.columnsWild.length; j++) {\r\n                            let c = this.columnsWild[j];\r\n                            let children = this.columns.children[c].children;\r\n                            for (let i = 0; i < 3; i++) {\r\n                                let itemAnimIcon = children[i].getComponentInChildren(sp.Skeleton);\r\n                                itemAnimIcon.node.active = false;\r\n                                itemAnimIcon.skeletonData = this.spineIconList[0];\r\n                                itemAnimIcon.setAnimation(0, \"Jackpot\", true); //thuc ra la wild.ba Fio de nham ten.\r\n                                itemAnimIcon.node.y = -60;\r\n                                this.setItemSprite(children[i].getComponentInChildren(cc.Sprite), this.sprFrameItems[2]);\r\n                                children[i]['id'] = 3;\r\n                                children[i]['animationName'] = \"Jackpot\";\r\n                                // children[i].getComponentInChildren(cc.Sprite).node.active = false;\r\n                            }\r\n                            this.iconWildColumns.children[c].active = true;\r\n                            this.iconWildColumns.children[c].getComponent(sp.Skeleton).animation = \"wild dai\";\r\n                            this.iconWildColumns.children[c].getComponent(sp.Skeleton).loop = false;\r\n                            if (this.soundSlotState == 1) {\r\n                                cc.audioEngine.play(this.soundSpinResult, false, 1);\r\n                            }\r\n                        }\r\n                        if (this.columnsWild.length > 0) {\r\n                            roll.runAction(cc.sequence(\r\n                                cc.delayTime(2.6),\r\n                                cc.callFunc(() => {\r\n                                    for (let i = 0; i < this.iconWildColumns.childrenCount; i++) {\r\n                                        this.iconWildColumns.children[i].active = false;\r\n                                    }\r\n                                }),\r\n                                cc.delayTime(0.1),\r\n                                cc.callFunc(() => {\r\n                                    this.spined();\r\n                                })\r\n                            ));\r\n                        } else {\r\n                            this.spined();\r\n                        }\r\n                    }\r\n                }).start();\r\n            TW(roll)\r\n                .delay((0.47 + 0.2 * i) * timeScale)\r\n                .call(() => {\r\n                    var children = roll.children;\r\n                    this.setItemSprite(children[2].children[0].getComponent(cc.Sprite), this.sprFrameItems[parseInt(matrix[i])]);\r\n                    this.setItemSprite(children[1].children[0].getComponent(cc.Sprite), this.sprFrameItems[parseInt(matrix[5 + i])]);\r\n                    this.setItemSprite(children[0].children[0].getComponent(cc.Sprite), this.sprFrameItems[parseInt(matrix[10 + i])]);\r\n\r\n                    // children[2]['id'] = parseInt(matrix[10 + i]);\r\n                    // children[1]['id'] = parseInt(matrix[5 + i]);\r\n                    // children[0]['id'] = parseInt(matrix[10 + i]);\r\n\r\n                    let item1 = children[children.length - 1];\r\n                    let item2 = children[children.length - 2];\r\n                    let item3 = children[children.length - 3];\r\n                    item1['id'] = parseInt(matrix[i]);\r\n                    item2['id'] = parseInt(matrix[5 + i]);\r\n                    item3['id'] = parseInt(matrix[10 + i]);\r\n                    this.setItemSprite(item1.children[0].getComponent(cc.Sprite), this.sprFrameItems[parseInt(matrix[i])]);\r\n                    this.setItemSprite(item2.children[0].getComponent(cc.Sprite), this.sprFrameItems[parseInt(matrix[5 + i])]);\r\n                    this.setItemSprite(item3.children[0].getComponent(cc.Sprite), this.sprFrameItems[parseInt(matrix[10 + i])]);\r\n                    this.checkIconSpine(children[2], parseInt(matrix[i]));\r\n                    this.checkIconSpine(children[1], parseInt(matrix[5 + i]));\r\n                    this.checkIconSpine(children[0], parseInt(matrix[10 + i]));\r\n                    this.checkIconSpine(item3, parseInt(matrix[10 + i]));\r\n                    this.checkIconSpine(item2, parseInt(matrix[5 + i]));\r\n                    this.checkIconSpine(item1, parseInt(matrix[i]));\r\n                }).start();\r\n        }\r\n    }\r\n    private checkIconSpine(item, idSprite) {\r\n        idSprite = idSprite + 1;\r\n\r\n        let spine = item.getComponentInChildren(sp.Skeleton);\r\n        spine.skeletonData = this.spineIcon;\r\n        let sprite = item.getComponentInChildren(cc.Sprite);\r\n        spine.node.y = -66;\r\n        // sprite.node.active = false;\r\n        // spine.node.active = true;\r\n        spine.node.scale = 0.6;\r\n        let animName = \"\";\r\n        switch (idSprite) {\r\n            case 1: {\r\n                spine.skeletonData = this.spineIconList[2];\r\n                spine.node.scale = 0.65;\r\n                animName = \"Scatter2\";\r\n                // spine.setAnimation(0, \"Scatter2\", true);\r\n                break;\r\n            }\r\n            case 2: {\r\n                spine.node.scale = 0.65;\r\n                // spine.setAnimation(0, \"bonus\", true);\r\n                animName = \"bonus\";\r\n                break;\r\n            }\r\n            case 3: {//wild\r\n                spine.skeletonData = this.spineIconList[0];\r\n                // spine.setAnimation(0, \"Jackpot\", true);\r\n                animName = \"Jackpot\";\r\n                spine.node.y = -60;\r\n                break;\r\n            }\r\n            case 4: {//jackpot\r\n                spine.skeletonData = this.spineIconList[1];\r\n                spine.node.scale = 0.23;\r\n                // spine.setAnimation(0, \"animation\", true);\r\n                animName = \"animation\";\r\n                spine.node.y = -122;\r\n                break;\r\n            }\r\n            default: {\r\n                spine.node.active = false;\r\n                sprite.node.active = true;\r\n                break;\r\n            }\r\n        }\r\n        item['animationName'] = animName != \"\" ? animName : null;\r\n    }\r\n    private setItemSprite(spr, frame) {\r\n        spr.spriteFrame = frame;\r\n        spr.sizeMode = cc.Sprite.SizeMode.TRIMMED;\r\n        spr.node.setContentSize(cc.size(spr.node.width / 1, spr.node.height / 1));\r\n    }\r\n\r\n    private spined() {\r\n        this.currentNumberFreeSpin = this.lastSpinRes.currentNumberFreeSpin;\r\n        if (this.lastSpinRes.currentNumberFreeSpin > 0) {\r\n            this.lblFreeSpinCount.node.parent.active = true;\r\n            this.lblFreeSpinCount.string = this.currentNumberFreeSpin.toString();\r\n        }\r\n        else {\r\n            this.lblFreeSpinCount.node.parent.active = false;\r\n        }\r\n        if (this.lastSpinRes.freeSpin == 1) {\r\n            this.showEffectFreeSpin(() => {\r\n                this.showLineWins();\r\n            });\r\n        }\r\n        else {\r\n            var successResult = [0, 1, 3, 4, 5, 6];\r\n            switch (this.lastSpinRes.result) {\r\n                case 0://k an\r\n                    this.showLineWins();\r\n                    break;\r\n                case 1:// thang thuong\r\n                    this.showLineWins();\r\n                    break;\r\n                case 2:// thang lon\r\n                    this.showEffectBigWin(this.lastSpinRes.prize, () => {\r\n                        this.showLineWins();\r\n                    });\r\n                    break;\r\n                case 3: case 4://jackpot\r\n                    this.showEffectJackpot(this.lastSpinRes.prize, () => {\r\n                        this.showLineWins();\r\n                    });\r\n                    break;\r\n                case 6://thang sieu lon\r\n                    this.showEffectBigWin(this.lastSpinRes.prize, () => {\r\n                        this.showLineWins();\r\n                    });\r\n                    break;\r\n                case 5://bonus\r\n                    this.showEffectBonus(() => {\r\n                        if (this.soundSlotState == 1) {\r\n                            this.remoteMusicBackground = cc.audioEngine.playMusic(this.soundBgBonus, true);\r\n                        }\r\n\r\n                        this.actPopupBonus(() => {\r\n                            if (this.soundSlotState == 1) {\r\n                                this.remoteMusicBackground = cc.audioEngine.playMusic(this.soundBg, true);\r\n                            }\r\n                            this.showLineWins();\r\n                        });\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onBtnSoundSumary() {\r\n\r\n    }\r\n\r\n    onBtnSoundTouchBonus() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n    }\r\n\r\n    actBack() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        SlotNetworkClient.getInstance().send(new cmd.SendUnSubcribe(this.betIdx));\r\n        cc.audioEngine.stopAll();\r\n        App.instance.loadScene(\"Lobby\");\r\n    }\r\n\r\n    actHidden() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.showToast(App.instance.getTextLang('txt_function_in_development'));\r\n    }\r\n\r\n    actBetUp() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.toggleTrial.isChecked) {\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.betIdx < this.listBet.length - 1) {\r\n            SlotNetworkClient.getInstance().send(new cmd.SendChangeRoom(this.betIdx, ++this.betIdx));\r\n            this.lblBet.string = this.listBetLabel[this.betIdx];\r\n            Tween.numberTo(this.lblTotalBet, this.arrLineSelect.length * this.listBet[this.betIdx], 0.3, (n) => {\r\n                return this.moneyToK(n);\r\n            });\r\n        }\r\n    }\r\n\r\n    actBetDown() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.toggleTrial.isChecked) {\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.betIdx > 0) {\r\n            SlotNetworkClient.getInstance().send(new cmd.SendChangeRoom(this.betIdx, --this.betIdx));\r\n            this.lblBet.string = this.listBetLabel[this.betIdx];\r\n            Tween.numberTo(this.lblTotalBet, this.arrLineSelect.length * this.listBet[this.betIdx], 0.3, (n) => { return this.moneyToK(n) });\r\n        }\r\n    }\r\n\r\n    randomBetween(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n\r\n    private musicSlotState = null;\r\n    private soundSlotState = null;\r\n    private remoteMusicBackground = null;\r\n    settingMusic() {\r\n        // this.toggleMusic.isChecked = !this.toggleMusic.isChecked;\r\n        if (this.toggleMusic.isChecked) {\r\n            cc.audioEngine.stop(this.remoteMusicBackground);\r\n            this.musicSlotState = 0;\r\n            this.soundSlotState = 0;\r\n        } else {\r\n            var musicId = this.randomBetween(0, 4);\r\n            this.remoteMusicBackground = cc.audioEngine.playMusic(this.soundBg, true);\r\n            this.musicSlotState = 1;\r\n            this.soundSlotState = 1;\r\n        }\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        cc.sys.localStorage.setItem(\"music_Slot_3\", \"\" + this.musicSlotState);\r\n        cc.sys.localStorage.setItem(\"sound_Slot_3\", \"\" + this.soundSlotState);\r\n    }\r\n    actPopupBonus(cb) {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.popupBonus == null) {\r\n            BundleControl.loadPrefabGame(\"Slot3\", \"res/thantai/prefabs/PopupBonus\", (finish, total) => {\r\n                App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupBonus = cc.instantiate(prefab).getComponent(\"Slot3.PopupBonus\");\r\n                this.popupBonus.node.active = true;\r\n                this.popupBonus.node.parent = cc.director.getScene().getChildByName(\"Canvas\");\r\n\r\n                this.popupBonus.showBonus(this.toggleTrial.isChecked ? 100 : this.listBet[this.betIdx], this.lastSpinRes.haiSao, this, cb);\r\n            });\r\n        } else {\r\n            this.popupBonus.node.active = true;\r\n            this.popupBonus.showBonus(this.toggleTrial.isChecked ? 100 : this.listBet[this.betIdx], this.lastSpinRes.haiSao, this, cb);\r\n        }\r\n    }\r\n    actLine() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.toggleTrial.isChecked) {\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.popupSelectLine == null) {\r\n            BundleControl.loadPrefabGame(\"Slot3\", \"res/thantai/prefabs/PopupSelectLine\", (finish, total) => {\r\n                App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupSelectLine = cc.instantiate(prefab).getComponent(\"Slot3.PopupSelectLine\");\r\n                this.popupSelectLine.node.parent = cc.director.getScene().getChildByName(\"Canvas\");\r\n                this.popupSelectLine.onSelectedChanged = (lines) => {\r\n                    this.arrLineSelect = lines;\r\n                    this.lblLine.string = this.arrLineSelect.length.toString();\r\n                    this.lblTotalBet.string = Utils.formatMoney(this.arrLineSelect.length * this.listBet[this.betIdx]);\r\n                }\r\n                this.popupSelectLine.show();\r\n            });\r\n        } else {\r\n            this.popupSelectLine.show();\r\n        }\r\n\r\n    }\r\n    actGuide() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.toggleTrial.isChecked) {\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.popupGuide == null) {\r\n            BundleControl.loadPrefabGame(\"Slot3\", \"res/thantai/prefabs/PopupGuide\", (finish, total) => {\r\n                App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupGuide = cc.instantiate(prefab).getComponent(\"Slot3.PopupGuide\");\r\n                this.popupGuide.node.parent = cc.director.getScene().getChildByName(\"Canvas\");\r\n                this.popupGuide.show();\r\n            });\r\n        } else {\r\n            this.popupGuide.show();\r\n        }\r\n    }\r\n    actHistoryJackpot() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.toggleTrial.isChecked) {\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.popupJackpotHistory == null) {\r\n            BundleControl.loadPrefabGame(\"Slot3\", \"res/thantai/prefabs/PopupJackpotHistory\", (finish, total) => {\r\n                App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupJackpotHistory = cc.instantiate(prefab).getComponent(\"Slot3.PopupJackpotHistory\");\r\n                this.popupJackpotHistory.node.parent = cc.director.getScene().getChildByName(\"Canvas\");\r\n                this.popupJackpotHistory.show();\r\n            });\r\n        } else {\r\n            this.popupJackpotHistory.show();\r\n        }\r\n    }\r\n    actHistory() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.toggleTrial.isChecked) {\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.popupHistory == null) {\r\n            BundleControl.loadPrefabGame(\"Slot3\", \"res/thantai/prefabs/PopupHistory\", (finish, total) => {\r\n                App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupHistory = cc.instantiate(prefab).getComponent(\"Slot3.PopupHistory\");\r\n                this.popupHistory.node.parent = cc.director.getScene().getChildByName(\"Canvas\");\r\n                this.popupHistory.show();\r\n            });\r\n        } else {\r\n            this.popupHistory.show();\r\n        }\r\n    }\r\n\r\n    toggleTrialOnCheck() {\r\n        if (this.toggleTrial.isChecked) {\r\n            this.lblLine.string = \"25\";\r\n            this.lblBet.string = \"100\";\r\n            this.lblTotalBet.string = Utils.formatMoney(250000);\r\n\r\n        } else {\r\n            this.lblLine.string = this.arrLineSelect.length.toString();\r\n            this.lblBet.string = this.listBetLabel[this.betIdx];\r\n            this.lblTotalBet.string = Utils.formatMoney(this.arrLineSelect.length * this.listBet[this.betIdx]);\r\n        }\r\n    }\r\n\r\n    toggleAutoOnCheck() {\r\n        if (this.toggleAuto.isChecked && this.toggleTrial.isChecked) {\r\n            this.toggleAuto.isChecked = false;\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.toggleAuto.isChecked) {\r\n            this.spin();\r\n            this.toggleBoost.interactable = false;\r\n        } else {\r\n            this.toggleBoost.interactable = true;\r\n            if (this.isSpined) {\r\n                this.setEnabledAllButtons(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleBoostOnCheck() {\r\n        if (this.toggleBoost.isChecked && this.toggleTrial.isChecked) {\r\n            this.toggleBoost.isChecked = false;\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.toggleBoost.isChecked) {\r\n            this.spin();\r\n            this.toggleAuto.interactable = false;\r\n        } else {\r\n            this.toggleAuto.interactable = true;\r\n            if (this.isSpined) {\r\n                this.setEnabledAllButtons(true);\r\n            }\r\n        }\r\n    }\r\n    changeItemToDark(state) {\r\n        for (let i = 0; i < this.columns.childrenCount; i++) {\r\n            let col = this.columns.children[i];\r\n            for (let j = 0; j < col.childrenCount; j++) {\r\n                let item = col.children[j];\r\n                let sprite = item.getComponentInChildren(cc.Sprite);\r\n                let spine = item.getComponentInChildren(sp.Skeleton)\r\n                sprite.node.color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n                spine.node.color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n                if (state) {\r\n                    sprite.node.active = true;\r\n                    spine.node.active = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setDarkItem(item, state) {\r\n        let spine = item.getComponentInChildren(sp.Skeleton);\r\n        let sprite = item.getComponentInChildren(cc.Sprite);\r\n        sprite.node.color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n        spine.node.color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n        if (!state) {\r\n            if (item['id'] && item['id'] < 5 && item['animationName'] && item['animationName'] != \"\") {\r\n                sprite.node.active = false;\r\n                spine.node.active = true;\r\n                spine.setAnimation(0, item['animationName'], true);\r\n            } else {\r\n                sprite.node.active = true;\r\n                spine.node.active = false;\r\n            }\r\n        } else {\r\n            sprite.node.active = true;\r\n            spine.node.active = false;\r\n        }\r\n    }\r\n}\r\n","export default class TrialResults {\r\n    static results = [\r\n        {\"_pos\":102,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":164,\"12\":3,\"13\":0,\"14\":32,\"15\":51,\"16\":44,\"17\":53,\"18\":44,\"19\":54,\"20\":44,\"21\":53,\"22\":44,\"23\":49,\"24\":48,\"25\":44,\"26\":51,\"27\":44,\"28\":51,\"29\":44,\"30\":53,\"31\":44,\"32\":51,\"33\":44,\"34\":51,\"35\":44,\"36\":55,\"37\":44,\"38\":51,\"39\":44,\"40\":51,\"41\":44,\"42\":49,\"43\":48,\"44\":44,\"45\":49,\"46\":48,\"47\":0,\"48\":29,\"49\":49,\"50\":44,\"51\":53,\"52\":44,\"53\":55,\"54\":44,\"55\":49,\"56\":48,\"57\":44,\"58\":49,\"59\":50,\"60\":44,\"61\":49,\"62\":52,\"63\":44,\"64\":49,\"65\":54,\"66\":44,\"67\":49,\"68\":55,\"69\":44,\"70\":50,\"71\":48,\"72\":44,\"73\":50,\"74\":51,\"75\":44,\"76\":50,\"77\":52,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":9,\"86\":9,\"87\":125,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":0,\"93\":136,\"94\":221,\"95\":154,\"96\":0,\"97\":0,\"98\":0,\"99\":0,\"100\":0,\"101\":0},\"_length\":102,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984420,\"result\":3,\"matrix\":\"3,5,6,5,10,3,3,5,3,3,7,3,3,10,10\",\"linesWin\":\"1,5,7,10,12,14,16,17,20,23,24\",\"haiSao\":\"\",\"prize\":592253,\"currentMoney\":8969626,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":99,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":175,\"12\":5,\"13\":0,\"14\":31,\"15\":49,\"16\":44,\"17\":52,\"18\":44,\"19\":49,\"20\":44,\"21\":52,\"22\":44,\"23\":55,\"24\":44,\"25\":53,\"26\":44,\"27\":49,\"28\":44,\"29\":53,\"30\":44,\"31\":49,\"32\":44,\"33\":57,\"34\":44,\"35\":49,\"36\":48,\"37\":44,\"38\":49,\"39\":48,\"40\":44,\"41\":49,\"42\":44,\"43\":52,\"44\":44,\"45\":57,\"46\":0,\"47\":4,\"48\":53,\"49\":44,\"50\":49,\"51\":52,\"52\":0,\"53\":23,\"54\":52,\"55\":44,\"56\":50,\"57\":44,\"58\":49,\"59\":44,\"60\":49,\"61\":44,\"62\":49,\"63\":44,\"64\":49,\"65\":44,\"66\":49,\"67\":44,\"68\":48,\"69\":44,\"70\":49,\"71\":44,\"72\":49,\"73\":44,\"74\":50,\"75\":44,\"76\":49,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":96,\"84\":224,\"85\":0,\"86\":0,\"87\":0,\"88\":0,\"89\":1,\"90\":5,\"91\":66,\"92\":201,\"93\":0,\"94\":0,\"95\":0,\"96\":0,\"97\":0,\"98\":0},\"_length\":99,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984431,\"result\":5,\"matrix\":\"1,4,1,4,7,5,1,5,1,9,10,10,1,4,9\",\"linesWin\":\"5,14\",\"haiSao\":\"4,2,1,1,1,1,1,0,1,1,2,1\",\"prize\":24800,\"currentMoney\":17121993,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":86,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":165,\"12\":3,\"13\":0,\"14\":30,\"15\":53,\"16\":44,\"17\":51,\"18\":44,\"19\":51,\"20\":44,\"21\":51,\"22\":44,\"23\":52,\"24\":44,\"25\":51,\"26\":44,\"27\":53,\"28\":44,\"29\":56,\"30\":44,\"31\":55,\"32\":44,\"33\":51,\"34\":44,\"35\":49,\"36\":48,\"37\":44,\"38\":49,\"39\":44,\"40\":51,\"41\":44,\"42\":52,\"43\":44,\"44\":52,\"45\":0,\"46\":15,\"47\":53,\"48\":44,\"49\":54,\"50\":44,\"51\":49,\"52\":49,\"53\":44,\"54\":49,\"55\":50,\"56\":44,\"57\":49,\"58\":52,\"59\":44,\"60\":50,\"61\":50,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":7,\"70\":189,\"71\":212,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":144,\"78\":145,\"79\":170,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0},\"_length\":86,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984421,\"result\":3,\"matrix\":\"5,3,3,3,4,3,5,8,7,3,10,1,3,4,4\",\"linesWin\":\"5,6,11,12,14,22\",\"haiSao\":\"\",\"prize\":507348,\"currentMoney\":9474474,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":84,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":166,\"12\":3,\"13\":0,\"14\":29,\"15\":51,\"16\":44,\"17\":55,\"18\":44,\"19\":51,\"20\":44,\"21\":53,\"22\":44,\"23\":51,\"24\":44,\"25\":57,\"26\":44,\"27\":51,\"28\":44,\"29\":51,\"30\":44,\"31\":51,\"32\":44,\"33\":52,\"34\":44,\"35\":52,\"36\":44,\"37\":52,\"38\":44,\"39\":56,\"40\":44,\"41\":52,\"42\":44,\"43\":53,\"44\":0,\"45\":14,\"46\":51,\"47\":44,\"48\":53,\"49\":44,\"50\":57,\"51\":44,\"52\":49,\"53\":50,\"54\":44,\"55\":49,\"56\":52,\"57\":44,\"58\":49,\"59\":57,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":7,\"68\":175,\"69\":63,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":152,\"76\":55,\"77\":37,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0},\"_length\":84,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984422,\"result\":3,\"matrix\":\"3,7,3,5,3,9,3,3,3,4,4,4,8,4,5\",\"linesWin\":\"3,5,9,12,14,19\",\"haiSao\":\"\",\"prize\":503615,\"currentMoney\":9975589,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":76,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":168,\"12\":1,\"13\":0,\"14\":30,\"15\":48,\"16\":44,\"17\":55,\"18\":44,\"19\":48,\"20\":44,\"21\":56,\"22\":44,\"23\":52,\"24\":44,\"25\":48,\"26\":44,\"27\":48,\"28\":44,\"29\":52,\"30\":44,\"31\":51,\"32\":44,\"33\":54,\"34\":44,\"35\":57,\"36\":44,\"37\":53,\"38\":44,\"39\":51,\"40\":44,\"41\":52,\"42\":44,\"43\":49,\"44\":48,\"45\":0,\"46\":5,\"47\":49,\"48\":52,\"49\":44,\"50\":49,\"51\":54,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":1,\"67\":4,\"68\":158,\"69\":85,\"70\":1,\"71\":0,\"72\":0,\"73\":0,\"74\":2,\"75\":2},\"_length\":76,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984424,\"result\":1,\"matrix\":\"0,7,0,8,4,0,0,4,3,6,9,5,3,4,10\",\"linesWin\":\"14,16\",\"haiSao\":\"\",\"prize\":0,\"currentMoney\":17079893,\"freeSpin\":1,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":2,\"currentNumberFreeSpin\":2},\r\n        {\"_pos\":71,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":169,\"12\":1,\"13\":0,\"14\":30,\"15\":52,\"16\":44,\"17\":53,\"18\":44,\"19\":54,\"20\":44,\"21\":52,\"22\":44,\"23\":49,\"24\":44,\"25\":52,\"26\":44,\"27\":49,\"28\":48,\"29\":44,\"30\":53,\"31\":44,\"32\":56,\"33\":44,\"34\":53,\"35\":44,\"36\":52,\"37\":44,\"38\":51,\"39\":44,\"40\":53,\"41\":44,\"42\":52,\"43\":44,\"44\":55,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":1,\"62\":4,\"63\":158,\"64\":85,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":1},\"_length\":71,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984425,\"result\":1,\"matrix\":\"4,5,6,4,1,4,10,5,8,5,4,3,5,4,7\",\"linesWin\":\"\",\"haiSao\":\"\",\"prize\":0,\"currentMoney\":17079893,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":1},\r\n        {\"_pos\":71,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":170,\"12\":1,\"13\":0,\"14\":30,\"15\":49,\"16\":44,\"17\":54,\"18\":44,\"19\":49,\"20\":48,\"21\":44,\"22\":55,\"23\":44,\"24\":53,\"25\":44,\"26\":56,\"27\":44,\"28\":53,\"29\":44,\"30\":57,\"31\":44,\"32\":51,\"33\":44,\"34\":51,\"35\":44,\"36\":56,\"37\":44,\"38\":55,\"39\":44,\"40\":52,\"41\":44,\"42\":54,\"43\":44,\"44\":52,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":1,\"62\":4,\"63\":158,\"64\":85,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0},\"_length\":71,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984426,\"result\":1,\"matrix\":\"1,6,10,7,5,8,5,9,3,3,8,7,4,6,4\",\"linesWin\":\"\",\"haiSao\":\"\",\"prize\":0,\"currentMoney\":17079893,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":74,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":171,\"12\":1,\"13\":0,\"14\":31,\"15\":49,\"16\":44,\"17\":48,\"18\":44,\"19\":48,\"20\":44,\"21\":56,\"22\":44,\"23\":49,\"24\":48,\"25\":44,\"26\":49,\"27\":48,\"28\":44,\"29\":54,\"30\":44,\"31\":52,\"32\":44,\"33\":52,\"34\":44,\"35\":51,\"36\":44,\"37\":48,\"38\":44,\"39\":52,\"40\":44,\"41\":56,\"42\":44,\"43\":51,\"44\":44,\"45\":57,\"46\":0,\"47\":2,\"48\":50,\"49\":49,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":1,\"65\":4,\"66\":148,\"67\":145,\"68\":1,\"69\":0,\"70\":0,\"71\":0,\"72\":1,\"73\":1},\"_length\":74,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984427,\"result\":1,\"matrix\":\"1,0,0,8,10,10,6,4,4,3,0,4,8,3,9\",\"linesWin\":\"21\",\"haiSao\":\"\",\"prize\":0,\"currentMoney\":17077393,\"freeSpin\":1,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":1,\"currentNumberFreeSpin\":1},\r\n        {\"_pos\":70,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":172,\"12\":1,\"13\":0,\"14\":29,\"15\":54,\"16\":44,\"17\":53,\"18\":44,\"19\":49,\"20\":44,\"21\":53,\"22\":44,\"23\":56,\"24\":44,\"25\":49,\"26\":44,\"27\":55,\"28\":44,\"29\":51,\"30\":44,\"31\":52,\"32\":44,\"33\":54,\"34\":44,\"35\":57,\"36\":44,\"37\":53,\"38\":44,\"39\":51,\"40\":44,\"41\":52,\"42\":44,\"43\":49,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":1,\"61\":4,\"62\":148,\"63\":145,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0},\"_length\":70,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984428,\"result\":1,\"matrix\":\"6,5,1,5,8,1,7,3,4,6,9,5,3,4,1\",\"linesWin\":\"\",\"haiSao\":\"\",\"prize\":0,\"currentMoney\":17077393,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":102,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":174,\"12\":5,\"13\":0,\"14\":30,\"15\":51,\"16\":44,\"17\":49,\"18\":44,\"19\":53,\"20\":44,\"21\":49,\"22\":44,\"23\":53,\"24\":44,\"25\":53,\"26\":44,\"27\":53,\"28\":44,\"29\":51,\"30\":44,\"31\":49,\"32\":48,\"33\":44,\"34\":53,\"35\":44,\"36\":49,\"37\":44,\"38\":54,\"39\":44,\"40\":49,\"41\":44,\"42\":55,\"43\":44,\"44\":57,\"45\":0,\"46\":10,\"47\":49,\"48\":44,\"49\":49,\"50\":54,\"51\":44,\"52\":49,\"53\":55,\"54\":44,\"55\":50,\"56\":53,\"57\":0,\"58\":21,\"59\":50,\"60\":44,\"61\":49,\"62\":44,\"63\":49,\"64\":44,\"65\":49,\"66\":44,\"67\":49,\"68\":44,\"69\":49,\"70\":44,\"71\":49,\"72\":44,\"73\":50,\"74\":44,\"75\":49,\"76\":44,\"77\":49,\"78\":44,\"79\":49,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":41,\"87\":104,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":1,\"93\":4,\"94\":235,\"95\":173,\"96\":0,\"97\":0,\"98\":0,\"99\":0,\"100\":0,\"101\":0},\"_length\":102,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984430,\"result\":5,\"matrix\":\"3,1,5,1,5,5,5,3,10,5,1,6,1,7,9\",\"linesWin\":\"1,16,17,25\",\"haiSao\":\"2,1,1,1,1,1,1,2,1,1,1\",\"prize\":10600,\"currentMoney\":17099693,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0}\r\n\r\n    ]\r\n}"],"file":"index.js"}