{"version":3,"sources":["assets/BaiCao/BaiCaoScript/BaiCao.CardUtil.ts","assets/BaiCao/BaiCaoScript/BaiCao.Card.ts","assets/BaiCao/BaiCaoScript/BaiCao.Cmd.ts","assets/BaiCao/BaiCaoScript/BaiCao.Controller.ts","assets/BaiCao/BaiCaoScript/BaiCao.ItemResult.ts","assets/BaiCao/BaiCaoScript/BaiCao.ItemRoom.ts","assets/BaiCao/BaiCaoScript/BaiCao.NetworkClient.ts","assets/BaiCao/BaiCaoScript/BaiCao.Player.ts","assets/BaiCao/BaiCaoScript/BaiCao.Res.ts"],"names":["common","_a","cc","_decorator","ccclass","property","CardUtils","getCardInfo","a","this","id","so","getSoById","chat","getChatById","diem","getDiemById","Math","floor","score","getNormalId","b","exports","default","BaiCao_Res_1","require","Card","_super","_this","apply","arguments","spr","posY","offsetY","isSelected","callback","index","__extends","prototype","onLoad","node","getComponent","Sprite","y","onSelect","setCardData","spriteFrame","getInstance","getCardFace","getCardIndex","select","deSelect","__decorate","Component","cmd","Network_OutPacket_1","Configs_1","Network_InPacket_1","Code","LOGIN","TOPSERVER","CMD_PINGPONG","CMD_JOIN_ROOM","CMD_RECONNECT_ROOM","MONEY_BET_CONFIG","JOIN_ROOM_FAIL","CHAT_ROOM","GET_LIST_ROOM","JOIN_GAME_ROOM_BY_ID","MO_BAI","BAT_DAU","KET_THUC","YEU_CAU_DANH_BIEN","CHIA_BAI","KE_CUA","TU_DONG_BAT_DAU","DONG_Y_DANH_BIEN","DAT_CUOC","THONG_TIN_BAN_CHOI","DANG_KY_THOAT_PHONG","VAO_GA","DOI_CHUONG","MOI_DAT_CUOC","CHEAT_CARDS","DANG_KY_CHOI_TIEP","UPDATE_OWNER_ROOM","JOIN_ROOM_SUCCESS","LEAVE_GAME","NOTIFY_KICK_FROM_ROOM","NEW_USER_JOIN","NOTIFY_USER_GET_JACKPOT","UPDATE_MATCH","PLAYER_STATUS_OUT_GAME","PLAYER_STATUS_VIEWER","PLAYER_STATUS_SITTING","PLAYER_STATUS_PLAYING","MAX_PLAYER","CmdLogin","call","initData","setControllerId","setCmdId","packHeader","putString","updateSize","CmdJoinRoom","c","putInt","putLong","CmdReconnectRoom","SendVaoGa","CmdSendRequestLeaveGame","CmdSendHoldRoom","SendGetGameConfig","SendGetTopServer","putByte","SendCardCheat","putShort","length","CmdSendDatCuoc","CmdSendDanhBien","CmdSendKeCua","CmdSendAcceptDanhBien","CmdSendMoBai","CmdSendPing","SendGetListRoom","App","MONEY_TYPE","SendJoinRoomById","SendChatRoom","encodeURI","ReceivedLogin","data","ReceivedGetListRoom","list","listSize","getShort","i","item","getInt","getByte","getString","getBool","getLong","push","ReceivedJoinRoomSucceed","myChair","chuongChair","moneyBet","roomId","gameId","moneyType","rule","playerSize","playerStatus","playerInfos","gameAction","countDownTime","ReceivedAutoStart","isAutoStart","timeAutoStart","ReceivedChiaBai","cardSize","cards","timeChiaBai","ReceivedFirstTurnDecision","isRandom","chair","ReceivedUserLeaveRoom","nickName","ReceivedUserJoinRoom","info","uChair","uStatus","ReceivedUpdateMatch","hasInfo","infos","ReceivedBaCayConfig","ReceivedNotifyRegOutRoom","outChair","isOutRoom","ReceivedKickOff","reason","ReceivedMoiDatCuoc","timeDatCuoc","ReceivedDatCuoc","chairDatCuoc","level","ReceivedYeuCauDanhBien","danhBienChair","ReceivedChapNhanDanhBien","ReceivedKeCua","chairKeCuaFrom","chairKeCuaTo","ReceivedVaoGa","chicKenBet","ReceivedMoBai","chairMoBai","ReceivedEndGame","statusList","cardList","d","tienThangChuong","tienThangGa","keCuaMoneyList","danhBienMoneyList","tongTienCuoiVan","tongTienCuocList","tongDanhBienList","tongKeCuaList","tongCuocGaList","tongCuoiVanList","currentMoneyList","timeEndGame","ReceivedDoiChuong","ReceivedChatRoom","isIcon","content","decodeURI","nickname","ReceivedGameInfo","cuocDanhBienList","cuocKeCuaList","gameServerState","players","status","money","cuocGa","cuocChuong","avatar","ReceivedJoinRoomFail","BroadcastReceiver_1","Utils_1","App_1","Network_Cmd_1","BaiCao_Cmd_1","BaiCao_NetworkClient_1","BaiCao_CardUtil_1","configPlayer","defaultPlayerPos","BaiCaoController","UI_ChooseRoom","labelNickName","labelCoin","contentListRooms","prefabItemRoom","scrollListRoom","edtFindRoom","btnHideRoomFull","isInitedUIRoom","UI_Playing","meCards","groupPlayers","spriteCards","spriteCardBack","matchPot","labelMatchPot","cardsDeal","btnBet","btnOpenCard","btnLeaveRoom","hubChips","labelRoomId","labelRoomBet","actionBetting","betChooseValue","betChooseValueTarget","popupMatchResult","contentMatchResult","prefabItemResult","scrollMatchResult","notifyTimeStart","notifyTimeEnd","notifyTimeBet","UI_Chat","edtChatInput","popupNodity","labelNotifyContent","popupGuide","seatOwner","currentRoomBet","gameState","minutes","seconds","timeEnd","timeBet","intervalWaitting","intervalEnd","intervalBetting","currentCard","numCardOpened","arrBetValue","arrBetPos","currentBetSelectedIndex","currentMatchPotValue","timeoutEndGame","timeoutChiaBaiDone","arrPosDanhBien","BaiCaoController_1","instance","initConfigPlayer","start","showUIRooms","showErrLoading","addOnOpen","send","SendLogin","Login","Nickname","AccessToken","addOnClose","loadScene","connect","joinRoom","showLoading","refeshListRoom","removeAllChildren","findRoomId","text","string","trim","idFind","parseInt","childrenCount","children","roomInfo","active","hideRoomFull","isChecked","roomItem","USER_UPDATE_COIN","register","formatNumber","Coin","setupListener","closeUIRoom","createRoom","playingNow","arrRoomOkMoney","roomCrowed","roomItemCrowed","roomChoosed","alertDialog","showMsg","showUIChat","runAction","moveTo","closeUIChat","chatEmotion","event","chatMsg","showPopupGuide","closePopupGuide","backToLobby","close","showUIPlaying","closeUIPlaying","actionLeaveRoom","setupMatch","closePopupMatchResult","getPlayerHouse","showPopupBet","closePopupRequestDanhBien","playerId","playerPos","arrPlayerPosExist","arrPlayerInfo","arrPlayerStatus","resetHubChips","findPos","indexOf","seatId","resetPlayerInfo","isViewer","setIsViewer","setupSeatPlayer","showBtnInvite","setOwner","findPlayerSeatByPos","startWaittingCountDown","timeWait","setTimeWaittingCountDown","unschedule","schedule","Label","startEndCountDown","setTimeEndCountDown","startBettingCountDown","turnTime","processBetting","rate","toFixed","fillRange","getCardsScore","arrCards","openMeCard","itemId","cardPos","prepareCardReal","spriteCardId","transformToCardReal","showCardName","setTimeout","resetCardReady","moveChipsToHubNow","position","v2","scale","fxMoveChips","chips","delay","toX","toY","sequence","delayTime","scaleTo","spawn","arrFromX","arrFromY","setupBet","showPopupMatchResult","instantiate","initItem","addChild","scrollToTop","addListener","getCmdId","msg","res","getError","itemData","seatId_1","prepareToTransform","posPlaying","result_1","findId","cardReady","userName","bet","bien","ke","ga","total","moneyChange","fxWin","fxLose","value","seatId_2","showPopupRequestDanhBien","Button","interactable","color","Color","GRAY","timeChiaBai_1","clearTimeout","arrSeatExist","getNumPlayers","numPlayer_1","seatId_3","card4Me","rawPlayerPos","timeUnderLayer","seatId_4","showCardReady","showCardReal","WHITE","resetPlayersPlaying","seatId_5","disableDanhBien","playFxDanhBien","seatId_6","setBet","addChips","randomRange","seatId_7","showNotify","seatId_8","x","playFxVaoGa","seatId_9","raw","formatNumberMin","seatId_10","customPlayerInfo","pos","setGold","seatId_11","showChatEmotion","seatId_12","showChatMsg","actionOpenCard","actionSendVaoGa","actionAcceptDanhBien","increaseBetValue","decreaseBetValue","actionBet","setupBetValue","actionDanhBien","substring","findPlayerPosBySeat","actionKeCua","disableKeCua","resetMatchHistory","playerInfo","setAvatar","setName","findPlayerSeatByUid","uid","seat","playerPosEntry","update","Node","Prefab","ScrollView","EditBox","Toggle","SpriteFrame","BaiCaoItemResult","labelUserName","labelBet","labelBien","labelKe","labelGa","labelTotal","YELLOW","BaiCao_Controller_1","BaiCaoItemRoom","labelBetMin","labelNumPlayers","progressNumPlayers","chooseRoom","Network_NetworkClient_1","Network_NetworkListener_1","BaiCaoNetworkClient","listeners","Array","isUseWSS","USE_WSS","HOST_BAICAO","host","port","onOpen","ev","onMessage","Uint8Array","listener","target","Object","splice","packet","Int8Array","_length","_data","ws","isConnected","buffer","Player","btnInvite","cardReal","userGold","owner","cardsName","actionVaoGa","actionViewer","actionThinking","actionWin","goldWin","actionLose","goldLose","hub","goldBet","prefabItemChip","notify","shadowAvatar","shadowInfo","popupBet","popupRequestDanhBien","labelValueDanhBien","posCardOpened","timeoutNotify","timeoutShowCardName","timeoutChat","updatePosCardOpened","sp","Skeleton","setAnimation","state","setCanDanhBien","setCanKeCua","getAvatarSpriteFrame","spriteCard","callFunc","name","showGold","formatGold","showPlayerBet","item1","item2","setCardReal01","setCardReal02","showPlayCountdown","processThinking","hidePlayCountdown","prepareFxAction","resetAction","playFxViewer","fxOtherPlayerFold","moveBy","fxMeFold","shadowCardReal","showEatGa","fxGoldChange","shadowCardReady","setCardWin","resetCardReal","goldStart","goldEnd","goldAdd","deltaGoldAdd","rep","repeat","seq","price","toString","replace","Res","cardItem","loader","loadResDir","err","sprs","loadRes","prefab","filter","card","getCardItem"],"mappings":"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","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\nexport namespace common {\r\n    export class CardUtils {\r\n        static id: number;\r\n        static so: number;\r\n        static chat: number;\r\n        static diem: number;\r\n\r\n        static getCardInfo(a: number) {\r\n            this.id = a;\r\n            this.so = this.getSoById(a);\r\n            this.chat = this.getChatById(a);\r\n            this.diem = this.getDiemById(a)\r\n        }\r\n\r\n        static getSoById(a: number): number {\r\n            return Math.floor(a / 4)\r\n        }\r\n\r\n        static getDiemById(a: number): number {\r\n            // Bai cao thi J, Q, K = 10\r\n            let score = Math.floor(a / 4) + 1;\r\n            if (score == 11 || score == 12 || score == 13) {\r\n                score = 10;\r\n            }\r\n            return score;\r\n        }\r\n\r\n        static getChatById(a: number): number {\r\n            return a % 4\r\n        }\r\n\r\n        static getNormalId(a: number): number {\r\n            var b: number = -1;\r\n            b = 4 > a ? 11 : 8 > a ? 12 : Math.floor(a / 4) - 2;\r\n            a = Math.floor(a % 4);\r\n            3 == a ? a = 2 : 2 == a && (a = 3);\r\n            return 4 * b + a\r\n        }\r\n    }\r\n}\r\nexport default common.CardUtils;","import Res from \"./BaiCao.Res\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Card extends cc.Component {\r\n\r\n    spr = null;\r\n    posY = 0;\r\n    offsetY = 20;\r\n    isSelected = false;\r\n    callback = null;\r\n    index = null;\r\n\r\n    onLoad() {\r\n        this.spr = this.node.getComponent(cc.Sprite);\r\n        this.posY = this.node.y;\r\n    }\r\n\r\n    onSelect() {\r\n        this.node.y += this.isSelected ? -this.offsetY : this.offsetY;\r\n        this.isSelected = !this.isSelected;\r\n        if (this.isSelected && this.callback) {\r\n            this.callback(this.index);\r\n        }\r\n\r\n    }\r\n\r\n    setCardData(index, callback = null) {\r\n        this.index = index;\r\n        this.spr.spriteFrame = Res.getInstance().getCardFace(index);\r\n        this.callback = callback;\r\n    }\r\n\r\n    getCardIndex() {\r\n        return this.index;\r\n    }\r\n\r\n    select() {\r\n        this.node.y = this.posY + this.offsetY;\r\n        this.isSelected = true;\r\n    }\r\n\r\n    deSelect() {\r\n        this.node.y = this.posY;\r\n        this.isSelected = false;\r\n    }\r\n}\r\n","import OutPacket from \"../../Lobby/LobbyScript/Script/networks/Network.OutPacket\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\n\r\nexport namespace cmd {\r\n    export class Code {\r\n        static LOGIN = 1;\r\n        static TOPSERVER = 1001;\r\n        static CMD_PINGPONG = 1050;\r\n\r\n        static CMD_JOIN_ROOM = 3001;\r\n        static CMD_RECONNECT_ROOM = 3002;\r\n        static MONEY_BET_CONFIG = 3003;\r\n        static JOIN_ROOM_FAIL = 3004;\r\n        static CHAT_ROOM = 3008;\r\n\r\n        static GET_LIST_ROOM = 3014;\r\n        static JOIN_GAME_ROOM_BY_ID = 3015;\r\n\r\n        static MO_BAI = 3101;\r\n        static BAT_DAU = 3102;\r\n        static KET_THUC = 3103;\r\n        static YEU_CAU_DANH_BIEN = 3104;\r\n        static CHIA_BAI = 3105;\r\n        static KE_CUA = 3106;\r\n        static TU_DONG_BAT_DAU = 3107;\r\n        static DONG_Y_DANH_BIEN = 3108;\r\n        static DAT_CUOC = 3109;\r\n        static THONG_TIN_BAN_CHOI = 3110;\r\n        static DANG_KY_THOAT_PHONG = 3111;\r\n        static VAO_GA = 3112;\r\n        static DOI_CHUONG = 3113;\r\n        static MOI_DAT_CUOC = 3114;\r\n        static CHEAT_CARDS = 3115;\r\n        static DANG_KY_CHOI_TIEP = 3116;\r\n        static UPDATE_OWNER_ROOM = 3117;\r\n        static JOIN_ROOM_SUCCESS = 3118;\r\n        static LEAVE_GAME = 3119;\r\n        static NOTIFY_KICK_FROM_ROOM = 3120;\r\n        static NEW_USER_JOIN = 3121;\r\n        static NOTIFY_USER_GET_JACKPOT = 3122;\r\n        static UPDATE_MATCH = 3123;\r\n\r\n        static PLAYER_STATUS_OUT_GAME = 0;\r\n        static PLAYER_STATUS_VIEWER = 1;\r\n        static PLAYER_STATUS_SITTING = 2;\r\n        static PLAYER_STATUS_PLAYING = 3;\r\n\r\n        static MAX_PLAYER = 8;\r\n    }\r\n\r\n    // OutPacket\r\n    export class CmdLogin extends OutPacket {\r\n        constructor(a: string, b: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.LOGIN);\r\n            this.packHeader();\r\n            this.putString(a); // nickname\r\n            this.putString(b); // accessToken\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class CmdJoinRoom extends OutPacket {\r\n        constructor(a: number, b: number, c: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CMD_JOIN_ROOM);\r\n            this.packHeader();\r\n            this.putInt(a);\r\n            this.putInt(b);\r\n            this.putLong(c);\r\n            this.putInt(0);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class CmdReconnectRoom extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CMD_RECONNECT_ROOM);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendVaoGa extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.VAO_GA);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class CmdSendRequestLeaveGame extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.DANG_KY_THOAT_PHONG);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class CmdSendHoldRoom extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.DANG_KY_CHOI_TIEP);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendGetGameConfig extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.MONEY_BET_CONFIG);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendGetTopServer extends OutPacket {\r\n        constructor(a: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.TOPSERVER);\r\n            this.packHeader();\r\n            this.putByte(a);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendCardCheat extends OutPacket {\r\n        constructor(a: number, b: []) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHEAT_CARDS);\r\n            this.packHeader();\r\n            this.putByte(a);\r\n            this.putByte(0);\r\n            this.putShort(b.length);\r\n            if (a)\r\n                for (var c = 0; c < b.length; c++) this.putByte(b[c]);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class CmdSendDatCuoc extends OutPacket {\r\n        constructor(a: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.DAT_CUOC);\r\n            this.packHeader();\r\n            this.putByte(a);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class CmdSendDanhBien extends OutPacket {\r\n        constructor(a: number, b: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.YEU_CAU_DANH_BIEN);\r\n            this.packHeader();\r\n            this.putByte(a);\r\n            this.putByte(b);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class CmdSendKeCua extends OutPacket {\r\n        constructor(a: number, b: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.KE_CUA);\r\n            this.packHeader();\r\n            this.putByte(a);\r\n            this.putByte(b);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class CmdSendAcceptDanhBien extends OutPacket {\r\n        constructor(a: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.DONG_Y_DANH_BIEN);\r\n            this.packHeader();\r\n            this.putByte(a);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class CmdSendMoBai extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.MO_BAI);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class CmdSendPing extends OutPacket {\r\n        constructor(a: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CMD_PINGPONG);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    // old Xoc Dia\r\n    export class SendGetListRoom extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.GET_LIST_ROOM);\r\n            this.packHeader();\r\n            this.putInt(Configs.App.MONEY_TYPE);//money type\r\n            this.putInt(Code.MAX_PLAYER);//maxplayer\r\n            this.putLong(-1);//khong xac dinh\r\n            this.putInt(0);//khong xac dinh\r\n            this.putInt(0);//CARD_FROM\r\n            this.putInt(50);//CARD_TO\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendJoinRoomById extends OutPacket {\r\n        constructor(id: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.JOIN_GAME_ROOM_BY_ID);\r\n            this.packHeader();\r\n            this.putInt(id);\r\n            this.putString(\"\");//mat khau\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendChatRoom extends OutPacket {\r\n        constructor(a: number, b: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHAT_ROOM);\r\n            this.packHeader();\r\n            this.putByte(a ? 1 : 0);\r\n            this.putString(encodeURI(b));\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    // InPacket\r\n    export class ReceivedLogin extends InPacket {\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n        //    cc.log(\"____\");\r\n        }\r\n    }\r\n\r\n    export class ReceivedGetListRoom extends InPacket {\r\n        list: any[] = [];\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            let listSize = this.getShort();\r\n            this.list = [];\r\n            for (var i = 0; i < listSize; i++) {\r\n                let item: any = {};\r\n                item[\"id\"] = this.getInt();\r\n                item[\"userCount\"] = this.getByte();\r\n                item[\"limitPlayer\"] = this.getByte();\r\n                item[\"maxUserPerRoom\"] = this.getInt();\r\n                item[\"moneyType\"] = this.getByte();\r\n                item[\"moneyBet\"] = this.getInt();\r\n                item[\"requiredMoney\"] = this.getInt();\r\n                item[\"rule\"] = this.getByte();\r\n                item[\"nameRoom\"] = this.getString();\r\n                item[\"key\"] = this.getBool();\r\n                item[\"quyban\"] = this.getLong();\r\n                this.list.push(item)\r\n            }\r\n        }\r\n    }\r\n\r\n    // edited\r\n    export class ReceivedJoinRoomSucceed extends InPacket {\r\n        myChair: number;\r\n        chuongChair: number;\r\n        moneyBet: number;\r\n        roomId: number;\r\n        gameId: number;\r\n        moneyType: number;\r\n        rule: number;\r\n        playerSize: number;\r\n        playerStatus: any[];\r\n        playerInfos: any[];\r\n        gameAction: number;\r\n        countDownTime: number;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            var a: number;\r\n            this.myChair = this.getByte();\r\n            this.chuongChair = this.getByte();\r\n            this.moneyBet = this.getLong();\r\n            this.roomId = this.getInt();\r\n            this.gameId = this.getInt();\r\n            this.moneyType = this.getByte();\r\n            this.rule = this.getByte();\r\n            this.playerSize = this.getShort();\r\n            this.playerStatus = [];\r\n            for (a = 0; a < this.playerSize; a++) this.playerStatus.push(this.getByte());\r\n            this.playerSize = this.getShort();\r\n            this.playerInfos = [];\r\n            for (a =\r\n                0; a < this.playerSize; a++) {\r\n                var b = {};\r\n                b[\"nickName\"] = this.getString();\r\n                b[\"avatar\"] = this.getString();\r\n                b[\"money\"] = this.getLong();\r\n                this.playerInfos.push(b);\r\n            }\r\n            this.gameAction = this.getByte();\r\n            this.countDownTime = this.getByte();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedAutoStart extends InPacket {\r\n        isAutoStart: boolean;\r\n        timeAutoStart: number;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.isAutoStart = this.getBool();\r\n            this.timeAutoStart = this.getByte();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedChiaBai extends InPacket {\r\n        cardSize: number;\r\n        cards: any[];\r\n        gameId: number;\r\n        timeChiaBai: number;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            var a = 0;\r\n            this.cardSize = this.getShort();\r\n            this.cards = [];\r\n            for (a = 0; a < this.cardSize; a++) this.cards.push(this.getByte());\r\n            this.gameId = this.getInt();\r\n            this.timeChiaBai = this.getByte();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedFirstTurnDecision extends InPacket {\r\n        isRandom: boolean;\r\n        chair: number;\r\n        cardSize: number;\r\n        cards: any[];\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.isRandom = this.getBool();\r\n            this.chair = this.getByte();\r\n            this.cardSize = this.getShort();\r\n            this.cards = [];\r\n            for (let i = 0; i < this.cardSize; i++) {\r\n                this.cards.push(this.getByte());\r\n            }\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedUserLeaveRoom extends InPacket {\r\n        chair: number;\r\n        nickName: string;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte();\r\n            this.nickName = this.getString();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedUserJoinRoom extends InPacket {\r\n        info: {};\r\n        uChair: number;\r\n        uStatus: number;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.info = {};\r\n            this.info[\"nickName\"] = this.getString();\r\n            this.info[\"avatar\"] = this.getString();\r\n            this.info[\"money\"] = this.getLong();\r\n            this.uChair = this.getByte();\r\n            this.uStatus = this.getByte();\r\n        }\r\n    }\r\n\r\n\r\n    // new\r\n    export class ReceivedUpdateMatch extends InPacket {\r\n        myChair: number;\r\n        hasInfo: any[];\r\n        infos: any[];\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.myChair = this.getByte();\r\n            var a = this.getShort();\r\n            this.hasInfo = [];\r\n            for (var b = 0; b < a; b++) this.hasInfo.push(this.getBool());\r\n            this.infos = [];\r\n            for (b = 0; b < a; b++) {\r\n                var c = {};\r\n                this.hasInfo[b] && (c[\"nickName\"] = this.getString(), c[\"avatar\"] = this.getString(), c[\"money\"] = this.getLong(), c[\"status\"] = this.getInt());\r\n                this.infos.push(c);\r\n            }\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedBaCayConfig extends InPacket {\r\n        listSize: number;\r\n        list: any[];\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.listSize = this.getShort();\r\n            this.list = [];\r\n            for (var a = 0; a < this.listSize; a++) {\r\n                var b = {};\r\n                b[\"maxUserPerRoom\"] = this.getByte();\r\n                b[\"moneyType\"] = this.getByte();\r\n                b[\"moneyBet\"] = this.getLong();\r\n                b[\"moneyRequire\"] = this.getLong();\r\n                b[\"nPersion\"] = this.getInt();\r\n                this.list.push(b);\r\n            }\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedNotifyRegOutRoom extends InPacket {\r\n        outChair: number;\r\n        isOutRoom: boolean;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.outChair = this.getByte();\r\n            this.isOutRoom = this.getBool();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedKickOff extends InPacket {\r\n        reason: number;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.reason = this.getByte();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedMoiDatCuoc extends InPacket {\r\n        timeDatCuoc: number;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.timeDatCuoc = this.getByte();\r\n        }\r\n    }\r\n\r\n\r\n    // new\r\n    export class ReceivedDatCuoc extends InPacket {\r\n        chairDatCuoc: number;\r\n        level: number;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chairDatCuoc = this.getByte();\r\n            this.level = this.getByte();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedYeuCauDanhBien extends InPacket {\r\n        danhBienChair: number;\r\n        level: number;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.danhBienChair = this.getByte();\r\n            this.level = this.getByte();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedChapNhanDanhBien extends InPacket {\r\n        danhBienChair: number;\r\n        level: number;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.danhBienChair = this.getByte();\r\n            this.level = this.getByte();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedKeCua extends InPacket {\r\n        chairKeCuaFrom: number;\r\n        chairKeCuaTo: number;\r\n        level: number;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chairKeCuaFrom = this.getByte();\r\n            this.chairKeCuaTo = this.getByte();\r\n            this.level = this.getByte();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedVaoGa extends InPacket {\r\n        chair: number;\r\n        chicKenBet: number;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte();\r\n            this.chicKenBet = this.getLong();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedMoBai extends InPacket {\r\n        chairMoBai: number;\r\n        cardSize: number;\r\n        cards: any[];\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chairMoBai = this.getByte();\r\n            this.cardSize = this.getShort();\r\n            this.cards = [];\r\n            for (var a = 0; a < this.cardSize; a++) {\r\n                this.cards.push(this.getByte());\r\n            }\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedEndGame extends InPacket {\r\n        statusList: any[];\r\n        cardList: any[];\r\n        tienThangChuong: number;\r\n        tienThangGa: number;\r\n        keCuaMoneyList: any[];\r\n        danhBienMoneyList: any[];\r\n        tongTienCuoiVan: number;\r\n        tongTienCuocList: any[];\r\n        tongDanhBienList: any[];\r\n        tongKeCuaList: any[];\r\n        tongCuocGaList: any[];\r\n        tongCuoiVanList: any[];\r\n        currentMoneyList: any[];\r\n        timeEndGame: number;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            var a = 0;\r\n            var b: any = this.getShort();\r\n            this.statusList = [];\r\n            for (a = 0; a < b; a++) this.statusList.push(this.getByte());\r\n            this.cardList = [];\r\n            for (a = 0; a < this.statusList.length; a++) {\r\n                b = [];\r\n                if (3 == this.statusList[a])\r\n                    for (var c = this.getShort(), d = 0; d < c; d++) b.push(this.getByte());\r\n                this.cardList.push(b);\r\n            }\r\n            this.tienThangChuong = this.getLong();\r\n            this.tienThangGa = this.getLong();\r\n            this.keCuaMoneyList = [];\r\n            this.danhBienMoneyList = [];\r\n            b = this.getShort();\r\n            for (a = 0; a < b; a++) this.keCuaMoneyList.push(this.getLong());\r\n            b = this.getShort();\r\n            for (a = 0; a < b; a++) this.danhBienMoneyList.push(this.getLong());\r\n            this.tongTienCuoiVan = this.getLong();\r\n            this.tongTienCuocList = [];\r\n            this.tongDanhBienList = [];\r\n            this.tongKeCuaList = [];\r\n            this.tongCuocGaList = [];\r\n            this.tongCuoiVanList = [];\r\n            this.currentMoneyList = [];\r\n            this.getShort();\r\n            for (a = 0; a < Code.MAX_PLAYER; a++) b = 0, 3 == this.statusList[a] && (b = this.getLong()), this.tongTienCuocList.push(b);\r\n            this.getShort();\r\n            for (a = 0; a < Code.MAX_PLAYER; a++) b = 0, 3 == this.statusList[a] && (b = this.getLong()), this.tongDanhBienList.push(b);\r\n            this.getShort();\r\n            for (a = 0; a < Code.MAX_PLAYER; a++) b = 0, 3 == this.statusList[a] && (b = this.getLong()), this.tongKeCuaList.push(b);\r\n            this.getShort();\r\n            for (a = 0; a < Code.MAX_PLAYER; a++) b = 0, 3 == this.statusList[a] && (b = this.getLong()), this.tongCuocGaList.push(b);\r\n            this.getShort();\r\n            for (a = 0; a < Code.MAX_PLAYER; a++) b = 0, 3 == this.statusList[a] && (b = this.getLong()), this.tongCuoiVanList.push(b);\r\n            this.getShort();\r\n            for (a = 0; a < Code.MAX_PLAYER; a++) b = 0, 3 == this.statusList[a] && (b = this.getLong()), this.currentMoneyList.push(b);\r\n            this.timeEndGame = this.getByte();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedDoiChuong extends InPacket {\r\n        chuongChair: number;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chuongChair = this.getByte();\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedChatRoom extends InPacket {\r\n        chair: number;\r\n        isIcon: boolean;\r\n        content: string;\r\n        nickname: string;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte();\r\n            this.isIcon = this.getBool();\r\n            this.content = decodeURI(this.getString());\r\n            this.nickname = this.getString()\r\n        }\r\n    }\r\n\r\n    // new\r\n    export class ReceivedGameInfo extends InPacket {\r\n        myChair: number;\r\n        chuongChair: number;\r\n        cards: any[];\r\n        cuocDanhBienList: any[];\r\n        cuocKeCuaList: any[];\r\n        gameServerState: number;\r\n        isAutoStart: boolean;\r\n        gameAction: number;\r\n        countDownTime: number;\r\n        moneyType: number;\r\n        moneyBet: number;\r\n        gameId: number;\r\n        roomId: number;\r\n        hasInfo: any[];\r\n        players: any[];\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.myChair = this.getByte();\r\n            this.chuongChair = this.getByte();\r\n            var a = this.getShort();\r\n            this.cards = [];\r\n            for (var b = 0; b < a; b++) this.cards.push(this.getByte());\r\n            this.cuocDanhBienList = [];\r\n            a = this.getShort();\r\n            for (b = 0; b < a; b++) this.cuocDanhBienList[b] = this.getInt();\r\n            this.cuocKeCuaList = [];\r\n            a = this.getShort();\r\n            for (b = 0; b < a; b++) this.cuocKeCuaList[b] = this.getInt();\r\n            this.gameServerState = this.getByte();\r\n            this.isAutoStart = this.getBool();\r\n            this.gameAction = this.getByte();\r\n            this.countDownTime = this.getByte();\r\n            this.moneyType = this.getByte();\r\n            this.moneyBet = this.getLong();\r\n            this.gameId = this.getInt();\r\n            this.roomId = this.getInt();\r\n            this.hasInfo = [];\r\n            a = this.getShort();\r\n            for (b = 0; b < a; b++) this.hasInfo[b] = this.getBool();\r\n            this.players = [];\r\n            for (b = 0; b < Code.MAX_PLAYER; b++) this.hasInfo[b] ? (this.players[b] = [], this.players[b].status = this.getByte(), this.players[b].money = this.getLong(), this.players[b].cuocGa = this.getInt(), this.players[b].cuocChuong =\r\n                this.getInt(), this.players[b].avatar = this.getString(), this.players[b].nickName = this.getString()) : (this.players[b] = [], this.players[b].status = 0)\r\n        }\r\n    }\r\n\r\n    export class ReceivedJoinRoomFail extends InPacket {\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n        }\r\n    }\r\n}\r\nexport default cmd;","import BroadcastReceiver from \"../../Lobby/LobbyScript/Script/common/BroadcastReceiver\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport cmdNetwork from \"../../Lobby/LobbyScript/Script/networks/Network.Cmd\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport cmd from \"./BaiCao.Cmd\";\r\n\r\nimport BaiCaoNetworkClient from \"./BaiCao.NetworkClient\";\r\nimport CardUtils from \"./BaiCao.CardUtil\";\r\nimport Card from \"./BaiCao.Card\";\r\n\r\nvar configPlayer = [\r\n    // {\r\n    //     seatId: 0,\r\n    //     playerId: -1,\r\n    //     playerPos: -1,\r\n    //     isViewer: true\r\n    // }\r\n];\r\n\r\n// defaultPlayerPos[0 -> 7][0] = player_pos of me\r\nlet defaultPlayerPos = [\r\n    [0, 1, 2, 3, 4, 5, 6, 7],\r\n    [1, 2, 3, 4, 5, 6, 7, 0],\r\n    [2, 3, 4, 5, 6, 7, 0, 1],\r\n    [3, 4, 5, 6, 7, 0, 1, 2],\r\n    [4, 5, 6, 7, 0, 1, 2, 3],\r\n    [5, 6, 7, 0, 1, 2, 3, 4],\r\n    [6, 7, 0, 1, 2, 3, 4, 5],\r\n    [7, 0, 1, 2, 3, 4, 5, 6]\r\n]\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaiCaoController extends cc.Component {\r\n\r\n    public static instance: BaiCaoController = null;\r\n\r\n    // UI Rooms\r\n    @property(cc.Node)\r\n    UI_ChooseRoom: cc.Node = null;\r\n    @property(cc.Label)\r\n    labelNickName: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelCoin: cc.Label = null;\r\n    @property(cc.Node)\r\n    contentListRooms: cc.Node = null;\r\n    @property(cc.Prefab)\r\n    prefabItemRoom: cc.Prefab = null;\r\n    @property(cc.ScrollView)\r\n    scrollListRoom: cc.ScrollView = null;\r\n    @property(cc.EditBox)\r\n    edtFindRoom: cc.EditBox = null;\r\n    @property(cc.Toggle)\r\n    btnHideRoomFull: cc.Toggle = null;\r\n\r\n    public isInitedUIRoom = false;\r\n\r\n    // UI Playing\r\n    @property(cc.Node)\r\n    UI_Playing: cc.Node = null;\r\n    @property(cc.Node)\r\n    meCards: cc.Node = null;\r\n    @property(cc.Node)\r\n    groupPlayers: cc.Node = null;\r\n    @property(cc.SpriteFrame)\r\n    spriteCards: cc.SpriteFrame[] = [];\r\n    @property(cc.SpriteFrame)\r\n    spriteCardBack: cc.SpriteFrame = null;\r\n    @property(cc.Node)\r\n    matchPot: cc.Node = null;\r\n    @property(cc.Label)\r\n    labelMatchPot: cc.Label = null;\r\n    @property(cc.Node)\r\n    cardsDeal: cc.Node = null;\r\n    @property(cc.Node)\r\n    btnBet: cc.Node = null;\r\n    @property(cc.Node)\r\n    btnOpenCard: cc.Node = null;\r\n    @property(cc.Button)\r\n    btnLeaveRoom: cc.Button = null;\r\n    @property(cc.Node)\r\n    hubChips: cc.Node = null;\r\n    @property(cc.Label)\r\n    labelRoomId: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelRoomBet: cc.Label = null;\r\n    @property(cc.Node)\r\n    actionBetting: cc.Node = null;\r\n    @property(cc.Node)\r\n    betChooseValue: cc.Node = null;\r\n    @property(cc.Node)\r\n    betChooseValueTarget: cc.Node = null;\r\n\r\n    // Popup Match Result\r\n    @property(cc.Node)\r\n    popupMatchResult: cc.Node = null;\r\n    @property(cc.Node)\r\n    contentMatchResult: cc.Node = null;\r\n    @property(cc.Prefab)\r\n    prefabItemResult: cc.Prefab = null;\r\n    @property(cc.ScrollView)\r\n    scrollMatchResult: cc.ScrollView = null;\r\n\r\n    // Notify\r\n    @property(cc.Node)\r\n    notifyTimeStart: cc.Node = null;\r\n    @property(cc.Node)\r\n    notifyTimeEnd: cc.Node = null;\r\n    @property(cc.Node)\r\n    notifyTimeBet: cc.Node = null;\r\n\r\n    // UI Chat\r\n    @property(cc.Node)\r\n    UI_Chat: cc.Node = null;\r\n    @property(cc.EditBox)\r\n    edtChatInput: cc.EditBox = null;\r\n\r\n    // Popup\r\n    @property(cc.Node)\r\n    popupNodity: cc.Node = null;\r\n    @property(cc.Label)\r\n    labelNotifyContent: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    popupGuide: cc.Node = null;\r\n\r\n    private seatOwner = null;\r\n    private currentRoomBet = null;\r\n\r\n    private gameState = null;\r\n\r\n    private minutes = null;\r\n    private seconds = null;\r\n\r\n\r\n    private timeAutoStart = null;\r\n    private timeEnd = null;\r\n    private timeBet = null;\r\n    private intervalWaitting = null;\r\n    private intervalEnd = null;\r\n    private intervalBetting = null;\r\n\r\n    private currentCard = null;\r\n    private numCardOpened = 0;\r\n\r\n    // bet\r\n    private arrBetValue = [];\r\n    private arrBetPos = [-157.5, -52.5, 52.5, 157.5];\r\n    private currentBetSelectedIndex = 0;\r\n\r\n    private currentMatchPotValue = 0;\r\n\r\n    private timeoutEndGame = null;\r\n    private timeoutChiaBaiDone = null;\r\n\r\n    private arrPosDanhBien = [];\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        BaiCaoController.instance = this;\r\n\r\n        this.seatOwner = -1;\r\n\r\n        this.initConfigPlayer();\r\n    }\r\n\r\n    start() {\r\n        this.showUIRooms();\r\n\r\n        App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n        BaiCaoNetworkClient.getInstance().addOnOpen(() => {\r\n            App.instance.showErrLoading(\"Đang đang đăng nhập...\");\r\n            BaiCaoNetworkClient.getInstance().send(new cmdNetwork.SendLogin(Configs.Login.Nickname, Configs.Login.AccessToken));\r\n        }, this);\r\n        BaiCaoNetworkClient.getInstance().addOnClose(() => {\r\n            App.instance.loadScene(\"Lobby\");\r\n        }, this);\r\n        BaiCaoNetworkClient.getInstance().connect();\r\n    }\r\n\r\n    // Request UI Room\r\n    joinRoom(info) {\r\n     //   cc.log(\"BaiCao joinRoom roomInfo : \", info);\r\n        App.instance.showLoading(true);\r\n        BaiCaoNetworkClient.getInstance().send(new cmd.SendJoinRoomById(info[\"id\"]));\r\n    }\r\n\r\n    refeshListRoom() {\r\n        this.contentListRooms.removeAllChildren(true);\r\n        BaiCaoNetworkClient.getInstance().send(new cmd.SendGetListRoom());\r\n    }\r\n\r\n    findRoomId() {\r\n      //  cc.log(\"BaiCao findRoomId id : \", this.edtFindRoom.string);\r\n        let text = this.edtFindRoom.string.trim();\r\n        if (text.length > 0) {\r\n            let idFind = parseInt(text);\r\n            for (let index = 0; index < this.contentListRooms.childrenCount; index++) {\r\n                let roomItem = this.contentListRooms.children[index].getComponent(\"BaiCao.ItemRoom\");\r\n                if (roomItem.roomInfo[\"id\"] != idFind) {\r\n                    this.contentListRooms.children[index].active = false;\r\n                }\r\n            }\r\n        } else {\r\n            for (let index = 0; index < this.contentListRooms.childrenCount; index++) {\r\n                this.contentListRooms.children[index].active = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    hideRoomFull() {\r\n        if (this.btnHideRoomFull.isChecked) {\r\n            for (let index = 0; index < this.contentListRooms.childrenCount; index++) {\r\n                let roomItem = this.contentListRooms.children[index].getComponent(\"BaiCao.ItemRoom\");\r\n                if (roomItem.roomInfo[\"userCount\"] == roomItem.roomInfo[\"maxUserPerRoom\"]) {\r\n                    this.contentListRooms.children[index].active = false;\r\n                }\r\n            }\r\n        } else {\r\n            for (let index = 0; index < this.contentListRooms.childrenCount; index++) {\r\n                this.contentListRooms.children[index].active = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    showUIRooms() {\r\n        this.UI_ChooseRoom.active = true;\r\n        if (this.isInitedUIRoom) {\r\n            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n        } else {\r\n            this.isInitedUIRoom = true;\r\n            this.labelNickName.string = Configs.Login.Nickname;\r\n            BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\r\n                this.labelCoin.string = Utils.formatNumber(Configs.Login.Coin);\r\n            }, this);\r\n            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n\r\n            this.setupListener();\r\n        }\r\n    }\r\n\r\n    closeUIRoom() {\r\n        this.UI_ChooseRoom.active = false;\r\n    }\r\n\r\n    createRoom() {\r\n        //  cc.log(\"BaiCao createRoom\");\r\n    }\r\n\r\n    playingNow() {\r\n        //  cc.log(\"BaiCao playingNow\");\r\n        let arrRoomOkMoney = [];\r\n        for (let index = 0; index < this.contentListRooms.childrenCount; index++) {\r\n            let roomItem = this.contentListRooms.children[index].getComponent(\"BaiCao.ItemRoom\");\r\n            if (roomItem.roomInfo[\"requiredMoney\"] < Configs.Login.Coin) {\r\n                arrRoomOkMoney.push(index);\r\n            }\r\n        }\r\n\r\n        //  cc.log(\"BaiCao playingNow arrRoomOkMoney : \", arrRoomOkMoney);\r\n\r\n        if (arrRoomOkMoney.length > 0) {\r\n            let roomCrowed = arrRoomOkMoney[0];\r\n            //  cc.log(\"BaiCao playingNow roomCrowed start : \", roomCrowed);\r\n            for (let index = 0; index < arrRoomOkMoney.length; index++) {\r\n                let roomItem = this.contentListRooms.children[arrRoomOkMoney[index]].getComponent(\"BaiCao.ItemRoom\");\r\n                let roomItemCrowed = this.contentListRooms.children[roomCrowed].getComponent(\"BaiCao.ItemRoom\");\r\n                //  cc.log(\"BaiCao playingNow ------------------------------------------\");\r\n                //  cc.log(\"BaiCao playingNow roomItem : \", roomItem.roomInfo[\"userCount\"]);\r\n                //  cc.log(\"BaiCao playingNow roomItemCrowed : \", roomItemCrowed.roomInfo[\"userCount\"]);\r\n                if (roomItem.roomInfo[\"userCount\"] > roomItemCrowed.roomInfo[\"userCount\"]) {\r\n                    roomCrowed = arrRoomOkMoney[index];\r\n                    //  cc.log(\"BaiCao playingNow roomCrowed update : \", roomCrowed);\r\n                }\r\n            }\r\n            //  cc.log(\"BaiCao playingNow roomCrowed end : \", roomCrowed);\r\n            let roomChoosed = this.contentListRooms.children[roomCrowed].getComponent(\"BaiCao.ItemRoom\");\r\n            //  cc.log(\"BaiCao playingNow roomCrowed end roomInfo : \", roomChoosed.roomInfo);\r\n            this.joinRoom(roomChoosed.roomInfo);\r\n        } else {\r\n            App.instance.alertDialog.showMsg(\"Không đủ tiền tham gia\\nbất kỳ phòng nào !\");\r\n        }\r\n    }\r\n\r\n    // Chat\r\n    showUIChat() {\r\n        this.UI_Chat.active = true;\r\n        this.UI_Chat.runAction(\r\n            cc.moveTo(0.5, 420, 0)\r\n        );\r\n    }\r\n\r\n    closeUIChat() {\r\n        this.UI_Chat.runAction(\r\n            cc.moveTo(0.5, 1000, 0)\r\n        );\r\n    }\r\n\r\n    chatEmotion(event, id) {\r\n        //  cc.log(\"BaiCao chatEmotion id : \", id);\r\n        BaiCaoNetworkClient.getInstance().send(new cmd.SendChatRoom(1, id));\r\n        this.closeUIChat();\r\n    }\r\n\r\n    chatMsg() {\r\n        if (this.edtChatInput.string.trim().length > 0) {\r\n            BaiCaoNetworkClient.getInstance().send(new cmd.SendChatRoom(0, this.edtChatInput.string));\r\n            this.edtChatInput.string = \"\";\r\n            this.closeUIChat();\r\n        }\r\n    }\r\n\r\n    showPopupGuide() {\r\n        this.popupGuide.active = true;\r\n    }\r\n\r\n    closePopupGuide() {\r\n        this.popupGuide.active = false;\r\n    }\r\n\r\n    backToLobby() {\r\n        BaiCaoNetworkClient.getInstance().close();\r\n        App.instance.loadScene(\"Lobby\");\r\n    }\r\n\r\n    // Playing\r\n    showUIPlaying() {\r\n        this.UI_Playing.active = true;\r\n    }\r\n\r\n    closeUIPlaying() {\r\n        this.actionLeaveRoom();\r\n    }\r\n\r\n    setupMatch(data: cmd.ReceivedJoinRoomSucceed) {\r\n        this.showUIPlaying();\r\n        this.closePopupMatchResult();\r\n        this.closeUIChat();\r\n        for (let index = 1; index < 8; index++) {\r\n            this.getPlayerHouse(index).showPopupBet(false);\r\n            this.getPlayerHouse(index).closePopupRequestDanhBien();\r\n        }\r\n\r\n        //  cc.log(\"BaiCao setupMatch data : \", data);\r\n\r\n        let chuongChair = data[\"chuongChair\"];\r\n        let countDownTime = data[\"countDownTime\"];\r\n        let gameAction = data[\"gameAction\"];\r\n        let gameId = data[\"gameId\"];\r\n        let moneyBet = data[\"moneyBet\"];\r\n        let moneyType = data[\"moneyType\"];\r\n        let myChair = data[\"myChair\"];\r\n        let playerInfos = data[\"playerInfos\"];\r\n        let playerSize = data[\"playerSize\"];\r\n        let playerStatus = data[\"playerStatus\"];\r\n        let roomId = data[\"roomId\"];\r\n        let rule = data[\"rule\"];\r\n\r\n        this.labelRoomId.string = \"BÀI CÀO - PHÒNG: \" + roomId;\r\n        this.labelRoomBet.string = \"MỨC CƯỢC: \" + Utils.formatNumber(moneyBet) + \"$\";\r\n\r\n        this.currentRoomBet = moneyBet;\r\n\r\n        this.gameState = gameAction;\r\n        configPlayer[0].playerId = Configs.Login.Nickname;\r\n        configPlayer[0].playerPos = myChair;\r\n        //  cc.log(\"BaiCao setupMatch configPlayer Me : \", configPlayer[0]);\r\n        //  cc.log(\"BaiCao setupMatch configPlayer  : \", configPlayer);\r\n\r\n        var numPlayers = 0;\r\n        var arrPlayerPosExist = [];\r\n        var arrPlayerInfo = [];\r\n        var arrPlayerStatus = [];\r\n\r\n        for (let index = 0; index < playerInfos.length; index++) {\r\n            if (playerInfos[index].nickName !== \"\") {\r\n                numPlayers += 1;\r\n                arrPlayerPosExist.push(index);\r\n                arrPlayerInfo.push(playerInfos[index]);\r\n                arrPlayerStatus.push(playerStatus[index]);\r\n            }\r\n        }\r\n        //  cc.log(\"BaiCao numPlayers : \", numPlayers);\r\n\r\n        this.resetHubChips();\r\n\r\n        // setup configPlayer\r\n        for (let a = 0; a < configPlayer.length; a++) {\r\n            configPlayer[a].playerPos = defaultPlayerPos[myChair][a];\r\n        }\r\n\r\n        // set State of Seat : Yes | No exist Player\r\n        for (let index = 0; index < configPlayer.length; index++) {\r\n            let findPos = arrPlayerPosExist.indexOf(configPlayer[index].playerPos);\r\n\r\n            var seatId = configPlayer[index].seatId;\r\n            this.getPlayerHouse(seatId).resetPlayerInfo();\r\n\r\n            if (findPos > -1) {\r\n                // Exist player -> Set Player Info\r\n                if (arrPlayerStatus[findPos] == cmd.Code.PLAYER_STATUS_SITTING || arrPlayerStatus[findPos] == cmd.Code.PLAYER_STATUS_PLAYING) {\r\n                    configPlayer[index].isViewer = false;\r\n                    this.getPlayerHouse(seatId).setIsViewer(false);\r\n                } else {\r\n                    configPlayer[index].isViewer = true;\r\n                    this.getPlayerHouse(seatId).setIsViewer(true);\r\n                }\r\n                this.setupSeatPlayer(seatId, arrPlayerInfo[findPos]);\r\n            } else {\r\n                // Not Exist player  -> Active Btn Add player\r\n                this.getPlayerHouse(seatId).showBtnInvite(true);\r\n                configPlayer[index].isViewer = true;\r\n            }\r\n        }\r\n\r\n        for (let index = 0; index < 8; index++) {\r\n            this.getPlayerHouse(index).setOwner(false);\r\n        }\r\n        let seatOwner = this.findPlayerSeatByPos(chuongChair);\r\n        if (seatOwner !== -1) {\r\n            this.getPlayerHouse(seatOwner).setOwner(true);\r\n            this.seatOwner = seatOwner;\r\n        }\r\n\r\n        //  cc.log(\"BaiCao setupMatch configPlayer : \", configPlayer);\r\n\r\n        let msg = \"\";\r\n        switch (this.gameState) {\r\n            case 1://bat dau van moi\r\n                msg = \"Bắt đầu ván mới\";\r\n                break;\r\n            case 2://bat dau dat cua\r\n                {\r\n                    msg = \"Bắt đầu đặt cửa\";\r\n\r\n                }\r\n                break;\r\n            case 3://bat dau ban cua\r\n                {\r\n\r\n                }\r\n                break;\r\n            case 4://nha cai can tien, hoan tien\r\n                msg = \"Nhà cái cân tiền, hoàn tiền\";\r\n                break;\r\n            case 5://bat dau hoan tien\r\n                msg = \"Bắt đầu hoàn tiền\";\r\n                break;\r\n            case 6://bat dau tra thuong\r\n                msg = \"Bắt đầu trả thưởng\";\r\n                break;\r\n        }\r\n        if (msg != \"\") {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // Time Start\r\n    startWaittingCountDown(timeWait) {\r\n        this.timeAutoStart = timeWait;\r\n        this.setTimeWaittingCountDown();\r\n        this.notifyTimeStart.active = true;\r\n        this.unschedule(this.intervalWaitting);\r\n        this.schedule(this.intervalWaitting = () => {\r\n            this.timeAutoStart--;\r\n            this.setTimeWaittingCountDown();\r\n            if (this.timeAutoStart < 1) {\r\n                this.unschedule(this.intervalWaitting);\r\n                this.notifyTimeStart.active = false;\r\n            }\r\n        }, 1)\r\n    }\r\n\r\n    setTimeWaittingCountDown() {\r\n        this.seconds = Math.floor(this.timeAutoStart % 60);\r\n        this.notifyTimeStart.getComponent(cc.Label).string = \" Bắt đầu sau : \" + this.seconds + \"s \";\r\n    }\r\n\r\n    // Time End\r\n    startEndCountDown(timeWait) {\r\n        this.timeEnd = timeWait;\r\n        this.setTimeEndCountDown();\r\n        this.notifyTimeEnd.active = true;\r\n        this.unschedule(this.intervalEnd);\r\n        this.schedule(this.intervalEnd = () => {\r\n            this.timeEnd--;\r\n            this.setTimeEndCountDown();\r\n            if (this.timeEnd < 1) {\r\n                this.unschedule(this.intervalEnd);\r\n                this.notifyTimeEnd.active = false;\r\n            }\r\n        }, 1)\r\n    }\r\n\r\n    setTimeEndCountDown() {\r\n        this.seconds = Math.floor(this.timeEnd % 60);\r\n        this.notifyTimeEnd.getComponent(cc.Label).string = \" Kết thúc sau : \" + this.seconds + \"s \";\r\n    }\r\n\r\n    // Time Bet\r\n    startBettingCountDown(turnTime) {\r\n        //  cc.log(\"BaiCao startBettingCountDown turnTime : \", turnTime);\r\n        this.timeBet = turnTime;\r\n        this.actionBetting.active = true;\r\n        this.processBetting(1);\r\n        this.unschedule(this.intervalBetting);\r\n        this.schedule(this.intervalBetting = () => {\r\n            this.timeBet--;\r\n            var rate = (this.timeBet / turnTime).toFixed(1);\r\n            this.processBetting(rate);\r\n            if (this.timeBet < 1) {\r\n                this.unschedule(this.intervalBetting);\r\n                this.actionBetting.active = false;\r\n            }\r\n        }, 1);\r\n    }\r\n\r\n    processBetting(rate) {\r\n        //  cc.log(\"BaiCao processBetting rate : \", rate);\r\n        //  cc.log(\"BaiCao processBetting fillRange : \", this.actionBetting.children[0].getComponent(cc.Sprite).fillRange);\r\n        this.actionBetting.children[0].getComponent(cc.Sprite).fillRange = rate;\r\n    }\r\n\r\n    getCardsScore(arrCards) {\r\n        let score = 0;\r\n        //  cc.log(\"BaiCao getCardsScore -------------------------------------\");\r\n        //  cc.log(\"BaiCao getCardsScore arrCards : \", arrCards);\r\n        for (let a = 0; a < 3; a++) {\r\n            score += CardUtils.getDiemById(arrCards[a]);\r\n            //  cc.log(\"BaiCao getCardsScore ------------------------------------- : \", a);\r\n            //  cc.log(\"BaiCao getCardsScore getSoById : \", CardUtils.getSoById(arrCards[a]));\r\n            //  cc.log(\"BaiCao getCardsScore getDiemById : \", CardUtils.getDiemById(arrCards[a]));\r\n        }\r\n        score = score % 10;\r\n        return score;\r\n    }\r\n\r\n    // Open Me Card\r\n    openMeCard(event, itemId) {\r\n        // Open Me cards\r\n        let cardPos = parseInt(itemId);\r\n        //  cc.log(\"BaiCao openMeCard cardPos : \", cardPos);\r\n        //  cc.log(\"BaiCao openMeCard currentCard : \", this.currentCard);\r\n\r\n        this.getPlayerHouse(0).prepareCardReal(cardPos);\r\n        let spriteCardId = CardUtils.getNormalId(this.currentCard[cardPos]);\r\n        this.getPlayerHouse(0).transformToCardReal(cardPos, this.spriteCards[spriteCardId]);\r\n\r\n        this.numCardOpened += 1;\r\n        if (this.numCardOpened == 3) {\r\n            this.btnOpenCard.active = true;\r\n            this.btnBet.active = false;\r\n\r\n            this.getPlayerHouse(0).showCardName(this.getCardsScore(this.currentCard) + \" Điểm\");\r\n\r\n            setTimeout(() => {\r\n                this.getPlayerHouse(0).resetCardReady();\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    moveChipsToHubNow(index) {\r\n        this.hubChips.children[2 * index].position = cc.v2(25, 80);\r\n        this.hubChips.children[2 * index].scale = 0;\r\n        this.hubChips.children[(2 * index) + 1].position = cc.v2(25, 80);\r\n        this.hubChips.children[(2 * index) + 1].scale = 0;\r\n    }\r\n\r\n    fxMoveChips(chips, delay, toX, toY) {\r\n        chips.runAction(\r\n            cc.sequence(\r\n                cc.delayTime(delay),\r\n                cc.scaleTo(0, 1, 1),\r\n                cc.spawn(\r\n                    cc.moveTo(0.8, toX, toY),\r\n                    cc.scaleTo(0.8, 0, 0)\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    resetHubChips() {\r\n        var arrFromX = [70, 280, 280, 260, 100, -260, -375, -360];\r\n        var arrFromY = [-195, -150, -55, 70, 90, 85, -30, -155];\r\n\r\n        for (let index = 0; index < 8; index++) {\r\n            this.hubChips.children[2 * index].position = cc.v2(arrFromX[index], arrFromY[index]);\r\n            this.hubChips.children[(2 * index) + 1].position = cc.v2(arrFromX[index], arrFromY[index]);\r\n        }\r\n\r\n        for (let index = 0; index < 16; index++) {\r\n            this.hubChips.children[index].active = false;\r\n        }\r\n    }\r\n\r\n    setupBet() {\r\n        // arrBetValue\r\n        this.currentBetSelectedIndex = 0;\r\n        this.betChooseValueTarget.y = this.arrBetPos[this.currentBetSelectedIndex];\r\n    }\r\n\r\n    // match result\r\n    showPopupMatchResult(data) {\r\n        this.popupMatchResult.active = true;\r\n        this.contentMatchResult.removeAllChildren(true);\r\n        for (let index = 0; index < data.length; index++) {\r\n            let item = cc.instantiate(this.prefabItemResult);\r\n            item.getComponent(\"BaiCao.ItemResult\").initItem(data[index]);\r\n            this.contentMatchResult.addChild(item);\r\n        }\r\n        this.scrollMatchResult.scrollToTop(0.2);\r\n    }\r\n\r\n    closePopupMatchResult() {\r\n        this.popupMatchResult.active = false;\r\n    }\r\n\r\n    // addListener\r\n    setupListener() {\r\n        BaiCaoNetworkClient.getInstance().addListener((data) => {\r\n            let inpacket = new InPacket(data);\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.LOGIN:\r\n                    App.instance.showLoading(false);\r\n                    this.refeshListRoom();\r\n                    BaiCaoNetworkClient.getInstance().send(new cmd.CmdReconnectRoom());\r\n                    break;\r\n                case cmd.Code.TOPSERVER:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        //  cc.log(\"BaiCao TOPSERVER\");\r\n                    }\r\n                    break;\r\n                case cmd.Code.CMD_PINGPONG:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        //  cc.log(\"BaiCao CMD_PINGPONG\");\r\n                    }\r\n                    break;\r\n                case cmd.Code.CMD_JOIN_ROOM:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        //  cc.log(\"BaiCao CMD_JOIN_ROOM\");\r\n                    }\r\n                    break;\r\n                case cmd.Code.CMD_RECONNECT_ROOM:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        //  cc.log(\"BaiCao CMD_RECONNECT_ROOM\");\r\n                    }\r\n                    break;\r\n                case cmd.Code.CMD_RECONNECT_ROOM:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        //  cc.log(\"BaiCao CMD_RECONNECT_ROOM\");\r\n                    }\r\n                    break;\r\n                case cmd.Code.MONEY_BET_CONFIG:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        //  cc.log(\"BaiCao MONEY_BET_CONFIG\");\r\n                    }\r\n                    break;\r\n                case cmd.Code.JOIN_ROOM_FAIL:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedJoinRoomFail(data);\r\n                        //  cc.log(\"BaiCao JOIN_ROOM_FAIL res : \", JSON.stringify(res));\r\n                        let msg = \"Lỗi \" + res.getError() + \", không xác định.\";\r\n                        switch (res.getError()) {\r\n                            case 1:\r\n                                msg = \"Lỗi kiểm tra thông tin!\";\r\n                                break;\r\n                            case 2:\r\n                                msg = \"Không tìm được phòng thích hợp. Vui lòng thử lại sau!\";\r\n                                break;\r\n                            case 3:\r\n                                msg = \"Bạn không đủ tiền vào phòng chơi này!\";\r\n                                break;\r\n                            case 4:\r\n                                msg = \"Không tìm được phòng thích hợp. Vui lòng thử lại sau!\";\r\n                                break;\r\n                            case 5:\r\n                                msg = \"Mỗi lần vào phòng phải cách nhau 10 giây!\";\r\n                                break;\r\n                            case 6:\r\n                                msg = \"Hệ thống bảo trì!\";\r\n                                break;\r\n                            case 7:\r\n                                msg = \"Không tìm thấy phòng chơi!\";\r\n                                break;\r\n                            case 8:\r\n                                msg = \"Mật khẩu phòng chơi không đúng!\";\r\n                                break;\r\n                            case 9:\r\n                                msg = \"Phòng chơi đã đủ người!\";\r\n                                break;\r\n                            case 10:\r\n                                msg = \"Bạn bị chủ phòng không cho vào bàn!\"\r\n                        }\r\n                        App.instance.alertDialog.showMsg(msg);\r\n                    }\r\n                    break;\r\n                case cmd.Code.GET_LIST_ROOM:\r\n                    {\r\n                        let res = new cmd.ReceivedGetListRoom(data);\r\n                        //  cc.log(res);\r\n                        for (let i = 0; i < res.list.length; i++) {\r\n                            let itemData = res.list[i];\r\n                            let item = cc.instantiate(this.prefabItemRoom);\r\n                            item.getComponent(\"BaiCao.ItemRoom\").initItem(itemData);\r\n                            this.contentListRooms.addChild(item);\r\n                        }\r\n                        this.scrollListRoom.scrollToTop(0.2);\r\n                    }\r\n                    break;\r\n                case cmd.Code.JOIN_GAME_ROOM_BY_ID:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        //  cc.log(\"BaiCao JOIN_GAME_ROOM_BY_ID\");\r\n                    }\r\n                    break;\r\n\r\n                // ------------------------ Game ---------------------------     \r\n                case cmd.Code.MO_BAI:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedMoBai(data);\r\n                        //  cc.log(\"BaiCao ReceivedMoBai res : \", JSON.stringify(res));\r\n                        // {\r\n                        // \"chairMoBai\": 0,\r\n                        // \"cardSize\": 3,\r\n                        // \"cards\": [\r\n                        //   19,\r\n                        //   17,\r\n                        //   32\r\n                        // ]\r\n                        // }\r\n\r\n                        let chairMoBai = res[\"chairMoBai\"];\r\n                        let cards = res[\"cards\"];\r\n\r\n                        let seatId = this.findPlayerSeatByPos(chairMoBai);\r\n                        if (seatId != -1 && seatId != 0) {\r\n                            this.getPlayerHouse(seatId).prepareToTransform();\r\n\r\n                            for (let a = 0; a < 3; a++) {\r\n                                let spriteCardId = CardUtils.getNormalId(cards[a]);\r\n                                this.getPlayerHouse(seatId).transformToCardReal(a, this.spriteCards[spriteCardId]);\r\n                            }\r\n                            this.getPlayerHouse(seatId).showCardName(this.getCardsScore(cards) + \" Điểm\");\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case cmd.Code.BAT_DAU:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        //  cc.log(\"BaiCao BAT_DAU\");\r\n                        let res = new cmd.ReceivedFirstTurnDecision(data);\r\n                        //  cc.log(\"BaiCao ReceivedFirstTurnDecision res : \", JSON.stringify(res));\r\n\r\n                        this.resetHubChips();\r\n\r\n                        this.closePopupMatchResult();\r\n                    }\r\n                    break;\r\n                case cmd.Code.KET_THUC:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedEndGame(data);\r\n                        //  cc.log(\"BaiCao ReceivedEndGame res : \", JSON.stringify(res));\r\n\r\n                        // {\r\n                        //     \"statusList\": [3, 3, 0, 0, 0, 0, 0, 0],\r\n                        //     \"cardList\": [\r\n                        //         [6, 23, 21],\r\n                        //         [11, 25, 28],\r\n                        //         [],\r\n                        //         [],\r\n                        //         [],\r\n                        //         [],\r\n                        //         [],\r\n                        //         []\r\n                        //     ],\r\n                        //     \"tienThangChuong\": -20000,\r\n                        //     \"tienThangGa\": 0,\r\n                        //     \"keCuaMoneyList\": [0, 0, 0, 0, 0, 0, 0, 0],\r\n                        //     \"danhBienMoneyList\": [0, 0, 0, 0, 0, 0, 0, 0],\r\n                        //     \"tongTienCuoiVan\": -20000,\r\n                        //     \"tongTienCuocList\": [-20000, 20000, 0, 0, 0, 0, 0, 0],\r\n                        //     \"tongDanhBienList\": [0, 0, 0, 0, 0, 0, 0, 0],\r\n                        //     \"tongKeCuaList\": [0, 0, 0, 0, 0, 0, 0, 0],\r\n                        //     \"tongCuocGaList\": [0, 0, 0, 0, 0, 0, 0, 0],\r\n                        //     \"tongCuoiVanList\": [-20000, 19600, 0, 0, 0, 0, 0, 0],\r\n                        //     \"currentMoneyList\": [4643704, 411662, 0, 0, 0, 0, 0, 0],\r\n                        //     \"timeEndGame\": 12\r\n                        // }\r\n\r\n                        this.unschedule(this.intervalEnd);\r\n                        this.notifyTimeEnd.active = false;\r\n\r\n                        // // Mo het cac la bai neu no chua dc mo\r\n                        // if (!this.isBtnOpenCardShowed && !configPlayer[0].isViewer) {\r\n                        //     let cardReady = this.getPlayerHouse(0).node.children[2].children[0];\r\n                        //     for (let index = 0; index < 3; index++) {\r\n                        //         if (cardReady.children[index].scale == 1) {\r\n                        //             let spriteCardId = CardUtils.getNormalId(this.currentCard[index]);\r\n                        //             this.getPlayerHouse(0).transformToCardReal(index, this.spriteCards[spriteCardId]);\r\n                        //         }\r\n                        //     }\r\n                        // }\r\n\r\n\r\n\r\n                        // \r\n                        let cardList = res[\"cardList\"];\r\n                        let tienThangChuong = res[\"tienThangChuong\"];\r\n                        let tienThangGa = res[\"tienThangGa\"];\r\n                        let keCuaMoneyList = res[\"keCuaMoneyList\"];\r\n                        let danhBienMoneyList = res[\"danhBienMoneyList\"];\r\n                        let tongTienCuoiVan = res[\"tongTienCuoiVan\"];\r\n                        let tongTienCuocList = res[\"tongTienCuocList\"];\r\n                        let tongDanhBienList = res[\"tongDanhBienList\"];\r\n                        let tongKeCuaList = res[\"tongKeCuaList\"];\r\n                        let tongCuocGaList = res[\"tongCuocGaList\"];\r\n                        let tongCuoiVanList = res[\"tongCuoiVanList\"];\r\n                        let currentMoneyList = res[\"currentMoneyList\"];\r\n                        let timeEndGame = res[\"timeEndGame\"];\r\n\r\n                        let posPlaying = [];\r\n                        for (let index = 0; index < 8; index++) {\r\n                            if (cardList[index].length > 0) {\r\n                                posPlaying.push(index);\r\n                            }\r\n                        }\r\n                        //  cc.log(\"BaiCao ReceivedEndGame posPlaying : \", posPlaying);\r\n\r\n                        let result = [];\r\n                        for (let index = 0; index < 8; index++) {\r\n                            let findId = posPlaying.indexOf(configPlayer[index].playerPos);\r\n                            if (findId !== -1) {\r\n                                //  cc.log(\"--------------------------------\");\r\n                                //  cc.log(\"playerId : \", configPlayer[index].playerId);\r\n                                //  cc.log(\"bet : \", tongTienCuocList[posPlaying[findId]]);\r\n                                //  cc.log(\"bien : \", tongDanhBienList[posPlaying[findId]]);\r\n                                //  cc.log(\"ke : \", tongKeCuaList[posPlaying[findId]]);\r\n                                //  cc.log(\"ga : \", tongCuocGaList[posPlaying[findId]]);\r\n                                //  cc.log(\"total : \", tongCuoiVanList[posPlaying[findId]]);\r\n                                //  cc.log(\"money : \", currentMoneyList[posPlaying[findId]]);\r\n\r\n                                let cards = cardList[posPlaying[findId]];\r\n                                let cardReady = this.getPlayerHouse(index).node.children[2].children[0];\r\n\r\n                                for (let a = 0; a < 3; a++) {\r\n                                    if (cardReady.children[a].scale == 1) {\r\n                                        let spriteCardId = CardUtils.getNormalId(cards[a]);\r\n                                        this.getPlayerHouse(index).transformToCardReal(a, this.spriteCards[spriteCardId]);\r\n                                    }\r\n                                }\r\n\r\n                                this.getPlayerHouse(index).showCardName(this.getCardsScore(cards) + \" Điểm\");\r\n\r\n                                result.push({\r\n                                    userName: configPlayer[index].playerId,\r\n                                    bet: tongTienCuocList[posPlaying[findId]],\r\n                                    bien: tongDanhBienList[posPlaying[findId]],\r\n                                    ke: tongKeCuaList[posPlaying[findId]],\r\n                                    ga: tongCuocGaList[posPlaying[findId]],\r\n                                    total: tongCuoiVanList[posPlaying[findId]]\r\n                                });\r\n\r\n                                let info = {\r\n                                    moneyChange: tongCuoiVanList[posPlaying[findId]],\r\n                                    money: currentMoneyList[posPlaying[findId]],\r\n                                    ga: tongCuocGaList[posPlaying[findId]],\r\n                                }\r\n\r\n                                if (index == 0) {\r\n                                    Configs.Login.Coin = info.money;\r\n                                    BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                }\r\n\r\n                                if (info.moneyChange >= 0) {\r\n                                    // Win\r\n                                    this.getPlayerHouse(index).fxWin(info);\r\n                                } else {\r\n                                    // Lose\r\n                                    this.getPlayerHouse(index).fxLose(info);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (result.length > 0) {\r\n                            setTimeout(() => {\r\n                                this.showPopupMatchResult(result);\r\n                            }, 4000);\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case cmd.Code.YEU_CAU_DANH_BIEN:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedYeuCauDanhBien(data);\r\n                        //  cc.log(\"BaiCao ReceivedYeuCauDanhBien res : \", JSON.stringify(res));\r\n                        let danhBienChair = res[\"danhBienChair\"];\r\n                        let level = res[\"level\"];\r\n\r\n                        let isExist = this.arrPosDanhBien.indexOf(danhBienChair);\r\n                        if (isExist > -1) {\r\n                            // Da chap nhan danh bien cua A thi k dc gui yeu cau danh bien lai\r\n                            // Vi se bi hien lai popup request chu' A lai k thay : hoi loi~\r\n                        } else {\r\n                            let value = this.currentRoomBet * level;\r\n                            let seatId = this.findPlayerSeatByPos(danhBienChair);\r\n                            if (seatId != -1) {\r\n                                this.getPlayerHouse(seatId).showPopupRequestDanhBien(value);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case cmd.Code.CHIA_BAI:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedChiaBai(data);\r\n                        //  cc.log(\"BaiCao ReceivedChiaBai res : \", JSON.stringify(res));\r\n                        // {\r\n                        //     \"cardSize\": 3,\r\n                        //     \"cards\": [\r\n                        //       17,\r\n                        //       28,\r\n                        //       33\r\n                        //     ],\r\n                        //     \"gameId\": 1567389,\r\n                        //     \"timeChiaBai\": 20\r\n                        //   }\r\n\r\n                        this.btnBet.active = false;\r\n                        this.btnOpenCard.active = false;\r\n\r\n                        for (let index = 1; index < 8; index++) {\r\n                            this.getPlayerHouse(index).showPopupBet(false);\r\n                            this.getPlayerHouse(index).closePopupRequestDanhBien();\r\n                        }\r\n\r\n                        this.matchPot.getComponent(cc.Button).interactable = false;\r\n                        this.matchPot.children[0].color = cc.Color.GRAY;\r\n\r\n                        let cards = res[\"cards\"];\r\n                        let timeChiaBai = res[\"timeChiaBai\"];\r\n\r\n                        clearTimeout(this.timeoutEndGame);\r\n                        this.timeoutEndGame = setTimeout(() => {\r\n                            this.startEndCountDown(timeChiaBai);\r\n                        }, 2000);\r\n\r\n                        this.currentCard = cards;\r\n                        //  cc.log(\"BaiCao ReceivedChiaBai currentCard : \", this.currentCard);\r\n\r\n                        var arrSeatExist = this.getNumPlayers();\r\n                        let numPlayer = arrSeatExist.length;\r\n\r\n                        // Open | Hide cards not use\r\n                        for (let index = 0; index < 8 * 3; index++) { // 8 players * 3 cards\r\n                            this.cardsDeal.children[index].active = index >= numPlayer * 3 ? false : true;\r\n                            this.cardsDeal.children[index].position = cc.v2(0, 0);\r\n                        }\r\n\r\n                        let timeShip = 0.1; // 0.15\r\n                        // Move Cards used to each player joined\r\n                        for (let a = 0; a < 3; a++) { // players x 3 cards\r\n                            for (let b = 0; b < numPlayer; b++) {\r\n                                let seatId = arrSeatExist[b];\r\n                                if (seatId !== -1) {\r\n                                    let card4Me = this.cardsDeal.children[(a * numPlayer) + b];\r\n                                    let rawPlayerPos = this.groupPlayers.children[seatId].position;\r\n                                    //  cc.log(\"BaiCao CHIA_BAI delayTime : \", ((a * numPlayer) + b) * timeShip);\r\n                                    card4Me.runAction(\r\n                                        cc.sequence(\r\n                                            cc.delayTime(((a * numPlayer) + b) * timeShip),\r\n                                            cc.moveTo(0.2, rawPlayerPos)\r\n                                        )\r\n                                    );\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let delayOver2Under = 0.2;\r\n                        var maxDelay = ((2 * numPlayer) + (numPlayer - 1)) * timeShip; // ((a * numPlayer) + b) * timeShip\r\n                        let timeUnderLayer = (maxDelay + 0.2 + delayOver2Under) * 1000;\r\n                        //  cc.log(\"CHIA_BAI timeUnderLayer : \", timeUnderLayer);\r\n                        clearTimeout(this.timeoutChiaBaiDone);\r\n                        this.timeoutChiaBaiDone = setTimeout(() => {\r\n                            for (let index = 0; index < 8 * 3; index++) { // 8 players * 3 cards\r\n                                //  cc.log(\"CHIA_BAI cardsDeal index : \", index);\r\n                                this.cardsDeal.children[index].active = false;\r\n                            }\r\n\r\n                            for (let index = 0; index < numPlayer; index++) {\r\n                                let seatId = arrSeatExist[index];\r\n                                if (seatId !== -1) {\r\n                                    // Drop layer\r\n                                    if (seatId == 0) {\r\n                                        this.getPlayerHouse(seatId).resetCardReady();\r\n                                    }\r\n                                    this.getPlayerHouse(seatId).showCardReady(true);\r\n                                    this.getPlayerHouse(seatId).showCardReal(false);\r\n                                }\r\n                            }\r\n                        }, timeUnderLayer);\r\n                    }\r\n                    break;\r\n                case cmd.Code.KE_CUA:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedKeCua(data);\r\n                        //  cc.log(\"BaiCao ReceivedKeCua res : \", JSON.stringify(res));\r\n                        // {\r\n                        //     \"chairKeCuaFrom\": 5,\r\n                        //     \"chairKeCuaTo\": 0,\r\n                        //     \"level\": 2\r\n                        //   }\r\n\r\n                        let chairKeCuaFrom = res[\"chairKeCuaFrom\"];\r\n                        let chairKeCuaTo = res[\"chairKeCuaTo\"];\r\n                        let level = res[\"level\"];\r\n                    }\r\n                    break;\r\n                case cmd.Code.TU_DONG_BAT_DAU:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedAutoStart(data);\r\n                        //  cc.log(\"BaiCao ReceiveAutoStart res : \", JSON.stringify(res));\r\n                        // {\r\n                        //     \"isAutoStart\": true,\r\n                        //     \"timeAutoStart\": 5\r\n                        // }\r\n                        if (res.isAutoStart) {\r\n                            this.resetHubChips();\r\n                            this.startWaittingCountDown(res.timeAutoStart);\r\n                            this.btnBet.active = false;\r\n                            this.btnOpenCard.active = false;\r\n\r\n                            this.matchPot.active = false;\r\n                            this.matchPot.getComponent(cc.Button).interactable = true;\r\n                            this.matchPot.children[0].color = cc.Color.WHITE;\r\n\r\n                            this.resetPlayersPlaying();\r\n                            this.arrPosDanhBien = [];\r\n                        }\r\n                        this.closePopupMatchResult();\r\n                    }\r\n                    break;\r\n                case cmd.Code.DONG_Y_DANH_BIEN:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedChapNhanDanhBien(data);\r\n                        //  cc.log(\"BaiCao ReceivedChapNhanDanhBien res : \", JSON.stringify(res));\r\n                        let danhBienChair = res[\"danhBienChair\"];\r\n                        let level = res[\"level\"];\r\n                        this.arrPosDanhBien.push(danhBienChair);\r\n                        let seatId = this.findPlayerSeatByPos(danhBienChair);\r\n                        if (seatId != -1) {\r\n                            //  cc.log(\"BaiCao ReceivedChapNhanDanhBien Me seatId : 0\");\r\n                            //  cc.log(\"BaiCao ReceivedChapNhanDanhBien Bien seatId : \", seatId);\r\n                            this.getPlayerHouse(seatId).disableDanhBien(level);\r\n                            this.getPlayerHouse(seatId).playFxDanhBien();\r\n                        }\r\n                    }\r\n                    break;\r\n                case cmd.Code.DAT_CUOC:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedDatCuoc(data);\r\n                        //  cc.log(\"BaiCao ReceivedDatCuoc res : \", JSON.stringify(res));\r\n                        // {\r\n                        //     \"chairDatCuoc\": 1,\r\n                        //     \"level\": 2\r\n                        //   }\r\n\r\n                        let chairDatCuoc = res[\"chairDatCuoc\"];\r\n                        let level = res[\"level\"];\r\n\r\n                        let seatId = this.findPlayerSeatByPos(chairDatCuoc);\r\n                        if (seatId != -1) {\r\n                            this.getPlayerHouse(seatId).setBet(this.arrBetValue[level - 1]);\r\n                            this.getPlayerHouse(seatId).addChips();\r\n                        }\r\n                    }\r\n                    break;\r\n                case cmd.Code.THONG_TIN_BAN_CHOI:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedGameInfo(data);\r\n                        //  cc.log(\"BaiCao ReceivedGameInfo res : \", JSON.stringify(res));\r\n\r\n                        // case Reconnect\r\n                        // user dang o trong 1 phong nao do\r\n                        // neu req join room nhan dc cai nay thi -> dua vao phong dang choi\r\n\r\n                        // {\r\n                        //     \"myChair\": 3,\r\n                        //     \"chuongChair\": 4,\r\n                        //     \"cards\": [22, 34, 32],\r\n                        //     \"cuocDanhBienList\": [0, 0, 0, 0, 0, 0, 0, 0],\r\n                        //     \"cuocKeCuaList\": [0, 0, 0, 0, 0, 0, 0, 0],\r\n                        //     \"gameServerState\": 1,\r\n                        //     \"isAutoStart\": true,\r\n                        //     \"gameAction\": 2,\r\n                        //     \"countDownTime\": 13,\r\n                        //     \"moneyType\": 1,\r\n                        //     \"moneyBet\": 100,\r\n                        //     \"gameId\": 1828082,\r\n                        //     \"roomId\": 98,\r\n                        //     \"hasInfo\": [true, true, true, true, true, false, false, false],\r\n                        //     \"players\": [[], [], [], [], [], [], [], []]\r\n                        // }\r\n\r\n                        this.closeUIRoom();\r\n                        this.showUIPlaying();\r\n                        this.closePopupMatchResult();\r\n                        this.closeUIChat();\r\n\r\n                        let myChair = res[\"myChair\"];\r\n                        let chuongChair = res[\"chuongChair\"];\r\n                        let cards = res[\"cards\"];\r\n                        let cuocDanhBienList = res[\"cuocDanhBienList\"];\r\n                        let cuocKeCuaList = res[\"cuocKeCuaList\"];\r\n                        let gameServerState = res[\"gameServerState\"];\r\n                        let isAutoStart = res[\"isAutoStart\"];\r\n                        let gameAction = res[\"gameAction\"];\r\n                        let countDownTime = res[\"countDownTime\"];\r\n                        let moneyType = res[\"moneyType\"];\r\n                        let moneyBet = res[\"moneyBet\"];\r\n                        let gameId = res[\"gameId\"];\r\n                        let roomId = res[\"roomId\"];\r\n                        let hasInfo = res[\"hasInfo\"];\r\n                        let players = res[\"players\"];\r\n\r\n                        this.labelRoomId.string = \"BÀI CÀO - PHÒNG: \" + roomId;\r\n                        this.labelRoomBet.string = \"MỨC CƯỢC: \" + Utils.formatNumber(moneyBet) + \"$\";\r\n\r\n                        this.currentRoomBet = moneyBet;\r\n                        this.gameState = gameAction;\r\n\r\n                        this.currentCard = cards;\r\n\r\n                        configPlayer[0].playerId = Configs.Login.Nickname;\r\n                        configPlayer[0].playerPos = myChair;\r\n                        //  cc.log(\"BaiCao setupMatch configPlayer Me : \", configPlayer[0]);\r\n                        //  cc.log(\"BaiCao setupMatch configPlayer  : \", configPlayer);\r\n\r\n                        var numPlayers = 0;\r\n                        var arrPlayerPosExist = [];\r\n\r\n                        for (let index = 0; index < hasInfo.length; index++) {\r\n                            if (hasInfo[index]) {\r\n                                numPlayers += 1;\r\n                                arrPlayerPosExist.push(index);\r\n                            }\r\n                        }\r\n                        //  cc.log(\"BaiCao numPlayers : \", numPlayers);\r\n\r\n                        // setup configPlayer\r\n                        for (let a = 0; a < configPlayer.length; a++) {\r\n                            configPlayer[a].playerPos = defaultPlayerPos[myChair][a];\r\n                        }\r\n\r\n                        // set State of Seat : Yes | No exist Player\r\n                        for (let index = 0; index < configPlayer.length; index++) {\r\n                            let findPos = arrPlayerPosExist.indexOf(configPlayer[index].playerPos);\r\n\r\n                            var seatId = configPlayer[index].seatId;\r\n                            this.getPlayerHouse(seatId).resetPlayerInfo();\r\n\r\n                            if (findPos > -1) {\r\n                                // Exist player -> Set Player Info\r\n\r\n                                // dang thieu thong tin -> se k hien dc UserInfo\r\n\r\n                                // if (arrPlayerStatus[findPos] == cmd.Code.PLAYER_STATUS_READY) {\r\n                                //     configPlayer[index].isViewer = false;\r\n                                //     this.getPlayerHouse(seatId).setIsViewer(false);\r\n                                // } else {\r\n                                //     configPlayer[index].isViewer = true;\r\n                                //     this.getPlayerHouse(seatId).setIsViewer(true);\r\n                                // }\r\n\r\n                                this.getPlayerHouse(seatId).setIsViewer(false);\r\n                                this.setupSeatPlayer(seatId, {\r\n                                    nickName: \"\",\r\n                                    avatar: Utils.randomRange(1, 9),\r\n                                    money: \"\"\r\n                                });\r\n                            } else {\r\n                                // Not Exist player  -> Active Btn Add player\r\n                                this.getPlayerHouse(seatId).showBtnInvite(true);\r\n                                configPlayer[index].isViewer = true;\r\n                            }\r\n                        }\r\n\r\n                        for (let index = 0; index < 8; index++) {\r\n                            this.getPlayerHouse(index).setOwner(false);\r\n                        }\r\n                        let seatOwner = this.findPlayerSeatByPos(chuongChair);\r\n                        if (seatOwner !== -1) {\r\n                            this.getPlayerHouse(seatOwner).setOwner(true);\r\n                            this.seatOwner = seatOwner;\r\n                        }\r\n\r\n                        this.resetHubChips();\r\n                    }\r\n                    break;\r\n                case cmd.Code.DANG_KY_THOAT_PHONG:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedNotifyRegOutRoom(data);\r\n                        //  cc.log(\"BaiCao ReceivedNotifyRegOutRoom res : \", JSON.stringify(res));\r\n                        // {\r\n                        //     \"outChair\": 1,\r\n                        //     \"isOutRoom\": true\r\n                        //   }\r\n\r\n                        let outChair = res[\"outChair\"];\r\n                        let isOutRoom = res[\"isOutRoom\"];\r\n\r\n                        let seatId = this.findPlayerSeatByPos(outChair);\r\n                        if (seatId !== -1) {\r\n                            if (isOutRoom) {\r\n                                this.getPlayerHouse(seatId).showNotify(\"Sắp rời bàn !\");\r\n                            } else {\r\n                                this.getPlayerHouse(seatId).showNotify(\"Khô Máu !\");\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case cmd.Code.VAO_GA:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedVaoGa(data);\r\n                        //  cc.log(\"BaiCao ReceivedVaoGa res : \", JSON.stringify(res));\r\n                        // {\r\n                        //     \"chair\": 3,\r\n                        //     \"chicKenBet\": 300\r\n                        //   }\r\n\r\n                        let chair = res[\"chair\"];\r\n                        let chicKenBet = res[\"chicKenBet\"];\r\n\r\n                        let seatId = this.findPlayerSeatByPos(chair);\r\n                        if (seatId != -1) {\r\n                            this.hubChips.children[2 * seatId].active = true;\r\n                            this.hubChips.children[(2 * seatId) + 1].active = true;\r\n                            this.fxMoveChips(this.hubChips.children[2 * seatId], 0.1, this.matchPot.x, this.matchPot.y);\r\n                            this.fxMoveChips(this.hubChips.children[(2 * seatId) + 1], 0.2, this.matchPot.x, this.matchPot.y);\r\n\r\n                            // Can cong luy ke len\r\n                            this.currentMatchPotValue += chicKenBet;\r\n                            this.labelMatchPot.string = Utils.formatNumber(this.currentMatchPotValue);\r\n                            this.getPlayerHouse(seatId).playFxVaoGa();\r\n                        }\r\n                    }\r\n                    break;\r\n                case cmd.Code.DOI_CHUONG:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedDoiChuong(data);\r\n                        //  cc.log(\"BaiCao ReceivedDoiChuong res : \", JSON.stringify(res));\r\n                        // {\r\n                        //     \"chuongChair\": 2\r\n                        //   }\r\n\r\n\r\n                        for (let index = 0; index < 8; index++) {\r\n                            this.getPlayerHouse(index).setOwner(false);\r\n                        }\r\n\r\n                        let seatId = this.findPlayerSeatByPos(res[\"chuongChair\"]);\r\n                        if (seatId != -1) {\r\n                            this.getPlayerHouse(seatId).setOwner(true);\r\n                            this.seatOwner = seatId;\r\n                        }\r\n                    }\r\n                    break;\r\n                case cmd.Code.MOI_DAT_CUOC:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedMoiDatCuoc(data);\r\n                        //  cc.log(\"BaiCao ReceivedMoiDatCuoc res : \", JSON.stringify(res));\r\n                        // {\r\n                        //     \"timeDatCuoc\": 20\r\n                        //   }\r\n                        this.startBettingCountDown(res.timeDatCuoc);\r\n                        this.arrBetValue = [];\r\n                        this.matchPot.active = true;\r\n                        this.currentMatchPotValue = 0;\r\n                        this.labelMatchPot.string = \"0\";\r\n\r\n                        for (let index = 0; index < 4; index++) {\r\n                            this.arrBetValue.push(this.currentRoomBet * (index + 1));\r\n                            let raw = this.currentRoomBet * (4 - index);\r\n                            if (raw == 1500) {\r\n                                this.betChooseValue.children[index].children[0].getComponent(cc.Label).string = \"1.5K\";\r\n                            } else {\r\n                                this.betChooseValue.children[index].children[0].getComponent(cc.Label).string = Utils.formatNumberMin(raw);\r\n                            }\r\n                        }\r\n\r\n                        // {\r\n                        //     seatId: 0,\r\n                        //     playerId: -1,\r\n                        //     playerPos: -1,\r\n                        //     isViewer: true\r\n                        // }\r\n\r\n                        if (this.seatOwner == 0) { // Me la Chuong -> K dc bet va k dc vao ga\r\n                            this.btnOpenCard.active = false;\r\n                            this.btnBet.active = false;\r\n                            this.matchPot.getComponent(cc.Button).interactable = false;\r\n                            this.matchPot.children[0].color = cc.Color.GRAY;\r\n                        } else {\r\n                            this.btnBet.active = true;\r\n                            this.btnOpenCard.active = false;\r\n                            this.matchPot.getComponent(cc.Button).interactable = true;\r\n                            this.matchPot.children[0].color = cc.Color.WHITE;\r\n\r\n                            this.setupBet();\r\n\r\n\r\n\r\n                            //  cc.log(\"BaiCao MOI_DAT_CUOC this.arrBetValue : \", this.arrBetValue);\r\n                        }\r\n\r\n                        this.numCardOpened = 0;\r\n                    }\r\n                    break;\r\n                case cmd.Code.CHEAT_CARDS:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        //  cc.log(\"BaiCao CHEAT_CARDS\");\r\n                    }\r\n                    break;\r\n                case cmd.Code.DANG_KY_CHOI_TIEP:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        //  cc.log(\"BaiCao DANG_KY_CHOI_TIEP\");\r\n                    }\r\n                    break;\r\n                case cmd.Code.UPDATE_OWNER_ROOM:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        //  cc.log(\"BaiCao UPDATE_OWNER_ROOM\");\r\n                    }\r\n                    break;\r\n                case cmd.Code.JOIN_ROOM_SUCCESS:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedJoinRoomSucceed(data);\r\n                        this.closeUIRoom();\r\n                        this.setupMatch(res);\r\n                    }\r\n                    break;\r\n                case cmd.Code.LEAVE_GAME:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedUserLeaveRoom(data);\r\n                        //  cc.log(\"BaiCao ReceivedUserLeaveRoom res : \", JSON.stringify(res));\r\n\r\n                        // {\r\n                        //     \"chair\": 1,\r\n                        //     \"nickName\": \"chaoae99\"\r\n                        //   }\r\n\r\n                        let chair = res[\"chair\"];\r\n\r\n                        let seatId = this.findPlayerSeatByPos(chair);\r\n                        if (seatId !== -1) {\r\n                            // Need clear configPlayer\r\n                            for (let index = 0; index < configPlayer.length; index++) {\r\n                                if (configPlayer[index].seatId == seatId) {\r\n                                    configPlayer[index].playerId = -1;\r\n                                    configPlayer[index].isViewer = true;\r\n                                }\r\n                            }\r\n\r\n                            // Change UI\r\n                            this.getPlayerHouse(seatId).resetPlayerInfo();\r\n                            this.getPlayerHouse(seatId).showBtnInvite(true);\r\n\r\n                            let arrSeatExistLast = this.getNumPlayers();\r\n                            if (arrSeatExistLast.length == 1) {\r\n                                this.resetPlayersPlaying();\r\n                                this.matchPot.active = false;\r\n                            }\r\n\r\n                            if (seatId == 0) {\r\n                                // Me leave\r\n                                // Change UI\r\n                                this.UI_Playing.active = false;\r\n                                this.UI_ChooseRoom.active = true;\r\n                                this.refeshListRoom();\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case cmd.Code.NOTIFY_KICK_FROM_ROOM:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedKickOff(data);\r\n                        //  cc.log(\"BaiCao ReceivedKickOff res : \", JSON.stringify(res));\r\n                    }\r\n                    break;\r\n                case cmd.Code.NEW_USER_JOIN:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedUserJoinRoom(data);\r\n                        //  cc.log(\"BaiCao ReceivedUserJoinRoom res : \", JSON.stringify(res));\r\n                        // {\r\n                        //     \"info\": {\r\n                        //       \"nickName\": \"Ahoang88\",\r\n                        //       \"avatar\": \"7\",\r\n                        //       \"money\": 10230080\r\n                        //     },\r\n                        //     \"uChair\": 5,\r\n                        //     \"uStatus\": 1\r\n                        //   }\r\n\r\n                        let info = res[\"info\"];\r\n                        let uChair = res[\"uChair\"];\r\n                        let uStatus = res[\"uStatus\"];\r\n\r\n                        // set State of Seat : Yes | No exist Player\r\n                        for (let index = 0; index < configPlayer.length; index++) {\r\n                            if (configPlayer[index].playerPos == uChair) {\r\n                                // Exist player -> Set Player Info\r\n                                var seatId = configPlayer[index].seatId;\r\n                                this.getPlayerHouse(seatId).resetPlayerInfo();\r\n                                var customPlayerInfo = {\r\n                                    \"avatar\": info[\"avatar\"],\r\n                                    \"nickName\": info[\"nickName\"],\r\n                                    \"money\": info[\"money\"],\r\n                                }\r\n\r\n                                this.setupSeatPlayer(seatId, customPlayerInfo);\r\n\r\n                                if (uStatus == cmd.Code.PLAYER_STATUS_VIEWER) {\r\n                                    this.getPlayerHouse(seatId).setIsViewer(true);\r\n                                    // this.getPlayerHouse(seatId).playFxViewer();\r\n                                    configPlayer[seatId].isViewer = true;\r\n                                } else {\r\n                                    configPlayer[seatId].isViewer = false;\r\n                                    this.getPlayerHouse(seatId).setIsViewer(false);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case cmd.Code.NOTIFY_USER_GET_JACKPOT:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        //  cc.log(\"BaiCao NOTIFY_USER_GET_JACKPOT\");\r\n                    }\r\n                    break;\r\n                case cmd.Code.UPDATE_MATCH:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedUpdateMatch(data);\r\n                        //  cc.log(\"BaiCao ReceivedUpdateMatch res : \", JSON.stringify(res));\r\n                        // {\r\n                        //     \"myChair\": 2,\r\n                        //     \"hasInfo\": [\r\n                        //       true,\r\n                        //       true,\r\n                        //       true,\r\n                        //       true,\r\n                        //       false,\r\n                        //       true,\r\n                        //       false,\r\n                        //       false\r\n                        //     ],\r\n                        //     \"infos\": [\r\n                        //       {\r\n                        //         \"nickName\": \"nestle103\",\r\n                        //         \"avatar\": \"7\",\r\n                        //         \"money\": 5560860,\r\n                        //         \"status\": 2\r\n                        //       },\r\n                        //       {\r\n                        //         \"nickName\": \"imeldda\",\r\n                        //         \"avatar\": \"2\",\r\n                        //         \"money\": 3852854,\r\n                        //         \"status\": 2\r\n                        //       },\r\n                        //       {\r\n                        //         \"nickName\": \"VN_Star1\",\r\n                        //         \"avatar\": \"2\",\r\n                        //         \"money\": 5703572,\r\n                        //         \"status\": 2\r\n                        //       },\r\n                        //       {\r\n                        //         \"nickName\": \"gvngvn4567\",\r\n                        //         \"avatar\": \"2\",\r\n                        //         \"money\": 2749687,\r\n                        //         \"status\": 2\r\n                        //       },\r\n                        //       {},\r\n                        //       {\r\n                        //         \"nickName\": \"skypenon\",\r\n                        //         \"avatar\": \"5\",\r\n                        //         \"money\": 5051363,\r\n                        //         \"status\": 2\r\n                        //       },\r\n                        //       {},\r\n                        //       {}\r\n                        //     ]\r\n                        //   }\r\n\r\n                        let myChair = res[\"myChair\"];\r\n                        let hasInfo = res[\"hasInfo\"];\r\n                        let infos = res[\"infos\"];\r\n\r\n                        //  cc.log(\"BaiCao setupMatch configPlayer : \", configPlayer);\r\n                        // theo Pos khong phai SeatId\r\n                        for (let index = 0; index < hasInfo.length; index++) {\r\n                            let pos = configPlayer[index][\"playerPos\"];\r\n                            if (hasInfo[pos]) {\r\n                                // setGold se inactive isViewer nen dat no len dau de ben duoi config lai\r\n                                this.getPlayerHouse(index).setGold(infos[pos][\"money\"]);\r\n                                configPlayer[index][\"playerId\"] = infos[pos][\"nickName\"];\r\n                                if (infos[pos][\"status\"] == cmd.Code.PLAYER_STATUS_SITTING || infos[pos][\"status\"] == cmd.Code.PLAYER_STATUS_PLAYING) {\r\n                                    configPlayer[index][\"isViewer\"] = false;\r\n                                    this.getPlayerHouse(index).setIsViewer(false);\r\n                                } else {\r\n                                    configPlayer[index][\"isViewer\"] = true;\r\n                                    this.getPlayerHouse(index).setIsViewer(true);\r\n                                }\r\n                                this.setupSeatPlayer(index, infos[pos]);\r\n                            } else {\r\n                                configPlayer[index][\"playerId\"] = -1;\r\n                                configPlayer[index][\"isViewer\"] = true;\r\n                            }\r\n                        }\r\n                        //  cc.log(\"BaiCao setupMatch configPlayer : \", configPlayer);\r\n                    }\r\n                    break;\r\n                case cmd.Code.CHAT_ROOM:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ReceivedChatRoom(data);\r\n                        //  cc.log(\"BaiCao CHAT_ROOM res : \", JSON.stringify(res));\r\n\r\n                        // {\r\n                        //     \"chair\": 0,\r\n                        //     \"isIcon\": true,\r\n                        //     \"content\": \"6\",\r\n                        //     \"nickname\": \"chaoae99\"\r\n                        //   }\r\n\r\n                        // {\r\n                        //     \"chair\": 0,\r\n                        //     \"isIcon\": false,\r\n                        //     \"content\": \"lalal\",\r\n                        //     \"nickname\": \"chaoae99\"\r\n                        //   }\r\n\r\n                        let chair = res[\"chair\"];\r\n                        let isIcon = res[\"isIcon\"];\r\n                        let content = res[\"content\"];\r\n                        if (isIcon) {\r\n                            // Chat Icon\r\n                            let seatId = this.findPlayerSeatByPos(chair);\r\n                            if (seatId != -1) {\r\n                                this.getPlayerHouse(seatId).showChatEmotion(content);\r\n                            }\r\n                        } else {\r\n                            // Chat Msg\r\n                            let seatId = this.findPlayerSeatByPos(chair);\r\n                            if (seatId != -1) {\r\n                                this.getPlayerHouse(seatId).showChatMsg(content);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    //  cc.log(\"--inpacket.getCmdId(): \" + inpacket.getCmdId());\r\n                    break;\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    // request\r\n    actionLeaveRoom() {\r\n        BaiCaoNetworkClient.getInstance().send(new cmd.CmdSendRequestLeaveGame());\r\n    }\r\n\r\n    actionOpenCard() {\r\n        BaiCaoNetworkClient.getInstance().send(new cmd.CmdSendMoBai());\r\n        this.btnOpenCard.active = false;\r\n    }\r\n\r\n    actionSendVaoGa() {\r\n        //  cc.log(\"BaiCao actionSendVaoGa\");\r\n        BaiCaoNetworkClient.getInstance().send(new cmd.SendVaoGa());\r\n        this.matchPot.children[0].color = cc.Color.WHITE;\r\n        this.matchPot.getComponent(cc.Button).interactable = false;\r\n    }\r\n\r\n    actionAcceptDanhBien(event, seatId) {\r\n        //  cc.log(\"BaiCao actionAcceptDanhBien seatId : \", seatId);\r\n        //  cc.log(\"BaiCao actionAcceptDanhBien playerPos : \", configPlayer[seatId].playerPos);\r\n        BaiCaoNetworkClient.getInstance().send(new cmd.CmdSendAcceptDanhBien(configPlayer[seatId].playerPos));\r\n        this.getPlayerHouse(seatId).closePopupRequestDanhBien(false);\r\n    }\r\n\r\n    increaseBetValue() {\r\n        if (this.currentBetSelectedIndex == (this.arrBetValue.length - 1)) {\r\n\r\n        } else {\r\n            this.currentBetSelectedIndex += 1;\r\n        }\r\n\r\n        this.betChooseValueTarget.y = this.arrBetPos[this.currentBetSelectedIndex];\r\n    }\r\n\r\n    decreaseBetValue() {\r\n        if (this.currentBetSelectedIndex == 0) {\r\n\r\n        } else {\r\n            this.currentBetSelectedIndex -= 1;\r\n        }\r\n\r\n        this.betChooseValueTarget.y = this.arrBetPos[this.currentBetSelectedIndex];\r\n    }\r\n\r\n    actionBet() {\r\n        //  cc.log(\"BaiCao actionBet betted : \", this.arrBetValue[this.currentBetSelectedIndex]);\r\n        BaiCaoNetworkClient.getInstance().send(new cmd.CmdSendDatCuoc(this.currentBetSelectedIndex + 1));\r\n        this.btnBet.active = false;\r\n        // set bet default\r\n        for (let index = 0; index < configPlayer.length; index++) {\r\n            if (index !== this.seatOwner\r\n                && !configPlayer[index].isViewer\r\n                && configPlayer[index].playerId !== -1) {\r\n                //  cc.log(\"BaiCao ReceivedMoiDatCuoc index : \", index);\r\n                this.getPlayerHouse(index).setBet(this.currentRoomBet);\r\n                this.getPlayerHouse(index).addChips();\r\n                if (index != 0) { // k ke cua, danh bien duoc len chinh minh\r\n                    this.getPlayerHouse(index).showPopupBet(true);\r\n                    this.getPlayerHouse(index).setupBetValue(this.currentRoomBet);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    actionDanhBien(event, id) {\r\n        //  cc.log(\"BaiCao actionDanhBien id : \", id);\r\n        let seatId = parseInt(id.substring(0, 1));\r\n        let level = parseInt(id.substring(1, 2));\r\n        //  cc.log(\"BaiCao actionDanhBien seatId : \", seatId);\r\n        //  cc.log(\"BaiCao actionDanhBien level : \", level);\r\n        let pos = this.findPlayerPosBySeat(seatId);\r\n        //  cc.log(\"BaiCao actionDanhBien pos : \", pos);\r\n        if (pos != -1) {\r\n            //  cc.log(\"BaiCao actionDanhBien ------------\");\r\n            //  cc.log(\"BaiCao actionDanhBien seatId : \", seatId);\r\n            //  cc.log(\"BaiCao actionDanhBien pos : \", pos);\r\n\r\n            //  cc.log(\"BaiCao actionDanhBien seatId : 0\");\r\n            //  cc.log(\"BaiCao actionDanhBien me : \", configPlayer[0].playerPos);\r\n            //  cc.log(\"BaiCao actionDanhBien ------------\");\r\n            this.getPlayerHouse(seatId).disableDanhBien(level);\r\n            this.getPlayerHouse(seatId).showNotify(\"Đánh biên\");\r\n            BaiCaoNetworkClient.getInstance().send(new cmd.CmdSendDanhBien(pos, level));\r\n        }\r\n    }\r\n\r\n    actionKeCua(event, id) {\r\n        //  cc.log(\"BaiCao actionKeCua id : \", id);\r\n        let seatId = parseInt(id.substring(0, 1));\r\n        let level = parseInt(id.substring(1, 2)) - 2;\r\n        //  cc.log(\"BaiCao actionKeCua seatId : \", seatId);\r\n        //  cc.log(\"BaiCao actionKeCua level : \", level);\r\n        let pos = this.findPlayerPosBySeat(seatId);\r\n        //  cc.log(\"BaiCao actionKeCua pos : \", pos);\r\n        if (pos != -1) {\r\n            this.getPlayerHouse(seatId).disableKeCua(level);\r\n            BaiCaoNetworkClient.getInstance().send(new cmd.CmdSendKeCua(pos, level));\r\n        }\r\n    }\r\n\r\n    // State\r\n    initConfigPlayer() {\r\n        configPlayer = [];\r\n        for (let index = 0; index < 8; index++) {\r\n            configPlayer.push({\r\n                seatId: index,\r\n                playerId: -1,\r\n                playerPos: -1,\r\n                isViewer: true\r\n            });\r\n        }\r\n        //  cc.log(\"BaiCao configPlayer : \", configPlayer);\r\n    }\r\n\r\n    resetPlayersPlaying() {\r\n        for (let index = 0; index < 8; index++) {\r\n            this.getPlayerHouse(index).resetMatchHistory();\r\n        }\r\n    }\r\n\r\n    // handle Game Players\r\n    setupSeatPlayer(seatId, playerInfo) {\r\n        //  cc.log(\"BaiCao setupSeatPlayer playerInfo : \", playerInfo);\r\n        configPlayer[seatId].playerId = playerInfo.nickName;\r\n        this.getPlayerHouse(seatId).setAvatar(playerInfo.avatar);\r\n        this.getPlayerHouse(seatId).setName(playerInfo.nickName);\r\n        this.getPlayerHouse(seatId).setGold(playerInfo.money);\r\n    }\r\n\r\n    findPlayerSeatByUid(uid) {\r\n        let seat = -1;\r\n        for (let index = 0; index < configPlayer.length; index++) {\r\n            if (configPlayer[index].playerId === uid) {\r\n                seat = configPlayer[index].seatId;\r\n            }\r\n        }\r\n        return seat;\r\n    }\r\n\r\n    findPlayerPosBySeat(seat) {\r\n        return configPlayer[seat].playerPos;\r\n    }\r\n\r\n    findPlayerSeatByPos(pos) {\r\n        if (pos == -1) {\r\n            return -1;\r\n        }\r\n\r\n        let seat = -1;\r\n        for (let index = 0; index < configPlayer.length; index++) {\r\n            if (configPlayer[index].playerPos === pos) {\r\n                seat = configPlayer[index].seatId;\r\n            }\r\n        }\r\n        return seat;\r\n    }\r\n\r\n    getPlayerHouse(seatId) {\r\n        return this.groupPlayers.children[seatId].getComponent(\"BaiCao.Player\");\r\n    }\r\n\r\n    getNumPlayers() {\r\n        //  cc.log(\"playerPosEntry configPlayer : \", configPlayer);\r\n        var playerPosEntry = [];\r\n        for (let index = 0; index < configPlayer.length; index++) {\r\n            //  cc.log(\"playerPosEntry playerId : \", configPlayer[index].playerId);\r\n            //  cc.log(\"playerPosEntry isViewer : \", configPlayer[index].isViewer);\r\n            //  cc.log(\"-------------------------------------\");\r\n            if (configPlayer[index].playerId !== -1 && !configPlayer[index].isViewer) {\r\n                playerPosEntry.push(configPlayer[index].seatId);\r\n                //  cc.log(\"playerPosEntry seatId : \", configPlayer[index].seatId);\r\n            }\r\n        }\r\n        //  cc.log(\"playerPosEntry : \", playerPosEntry);\r\n        return playerPosEntry;\r\n    }\r\n\r\n    update(dt) {\r\n\r\n    }\r\n}\r\n","import Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaiCaoItemResult extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    labelUserName: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelBet: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelBien: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelKe: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelGa: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelTotal: cc.Label = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    initItem(info) {\r\n        this.labelUserName.string = info.userName;\r\n        this.labelBet.string = Utils.formatNumber(info.bet);\r\n        this.labelBien.string = Utils.formatNumber(info.bien);\r\n        this.labelKe.string = Utils.formatNumber(info.ke);\r\n        this.labelGa.string = Utils.formatNumber(info.ga);\r\n        this.labelTotal.string = Utils.formatNumber(info.total);\r\n\r\n        this.labelBet.node.color = info.bet > 0 ? cc.Color.YELLOW : cc.Color.WHITE;\r\n        this.labelBien.node.color = info.bien > 0 ? cc.Color.YELLOW : cc.Color.WHITE;\r\n        this.labelKe.node.color = info.ke > 0 ? cc.Color.YELLOW : cc.Color.WHITE;\r\n        this.labelGa.node.color = info.ga > 0 ? cc.Color.YELLOW : cc.Color.WHITE;\r\n        this.labelTotal.node.color = info.total > 0 ? cc.Color.YELLOW : cc.Color.WHITE;\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import BaiCaoController from \"./BaiCao.Controller\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaiCaoItemRoom extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    labelBet: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelBetMin: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelNumPlayers: cc.Label = null;\r\n    @property(cc.Sprite)\r\n    progressNumPlayers: cc.Sprite = null;\r\n\r\n    private roomInfo = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    initItem(info) {\r\n        this.roomInfo = info;\r\n\r\n        this.labelBet.string = Utils.formatNumber(info[\"moneyBet\"]);\r\n        this.labelBetMin.string = Utils.formatNumber(info[\"requiredMoney\"]);\r\n        this.labelNumPlayers.string = info[\"userCount\"] + \"/\" + info[\"maxUserPerRoom\"];\r\n        this.progressNumPlayers.fillRange = info[\"userCount\"] / info[\"maxUserPerRoom\"];\r\n    }\r\n\r\n    chooseRoom() {\r\n        BaiCaoController.instance.joinRoom(this.roomInfo);\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport NetworkClient from \"../../Lobby/LobbyScript/Script/networks/Network.NetworkClient\";\r\nimport NetworkListener from \"../../Lobby/LobbyScript/Script/networks/Network.NetworkListener\";\r\nimport OutPacket from \"../../Lobby/LobbyScript/Script/networks/Network.OutPacket\";\r\n\r\nexport default class BaiCaoNetworkClient extends NetworkClient {\r\n    private static instance: BaiCaoNetworkClient;\r\n\r\n    private listeners: Array<NetworkListener> = new Array<NetworkListener>();\r\n\r\n    public static getInstance(): BaiCaoNetworkClient {\r\n        if (this.instance == null) {\r\n            this.instance = new BaiCaoNetworkClient();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.isUseWSS = Configs.App.USE_WSS;\r\n    }\r\n\r\n    public connect() {\r\n        super.connect(Configs.App.HOST_BAICAO.host, Configs.App.HOST_BAICAO.port);\r\n    }\r\n\r\n    protected onOpen(ev: Event) {\r\n        super.onOpen(ev);\r\n    }\r\n\r\n    protected onMessage(ev: MessageEvent) {\r\n        var data = new Uint8Array(ev.data);\r\n        for (var i = 0; i < this.listeners.length; i++) {\r\n            var listener = this.listeners[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback(data);\r\n            } else {\r\n                this.listeners.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n\r\n    public addListener(callback: (data: Uint8Array) => void, target: cc.Component) {\r\n        this.listeners.push(new NetworkListener(target, callback));\r\n    }\r\n\r\n    public send(packet: OutPacket) {\r\n        for (var b = new Int8Array(packet._length), c = 0; c < packet._length; c++)\r\n            b[c] = packet._data[c];\r\n        if (this.ws != null && this.isConnected())\r\n            this.ws.send(b.buffer);\r\n    }\r\n}\r\n","import App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Player extends cc.Component {\r\n    @property(cc.Node)\r\n    btnInvite: cc.Node = null;\r\n    @property(cc.Node)\r\n    avatar: cc.Node = null;\r\n    @property(cc.Node)\r\n    cardReady: cc.Node = null;\r\n    @property(cc.Node)\r\n    cardReal: cc.Node = null;\r\n    @property(cc.Label)\r\n    userName: cc.Label = null;\r\n    @property(cc.Label)\r\n    userGold: cc.Label = null;\r\n    @property(cc.Node)\r\n    owner: cc.Node = null;\r\n    @property(cc.Node)\r\n    cardsName: cc.Node = null;\r\n    @property(cc.Node)\r\n    actionVaoGa: cc.Node = null;\r\n    @property(cc.Node)\r\n    actionDanhBien: cc.Node = null;\r\n    @property(cc.Node)\r\n    actionViewer: cc.Node = null;\r\n    @property(cc.Node)\r\n    actionThinking: cc.Node = null;\r\n    @property(cc.Node)\r\n    actionWin: cc.Node = null;\r\n    @property(cc.Label)\r\n    goldWin: cc.Label = null;\r\n    @property(cc.Node)\r\n    actionLose: cc.Node = null;\r\n    @property(cc.Label)\r\n    goldLose: cc.Label = null;\r\n    @property(cc.Node)\r\n    hub: cc.Node = null;\r\n    @property(cc.Label)\r\n    goldBet: cc.Label = null;\r\n    @property(cc.Prefab)\r\n    prefabItemChip: cc.Prefab = null;\r\n    @property(cc.Node)\r\n    notify: cc.Node = null;\r\n    @property(cc.Node)\r\n    chatEmotion: cc.Node = null;\r\n    @property(cc.Node)\r\n    chatMsg: cc.Node = null;\r\n    @property(cc.Node)\r\n    shadowAvatar: cc.Node = null;\r\n    @property(cc.Node)\r\n    shadowInfo: cc.Node = null;\r\n    @property(cc.SpriteFrame)\r\n    spriteCardBack: cc.SpriteFrame = null;\r\n    @property(cc.Node)\r\n    popupBet: cc.Node = null;\r\n    @property(cc.Node)\r\n    popupRequestDanhBien: cc.Node = null;\r\n    @property(cc.Label)\r\n    labelValueDanhBien: cc.Label = null;\r\n\r\n    private posCardOpened = null;\r\n    private timeoutNotify = null;\r\n\r\n    private timeoutShowCardName = null;\r\n    private timeoutChat = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    updatePosCardOpened(data) {\r\n        /*\r\n         -1 : chua mo cai nao\r\n         0 : mo left\r\n         1 : mo right\r\n         2: mo het r\r\n        */\r\n        this.posCardOpened = data;\r\n    }\r\n\r\n    showChatEmotion(content) {\r\n        this.node.children[7].active = true;\r\n        this.chatEmotion.active = true;\r\n        this.chatMsg.active = false;\r\n        clearTimeout(this.timeoutChat);\r\n        this.chatEmotion.getComponent(sp.Skeleton).setAnimation(0, content, true);\r\n        this.timeoutChat = setTimeout(() => {\r\n            this.chatEmotion.active = false;\r\n            this.chatMsg.active = false;\r\n        }, 3000);\r\n    }\r\n\r\n    showChatMsg(content) {\r\n        this.node.children[7].active = true;\r\n        this.chatEmotion.active = false;\r\n        this.chatMsg.active = true;\r\n        clearTimeout(this.timeoutChat);\r\n        this.chatMsg.children[1].getComponent(cc.Label).string = content;\r\n        this.timeoutChat = setTimeout(() => {\r\n            this.chatEmotion.active = false;\r\n            this.chatMsg.active = false;\r\n        }, 3000);\r\n    }\r\n\r\n    showPopupBet(state) {\r\n        this.popupBet.active = state;\r\n        if (state) {\r\n            this.popupBet.children[2].active = true;\r\n            this.popupBet.children[3].active = true;\r\n            this.popupBet.children[5].active = true;\r\n            this.popupBet.children[6].active = true;\r\n            this.setCanDanhBien(true);\r\n            this.setCanKeCua(true);\r\n        }\r\n    }\r\n\r\n    setupBetValue(bet) {\r\n        this.popupBet.children[2].children[1].getComponent(cc.Label).string = Utils.formatNumber(bet);\r\n        this.popupBet.children[3].children[1].getComponent(cc.Label).string = Utils.formatNumber(bet * 2);\r\n        this.popupBet.children[5].children[1].getComponent(cc.Label).string = Utils.formatNumber(bet);\r\n        this.popupBet.children[6].children[1].getComponent(cc.Label).string = Utils.formatNumber(bet * 2);\r\n    }\r\n\r\n    disableDanhBien(id) {\r\n        if (id == 1) {\r\n            this.popupBet.children[3].active = false;\r\n        } else {\r\n            this.popupBet.children[2].active = false;\r\n        }\r\n        this.setCanDanhBien(false);\r\n    }\r\n\r\n    disableKeCua(id) {\r\n        if (id == 1) {\r\n            this.popupBet.children[6].active = false;\r\n        } else {\r\n            this.popupBet.children[5].active = false;\r\n        }\r\n        this.setCanKeCua(false);\r\n    }\r\n\r\n    setCanDanhBien(state) {\r\n        this.popupBet.children[2].getComponent(cc.Button).interactable = state;\r\n        this.popupBet.children[3].getComponent(cc.Button).interactable = state;\r\n    }\r\n\r\n    setCanKeCua(state) {\r\n        this.popupBet.children[5].getComponent(cc.Button).interactable = state;\r\n        this.popupBet.children[6].getComponent(cc.Button).interactable = state;\r\n    }\r\n\r\n    showBtnInvite(state) {\r\n        this.btnInvite.active = state;\r\n    }\r\n\r\n    setOwner(state) {\r\n        this.owner.active = state;\r\n    }\r\n\r\n    setAvatar(avatar) {\r\n        this.node.children[1].active = true;\r\n        this.avatar.getComponent(cc.Sprite).spriteFrame = App.instance.getAvatarSpriteFrame(avatar);\r\n    }\r\n\r\n    setIsViewer(state) {\r\n        this.shadowAvatar.active = state;\r\n        this.shadowInfo.active = state;\r\n    }\r\n\r\n    setName(data) {\r\n        this.node.children[3].active = true;\r\n        this.userName.string = data;\r\n    }\r\n\r\n    showCardReady(state) {\r\n        this.node.children[2].active = true;\r\n        this.cardReady.active = state;\r\n    }\r\n\r\n    showCardReal(state) {\r\n        this.node.children[2].active = true;\r\n        this.cardReal.active = state;\r\n    }\r\n\r\n    prepareToTransform() {\r\n        this.prepareCardReal(0);\r\n        this.prepareCardReal(1);\r\n        this.prepareCardReal(2);\r\n    }\r\n\r\n    prepareCardReal(pos) {\r\n        this.cardReal.children[pos].runAction(cc.scaleTo(0, 0, 1));\r\n    }\r\n\r\n    transformToCardReal(cardPos, spriteCard) {\r\n        this.showCardReal(true);\r\n        this.cardReal.children[cardPos].children[0].getComponent(cc.Sprite).spriteFrame = spriteCard;\r\n        this.cardReady.children[cardPos].runAction(\r\n            cc.sequence(\r\n                cc.scaleTo(0.15, 0, 1),\r\n                cc.callFunc(() => {\r\n\r\n                })\r\n            )\r\n        );\r\n\r\n        this.cardReal.children[cardPos].runAction(\r\n            cc.sequence(\r\n                cc.delayTime(0.15),  // 2\r\n                cc.scaleTo(0.15, 1, 1),\r\n                cc.callFunc(() => {\r\n\r\n                })\r\n            )\r\n        );\r\n\r\n    }\r\n\r\n    showCardName(name) {\r\n        //  cc.log(\"BaiCao_Player showCardName name : \", name);\r\n        this.cardsName.active = true;\r\n        this.cardsName.children[0].getComponent(cc.Label).string = name;\r\n        clearTimeout(this.timeoutShowCardName);\r\n        this.timeoutShowCardName = setTimeout(() => {\r\n            this.cardsName.active = false;\r\n        }, 4500);\r\n    }\r\n\r\n    setGold(data) {\r\n        // this.actionViewer.active = false;\r\n        this.actionThinking.active = false;\r\n\r\n        this.showGold(true);\r\n        this.userGold.string = this.formatGold(data);\r\n    }\r\n\r\n    setBet(data) {\r\n        this.showPlayerBet(true);\r\n        this.goldBet.string = this.formatGold(data);\r\n    }\r\n\r\n    addChips() {\r\n        var item1 = cc.instantiate(this.prefabItemChip);\r\n        var item2 = cc.instantiate(this.prefabItemChip);\r\n        this.hub.addChild(item1);\r\n        this.hub.addChild(item2);\r\n    }\r\n\r\n    showPlayerBet(state) {\r\n        this.node.children[5].active = state;\r\n        if (!state) {\r\n            // clear Hub\r\n            this.hub.removeAllChildren(true);\r\n        }\r\n    }\r\n\r\n    setCardReal01(data) {\r\n        this.cardReal.children[0].children[0].getComponent(cc.Sprite).spriteFrame = data;\r\n    }\r\n\r\n    setCardReal02(data) {\r\n        this.cardReal.children[1].children[0].getComponent(cc.Sprite).spriteFrame = data;\r\n    }\r\n\r\n    showPlayCountdown() {\r\n        this.node.children[4].active = true;\r\n        this.actionThinking.active = true;\r\n        this.processThinking(0);\r\n        // 1 = Full | 0 = Empty\r\n    }\r\n\r\n    hidePlayCountdown() {\r\n        this.actionThinking.active = false;\r\n    }\r\n\r\n    processThinking(rate) {\r\n        //  cc.log(\"BaiCao_Player processThinking rate : \", rate);\r\n        this.actionThinking.getComponent(cc.Sprite).fillRange = rate;\r\n    }\r\n\r\n    showGold(state) {\r\n        this.node.children[3].children[2].active = state;\r\n    }\r\n\r\n    showPopupRequestDanhBien(value) {\r\n        this.popupRequestDanhBien.active = true;\r\n        this.labelValueDanhBien.string = this.formatGold(value);\r\n    }\r\n\r\n    closePopupRequestDanhBien() {\r\n        this.popupRequestDanhBien.active = false;\r\n    }\r\n\r\n    prepareFxAction() {\r\n        // this.showGold(false);\r\n        this.node.children[4].active = true;\r\n        this.resetAction();\r\n    }\r\n    \r\n    // Fx Action\r\n    playFxDanhBien() {\r\n        this.node.children[4].active = true;\r\n        this.actionDanhBien.active = true;\r\n        this.actionDanhBien.runAction(\r\n            cc.sequence(\r\n                cc.scaleTo(0, 0),\r\n                cc.scaleTo(0.1, 1.1, 1.1),\r\n                cc.scaleTo(0.05, 1, 1)\r\n            )\r\n        );\r\n    }\r\n\r\n    playFxVaoGa() {\r\n        this.node.children[4].active = true;\r\n        this.actionVaoGa.active = true;\r\n        this.actionVaoGa.runAction(\r\n            cc.sequence(\r\n                cc.scaleTo(0, 0),\r\n                cc.scaleTo(0.1, 1.1, 1.1),\r\n                cc.scaleTo(0.05, 1, 1)\r\n            )\r\n        );\r\n    }\r\n\r\n    playFxViewer() {\r\n        this.prepareFxAction();\r\n        this.actionViewer.active = true;\r\n    }\r\n\r\n    fxOtherPlayerFold() {\r\n        // Ready card\r\n        // this.shadowCardReady(true);\r\n        this.cardReady.runAction(\r\n            cc.moveBy(0.5, 0, -100)\r\n        );\r\n    }\r\n\r\n    fxMeFold() {\r\n        // Real card\r\n        this.shadowCardReal(true);\r\n        this.cardReal.runAction(\r\n            cc.moveBy(0.5, 0, -20)\r\n        );\r\n    }\r\n\r\n    showEatGa(state) {\r\n        this.actionWin.children[3].active = state;\r\n    }\r\n\r\n    fxWin(playerInfo) {\r\n        //  cc.log(\"BaiCao_Player fxWin playerInfo : \", playerInfo);\r\n        this.node.children[4].active = true;\r\n        this.actionWin.active = true;\r\n        this.fxGoldChange(0, playerInfo.moneyChange, this.goldWin.node);\r\n        this.setGold(this.formatGold(playerInfo.money));\r\n        this.showEatGa(playerInfo.ga > 0 ? true : false);\r\n        setTimeout(() => {\r\n            this.actionWin.active = false;\r\n            this.node.children[4].active = false;\r\n        }, 2500);\r\n    }\r\n\r\n    fxLose(playerInfo) {\r\n        //  cc.log(\"BaiCao_Player fxLose playerInfo : \", playerInfo);\r\n        this.node.children[4].active = true;\r\n        this.actionLose.active = true;\r\n        this.fxGoldChange(0, playerInfo.moneyChange, this.goldLose.node);\r\n        this.setGold(this.formatGold(playerInfo.money));\r\n        setTimeout(() => {\r\n            this.actionLose.active = false;\r\n            this.node.children[4].active = false;\r\n        }, 2500);\r\n    }\r\n\r\n    shadowCardReady(state) {\r\n        this.cardReady.children[0].color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n        this.cardReady.children[1].color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n        this.cardReady.children[2].color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n    }\r\n\r\n    shadowCardReal(state) {\r\n        this.cardReal.children[0].children[0].color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n        this.cardReal.children[1].children[0].color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n        this.cardReal.children[2].children[0].color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n    }\r\n\r\n    setCardWin(pos, state) {\r\n        this.cardReal.children[pos].children[0].color = state ? cc.Color.WHITE : cc.Color.GRAY;\r\n    }\r\n\r\n    // notify\r\n    showNotify(content) {\r\n        this.notify.active = true;\r\n        this.notify.children[1].getComponent(cc.Label).string = content;\r\n        clearTimeout(this.timeoutNotify);\r\n        this.timeoutNotify = setTimeout(() => {\r\n            this.notify.active = false;\r\n        }, 1500);\r\n    }\r\n\r\n    // reset\r\n    resetAction() {\r\n        for (let index = 0; index < this.node.children[4].childrenCount; index++) {\r\n            this.node.children[4].children[index].active = false;\r\n        }\r\n    }\r\n\r\n    resetMatchHistory() {\r\n        // card\r\n\r\n        this.resetCardReady();\r\n        this.resetCardReal();\r\n        this.node.children[2].active = false;\r\n\r\n        // this.setCardWin(0, true);\r\n        // this.setCardWin(1, true);\r\n        // this.setCardWin(2, true);\r\n\r\n        // Info\r\n        this.showGold(true);\r\n        this.cardsName.active = false;\r\n\r\n        // Action\r\n        this.resetAction();\r\n\r\n        // Chips\r\n        this.node.children[5].active = false;\r\n        this.goldBet.string = \"0\";\r\n        this.hub.removeAllChildren(true);\r\n\r\n    }\r\n\r\n    resetCardReady() {\r\n        this.cardReady.children[0].scale = 1;\r\n        this.cardReady.children[1].scale = 1;\r\n        this.cardReady.children[2].scale = 1;\r\n        this.cardReady.active = false;\r\n        // this.shadowCardReady(false);\r\n    }\r\n\r\n    resetCardReal() {\r\n        this.cardReal.active = false;\r\n        this.cardReal.y = 0;\r\n        this.cardReal.children[0].children[0].getComponent(cc.Sprite).spriteFrame = this.spriteCardBack;\r\n        this.cardReal.children[1].children[0].getComponent(cc.Sprite).spriteFrame = this.spriteCardBack;\r\n        this.cardReal.children[2].children[0].getComponent(cc.Sprite).spriteFrame = this.spriteCardBack;\r\n        this.shadowCardReal(false);\r\n    }\r\n\r\n    resetPlayerInfo() {\r\n        // Hide node Lv1\r\n        for (let index = 0; index < this.node.childrenCount; index++) {\r\n            this.node.children[index].active = false;\r\n        }\r\n\r\n        // reset card\r\n        this.cardReal.children[0].children[0].getComponent(cc.Sprite).spriteFrame = this.spriteCardBack;\r\n        this.cardReal.children[1].children[0].getComponent(cc.Sprite).spriteFrame = this.spriteCardBack;\r\n        this.cardReal.children[2].children[0].getComponent(cc.Sprite).spriteFrame = this.spriteCardBack;\r\n        this.cardReady.active = false;\r\n        this.cardReal.active = false;\r\n\r\n        this.cardsName.active = false;\r\n\r\n        // reset Action\r\n        this.actionVaoGa.active = false;\r\n        this.actionDanhBien.active = false;\r\n        this.actionViewer.active = false;\r\n        this.actionThinking.active = false;\r\n        this.actionWin.active = false;\r\n        this.actionLose.active = false;\r\n\r\n        // reset Hub chips\r\n        this.goldBet.string = \"0\";\r\n        this.hub.removeAllChildren(true);\r\n\r\n        // reset Viewer\r\n        this.setIsViewer(true);\r\n    }\r\n\r\n    fxGoldChange(goldStart, goldEnd, node) {\r\n        var goldAdd = goldEnd - goldStart;\r\n        node.getComponent(cc.Label).string = this.formatGold(goldStart);\r\n\r\n        var steps = 10;\r\n        var deltaGoldAdd = Math.floor(goldAdd / steps);\r\n\r\n        var rep = cc.repeat(\r\n            cc.sequence(\r\n                cc.delayTime(0.05),\r\n                cc.callFunc(() => {\r\n                    goldStart += deltaGoldAdd;\r\n                    node.getComponent(cc.Label).string = (goldAdd > 0 ? \"+\" : \"\") + this.formatGold(goldStart);\r\n                }),\r\n            ), steps);\r\n        var seq = cc.sequence(rep, cc.callFunc(() => {\r\n            goldStart = goldEnd;\r\n            node.getComponent(cc.Label).string = (goldAdd > 0 ? \"+\" : \"\") + this.formatGold(goldStart);\r\n        }));\r\n        node.runAction(seq);\r\n    }\r\n\r\n    formatGold(price) {\r\n        return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","\r\nexport default class Res {\r\n    static instance: Res;\r\n    cards = [];\r\n    cardItem = null;\r\n\r\n    public static getInstance(): Res {\r\n        if (this.instance == null)\r\n            this.instance = new Res();\r\n        return this.instance;\r\n    }\r\n\r\n    constructor() {\r\n        cc.loader.loadResDir(\"sprites/LaBai\", cc.SpriteFrame, (err, sprs, urls) => {\r\n            this.cards = sprs;\r\n        });\r\n        cc.loader.loadRes(\"prefabs/card/card\", cc.Prefab, (err, prefab) => {\r\n            this.cardItem = prefab;\r\n        });\r\n    }\r\n\r\n    getCardFace(index) {\r\n        if (index < 10) index = \"0\" + index;\r\n        return this.cards.filter(card => card.name == (\"labai_\" + index))[0];\r\n    }\r\n\r\n    getCardItem() {\r\n        return this.cardItem;\r\n    }\r\n}\r\n"],"file":"index.js"}