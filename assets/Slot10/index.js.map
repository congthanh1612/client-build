{"version":3,"sources":["assets/Slot10/Slot10Script/Slot10.Cmd.ts","assets/Slot10/Slot10Script/Slot10.Item.ts","assets/Slot10/Slot10Script/Slot10.Lobby.ts","assets/Slot10/Slot10Script/Slot10.PopupBonus.ts","assets/Slot10/Slot10Script/Slot10.PopupGuide.ts","assets/Slot10/Slot10Script/Slot10.PopupHistory.ts","assets/Slot10/Slot10Script/Slot10.PopupJackpotHistory.ts","assets/Slot10/Slot10Script/Slot10.PopupSelectLine.ts","assets/Slot10/Slot10Script/Slot10.Slot10Controller.ts","assets/Slot10/Slot10Script/Slot10.TrialResults.ts"],"names":["cmd","Network_InPacket_1","require","Network_OutPacket_1","cc","_decorator","ccclass","Code","SUBCRIBE","UNSUBCRIBE","CHANGE_ROOM","PLAY","UPDATE_POT","AUTO","FORCE_STOP_AUTO","DATE_X2","BIG_WIN","FREE","FREE_DAI_LY","MINIMIZE","UPDATE_JACKPOT_SLOTS","SUBCRIBE_HALL_SLOT","ReceiveFreeDaiLy","_super","data","_this","call","this","freeSpin","getByte","__extends","default","SendSubcribe","roomId","initData","setControllerId","setCmdId","packHeader","putByte","updateSize","SendUnSubcribe","SendPlay","lines","putString","SendChangeRoom","roomLeavedId","roomJoinedId","ReceiveUpdatePot","jackpot","x2","getLong","ResUpdateJackpotSlots","pots","getString","ReceivePlay","ref","result","matrix","linesWin","haiSao","prize","currentMoney","isFree","itemsWild","ratio","getBool","ReqSubcribeHallSlot","exports","_a","property","Slot10ItemSlot","apply","arguments","spriteIcon","spineIcon","nodeBox","itemAtlast","gamePlayManager","itemId","index","animName","prototype","onLoad","find","node","getComponent","Sprite","sp","Skeleton","getChildByName","init","parseInt","active","scale","spriteFrame","getSpriteFrame","changeSpriteBlurByItemId","sizeMode","SizeMode","TRIMMED","changeSpriteRealByItemId","changeSpineIcon","checkShowSpriteOrSpine","Tween","stopAllByTarget","color","Color","WHITE","setAnimation","tween","delay","GRAY","start","__decorate","Node","SpriteAtlas","Component","App_1","Tween_1","SlotNetworkClient_1","Slot10_Cmd_1","Slot10Lobby","listPot","rooms","mSlotController","pSlot3Controller","zIndex","showAnimation","i","length","opacity","position","v2","to","easing","onBtnBack","soundSlotState","audioEngine","play","soundClick","getInstance","send","betIdx","stopAll","instance","loadScene","onBtnTry","dailyFreeSpin","lblFreeSpinCount","parent","mIsTrial","toggleTrialOnCheck","onJoinRoom","onBtn100","onBtn5k","omBtn10k","onUpdateJackpot","pData","res","resJson","JSON","parse","numberTo","p","Label","Dialog_1","PopupBonus","items","nodeBoxNotify","txtNotify","lblLeft","lblHeso","lblWin","sfGangTayActive","sfGangTayDisActive","sfGangTayNormal","factor","left","betValue","onFinished","onSpecialFinished","dataBonus","dataSpecial","heso","win","controller","_loop_1","this_1","children","Button","on","onBtnSoundTouchBonus","value","string","hidden","childrenCount","showBonus","bonus","show","btn","interactable","arrBonus","split","push","Number","scheduleOnce","dismiss","onBtnExit","hidePopup","SpriteFrame","PopupGuide","pageView","btnNext","btnPrev","page","canPlaySound","getCurrentPageIndex","actNext","getPages","scrollToPage","actPrev","soundSave","sys","localStorage","getItem","PageView","type","AudioClip","Configs_1","Http_1","Utils_1","PopupHistory","lblPage","itemTemplate","maxPage","Array","_onShowed","loadData","actNextPage","actPrevPage","showLoading","get","App","API","c","un","Login","Nickname","gn","err","item","instantiate","destroy","i_1","itemData","formatNumber","PopupJackpotHistory","PopupSelectLine","buttonsLine","btnClose","onSelectedChanged","SELECTED","getSelectedLines","actSelectAll","actSelectEven","actSelectOdd","actDeselectAll","TYPE_WIN","Slot10_PopupSelectLine_1","Slot10_PopupBonus_1","Slot10_TrialResults_1","Slot10_Lobby_1","BroadcastReceiver_1","Slot10_Item_2","Slot10Controller","mSlotLobby","nodeCoin","mHeightItem","mWidthItem","reels","iconWildColumns","lblJackpot","lblBet","lblLine","lblTotalBet","lblCoin","lblWinNow","toggleAuto","toggleSound","togglgeMusic","toggleBoost","btnSpin","btnBack","btnPlayTry","btnPlayReal","btnLine","toast","panelSetting","effectWinCash","effectBigWin","effectJackpot","effectBonus","popupSelectLine","popupBonus","soundSpinMis","soundSpinWin","soundBigWin","soundJackpot","soundBonus","soundSpin","soundEndSpin","soundBg","soundBgBonus","spinDuration","addSpinDuration","listBet","listBetLabel","arrLineSelect","isSpined","wildItemId","mapLine","lastSpinRes","columnsWild","isFastCurrent","isFast","arrReel","distanceReel","iconSpriteFrameBlurArr","iconSpriteFrameArr","arrUIItemIcon","arrRealItem","arrSkeletonIcon","numberSpinReel","isHaveResultSpin","dataResult","musicSlotState","remoteMusicBackground","mutipleJpNode","soundInit","randomIconList","addOnClose","addListener","getCmdId","res_1","res_2","onSpinResult","sendCheck","stopShowLinesWin","toString","n","moneyToK","register","USER_UPDATE_COIN","Coin","showErrLoading","checkConnect","initMutipleJPNode","assetManager","getBundle","load","Prefab","err1","prefab","director","getScene","setInfo","onBtnSoundSumary","getSpriteFrameIconBlur","indexIcon","getSpriteFrameIcon","getSpineIcon","Math","floor","random","totalbet","showToast","msg","getComponentInChildren","stopAllActions","runAction","sequence","delayTime","callFunc","money","setEnabledAllButtons","enabled","stopAllEffects","stopAllItemEffect","j","spin","changeAllItemToDark","rIdx","randomRangeInt","results","alertDialog","showMsg","getTextLang","stopSpin","showLineWins","isChecked","removeDups","splice","linesWinChildren","actions","indexOf","showWinCash","lineIdx","line","mLine","fisrtItemId","arrItem","getItemWinInLine","arrIdOfItem","idWin","forEach","getItemIdWinInLine","repeatForever","showCoins","number","cash","label","fadeIn","fadeOut","showEffectBigWin","cb","showEffectJackpot","showEffectBonus","actClick","beginSpinReel","indexReel","self","v3","x","loopSpinReel","processLoopSpinReel","itemIdTmp","endSpinReel","showWildBig","slotDatas","isWild","indexRow","spined","MISS","WIN","BIGWIN","JACKPOT","SUPERWIN","BONUS","playMusic","curMoney","actBack","actHidden","actBetUp","actBetDown","actLine","actSetting","toggleAutoOnCheck","isTrail","toggleBoostOnCheck","musicSave","setItem","settingMusic","stop","settingSound","state","col","sprite","spine","lineId","lineArr","arrId","count","id","size","filter","Integer","Toggle","SkeletonData","Slot10","TrialResults","_pos","_data","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","_length","_controllerId","_cmdId","_error","106","107","108","109","110"],"mappings":"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","sourcesContent":["import InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport OutPacket from \"../../Lobby/LobbyScript/Script/networks/Network.OutPacket\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\nexport namespace cmd {\r\n    export class Code {\r\n        static SUBCRIBE = 3003;\r\n        static UNSUBCRIBE = 3004;\r\n        static CHANGE_ROOM = 3005;\r\n        static PLAY = 3001;\r\n        static UPDATE_POT = 3002;\r\n        static AUTO = 3006;\r\n        static FORCE_STOP_AUTO = 3008;\r\n        static DATE_X2 = 3009;\r\n        static BIG_WIN = 3010;\r\n        static FREE = 3011;\r\n        static FREE_DAI_LY = 3012;\r\n        static MINIMIZE = 3013;\r\n        static UPDATE_JACKPOT_SLOTS = 10003;\r\n        static SUBCRIBE_HALL_SLOT = 10001;\r\n    }\r\n    export class ReceiveFreeDaiLy extends InPacket {\r\n      \r\n        freeSpin = 0;\r\n\r\n      \r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n           \r\n            this.freeSpin = this.getByte();\r\n            \r\n        }\r\n    }\r\n    export class SendSubcribe extends OutPacket {\r\n        constructor(roomId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE);\r\n            this.packHeader();\r\n            this.putByte(roomId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendUnSubcribe extends OutPacket {\r\n        constructor(roomId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.UNSUBCRIBE);\r\n            this.packHeader();\r\n            this.putByte(roomId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendPlay extends OutPacket {\r\n        constructor(lines: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.PLAY);\r\n            this.packHeader();\r\n            this.putString(lines);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendChangeRoom extends OutPacket {\r\n        constructor(roomLeavedId: number, roomJoinedId: number) {\r\n            super();\r\n            //  cc.log(\"room leave: \" + roomLeavedId + \", room join: \" + roomJoinedId);\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHANGE_ROOM);\r\n            this.packHeader();\r\n            this.putByte(roomLeavedId);\r\n            this.putByte(roomJoinedId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ReceiveUpdatePot extends InPacket {\r\n        jackpot = 0;\r\n        x2 = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.jackpot = this.getLong();\r\n            this.x2 = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ResUpdateJackpotSlots extends InPacket {\r\n        pots = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.pots = this.getString()\r\n        }\r\n    }\r\n    export class ReceivePlay extends InPacket {\r\n        ref = 0;\r\n        result = 0;\r\n        matrix = \"\";\r\n        linesWin = \"\";\r\n        haiSao = \"\";\r\n        prize = 0;\r\n        currentMoney = 0;\r\n        freeSpin = 0;\r\n        isFree = false;\r\n        itemsWild = \"\";\r\n        ratio = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.ref = this.getLong();\r\n            this.result = this.getByte();\r\n            this.matrix = this.getString();\r\n            this.linesWin = this.getString();\r\n            this.haiSao = this.getString();\r\n            this.prize = this.getLong();\r\n            this.currentMoney = this.getLong();\r\n            this.freeSpin = this.getByte();\r\n            this.isFree = this.getBool();\r\n            this.itemsWild = this.getString();\r\n            this.ratio = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ReqSubcribeHallSlot extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE_HALL_SLOT);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n}\r\nexport default cmd;","const { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class Slot10ItemSlot extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    spriteIcon: cc.Sprite = null;\r\n\r\n    @property(sp.Skeleton)\r\n    spineIcon: sp.Skeleton = null;\r\n\r\n    @property(cc.Node)\r\n    nodeBox: cc.Node = null;\r\n    @property(cc.SpriteAtlas)\r\n    itemAtlast: cc.SpriteAtlas = null;\r\n\r\n    public gamePlayManager = null;\r\n    public itemId = null;\r\n    public index = null;\r\n    public animName = null;\r\n    onLoad() {\r\n        this.spriteIcon = cc.find(\"Box/sprite\", this.node).getComponent(cc.Sprite);\r\n        this.spineIcon = cc.find(\"Box/ske\", this.node).getComponent(sp.Skeleton);\r\n        this.nodeBox = this.node.getChildByName(\"Box\");\r\n    }\r\n    init(itemId, index, gamePlayManager) {\r\n        itemId = parseInt(itemId);\r\n        this.gamePlayManager = gamePlayManager;\r\n        this.itemId = itemId;\r\n        this.index = index;\r\n        this.spriteIcon.node.active = true;\r\n        this.spineIcon.node.scale = 0.65;\r\n        // this.spriteIcon.node.setContentSize(cc.size(this.spriteIcon.node.width *0.67, this.spriteIcon.node.height *0.67));\r\n        this.spineIcon.node.active = false;\r\n        // self.spriteIcon.spriteFrame = self.gamePlayManager.getSpriteFrameIcon(self.itemId);\r\n        this.spriteIcon.spriteFrame = this.itemAtlast.getSpriteFrame(\"item_\" + (itemId + 1));\r\n    }\r\n\r\n\r\n\r\n    changeSpriteBlurByItemId(itemId) {\r\n        itemId = parseInt(itemId);\r\n        this.itemId = itemId;\r\n        this.spineIcon.node.active = false;\r\n        this.spriteIcon.node.active = true;\r\n        this.spriteIcon.sizeMode = cc.Sprite.SizeMode.TRIMMED;\r\n        this.spriteIcon.spriteFrame = this.itemAtlast.getSpriteFrame(\"item_\" + (itemId + 1) + \"_blur\");\r\n        // this.spriteIcon.node.setContentSize(cc.size(this.spriteIcon.node.width*0.67, this.spriteIcon.node.height*0.67));\r\n    }\r\n\r\n    changeSpriteRealByItemId(itemId) {\r\n        itemId = parseInt(itemId);\r\n        this.itemId = itemId;\r\n        this.spriteIcon.sizeMode = cc.Sprite.SizeMode.TRIMMED;\r\n        this.spineIcon.node.active = false;\r\n        this.spriteIcon.node.active = true;\r\n        this.spriteIcon.spriteFrame = this.itemAtlast.getSpriteFrame(\"item_\" + (itemId + 1));\r\n        // this.spriteIcon.node.setContentSize(cc.size(this.spriteIcon.node.width*0.67, this.spriteIcon.node.height*0.67));\r\n    }\r\n\r\n    changeSpineIcon(itemId) {\r\n        itemId = parseInt(itemId);\r\n        this.itemId = itemId;\r\n        this.spriteIcon.sizeMode = cc.Sprite.SizeMode.TRIMMED;\r\n        this.spriteIcon.spriteFrame = this.itemAtlast.getSpriteFrame(\"item_\" + (itemId + 1));\r\n        this.spriteIcon.node.active = true;\r\n        // this.spriteIcon.node.setContentSize(cc.size(this.spriteIcon.node.width *0.67, this.spriteIcon.node.height *0.67));\r\n        if (itemId != 0 && itemId != 2) {\r\n            this.spineIcon.node.active = false;\r\n\r\n        } else {\r\n            itemId = parseInt(itemId);\r\n            switch (itemId) {\r\n                case 0:\r\n                    this.animName = \"jackpot\"\r\n                    break;\r\n                case 2:\r\n                    this.animName = \"bonus\";\r\n                    break;\r\n            }\r\n\r\n            // this.spineIcon.setAnimation(0, this.animName, true);\r\n        }\r\n    }\r\n    checkShowSpriteOrSpine() {\r\n        //  cc.log(\"checkShowSpriteOrSpine\");\r\n        cc.Tween.stopAllByTarget(this.spriteIcon.node);\r\n        cc.Tween.stopAllByTarget(this.spineIcon.node);\r\n        if (this.itemId != 0 && this.itemId != 2) {\r\n            this.spineIcon.node.active = false;\r\n            this.spriteIcon.node.active = true;\r\n            this.spriteIcon.node.color = cc.Color.WHITE;\r\n            // cc.tween(this.spriteIcon.node)\r\n            //     .to(0.25, { scale: 0.9 }, { easing: cc.easing.sineOut })\r\n            //     .to(0.25, { scale: 0.8 }, { easing: cc.easing.sineOut })\r\n            //     .delay(0.4)\r\n            //     .call(() => {\r\n            //         this.spriteIcon.node.color = cc.Color.GRAY;\r\n            //     }).start();\r\n        } else {\r\n            this.spineIcon.node.active = true;\r\n            this.spriteIcon.node.active = false;\r\n            this.spineIcon.setAnimation(0, this.animName, true);\r\n            this.spineIcon.node.color = cc.Color.WHITE;\r\n        }\r\n        cc.tween(this.node)\r\n            .delay(0.9).call(() => {\r\n                //  cc.log(\"co chay vao day ko\");\r\n                this.spineIcon.node.color = cc.Color.GRAY;\r\n                this.spriteIcon.node.color = cc.Color.GRAY;\r\n                this.spriteIcon.node.active = true;\r\n                this.spineIcon.node.active = false;\r\n            }).start();\r\n    }\r\n}","\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport SlotNetworkClient from \"../../Lobby/LobbyScript/Script/networks/SlotNetworkClient\";\r\nimport cmd from \"./Slot10.Cmd\";\r\nimport Slot10Controller from \"./Slot10.Slot10Controller\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot10Lobby extends cc.Component {\r\n\r\n    @property([cc.Label])\r\n    listPot: cc.Label[] = [];\r\n    @property([cc.Node])\r\n    rooms: cc.Node[] = [];\r\n\r\n    mSlotController: Slot10Controller = null;\r\n\r\n    public init(pSlot3Controller: Slot10Controller) {\r\n        this.mSlotController = pSlot3Controller;\r\n        // for(var i=0;i<this.rooms.length;i++){\r\n        //     this.rooms[i].opacity = 0;\r\n        // }\r\n        // var self = this;\r\n        // setTimeout(function(){\r\n        //     self.showAnimation();\r\n        // },2000);\r\n        this.node.zIndex = 2;\r\n    }\r\n\r\n    showAnimation() {\r\n        var self = this;\r\n        for (var i = 0; i < this.rooms.length; i++) {\r\n            var nodeBox = this.rooms[i]\r\n            cc.Tween.stopAllByTarget(nodeBox);\r\n            nodeBox.opacity = 0;\r\n            if (i == 0) {\r\n                nodeBox.position = cc.v2(-200, 0);\r\n            }\r\n            else if (i == 1) {\r\n                nodeBox.position = cc.v2(0, -200);\r\n            }\r\n            else if (i == 2) {\r\n                nodeBox.position = cc.v2(0, 200);\r\n            }\r\n            else {\r\n                nodeBox.position = cc.v2(200, 0);\r\n            }\r\n            cc.tween(nodeBox)\r\n                .to(1, { position: cc.v2(0, 0), opacity: 255 }, { easing: \"backOut\" })\r\n                .start();\r\n        }\r\n    },\r\n\r\n    public onBtnBack() {\r\n        if (this.mSlotController.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.mSlotController.soundClick, false, 1);\r\n        }\r\n        SlotNetworkClient.getInstance().send(new cmd.SendUnSubcribe(this.mSlotController.betIdx));\r\n        cc.audioEngine.stopAll();\r\n        App.instance.loadScene(\"Lobby\");\r\n    }\r\n\r\n    private onBtnTry() {\r\n        this.mSlotController.dailyFreeSpin = 0;\r\n        this.mSlotController.lblFreeSpinCount.node.parent.active = false;\r\n        this.mSlotController.betIdx = 0;\r\n        this.mSlotController.mIsTrial = false;\r\n        this.mSlotController.toggleTrialOnCheck();\r\n        SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(this.mSlotController.betIdx));\r\n        this.node.active = false;\r\n        this.mSlotController.onJoinRoom();\r\n\r\n    }\r\n\r\n\r\n    private onBtn100() {\r\n        this.mSlotController.dailyFreeSpin = 0;\r\n        this.mSlotController.lblFreeSpinCount.node.parent.active = false;\r\n        this.mSlotController.betIdx = 0;\r\n        this.mSlotController.mIsTrial = true;\r\n        this.mSlotController.toggleTrialOnCheck();\r\n        SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(this.mSlotController.betIdx));\r\n        this.node.active = false;\r\n        this.mSlotController.onJoinRoom();\r\n    }\r\n\r\n    private onBtn5k() {\r\n        this.mSlotController.dailyFreeSpin = 0;\r\n        this.mSlotController.lblFreeSpinCount.node.parent.active = false;\r\n        this.mSlotController.betIdx = 1;\r\n        this.mSlotController.mIsTrial = true;\r\n        this.mSlotController.toggleTrialOnCheck();\r\n        SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(this.mSlotController.betIdx));\r\n        this.node.active = false;\r\n        this.mSlotController.onJoinRoom();\r\n    }\r\n\r\n    private omBtn10k() {\r\n        this.mSlotController.dailyFreeSpin = 0;\r\n        this.mSlotController.lblFreeSpinCount.node.parent.active = false;\r\n        this.mSlotController.betIdx = 2;\r\n        this.mSlotController.mIsTrial = true;\r\n        this.mSlotController.toggleTrialOnCheck();\r\n        SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(this.mSlotController.betIdx));\r\n        this.node.active = false;\r\n        this.mSlotController.onJoinRoom();\r\n    }\r\n\r\n    public onUpdateJackpot(pData) {\r\n        let res = new cmd.ResUpdateJackpotSlots(pData);\r\n        let resJson = JSON.parse(res.pots);\r\n        Tween.numberTo(this.listPot[0], resJson['maybach']['100'].p, 0.3);\r\n        Tween.numberTo(this.listPot[1], resJson['maybach']['1000'].p, 0.3);\r\n        Tween.numberTo(this.listPot[2], resJson['maybach']['10000'].p, 0.3);\r\n    }\r\n}\r\n","\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Slot10Controller from \"./Slot10.Slot10Controller\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupBonus extends Dialog {\r\n    @property(cc.Node)\r\n    items: cc.Node = null;\r\n    @property(cc.Node)\r\n    nodeBoxNotify: cc.Node = null;\r\n    @property(cc.Label)\r\n    txtNotify: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblLeft: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblHeso: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblWin: cc.Label = null;\r\n    @property(cc.SpriteFrame)\r\n    sfGangTayActive = null;\r\n    @property(cc.SpriteFrame)\r\n    sfGangTayDisActive = null;\r\n    @property(cc.SpriteFrame)\r\n    sfGangTayNormal = null;\r\n    private factor = 1;\r\n    private left = 0;\r\n    private betValue = 0;\r\n    private onFinished: () => void = null;\r\n    private onSpecialFinished: () => void = null;\r\n    private dataBonus: Array<number> = [];\r\n    private dataSpecial: number = -1;\r\n    private heso:number = 0;\r\n    private win : number = 0;\r\n    private controller:Slot10Controller = null;\r\n    start() {\r\n        \r\n        for (let i = 0; i < this.items.childrenCount; i++) {\r\n            let node = this.items.children[i];\r\n            node[\"btn\"] = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            node[\"label\"] = node.getChildByName(\"label\").children[0].getComponent(cc.Label);\r\n            node[\"icon\"] = node.getChildByName(\"icon\");\r\n            node[\"btn\"].node.on(\"click\", () => {\r\n                this.controller.onBtnSoundTouchBonus();\r\n                var value = this.dataBonus[this.dataBonus.length - this.left];\r\n                //  cc.log(\"click:\"+value+\" : \"+node[\"is_open\"]);\r\n                if(node[\"is_open\"] == false && this.left > 0){\r\n                    node[\"is_open\"] = true;\r\n                    switch (value) {\r\n                        case 0:\r\n                            this.factor++;\r\n                            node[\"btn\"].node.active = false;\r\n                            node[\"icon\"].getComponent(cc.Sprite).spriteFrame = this.sfGangTayDisActive;\r\n                            node[\"label\"].node.parent.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            break;\r\n                        case 1:\r\n                            node[\"btn\"].node.active = false;\r\n                            node[\"icon\"].getComponent(cc.Sprite).spriteFrame = this.sfGangTayActive;\r\n                            node[\"label\"].node.parent.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"], 4*this.betValue , 0.3);\r\n                            this.win += 4* this.betValue;\r\n                            Tween.numberTo(this.lblWin,this.win, 0.3);\r\n                            break;\r\n                       \r\n                        case 2:\r\n                            node[\"btn\"].node.active = false;\r\n                            node[\"icon\"].getComponent(cc.Sprite).spriteFrame = this.sfGangTayActive;\r\n                            node[\"label\"].node.parent.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"],10* this.betValue * this.factor, 0.3);\r\n                            this.win += 10* this.betValue * this.factor;\r\n                            Tween.numberTo(this.lblWin,this.win, 0.3);\r\n                            break;\r\n                        case 3:\r\n                            node[\"btn\"].node.active = false;\r\n                            node[\"icon\"].getComponent(cc.Sprite).spriteFrame = this.sfGangTayActive;\r\n                            node[\"label\"].node.parent.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"],15* this.betValue * this.factor, 0.3);\r\n                            this.win += 15* this.betValue * this.factor;\r\n                            Tween.numberTo(this.lblWin,this.win, 0.3);\r\n                            break;\r\n                        case 4:\r\n                            node[\"btn\"].node.active = false;\r\n                            node[\"icon\"].getComponent(cc.Sprite).spriteFrame = this.sfGangTayActive;\r\n                            node[\"label\"].node.parent.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            this.win += 20* this.betValue * this.factor;\r\n                            Tween.numberTo(node[\"label\"],20* this.betValue * this.factor, 0.3);\r\n                            Tween.numberTo(this.lblWin,this.win, 0.3);\r\n                            break;\r\n                        \r\n\r\n                    }\r\n                    this.left--;\r\n                    this.lblLeft.string = \"\" + this.left;\r\n                    if (this.left <= 0) {\r\n                        this.hidden();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    showBonus(betValue: number, bonus: string,controller, onFinished: () => void) {\r\n        super.show();\r\n        this.controller = controller;\r\n        this.win = 0;\r\n        Tween.numberTo(this.lblWin,this.win, 0.3);\r\n        for (let i = 0; i < this.items.childrenCount; i++) {\r\n            let node = this.items.children[i];\r\n            node[\"btn\"] = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            node[\"icon\"] = node.getChildByName(\"icon\");\r\n            node[\"icon\"].getComponent(cc.Sprite).spriteFrame = this.sfGangTayNormal;\r\n            node[\"is_open\"] = false;\r\n        }\r\n        for (let i = 0; i < this.items.childrenCount; i++) {\r\n            let node = this.items.children[i];\r\n            let btn = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            btn.node.active = true;\r\n            btn.interactable = true;\r\n            node.getChildByName(\"label\").active = false;\r\n        }\r\n        this.betValue = betValue;\r\n        this.onFinished = onFinished;\r\n        let arrBonus = bonus.split(\",\");\r\n        this.dataBonus = [];\r\n        for (let i = 0; i < arrBonus.length; i++) {\r\n            this.dataBonus.push(Number(arrBonus[i]));\r\n        }\r\n        this.left = this.dataBonus.length - 1;\r\n        this.factor = 1;\r\n        this.lblLeft.string = \"\" + this.left;\r\n        this.heso = this.dataBonus[0];\r\n        this.lblHeso.string = this.heso+\"\";\r\n    }\r\n\r\n    \r\n    hidden() {\r\n        this.scheduleOnce(() => {\r\n            this.dismiss();\r\n            this.onFinished();\r\n        }, 1.5);\r\n        // this.controller.onBtnSoundSumary();\r\n        // Tween.showPopup(this.nodeBoxNotify,this.nodeBoxNotify.parent);\r\n        // Tween.numberTo(this.txtNotify,this.win, 0.3);\r\n        \r\n    }\r\n\r\n    onBtnExit(){\r\n        Tween.hidePopup(this.nodeBoxNotify,this.nodeBoxNotify.parent,false);\r\n        this.scheduleOnce(() => {\r\n            this.dismiss();\r\n            this.onFinished();\r\n        }, 1.5);\r\n    }\r\n}\r\nexport default PopupBonus;","import Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupGuide extends Dialog {\r\n\r\n    @property(cc.PageView)\r\n    pageView : cc.PageView = null;\r\n\r\n    // @property([cc.Node])\r\n    // pages: cc.Node[] = [];\r\n    @property(cc.Node)\r\n    btnNext: cc.Node = null;\r\n    @property(cc.Node)\r\n    btnPrev: cc.Node = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n\r\n    private page = 0;\r\n\r\n    private soundSlotState = null;\r\n\r\n    start() {\r\n    }\r\n\r\n\r\n    show() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.show();\r\n        this.page = this.pageView.getCurrentPageIndex();\r\n        this.btnPrev.active = true;\r\n    }\r\n\r\n    actNext() {\r\n        if (this.page < this.pageView.getPages().length - 1) {\r\n            this.page++;\r\n        }\r\n\r\n        if (this.page == this.pageView.getPages().length - 1) {\r\n            this.btnNext.active = false;\r\n        }\r\n        this.btnPrev.active = true;\r\n\r\n        this.pageView.scrollToPage(this.page,0.2);\r\n    }\r\n\r\n    actPrev() {\r\n        if (this.page > 0) {\r\n            this.page--;\r\n        }\r\n\r\n        if (this.page == 0) {\r\n            this.btnPrev.active = false;\r\n        }\r\n        this.btnNext.active = true;\r\n\r\n        this.pageView.scrollToPage(this.page,0.2);\r\n    }\r\n\r\n \r\n    dismiss() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.dismiss();\r\n    }\r\n\r\n    canPlaySound() {\r\n        if(this.soundClick == null) return false;\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_1\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nexport default PopupGuide;","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupHistory extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    private soundSlotState = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.show();\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 137, \"p\": this.page, \"un\": Configs.Login.Nickname, \"gn\": \"MAYBACH\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (!res[\"success\"]) return;\r\n\r\n            if (this.items.length == 0) {\r\n                for (var i = 0; i < 7; i++) {\r\n                    let item = cc.instantiate(this.itemTemplate);\r\n                    item.parent = this.itemTemplate.parent;\r\n                    this.items.push(item);\r\n                }\r\n                this.itemTemplate.destroy();\r\n                this.itemTemplate = null;\r\n            }\r\n\r\n            this.maxPage = res[\"totalPages\"];\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                let item = this.items[i];\r\n                if (i < res[\"results\"].length) {\r\n                    let itemData = res[\"results\"][i];\r\n                    item.getChildByName(\"Session\").getComponent(cc.Label).string = itemData[\"rf\"];\r\n                    item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"];\r\n                    item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                    item.getChildByName(\"LineBet\").getComponent(cc.Label).string = itemData[\"lb\"] === \"\" ? 0 : itemData[\"lb\"].split(\",\").length;\r\n                    item.getChildByName(\"LineWin\").getComponent(cc.Label).string = itemData[\"lw\"] === \"\" ? 0 : itemData[\"lw\"].split(\",\").length;\r\n                    item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    canPlaySound() {\r\n        if(this.soundClick == null) return false;\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_1\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupJackpotHistory extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    private soundSlotState = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.show();\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 138, \"p\": this.page, \"gn\": \"MAYBACH\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (!res[\"success\"]) return;\r\n            //  cc.log(\"loadData Jackpot:\"+JSON.stringify(res));\r\n            if (this.items.length == 0) {\r\n                for (var i = 0; i < 7; i++) {\r\n                    let item = cc.instantiate(this.itemTemplate);\r\n                    item.parent = this.itemTemplate.parent;\r\n                    this.items.push(item);\r\n                }\r\n                this.itemTemplate.destroy();\r\n                this.itemTemplate = null;\r\n            }\r\n\r\n            this.maxPage = res[\"totalPages\"];\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                let item = this.items[i];\r\n                if (i < res[\"results\"].length) {\r\n                    let itemData = res[\"results\"][i];\r\n                    item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"];\r\n                    item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                    item.getChildByName(\"Type\").getComponent(cc.Label).string = itemData[\"rs\"] == 3 ? \"Nổ hũ\" : \"Thắng lớn\";\r\n                    item.getChildByName(\"Account\").getComponent(cc.Label).string = itemData[\"un\"];\r\n                    item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    canPlaySound() {\r\n        if(this.soundClick == null) return false;\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_1\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nexport default PopupJackpotHistory;","import Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupSelectLine extends Dialog {\r\n    @property(cc.Node)\r\n    buttonsLine: cc.Node = null;\r\n    @property(cc.Button)\r\n    btnClose: cc.Button = null;\r\n\r\n    onSelectedChanged: (lines: Array<number>) => void = null;\r\n    private readonly SELECTED = \"selected\";\r\n\r\n    start() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = true;\r\n            node.on(\"click\", () => {\r\n                node[this.SELECTED] = !node[this.SELECTED];\r\n                node.opacity = node[this.SELECTED] ? 255 : 80;\r\n                if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n                this.btnClose.interactable = this.getSelectedLines().length > 0;\r\n            });\r\n        }\r\n    }\r\n\r\n    actSelectAll() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = true;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n    }\r\n\r\n    actSelectEven() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = i % 2 != 0;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n    }\r\n\r\n    actSelectOdd() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = i % 2 == 0;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n    }\r\n\r\n    actDeselectAll() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = false;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = false;\r\n    }\r\n\r\n    private getSelectedLines() {\r\n        let lines = new Array<number>();\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            if (typeof node[this.SELECTED] == \"undefined\" || node[this.SELECTED]) {\r\n                lines.push(i + 1);\r\n            }\r\n        }\r\n        return lines;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.getSelectedLines().length > 0) {\r\n            super.dismiss();\r\n        }\r\n    }\r\n}\r\nexport default PopupSelectLine;","\r\nimport cmd from \"./Slot10.Cmd\";\r\n\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport PopupSelectLine from \"./Slot10.PopupSelectLine\";\r\nimport PopupBonus from \"./Slot10.PopupBonus\";\r\nimport TrialResults from \"./Slot10.TrialResults\";\r\nimport Slot10Lobby from \"./Slot10.Lobby\";\r\nimport Slot10Item from \"./Slot10.Item\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport BroadcastReceiver from \"../../Lobby/LobbyScript/Script/common/BroadcastReceiver\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\nimport InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport SlotNetworkClient from \"../../Lobby/LobbyScript/Script/networks/SlotNetworkClient\";\r\nimport UIItemIconSlot25 from \"../../Lobby/LobbyScript/Script/BaseSlot25/ItemIconSlot25\";\r\nimport Slot10ItemSlot from \"./Slot10.Item\";\r\n\r\nconst enum TYPE_WIN {\r\n    MISS = 0,\r\n    WIN = 1,\r\n    BIGWIN = 2,\r\n    JACKPOT = 3,\r\n    SUPERWIN = 4,\r\n    BONUS = 5\r\n}\r\nvar MAX_CYCCLE_SPIN = 20;\r\nvar FAST_CYCCLE_SPIN = 10;\r\nvar ERROR_CYCCLE_SPIN = 50;\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot10Controller extends cc.Component {\r\n\r\n    @property(Slot10Lobby)\r\n    mSlotLobby: Slot10Lobby = null;\r\n\r\n\r\n    @property(cc.Node)\r\n    nodeCoin: cc.Node = null;\r\n\r\n\r\n    @property(cc.Integer)\r\n    mHeightItem: number = 180;\r\n\r\n    @property(cc.Integer)\r\n    mWidthItem: number = 180;\r\n\r\n    @property(cc.Node)\r\n    reels: cc.Node = null; // reel\r\n\r\n    // @property(cc.Node)\r\n    // itemTemplate: cc.Node = null;\r\n    @property(cc.Node)\r\n    linesWin: cc.Node = null;\r\n    @property(cc.Node)\r\n    iconWildColumns: cc.Node = null; // mang cac item expand wild\r\n\r\n    @property(cc.Label)\r\n    lblJackpot: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblBet: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblLine: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblTotalBet: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblCoin: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblWinNow: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblFreeSpinCount: cc.Label = null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleAuto: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleSound: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    togglgeMusic: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleBoost: cc.Toggle = null;\r\n    // @property(cc.Toggle)\r\n    // toggleTrial: cc.Toggle = null;\r\n\r\n    @property(cc.Button)\r\n    btnSpin: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnBack: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnPlayTry: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnPlayReal: cc.Button = null;\r\n    // @property(cc.Button)\r\n    // btnBetUp: cc.Button = null;\r\n    // @property(cc.Button)\r\n    // btnBetDown: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnLine: cc.Button = null;\r\n\r\n    @property(cc.Node)\r\n    toast: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    panelSetting: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    effectWinCash: cc.Node = null;\r\n    @property(cc.Node)\r\n    effectBigWin: cc.Node = null;\r\n    @property(cc.Node)\r\n    effectJackpot: cc.Node = null;\r\n    @property(cc.Node)\r\n    effectBonus: cc.Node = null;\r\n\r\n    @property(PopupSelectLine)\r\n    popupSelectLine: PopupSelectLine = null;\r\n    @property(PopupBonus)\r\n    popupBonus: PopupBonus = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundSpinMis: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundSpinWin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundBigWin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundJackpot: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundBonus: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundSpin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundEndSpin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundBg: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundBgBonus: cc.AudioClip = null;\r\n\r\n    public dailyFreeSpin = 0;\r\n    private spinDuration = 1.2;\r\n    private addSpinDuration = 0.3;\r\n    //private itemHeight = 0;\r\n    public betIdx = -1;\r\n    private listBet = [100, 1000, 10000];\r\n    private listBetLabel = [\"100\", \"1.000\", \"10.000\"];\r\n    private arrLineSelect = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25];\r\n    private isSpined = true;\r\n    private readonly wildItemId = 2;\r\n    private readonly mapLine = [\r\n        [5, 6, 7, 8, 9],//1\r\n        [0, 1, 2, 3, 4],//2\r\n        [10, 11, 12, 13, 14],//3\r\n        [10, 6, 2, 8, 14],//4\r\n        [0, 6, 12, 8, 4],//5\r\n        [5, 1, 2, 3, 9],//6\r\n        [5, 11, 12, 13, 9],//7\r\n        [0, 1, 7, 13, 14],//8\r\n        [10, 11, 7, 3, 4],//9\r\n        [5, 11, 7, 3, 9],//10\r\n        [5, 1, 7, 13, 9],//11\r\n        [0, 6, 7, 8, 4],//12\r\n        [10, 6, 7, 8, 14],//13\r\n        [0, 6, 2, 8, 4],//14\r\n        [10, 6, 12, 8, 14],//15\r\n        [5, 6, 2, 8, 9],//16\r\n        [5, 6, 12, 8, 9],//17\r\n        [0, 1, 12, 3, 4],//18\r\n        [10, 11, 2, 13, 14],//19\r\n        [0, 11, 12, 13, 4],//20\r\n        [10, 1, 2, 3, 14],//21\r\n        [5, 1, 12, 3, 9],//22\r\n        [5, 11, 2, 13, 9],//23\r\n        [0, 11, 2, 13, 4],//24\r\n        [10, 1, 12, 3, 14]//25\r\n    ];\r\n    private lastSpinRes: cmd.ReceivePlay = null;\r\n    private columnsWild = [];\r\n\r\n\r\n    public mIsTrial = false;\r\n\r\n\r\n    //new \r\n\r\n    private isFastCurrent = false;\r\n    private isFast = false;\r\n\r\n    @property([cc.Node])\r\n    arrReel: cc.Node[] = [];\r\n\r\n    @property\r\n    distanceReel: number = 0;\r\n\r\n    @property([cc.SpriteFrame])\r\n    iconSpriteFrameBlurArr: cc.SpriteFrame[] = [];\r\n\r\n    @property([cc.SpriteFrame])\r\n    iconSpriteFrameArr: cc.SpriteFrame[] = [];\r\n\r\n\r\n    @property([Slot10ItemSlot])\r\n    arrUIItemIcon: Slot10ItemSlot[] = [];\r\n    @property([Slot10ItemSlot])\r\n    arrRealItem: Slot10ItemSlot[] = [];\r\n\r\n    @property([sp.SkeletonData])\r\n    arrSkeletonIcon: sp.SkeletonData[] = [];\r\n\r\n\r\n    public numberSpinReel = null;\r\n    public isHaveResultSpin = false;\r\n    public dataResult = null;\r\n    public musicSlotState = null;\r\n    public soundSlotState = null;\r\n    public remoteMusicBackground = null;\r\n    mutipleJpNode =null;\r\n    start() {\r\n        this.dailyFreeSpin = 0;\r\n        this.soundInit();\r\n        this.randomIconList();\r\n        //dang ky khi mat ket noi tu dong back\r\n        SlotNetworkClient.getInstance().addOnClose(() => {\r\n            //this.actBack();\r\n            this.mSlotLobby.onBtnBack();\r\n        }, this);\r\n        this.iconWildColumns.zIndex = 3;\r\n        //listenner client - server\r\n        SlotNetworkClient.getInstance().addListener((data) => {\r\n            let inpacket = new InPacket(data);\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.FREE_DAI_LY:\r\n                    {\r\n                        if (!this.mIsTrial) {\r\n                            let res = new cmd.ReceiveFreeDaiLy(data);\r\n                            this.dailyFreeSpin = res.freeSpin;\r\n                            if (this.dailyFreeSpin > 0) {\r\n                                this.lblFreeSpinCount.node.parent.active = true;\r\n                                this.lblFreeSpinCount.string = this.dailyFreeSpin + \"\";\r\n                            }\r\n                            else {\r\n                                this.lblFreeSpinCount.node.parent.active = false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.lblFreeSpinCount.node.parent.active = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case cmd.Code.UPDATE_POT:\r\n                    let res = new cmd.ReceiveUpdatePot(data);\r\n                    Tween.numberTo(this.lblJackpot, res.jackpot, 0.3);\r\n\r\n                    break;\r\n                case cmd.Code.UPDATE_JACKPOT_SLOTS:\r\n                    this.mSlotLobby.onUpdateJackpot(data);\r\n                    break;\r\n                case cmd.Code.PLAY:\r\n                    {\r\n                        let res = new cmd.ReceivePlay(data);\r\n                        // //  cc.log(res);\r\n                        this.onSpinResult(res);\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }, this);\r\n        SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n\r\n        ////  cc.log(\"Slot3Controller started\");\r\n\r\n        //SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(this.betIdx));\r\n        this.stopShowLinesWin();\r\n        this.toast.active = false;\r\n        this.effectWinCash.active = false;\r\n        this.effectJackpot.active = false;\r\n        this.effectBigWin.active = false;\r\n        this.panelSetting.active = false;\r\n        this.popupSelectLine.onSelectedChanged = (lines) => {\r\n            this.arrLineSelect = lines;\r\n            this.lblLine.string = this.arrLineSelect.length.toString();\r\n            Tween.numberTo(this.lblTotalBet, this.arrLineSelect.length * this.listBet[this.betIdx], 0.3, (n) => { return this.moneyToK(n) });\r\n        }\r\n        this.lblTotalBet.string = (this.arrLineSelect.length * this.listBet[this.betIdx]).toString();\r\n\r\n\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\r\n            Tween.numberTo(this.lblCoin, Configs.Login.Coin, 0.3);\r\n        }, this);\r\n        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n\r\n        App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n        SlotNetworkClient.getInstance().checkConnect(() => {\r\n            App.instance.showLoading(false);\r\n        });\r\n        ////  cc.log(\"Slot3Controller started\");\r\n\r\n        this.mSlotLobby.init(this);\r\n        this.mSlotLobby.node.active = true;\r\n        this.btnPlayReal.node.active = false;\r\n        this.btnPlayTry.node.active = true;\r\n        //this.initMutipleJPNode();\r\n    }\r\n     initMutipleJPNode() {\r\n        if (!this.mutipleJpNode) {\r\n            cc.assetManager.getBundle(\"Lobby\").load(\"prefabs/MutipleJackpotPr\", cc.Prefab, function (finish, total, item) {\r\n            }, (err1, prefab: cc.Prefab) => {\r\n                if (err1 != null) {\r\n                    //  cc.log(\"errr load game TIENLEN:\", err1);\r\n                } else {\r\n                    this.mutipleJpNode = cc.instantiate(prefab).getComponent(\"MutipleJackpot\");\r\n                    this.mutipleJpNode.node.parent = cc.director.getScene().getChildByName(\"Canvas\")\r\n                    this.mutipleJpNode.setInfo(\"THETHAO\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n    onBtnSoundTouchBonus() {\r\n\r\n    }\r\n\r\n    onBtnSoundSumary() {\r\n\r\n    }\r\n\r\n\r\n    getSpriteFrameIconBlur(indexIcon) {\r\n        var self = this;\r\n\r\n        return self.iconSpriteFrameBlurArr[indexIcon];\r\n    }\r\n\r\n    getSpriteFrameIcon(indexIcon) {\r\n        var self = this;\r\n\r\n        return self.iconSpriteFrameArr[indexIcon];\r\n    }\r\n\r\n    getSpineIcon(indexIcon) {\r\n        var self = this;\r\n\r\n        return self.arrSkeletonIcon[indexIcon];\r\n    }\r\n\r\n    randomIconList() {\r\n        var self = this;\r\n        for (var i = 0; i < self.arrUIItemIcon.length; i++) {\r\n            var index = i;\r\n            var itemId = Math.floor(Math.random() * (self.iconSpriteFrameArr.length));\r\n            self.arrUIItemIcon[i].init(itemId, index, self);\r\n            this.arrUIItemIcon[index].changeSpineIcon(itemId)\r\n\r\n        }\r\n    }\r\n\r\n    public onJoinRoom() {\r\n        this.lblBet.string = this.listBetLabel[this.betIdx];\r\n        let totalbet = (this.arrLineSelect.length * this.listBet[this.betIdx]);\r\n        Tween.numberTo(this.lblTotalBet, totalbet, 0.3);\r\n\r\n    }\r\n\r\n    private showToast(msg: string) {\r\n        this.toast.getComponentInChildren(cc.Label).string = msg;\r\n        this.toast.stopAllActions();\r\n        this.toast.active = true;\r\n        this.toast.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(() => {\r\n            this.toast.active = false;\r\n        })));\r\n    }\r\n\r\n    private moneyToK(money: number): string {\r\n        // if (money < 10000) {\r\n        //     return money.toString();\r\n        // }\r\n        // money = parseInt((money / 1000).toString());\r\n        return money.toString();\r\n    }\r\n\r\n    private setEnabledAllButtons(enabled: boolean) {\r\n        this.btnSpin.interactable = enabled;\r\n        this.btnSpin.node.children[0].active = enabled;\r\n        this.btnBack.interactable = enabled;\r\n        // this.btnBetUp.interactable = enabled;\r\n        // this.btnBetDown.interactable = enabled;\r\n        this.btnLine.interactable = enabled;\r\n        this.btnPlayTry.interactable = enabled;\r\n        this.btnPlayReal.interactable = enabled;\r\n        //this.toggleTrial.interactable = enabled;\r\n    }\r\n\r\n    private stopAllEffects() {\r\n        this.effectJackpot.stopAllActions();\r\n        this.effectJackpot.active = false;\r\n        this.effectBigWin.stopAllActions();\r\n        this.effectBigWin.active = false;\r\n    }\r\n\r\n    private stopShowLinesWin() {\r\n        this.linesWin.stopAllActions();\r\n        for (var i = 0; i < this.linesWin.childrenCount; i++) {\r\n            this.linesWin.children[i].active = false;\r\n        }\r\n        for (var i = 0; i < this.iconWildColumns.childrenCount; i++) {\r\n            this.iconWildColumns.children[i].active = false;\r\n        }\r\n        this.stopAllItemEffect();\r\n    }\r\n\r\n    private stopAllItemEffect() {\r\n        for (let i = 0; i < this.reels.childrenCount; i++) {\r\n            for (let i = 0; i < this.reels.childrenCount; i++) {\r\n                let children = this.reels.children[i].children; // ???\r\n                for (let j = 0; j < children.length; j++) {\r\n                    cc.Tween.stopAllByTarget(children[j]);\r\n                    children[j].scale = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private spin() {\r\n        //  cc.log(\"spin cai coi\");\r\n        if (!this.isSpined) return;\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundSpin, false, 1);\r\n        }\r\n        this.changeAllItemToDark(false);\r\n        let isTrail = this.mIsTrial;\r\n        if (!isTrail) {\r\n\r\n            if (this.dailyFreeSpin > 0) {\r\n                this.dailyFreeSpin--;\r\n                if (this.dailyFreeSpin > 0) {\r\n                    this.lblFreeSpinCount.node.parent.active = true;\r\n                    this.lblFreeSpinCount.string = this.dailyFreeSpin + \"\";\r\n                }\r\n                else {\r\n                    this.lblFreeSpinCount.node.parent.active = false;\r\n                }\r\n            }\r\n            else {\r\n                if (Configs.Login.Coin < this.listBet[this.betIdx] * this.arrLineSelect.length) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_not_enough\"));\r\n                    return;\r\n                }\r\n            }\r\n            this.isSpined = false;\r\n            this.stopAllEffects();\r\n            this.stopShowLinesWin();\r\n            this.setEnabledAllButtons(false);\r\n            var data = new cmd.SendPlay(this.arrLineSelect.toString());\r\n            SlotNetworkClient.getInstance().send(data);\r\n        } else {\r\n            this.isSpined = false;\r\n            this.stopAllEffects();\r\n            this.stopShowLinesWin();\r\n            this.setEnabledAllButtons(false);\r\n            var rIdx = Utils.randomRangeInt(0, TrialResults.results.length);\r\n            this.onSpinResult(TrialResults.results[rIdx]);\r\n        }\r\n    }\r\n\r\n    private stopSpin() {\r\n\r\n    }\r\n\r\n    private showLineWins() {\r\n        this.isSpined = true;\r\n        Tween.numberTo(this.lblWinNow, this.lastSpinRes.prize, 0.3);\r\n        let isTrail = this.mIsTrial;\r\n        if (!isTrail) BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n        if (!this.toggleAuto.isChecked && !this.toggleBoost.isChecked) this.setEnabledAllButtons(true);\r\n\r\n        this.linesWin.stopAllActions();\r\n        let linesWin = this.lastSpinRes.linesWin.split(\",\");\r\n        linesWin = Utils.removeDups(linesWin);\r\n        for (let i = 0; i < linesWin.length; i++) {\r\n            if (linesWin[i] == \"0\") {\r\n                linesWin.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n        let matrix = this.lastSpinRes.matrix.split(\",\");\r\n        let linesWinChildren = this.linesWin.children;\r\n        let rolls = this.reels.children;\r\n        let actions = [];\r\n        for (let i = 0; i < linesWinChildren.length; i++) {\r\n            linesWinChildren[i].active = linesWin.indexOf(\"\" + (i + 1)) >= 0;;\r\n        }\r\n        if (this.lastSpinRes.prize > 0) {\r\n            this.changeAllItemToDark(true);\r\n            this.linesWin.zIndex = 2;\r\n            this.reels.zIndex = 1;\r\n            this.showWinCash(this.lastSpinRes.prize);\r\n            actions.push(cc.delayTime(1.5));\r\n            actions.push(cc.callFunc(function () {\r\n                for (let i = 0; i < linesWinChildren.length; i++) {\r\n                    linesWinChildren[i].active = false;\r\n                }\r\n            }));\r\n            actions.push(cc.delayTime(0.3));\r\n            if (!this.toggleBoost.isChecked) {\r\n                for (let i = 0; i < linesWin.length; i++) {\r\n                    let lineIdx = parseInt(linesWin[i]) - 1;\r\n                    let line = linesWinChildren[lineIdx];\r\n                    actions.push(cc.callFunc(() => {\r\n                        // //  cc.log(\"================: \" + lineIdx);\r\n                        this.linesWin.zIndex = 1;\r\n                        this.reels.zIndex = 2;\r\n                        line.active = true;\r\n                        let mLine = this.mapLine[lineIdx];\r\n                        let countItemWin = 0;\r\n                        let fisrtItemId = matrix[mLine[0]];\r\n                        for (let j = 0; j < mLine.length; j++) {\r\n                            let itemId = matrix[mLine[j]];\r\n                            if (fisrtItemId == itemId || parseInt(itemId) == this.wildItemId || this.columnsWild.indexOf(j) >= 0) {\r\n                                // //  cc.log(\"==\" + itemId + \" j:\" + j);\r\n                                countItemWin++;\r\n                            } else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        let arrItem = this.getItemWinInLine(lineIdx);\r\n                        let arrIdOfItem = [];\r\n                        let idWin = -1;\r\n                        arrItem.forEach((item) => {\r\n                            arrIdOfItem.push(item.itemId);\r\n                        });\r\n                        arrItem.forEach((item) => {\r\n                            idWin = this.getItemIdWinInLine(arrIdOfItem);\r\n                            if (item.itemId == idWin) {\r\n                                cc.Tween.stopAllByTarget(item.node);\r\n                                cc.tween(item.node).repeatForever(cc.tween().to(0.2, { scale: item.node.scale + 0.1 }).to(0.2, { scale: item.node.scale })).start();\r\n                                item.checkShowSpriteOrSpine();\r\n                            }\r\n                        });\r\n                    }));\r\n                    actions.push(cc.delayTime(1));\r\n                    actions.push(cc.callFunc(() => {\r\n                        line.active = false;\r\n                        this.stopAllItemEffect();\r\n                    }));\r\n                    actions.push(cc.delayTime(0.1));\r\n                }\r\n            }\r\n        }\r\n        if (actions.length == 0) {\r\n            actions.push(cc.callFunc(() => {\r\n                //fixed call cc.sequence.apply\r\n            }))\r\n        }\r\n        actions.push(cc.callFunc(() => {\r\n            this.changeAllItemToDark(false);\r\n            if (this.toggleBoost.isChecked || this.toggleAuto.isChecked) {\r\n                this.spin();\r\n            }\r\n        }));\r\n        this.linesWin.runAction(cc.sequence.apply(null, actions));\r\n    }\r\n\r\n    private showCoins(prize){\r\n        var number = prize/20000;\r\n        if(number <= 10) number = 10;\r\n        else if(number >= 30) number = 30;\r\n        App.instance.showCoins(number,this.lblWinNow.node,this.nodeCoin);\r\n    }\r\n\r\n    private showWinCash(cash: number) {\r\n        this.showCoins(cash);\r\n        this.effectWinCash.stopAllActions();\r\n        this.effectWinCash.active = true;\r\n        let label = this.effectWinCash.getComponentInChildren(cc.Label);\r\n        label.string = \"0\";\r\n        this.effectWinCash.opacity = 0;\r\n        this.effectWinCash.runAction(cc.sequence(\r\n            cc.fadeIn(0.3),\r\n            cc.callFunc(() => {\r\n                Tween.numberTo(label, cash, 0.5);\r\n            }),\r\n            cc.delayTime(1.5),\r\n            cc.fadeOut(0.3),\r\n            cc.callFunc(() => {\r\n                this.effectWinCash.active = false;\r\n            })\r\n        ));\r\n    }\r\n\r\n    private showEffectBigWin(cash: number, cb: () => void) {\r\n        this.effectBigWin.stopAllActions();\r\n        this.effectBigWin.active = true;\r\n        this.effectBigWin.getComponentInChildren(sp.Skeleton).setAnimation(0, \"animation\", false);\r\n        let label = this.effectBigWin.getComponentInChildren(cc.Label);\r\n        label.node.active = false;\r\n\r\n        this.effectBigWin.runAction(cc.sequence(\r\n            cc.delayTime(1),\r\n            cc.callFunc(() => {\r\n                label.string = \"\";\r\n                label.node.active = true;\r\n                Tween.numberTo(label, cash, 1);\r\n            }),\r\n            cc.delayTime(3),\r\n            cc.callFunc(() => {\r\n                this.effectBigWin.active = false;\r\n                if (cb != null) cb();\r\n            })\r\n        ));\r\n    }\r\n\r\n    private showEffectJackpot(cash: number, cb: () => void = null) {\r\n        this.effectJackpot.stopAllActions();\r\n        this.effectJackpot.active = true;\r\n        this.effectJackpot.getComponentInChildren(sp.Skeleton).setAnimation(0, \"animation\", false);\r\n        let label = this.effectJackpot.getComponentInChildren(cc.Label);\r\n        label.node.active = false;\r\n\r\n        this.effectJackpot.runAction(cc.sequence(\r\n            cc.delayTime(1),\r\n            cc.callFunc(() => {\r\n                label.string = \"\";\r\n                label.node.active = true;\r\n                Tween.numberTo(label, cash, 1);\r\n            }),\r\n            cc.delayTime(6),\r\n            cc.callFunc(() => {\r\n                this.effectJackpot.active = false;\r\n                if (cb != null) cb();\r\n            })\r\n        ));\r\n    }\r\n\r\n    private showEffectBonus(cb: () => void) {\r\n        this.effectBonus.stopAllActions();\r\n        this.effectBonus.active = true;\r\n        this.effectBonus.getComponentInChildren(sp.Skeleton).setAnimation(0, \"animation\", false);\r\n\r\n        this.effectBonus.runAction(cc.sequence(\r\n            cc.delayTime(3),\r\n            cc.callFunc(() => {\r\n                this.effectBonus.active = false;\r\n                if (cb != null) cb();\r\n            })\r\n        ));\r\n    }\r\n\r\n    private actClick() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundEndSpin, false, 1);\r\n        }\r\n    }\r\n\r\n    public beginSpinReel(indexReel) {\r\n        var self = this;\r\n        self.isFastCurrent = self.toggleBoost.isChecked;\r\n        self.numberSpinReel[indexReel] = 0;\r\n\r\n        cc.Tween.stopAllByTarget(self.arrReel[indexReel]);\r\n        cc.tween(self.arrReel[indexReel])\r\n            .delay(indexReel * 0.2)\r\n            .to(0.1, { position: cc.v3(self.arrReel[indexReel].position.x, 70, 0) }, { easing: \"linear\" })\r\n            .call(() => {\r\n                self.loopSpinReel(indexReel);\r\n            })\r\n            .start();\r\n    }\r\n\r\n    loopSpinReel(indexReel) {\r\n\r\n        cc.tween(this.arrReel[indexReel])\r\n            .to(0.06, { position: cc.v3(this.arrReel[indexReel].position.x, -this.distanceReel, 0) }, { easing: \"linear\" })\r\n            .call(() => {\r\n                this.processLoopSpinReel(indexReel);\r\n            })\r\n            .start();\r\n    }\r\n\r\n    processLoopSpinReel(indexReel) {\r\n        this.numberSpinReel[indexReel] += 1;\r\n        for (var i = 4; i >= 0; i--) {\r\n            var index = indexReel + (i * 5);\r\n\r\n            var indexRow = Math.floor(index / 5);\r\n            var itemIdTmp = 0;\r\n            if (indexRow == 0) {\r\n                itemIdTmp = Math.floor(Math.random() * this.iconSpriteFrameBlurArr.length);\r\n            }\r\n            else {\r\n                itemIdTmp = this.arrUIItemIcon[index - 5].itemId;\r\n            }\r\n            let item = this.arrUIItemIcon[index];\r\n            item.changeSpriteBlurByItemId(itemIdTmp);\r\n        }\r\n        this.arrReel[indexReel].position = cc.v3(this.arrReel[indexReel].position.x, 0, 0);\r\n        if (this.isHaveResultSpin) {\r\n            if (this.isFastCurrent == false) {\r\n                if (this.numberSpinReel[indexReel] >= MAX_CYCCLE_SPIN) {\r\n                    this.endSpinReel(indexReel);\r\n                }\r\n                else {\r\n                    this.loopSpinReel(indexReel);\r\n                }\r\n            }\r\n            else {\r\n                if (this.numberSpinReel[indexReel] >= FAST_CYCCLE_SPIN) {\r\n                    this.endSpinReel(indexReel);\r\n                }\r\n                else {\r\n                    this.loopSpinReel(indexReel);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.numberSpinReel[indexReel] >= ERROR_CYCCLE_SPIN) {\r\n                this.endSpinReel(indexReel);\r\n            }\r\n            else {\r\n                this.loopSpinReel(indexReel);\r\n            }\r\n        }\r\n\r\n    }\r\n    showWildBig() {\r\n        var self = this;\r\n        if (self.iconWildColumns.children.length <= 0) return;\r\n        if (self.dataResult == null) return;\r\n        var slotDatas = self.dataResult.matrix.split(',');\r\n        var isWild = false;\r\n        for (var i = 0; i < slotDatas.length; i++) {\r\n            if (slotDatas[i] == self.wildItemId) {\r\n                if (isWild == false) {\r\n                    isWild = true;\r\n                }\r\n                var indexRow = Math.floor(i % 5);\r\n                self.iconWildColumns.children[indexRow].scale = 0;\r\n                cc.Tween.stopAllByTarget(self.iconWildColumns.children[indexRow]);\r\n                cc.tween(self.iconWildColumns.children[indexRow])\r\n                    .to(0.5, { scale: 1 }, { easing: \"backOut\" })\r\n                    .start();\r\n                self.iconWildColumns.children[indexRow].active = true;\r\n                self.iconWildColumns.children[indexRow].getComponent(\"sp.Skeleton\").setAnimation(0, \"animation\", false);\r\n            }\r\n        }\r\n    }\r\n\r\n    endSpinReel(indexReel) {\r\n        if (this.dataResult == null) {\r\n            for (var i = 3; i >= 1; i--) {\r\n                var index = indexReel + (i * 5);\r\n                var itemId = Math.floor(Math.random() * (this.iconSpriteFrameArr.length));\r\n                this.arrUIItemIcon[index].changeSpineIcon(itemId)\r\n            }\r\n            return;\r\n        }\r\n        var matrix = this.dataResult.matrix.split(',');\r\n        var roll = this.reels.children[indexReel];\r\n        this.arrReel[indexReel].position = cc.v3(this.arrReel[indexReel].position.x, this.distanceReel, 0);\r\n        for (var i = 3; i >= 1; i--) {\r\n            var index = indexReel + (i * 5);\r\n            this.arrUIItemIcon[index].changeSpineIcon(matrix[index - 5])\r\n        }\r\n        cc.tween(this.arrReel[indexReel])\r\n            .to(0.3, { position: cc.v3(this.arrReel[indexReel].position.x, 0, 0) }, { easing: \"backOut\" })\r\n            .call(() => {\r\n                if (this.soundSlotState == 1) {\r\n                    cc.audioEngine.play(this.soundEndSpin, false, 1);\r\n                }\r\n                if (indexReel == 4) {\r\n                    // this.showWildBig();\r\n                    this.spined();\r\n                }\r\n            })\r\n            .start();\r\n    }\r\n\r\n\r\n\r\n    private spined() {\r\n\r\n        if (this.lastSpinRes.freeSpin) {\r\n            this.lblFreeSpinCount.string = this.lastSpinRes.freeSpin.toString();\r\n        }\r\n\r\n        var successResult = [0, 1, 3, 5, 6];\r\n        switch (this.lastSpinRes.result) {\r\n            case TYPE_WIN.MISS://k an\r\n                if (this.soundSlotState == 1) {\r\n                    cc.audioEngine.play(this.soundSpinMis, false, 1);\r\n                }\r\n                this.showLineWins();\r\n                break;\r\n            case TYPE_WIN.WIN:// thang thuong\r\n                if (this.soundSlotState == 1) {\r\n                    cc.audioEngine.play(this.soundSpinWin, false, 1);\r\n                }\r\n                this.showLineWins();\r\n                break;\r\n            case TYPE_WIN.BIGWIN:// thang lon\r\n                if (this.soundSlotState == 1) {\r\n                    cc.audioEngine.play(this.soundBigWin, false, 1);\r\n                }\r\n                this.showEffectBigWin(this.lastSpinRes.prize, () => {\r\n                    this.showLineWins();\r\n                });\r\n                break;\r\n            case TYPE_WIN.JACKPOT: case TYPE_WIN.SUPERWIN://jackpot\r\n                if (this.soundSlotState == 1) {\r\n                    cc.audioEngine.play(this.soundJackpot, false, 1);\r\n                }\r\n                this.showEffectJackpot(this.lastSpinRes.prize, () => {\r\n                    this.showLineWins();\r\n                });\r\n                break;\r\n            case 6://thang sieu lon\r\n                if (this.soundSlotState == 1) {\r\n                    cc.audioEngine.play(this.soundBigWin, false, 1);\r\n                }\r\n                this.showEffectBigWin(this.lastSpinRes.prize, () => {\r\n                    this.showLineWins();\r\n                });\r\n                break;\r\n            case TYPE_WIN.BONUS://bonus\r\n                if (this.soundSlotState == 1) {\r\n                    cc.audioEngine.play(this.soundBonus, false, 1);\r\n                }\r\n\r\n                this.showEffectBonus(() => {\r\n                    if (this.musicSlotState == 1) {\r\n\r\n                        this.remoteMusicBackground = cc.audioEngine.playMusic(this.soundBgBonus, true);\r\n                    }\r\n                    this.popupBonus.showBonus(this.mIsTrial ? 100 : this.listBet[this.betIdx], this.dataResult.haiSao, this, () => {\r\n                        this.showLineWins();\r\n                    });\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    public onSpinResult(res: cmd.ReceivePlay | any) {\r\n\r\n        this.stopSpin();\r\n        //  cc.log(\"onSpinResult:\" + JSON.stringify(res));\r\n        // res = JSON.parse('{\"_pos\":78,\"_data\":{\"0\":1,\"1\":11,\"2\":185,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":6,\"11\":126,\"12\":1,\"13\":0,\"14\":29,\"15\":52,\"16\":44,\"17\":49,\"18\":44,\"19\":55,\"20\":44,\"21\":51,\"22\":44,\"23\":48,\"24\":44,\"25\":56,\"26\":44,\"27\":53,\"28\":44,\"29\":51,\"30\":44,\"31\":52,\"32\":44,\"33\":50,\"34\":44,\"35\":51,\"36\":44,\"37\":51,\"38\":44,\"39\":54,\"40\":44,\"41\":51,\"42\":44,\"43\":55,\"44\":0,\"45\":9,\"46\":51,\"47\":44,\"48\":57,\"49\":44,\"50\":49,\"51\":48,\"52\":44,\"53\":49,\"54\":57,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":15,\"64\":60,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":2,\"70\":78,\"71\":76,\"72\":36},\"_length\":73,\"_controllerId\":1,\"_cmdId\":3001,\"_error\":0,\"ref\":1662,\"result\":1,\"matrix\":\"4,1,7,3,0,8,5,3,4,2,3,3,6,3,7\",\"linesWin\":\"3,9,10,19\",\"haiSao\":\"\",\"prize\":3900,\"currentMoney\":38685732,\"isFree\":false,\"itemsWild\":\"\"}');\r\n        var successResult = [0, 1, 2, 3, 4, 5, 6];\r\n        //res.result == 5 //bonus\r\n        //res.result == 0 //khong an\r\n        //res.result == 1 //thang thuong\r\n        //res.result == 2 //thang lon\r\n        //res.result == 3 //no hu\r\n        //res.result == 6 //thang cuc lon\r\n        if (successResult.indexOf(res.result) === -1) {\r\n            this.isSpined = true;\r\n\r\n            this.toggleAuto.isChecked = false;\r\n            this.toggleAuto.interactable = true;\r\n            this.toggleBoost.isChecked = false;\r\n            this.toggleBoost.interactable = true;\r\n\r\n\r\n            this.setEnabledAllButtons(true);\r\n            switch (res.result) {\r\n                case 102:\r\n                    this.showToast(App.instance.getTextLang('txt_not_enough'));\r\n                    break;\r\n                default:\r\n                    this.showToast(App.instance.getTextLang('txt_unknown_error1'));\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n        this.lastSpinRes = res;\r\n        this.columnsWild.length = 0;\r\n\r\n        let isTrail = this.mIsTrial;\r\n        if (!isTrail && !this.lastSpinRes.isFree) {\r\n            let curMoney = Configs.Login.Coin - this.arrLineSelect.length * this.listBet[this.betIdx];\r\n            Tween.numberTo(this.lblCoin, curMoney, 0.3);\r\n            Configs.Login.Coin = res.currentMoney;\r\n        }\r\n\r\n\r\n        this.numberSpinReel = new Array(this.arrReel.length);\r\n        this.dataResult = res;\r\n        this.isHaveResultSpin = true;\r\n\r\n        for (var i = 0; i < this.arrReel.length; i++) {\r\n            this.beginSpinReel(i);\r\n        }\r\n\r\n        return;\r\n        let matrix = res.matrix.split(\",\");\r\n        let timeScale = this.toggleBoost.isChecked ? 0.5 : 1;\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundSpin, false, 1);\r\n        }\r\n        for (let i = 0; i < this.reels.childrenCount; i++) {\r\n            let roll = this.reels.children[i];\r\n            let step1Pos = this.mHeightItem * 0.3;\r\n            let step2Pos = -this.mHeightItem * roll.childrenCount + this.mHeightItem * 3 - this.mHeightItem * 0.3;\r\n            let step3Pos = -this.mHeightItem * roll.childrenCount + this.mHeightItem * 3;\r\n            roll.runAction(cc.sequence(\r\n                cc.delayTime(0.2 * i * timeScale),\r\n                cc.moveTo(0.2 * timeScale, cc.v2(roll.position.x, step1Pos)).easing(cc.easeQuadraticActionOut()),\r\n                cc.moveTo((this.spinDuration + this.addSpinDuration * i) * timeScale, cc.v2(roll.position.x, step2Pos)).easing(cc.easeQuadraticActionInOut()),\r\n                cc.moveTo(0.2 * timeScale, cc.v2(roll.position.x, step3Pos)).easing(cc.easeQuadraticActionIn()),\r\n                cc.callFunc(() => {\r\n                    roll.setPosition(cc.v2(roll.position.x, 0));\r\n                    if (this.soundSlotState == 1) {\r\n                        cc.audioEngine.play(this.soundEndSpin, false, 1);\r\n                    }\r\n                    if (i == 4) {\r\n                        //find columns wild\r\n                        for (let j = 0; j < matrix.length; j++) {\r\n                            if (parseInt(matrix[j]) == this.wildItemId) {\r\n                                let c = j % 5;\r\n                                if (this.columnsWild.indexOf(c) == -1) this.columnsWild.push(c);\r\n                            }\r\n                        }\r\n\r\n                        //replace wild items in columns\r\n                        for (let j = 0; j < this.columnsWild.length; j++) {\r\n                            let c = this.columnsWild[j];\r\n                            let children = this.reels.children[c].children;\r\n                            children[2].getComponent(Slot10Item).setId(this.wildItemId);\r\n                            children[1].getComponent(Slot10Item).setId(this.wildItemId);\r\n                            children[0].getComponent(Slot10Item).setId(this.wildItemId);\r\n\r\n                            // children[2].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[this.wildItemId];\r\n                            // children[1].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[this.wildItemId];\r\n                            // children[0].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[this.wildItemId];\r\n                            this.iconWildColumns.children[c].active = true;\r\n                            if (this.soundSlotState == 1) {\r\n                                cc.audioEngine.play(this.soundSpinWin, false, 1);\r\n                            }\r\n                            this.iconWildColumns.children[c].getComponent(\"sp.Skeleton\").setAnimation(0, \"animation\", false);\r\n                        }\r\n                        if (this.columnsWild.length > 0) {\r\n                            roll.runAction(cc.sequence(\r\n                                cc.delayTime(2.6),\r\n                                cc.callFunc(() => {\r\n                                    for (let i = 0; i < this.iconWildColumns.childrenCount; i++) {\r\n                                        this.iconWildColumns.children[i].active = false;\r\n                                    }\r\n                                }),\r\n                                cc.delayTime(0.1),\r\n                                cc.callFunc(() => {\r\n                                    this.spined();\r\n                                })\r\n                            ));\r\n                        } else {\r\n                            this.spined();\r\n                        }\r\n                    }\r\n                })\r\n            ));\r\n\r\n            //rool = reel\r\n            roll.runAction(cc.sequence(\r\n                cc.delayTime((0.47 + 0.2 * i) * timeScale),\r\n                cc.callFunc(() => {\r\n                    let listItemNode = roll.children;\r\n                    // listItem[2].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[parseInt(matrix[i])];\r\n                    // listItem[1].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[parseInt(matrix[5 + i])];\r\n                    // listItem[0].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[parseInt(matrix[10 + i])];\r\n                    // listItem[listItem.length - 1].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[parseInt(matrix[i])];\r\n                    // listItem[listItem.length - 2].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[parseInt(matrix[5 + i])];\r\n                    // listItem[listItem.length - 3].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[parseInt(matrix[10 + i])];\r\n\r\n                    listItemNode[2].getComponent(Slot10Item).setId(parseInt(matrix[i]));\r\n                    listItemNode[1].getComponent(Slot10Item).setId(parseInt(matrix[5 + i]));\r\n                    listItemNode[0].getComponent(Slot10Item).setId(parseInt(matrix[10 + i]));\r\n                    listItemNode[listItemNode.length - 1].getComponent(Slot10Item).setId(parseInt(matrix[i]));\r\n                    listItemNode[listItemNode.length - 2].getComponent(Slot10Item).setId(parseInt(matrix[5 + i]));\r\n                    listItemNode[listItemNode.length - 3].getComponent(Slot10Item).setId(parseInt(matrix[10 + i]));\r\n                })\r\n            ));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    actBack() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        SlotNetworkClient.getInstance().send(new cmd.SendUnSubcribe(this.betIdx));\r\n\r\n\r\n        this.mSlotLobby.node.active = true;\r\n    }\r\n\r\n    actHidden() {\r\n        this.showToast(App.instance.getTextLang('txt_function_in_development'));\r\n    }\r\n\r\n    actBetUp() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n\r\n        let isTrail = this.mIsTrial;\r\n        if (isTrail) {\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.betIdx < this.listBet.length - 1) {\r\n            this.dailyFreeSpin = 0;\r\n            this.lblFreeSpinCount.node.parent.active = false;\r\n            SlotNetworkClient.getInstance().send(new cmd.SendChangeRoom(this.betIdx, ++this.betIdx));\r\n            this.lblBet.string = this.listBetLabel[this.betIdx];\r\n            Tween.numberTo(this.lblTotalBet, this.arrLineSelect.length * this.listBet[this.betIdx], 0.3, (n) => { return this.moneyToK(n) });\r\n        }\r\n    }\r\n\r\n    actBetDown() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n\r\n        let isTrail = this.mIsTrial;\r\n        if (isTrail) {\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.betIdx > 0) {\r\n            this.dailyFreeSpin = 0;\r\n            this.lblFreeSpinCount.node.parent.active = false;\r\n            SlotNetworkClient.getInstance().send(new cmd.SendChangeRoom(this.betIdx, --this.betIdx));\r\n            this.lblBet.string = this.listBetLabel[this.betIdx];\r\n            Tween.numberTo(this.lblTotalBet, this.arrLineSelect.length * this.listBet[this.betIdx], 0.3, (n) => { return this.moneyToK(n) });\r\n        }\r\n    }\r\n\r\n    actLine() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n\r\n        let isTrail = this.mIsTrial;\r\n        if (isTrail) {\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        this.popupSelectLine.show();\r\n    }\r\n\r\n    actSetting() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.panelSetting.active = !this.panelSetting.active;\r\n    }\r\n\r\n    toggleTrialOnCheck() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n\r\n        this.mIsTrial = !this.mIsTrial;\r\n\r\n        let isTrail = this.mIsTrial;\r\n        if (isTrail) {\r\n            this.btnPlayReal.node.active = true;\r\n            this.btnPlayTry.node.active = false;\r\n            this.lblLine.string = \"25\";\r\n            this.lblBet.string = \"100\";\r\n            Tween.numberTo(this.lblTotalBet, 2500, 0.3, (n) => this.moneyToK(n));\r\n        } else {\r\n            this.btnPlayReal.node.active = false;\r\n            this.btnPlayTry.node.active = true;\r\n            this.lblLine.string = this.arrLineSelect.length.toString();\r\n            this.lblBet.string = this.listBetLabel[this.betIdx];\r\n            Tween.numberTo(this.lblTotalBet, this.arrLineSelect.length * this.listBet[this.betIdx], 0.3, (n) => this.moneyToK(n));\r\n        }\r\n    }\r\n\r\n    toggleAutoOnCheck() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n\r\n        let isTrail = this.mIsTrial;\r\n        if (this.toggleAuto.isChecked && isTrail) {\r\n            this.toggleAuto.isChecked = false;\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.toggleAuto.isChecked) {\r\n            this.spin();\r\n            this.toggleBoost.interactable = false;\r\n        } else {\r\n            this.toggleBoost.interactable = true;\r\n            if (this.isSpined) {\r\n                this.setEnabledAllButtons(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleBoostOnCheck() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n\r\n        let isTrail = this.mIsTrial;\r\n        if (this.toggleBoost.isChecked && isTrail) {\r\n            this.toggleBoost.isChecked = false;\r\n            this.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.toggleBoost.isChecked) {\r\n            this.spin();\r\n            this.toggleAuto.interactable = false;\r\n        } else {\r\n            this.toggleAuto.interactable = true;\r\n            if (this.isSpined) {\r\n                this.setEnabledAllButtons(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    //music setting\r\n\r\n    private soundInit() {\r\n        // musicSave :   0 == OFF , 1 == ON\r\n        var musicSave = cc.sys.localStorage.getItem(\"music_Slot_7\");\r\n        if (musicSave != null) {\r\n            this.musicSlotState = parseInt(musicSave);\r\n        } else {\r\n            this.musicSlotState = 1;\r\n            cc.sys.localStorage.setItem(\"music_Slot_7\", \"1\");\r\n        }\r\n\r\n        // soundSave :   0 == OFF , 1 == ON\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_7\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n            cc.sys.localStorage.setItem(\"sound_Slot_7\", \"1\");\r\n        }\r\n\r\n        if (this.musicSlotState == 0) {\r\n            //this.musicOff.active = true;\r\n        } else {\r\n            //this.musicOff.active = false;\r\n        }\r\n\r\n        if (this.soundSlotState == 0) {\r\n            //this.soundOff.active = true;\r\n        } else {\r\n            //this.soundOff.active = false;\r\n        }\r\n\r\n        if (this.musicSlotState == 1) {\r\n\r\n            this.remoteMusicBackground = cc.audioEngine.playMusic(this.soundBg, true);\r\n        }\r\n    }\r\n    settingMusic() {\r\n        //this.musicOff.active = !this.musicOff.active;\r\n        if (!this.togglgeMusic.isChecked) {\r\n            cc.audioEngine.stop(this.remoteMusicBackground);\r\n            this.musicSlotState = 0;\r\n        } else {\r\n            this.remoteMusicBackground = cc.audioEngine.playMusic(this.soundBg, true);\r\n            this.musicSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n\r\n        cc.sys.localStorage.setItem(\"music_Slot_7\", \"\" + this.musicSlotState);\r\n    }\r\n    settingSound() {\r\n        if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n\r\n        if (!this.toggleSound.isChecked) {\r\n            this.soundSlotState = 0;\r\n        } else {\r\n\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        cc.sys.localStorage.setItem(\"music_Slot_7\", \"\" + this.soundSlotState);\r\n    }\r\n    changeAllItemToDark(state) {\r\n        for (let i = 0; i < this.reels.childrenCount; i++) {\r\n            let col = this.reels.children[i];\r\n            for (let j = 0; j < col.childrenCount; j++) {\r\n                let item = col.children[j];\r\n                let sprite = item.getComponentInChildren(cc.Sprite);\r\n                let spine = item.getComponentInChildren(sp.Skeleton);\r\n                spine.node.color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n                sprite.node.color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n                spine.node.active = false;\r\n                sprite.node.active = true;\r\n\r\n            }\r\n        }\r\n    }\r\n    getItemWinInLine(lineId) {\r\n        let lineArr = this.mapLine[lineId];\r\n        let arrItem = [];\r\n        this.arrRealItem = [];\r\n        for (let i = 0; i < 15; i++) {\r\n            this.arrRealItem.push(this.arrUIItemIcon[i + 5]);\r\n        }\r\n        for (let i = 0; i < lineArr.length; i++) {\r\n            arrItem.push(this.arrRealItem[lineArr[i]]);\r\n        }\r\n        return arrItem;\r\n    }\r\n    getItemIdWinInLine(arrId: Array<number>) {\r\n        let count = 0;\r\n        let idWin = -1;\r\n        arrId.forEach((id) => {\r\n            let size = arrId.filter(x => x == id && x != 1).length;\r\n            if (size >= count) {\r\n                count = size;\r\n                idWin = id;\r\n            }\r\n        })\r\n        return idWin;\r\n    }\r\n}\r\n","namespace Slot10 {\r\n    export class TrialResults {\r\n        static results = [\r\n            {\"_pos\":111,\"_data\":{\"0\":1,\"1\":11,\"2\":185,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":120,\"10\":158,\"11\":158,\"12\":5,\"13\":0,\"14\":29,\"15\":51,\"16\":44,\"17\":50,\"18\":44,\"19\":49,\"20\":44,\"21\":50,\"22\":44,\"23\":51,\"24\":44,\"25\":51,\"26\":44,\"27\":52,\"28\":44,\"29\":48,\"30\":44,\"31\":51,\"32\":44,\"33\":50,\"34\":44,\"35\":50,\"36\":44,\"37\":53,\"38\":44,\"39\":50,\"40\":44,\"41\":53,\"42\":44,\"43\":48,\"44\":0,\"45\":21,\"46\":53,\"47\":44,\"48\":54,\"49\":44,\"50\":49,\"51\":50,\"52\":44,\"53\":49,\"54\":52,\"55\":44,\"56\":49,\"57\":56,\"58\":44,\"59\":50,\"60\":49,\"61\":44,\"62\":50,\"63\":50,\"64\":44,\"65\":50,\"66\":53,\"67\":0,\"68\":21,\"69\":56,\"70\":44,\"71\":50,\"72\":44,\"73\":49,\"74\":44,\"75\":52,\"76\":44,\"77\":49,\"78\":44,\"79\":49,\"80\":44,\"81\":49,\"82\":44,\"83\":50,\"84\":44,\"85\":49,\"86\":44,\"87\":49,\"88\":44,\"89\":49,\"90\":0,\"91\":0,\"92\":0,\"93\":0,\"94\":0,\"95\":0,\"96\":239,\"97\":116,\"98\":0,\"99\":0,\"100\":0,\"101\":0,\"102\":1,\"103\":9,\"104\":252,\"105\":241},\"_length\":106,\"_controllerId\":1,\"_cmdId\":3001,\"_error\":0,\"ref\":7904926,\"result\":5,\"matrix\":\"3,2,1,2,3,3,4,0,3,2,2,5,2,5,0\",\"linesWin\":\"5,6,12,14,18,21,22,25\",\"haiSao\":\"8,2,1,4,1,1,1,2,1,1,1\",\"prize\":61300,\"currentMoney\":17431793,\"isFree\":false,\"itemsWild\":\"\"},\r\n            {\"_pos\":114,\"_data\":{\"0\":1,\"1\":11,\"2\":185,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":120,\"10\":158,\"11\":159,\"12\":5,\"13\":0,\"14\":29,\"15\":55,\"16\":44,\"17\":50,\"18\":44,\"19\":50,\"20\":44,\"21\":50,\"22\":44,\"23\":56,\"24\":44,\"25\":55,\"26\":44,\"27\":54,\"28\":44,\"29\":56,\"30\":44,\"31\":56,\"32\":44,\"33\":50,\"34\":44,\"35\":50,\"36\":44,\"37\":51,\"38\":44,\"39\":56,\"40\":44,\"41\":53,\"42\":44,\"43\":50,\"44\":0,\"45\":22,\"46\":50,\"47\":44,\"48\":52,\"49\":44,\"50\":53,\"51\":44,\"52\":54,\"53\":44,\"54\":49,\"55\":50,\"56\":44,\"57\":49,\"58\":57,\"59\":44,\"60\":50,\"61\":49,\"62\":44,\"63\":50,\"64\":50,\"65\":44,\"66\":50,\"67\":53,\"68\":0,\"69\":23,\"70\":56,\"71\":44,\"72\":49,\"73\":44,\"74\":48,\"75\":44,\"76\":49,\"77\":44,\"78\":49,\"79\":44,\"80\":50,\"81\":44,\"82\":49,\"83\":44,\"84\":49,\"85\":44,\"86\":49,\"87\":44,\"88\":49,\"89\":44,\"90\":49,\"91\":44,\"92\":49,\"93\":0,\"94\":0,\"95\":0,\"96\":0,\"97\":0,\"98\":1,\"99\":138,\"100\":136,\"101\":0,\"102\":0,\"103\":0,\"104\":0,\"105\":1,\"106\":11,\"107\":125,\"108\":181},\"_length\":109,\"_controllerId\":1,\"_cmdId\":3001,\"_error\":0,\"ref\":7904927,\"result\":5,\"matrix\":\"7,2,2,2,8,7,6,8,8,2,2,3,8,5,2\",\"linesWin\":\"2,4,5,6,12,19,21,22,25\",\"haiSao\":\"8,1,0,1,1,2,1,1,1,1,1,1\",\"prize\":101000,\"currentMoney\":17530293,\"isFree\":false,\"itemsWild\":\"\"},\r\n            {\"_pos\":116,\"_data\":{\"0\":1,\"1\":11,\"2\":185,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":120,\"10\":158,\"11\":160,\"12\":5,\"13\":0,\"14\":29,\"15\":52,\"16\":44,\"17\":50,\"18\":44,\"19\":50,\"20\":44,\"21\":50,\"22\":44,\"23\":53,\"24\":44,\"25\":50,\"26\":44,\"27\":52,\"28\":44,\"29\":55,\"30\":44,\"31\":52,\"32\":44,\"33\":51,\"34\":44,\"35\":51,\"36\":44,\"37\":52,\"38\":44,\"39\":52,\"40\":44,\"41\":54,\"42\":44,\"43\":51,\"44\":0,\"45\":26,\"46\":50,\"47\":44,\"48\":53,\"49\":44,\"50\":54,\"51\":44,\"52\":49,\"53\":50,\"54\":44,\"55\":49,\"56\":52,\"57\":44,\"58\":49,\"59\":53,\"60\":44,\"61\":49,\"62\":55,\"63\":44,\"64\":50,\"65\":48,\"66\":44,\"67\":50,\"68\":49,\"69\":44,\"70\":50,\"71\":50,\"72\":0,\"73\":21,\"74\":52,\"75\":44,\"76\":50,\"77\":44,\"78\":49,\"79\":44,\"80\":49,\"81\":44,\"82\":49,\"83\":44,\"84\":49,\"85\":44,\"86\":49,\"87\":44,\"88\":50,\"89\":44,\"90\":49,\"91\":44,\"92\":49,\"93\":44,\"94\":49,\"95\":0,\"96\":0,\"97\":0,\"98\":0,\"99\":0,\"100\":0,\"101\":116,\"102\":104,\"103\":0,\"104\":0,\"105\":0,\"106\":0,\"107\":1,\"108\":11,\"109\":232,\"110\":89},\"_length\":111,\"_controllerId\":1,\"_cmdId\":3001,\"_error\":0,\"ref\":7904928,\"result\":5,\"matrix\":\"4,2,2,2,5,2,4,7,4,3,3,4,4,6,3\",\"linesWin\":\"2,5,6,12,14,15,17,20,21,22\",\"haiSao\":\"4,2,1,1,1,1,1,2,1,1,1\",\"prize\":29800,\"currentMoney\":17557593,\"isFree\":false,\"itemsWild\":\"\"},\r\n            {\"_pos\":95,\"_data\":{\"0\":1,\"1\":11,\"2\":185,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":120,\"10\":158,\"11\":161,\"12\":3,\"13\":0,\"14\":29,\"15\":53,\"16\":44,\"17\":48,\"18\":44,\"19\":48,\"20\":44,\"21\":48,\"22\":44,\"23\":55,\"24\":44,\"25\":48,\"26\":44,\"27\":51,\"28\":44,\"29\":52,\"30\":44,\"31\":48,\"32\":44,\"33\":48,\"34\":44,\"35\":53,\"36\":44,\"37\":52,\"38\":44,\"39\":51,\"40\":44,\"41\":55,\"42\":44,\"43\":56,\"44\":0,\"45\":26,\"46\":49,\"47\":44,\"48\":50,\"49\":44,\"50\":54,\"51\":44,\"52\":49,\"53\":48,\"54\":44,\"55\":49,\"56\":49,\"57\":44,\"58\":49,\"59\":54,\"60\":44,\"61\":49,\"62\":55,\"63\":44,\"64\":50,\"65\":49,\"66\":44,\"67\":50,\"68\":50,\"69\":44,\"70\":50,\"71\":51,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":9,\"80\":67,\"81\":169,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":1,\"87\":21,\"88\":34,\"89\":62},\"_length\":90,\"_controllerId\":1,\"_cmdId\":3001,\"_error\":0,\"ref\":7904929,\"result\":3,\"matrix\":\"5,0,0,0,7,0,3,4,0,0,5,4,3,7,8\",\"linesWin\":\"1,2,6,10,11,16,17,21,22,23\",\"haiSao\":\"\",\"prize\":607145,\"currentMoney\":18162238,\"isFree\":false,\"itemsWild\":\"\"},\r\n            {\"_pos\":95,\"_data\":{\"0\":1,\"1\":11,\"2\":185,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":120,\"10\":158,\"11\":161,\"12\":3,\"13\":0,\"14\":29,\"15\":53,\"16\":44,\"17\":48,\"18\":44,\"19\":48,\"20\":44,\"21\":48,\"22\":44,\"23\":55,\"24\":44,\"25\":48,\"26\":44,\"27\":51,\"28\":44,\"29\":52,\"30\":44,\"31\":48,\"32\":44,\"33\":48,\"34\":44,\"35\":53,\"36\":44,\"37\":52,\"38\":44,\"39\":51,\"40\":44,\"41\":55,\"42\":44,\"43\":56,\"44\":0,\"45\":26,\"46\":49,\"47\":44,\"48\":50,\"49\":44,\"50\":54,\"51\":44,\"52\":49,\"53\":48,\"54\":44,\"55\":49,\"56\":49,\"57\":44,\"58\":49,\"59\":54,\"60\":44,\"61\":49,\"62\":55,\"63\":44,\"64\":50,\"65\":49,\"66\":44,\"67\":50,\"68\":50,\"69\":44,\"70\":50,\"71\":51,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":9,\"80\":67,\"81\":169,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":1,\"87\":21,\"88\":34,\"89\":62},\"_length\":90,\"_controllerId\":1,\"_cmdId\":3001,\"_error\":0,\"ref\":7904929,\"result\":3,\"matrix\":\"5,0,0,0,7,0,3,4,0,0,5,4,3,7,8\",\"linesWin\":\"1,2,6,10,11,16,17,21,22,23\",\"haiSao\":\"\",\"prize\":607145,\"currentMoney\":18162238,\"isFree\":false,\"itemsWild\":\"\"},\r\n            {\"_pos\":88,\"_data\":{\"0\":1,\"1\":11,\"2\":185,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":120,\"10\":158,\"11\":163,\"12\":3,\"13\":0,\"14\":29,\"15\":50,\"16\":44,\"17\":48,\"18\":44,\"19\":54,\"20\":44,\"21\":51,\"22\":44,\"23\":53,\"24\":44,\"25\":48,\"26\":44,\"27\":51,\"28\":44,\"29\":48,\"30\":44,\"31\":56,\"32\":44,\"33\":48,\"34\":44,\"35\":52,\"36\":44,\"37\":56,\"38\":44,\"39\":53,\"40\":44,\"41\":48,\"42\":44,\"43\":52,\"44\":0,\"45\":19,\"46\":49,\"47\":44,\"48\":54,\"49\":44,\"50\":55,\"51\":44,\"52\":56,\"53\":44,\"54\":49,\"55\":48,\"56\":44,\"57\":49,\"58\":49,\"59\":44,\"60\":50,\"61\":50,\"62\":44,\"63\":50,\"64\":51,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":7,\"73\":252,\"74\":235,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":1,\"80\":38,\"81\":33,\"82\":181},\"_length\":83,\"_controllerId\":1,\"_cmdId\":3001,\"_error\":0,\"ref\":7904931,\"result\":3,\"matrix\":\"2,0,6,3,5,0,3,0,8,0,4,8,5,0,4\",\"linesWin\":\"1,6,7,8,10,11,22,23\",\"haiSao\":\"\",\"prize\":523499,\"currentMoney\":19276213,\"isFree\":false,\"itemsWild\":\"\"}\r\n        ]\r\n    }\r\n}\r\nexport default Slot10.TrialResults; "],"file":"index.js"}