{"version":3,"sources":["assets/Slot4/Slot4Script/Slot4.Lobby.ts","assets/Slot4/Slot4Script/Slot4.PopupBonus.ts","assets/Slot4/Slot4Script/Slot4ChooseLine.ts","assets/Slot4/Slot4Script/Slot4Cmd.ts","assets/Slot4/Slot4Script/Slot4Controller.ts","assets/Slot4/Slot4Script/Slot4Glory.ts","assets/Slot4/Slot4Script/Slot4History.ts","assets/Slot4/Slot4Script/Slot4Icon.ts","assets/Slot4/Slot4Script/Slot4TrialResult.ts","assets/Slot4/Slot4Script/Slot4Tutorial.ts"],"names":["App_1","require","Tween_1","SlotNetworkClient_1","Slot4Cmd_1","_a","cc","_decorator","ccclass","property","Slot4Lobby","_super","_this","apply","this","arguments","listPot","rooms","mSlotController","__extends","prototype","init","pSlot3Controller","node","zIndex","show","active","showAnimation","hide","i","length","nodeBox","Tween","stopAllByTarget","opacity","position","v3","tween","to","easing","start","onBtnBack","isSound","audioEngine","play","soundClick","default","getInstance","send","SendUnSubcribe","betId","stopAll","instance","loadScene","onBtnTry","SendSubcribe","onJoinRoom","isTrial","onUpdateJackpot","pData","res","ResUpdateJackpotSlots","resJson","JSON","parse","pots","numberTo","p","__decorate","Label","Node","Component","exports","Dialog_1","PopupBonus","items","nodeBoxNotify","txtNotify","lblLeft","lblFactor","lblHeso","lblWin","factor","left","betValue","onFinished","onSpecialFinished","dataBonus","dataSpecial","heso","win","controller","_loop_1","this_1","children","getChildByName","getComponent","Button","on","onBtnSoundTouchBonus","value","string","setAnimation","addAnimation","hidden","childrenCount","showBonus","bonus","call","getComponentInChildren","sp","Skeleton","btn","interactable","arrBonus","split","push","Number","onBtnSoundSumary","showPopup","parent","onBtnExit","hidePopup","scheduleOnce","dismiss","Slot4ChooseLine","btnClose","lineParent","listToggle","SELECTED","onSelectedChanged","toggle","Toggle","getLineSelected","lines","Array","selectAll","isChecked","deSelectAll","selectEven","selectOdd","cmd","Network_InPacket_1","Network_OutPacket_1","Code","SUBCRIBE","UNSUBCRIBE","CHANGE_ROOM","PLAY","UPDATE_RESULT","UPDATE_POT","AUTO","STOP_AUTO","FORCE_STOP_AUTO","DATE_X2","BIG_WIN","FREE","FREE_DAI_LY","MINIMIZE","UPDATE_JACKPOT_SLOTS","SUBCRIBE_HALL_SLOT","ReceiveFreeDaiLy","data","freeSpin","getByte","getString","roomId","initData","setControllerId","setCmdId","packHeader","putByte","updateSize","SendPlay","putString","SendChangeRoom","roomLeavedId","roomJoinedId","ReceiveUpdatePot","valueRoom1","valueRoom2","valueRoom3","x21","x22","getLong","ReceiveResult","ref","result","matrix","linesWin","haiSao","prize","currentMoney","isFreeSpin","ratio","currentNumberFreeSpin","ReceiveDateX2","ngayX2","remain","currentRoom","ReqSubcribeHallSlot","Configs_1","Slot4ChooseLine_1","Slot4TrialResult_1","Slot4_Lobby_1","Slot4_PopupBonus_1","Slot4Tutorial_1","BroadcastReceiver_1","Utils_1","ItemIconSlot25_1","Slot4Controller","btnBack","nodeCoin","btnLine","lblFreeSpinCount","nodeBoxSetting","toggleMusic","toggleSound","popupBonus","skeSpin","nodeDemo","nodeWinJackpot","txtWinJackpot","nodeGamePlay","mSlotLobby","jackpotLabel","moneyLabel","totalLineLabel","btnSpin","toggleFast","winNormalBg","bonusNode","bigWinNode","txtWinBigWin","jackpotNode","freespinNode","winLabel","freespinCurrent","lineWinParent","totalWinLabel","totalBetLabel","chooseLineScript","popupGuide","musicLobby","musicGame","musicBonus","soundStartSpin","soundRepeatSpin","soundEndSpin","soundSpinWin","soundBigWin","soundJackpot","soundBonus","soundFreeSpin","soundtouchBonus","soundSmumary","listActiveItem","TIME_DELAY_SHOW_LINE","dailyFreeSpin","listBet","listBetString","arrLineSelected","isSpining","mapLine","isFastCurrent","isFast","arrReel","distanceReel","iconSFBlurArr100","iconSFArr100","arrSkeletonIcon100","iconSFBlurArr1K","iconSFArr1K","arrSkeletonIcon1K","iconSFBlurArr10K","iconSFArr10K","arrSkeletonIcon10K","arrUIItemIcon","numberSpinReel","isHaveResultSpin","dataResult","isFirst","isMusic","mutipleJpNode","audioIdRepeatSpin","addOnClose","addListener","getCmdId","spinResult","hideGamePlay","sendCheck","register","USER_UPDATE_COIN","Login","Coin","showErrLoading","checkConnect","showLoading","toString","initMutipleJPNode","assetManager","getBundle","load","Prefab","err1","prefab","instantiate","director","getScene","setInfo","showAnimations","nodeItem","indexCol","delay","showGamePlay","playMusic","randomIconList","showCoins","number","betIdTmp","totalbet","setButtonEnable","index","itemId","Math","floor","random","changeSpineIcon","spriteIcon","spineIcon","animation","loop","randomBetween","min","max","spinClick","hideWinEffect","hideLineWin","rIdx","randomRangeInt","results","alertDialog","showMsg","getTextLang","indexOf","beginSpinReel","spinFinish","hasDelay","that","runAction","sequence","delayTime","callFunc","setButtonFlash","showWinEffect","self","showLineWin","audioIdJackpot","jackpotSpine","stop","indexReel","x","loopSpinReel","processLoopSpinReel","itemIdTmp","changeSpriteBlurByItemId","endSpinReel","getSpriteFrameIconBlur","indexIcon","getSpriteFrameIcon","getSpineIcon","onBtnToggleMusic","setMusicVolume","onBtnToggleSound","onBtnHistory","onBtnHideSetting","onBtnHistoryJackpot","onBtnSoundClick","onBtnSetting","line","lineNode","stopAction","stopAllActions","forEach","element","color","Color","WHITE","GRAY","changeBet","chooseBet","event","bet","oldIdx","parseInt","showGuide","closeGuide","showChooseLine","changeSpeed","setAutoSpin","actBack","type","AudioClip","SpriteFrame","SkeletonData","Http_1","Slot4Glory","lblPage","itemTemplate","page","maxPage","loadData","actNextPage","actPrevPage","get","App","API","c","gn","err","item","destroy","i_1","itemData","formatNumber","Slot4History","un","Nickname","NewClass","nodeIcon","fxJackpot","fxBonus","fxFree","onLoad","Animation","setSprite","sf","Sprite","spriteFrame","setSpine","id","scale","TrialResults","_pos","_data","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","_length","_controllerId","_cmdId","_error","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","spriteTutorial","sfTutorialArr"],"mappings":"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","sourcesContent":["\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport SlotNetworkClient from \"../../Lobby/LobbyScript/Script/networks/SlotNetworkClient\";\r\nimport cmd from \"./Slot4Cmd\";\r\nimport Slot4Controller from \"./Slot4Controller\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot4Lobby extends cc.Component {\r\n\r\n    @property([cc.Label])\r\n    listPot : cc.Label[] = [];\r\n    @property([cc.Node])\r\n    rooms : cc.Node[] = [];\r\n\r\n    mSlotController : Slot4Controller = null;\r\n\r\n    public init(pSlot3Controller : Slot4Controller){\r\n        this.mSlotController = pSlot3Controller;\r\n        this.node.zIndex=2;\r\n        this.show();\r\n    }\r\n\r\n    show(){\r\n        this.node.active = true;\r\n        this.showAnimation();\r\n    }\r\n\r\n    hide(){\r\n        this.node.active = false;\r\n    }\r\n\r\n    showAnimation () {\r\n        var self = this;\r\n        for(var i=0;i<this.rooms.length;i++){\r\n            var nodeBox = this.rooms[i]\r\n            cc.Tween.stopAllByTarget(nodeBox);\r\n            nodeBox.opacity = 0;\r\n            if (i == 0) {\r\n                nodeBox.position = cc.v3(-200, 0,0);\r\n            }\r\n            else if (i == 1) {\r\n                nodeBox.position = cc.v3(0, -200,0);\r\n            }\r\n            else if (i == 2) {\r\n                nodeBox.position = cc.v3(0, 200,0);\r\n            }\r\n            else {\r\n                nodeBox.position = cc.v3(200, 0,0);\r\n            }\r\n            cc.tween(nodeBox)\r\n                .to(1, { position: cc.v3(0, 0,0), opacity: 255 }, { easing: \"backOut\" })\r\n                .start();\r\n        }\r\n    }\r\n    \r\n    public onBtnBack(){\r\n        if (this.mSlotController.isSound) {\r\n            cc.audioEngine.play(this.mSlotController.soundClick, false, 1);\r\n        }\r\n        SlotNetworkClient.getInstance().send(new cmd.SendUnSubcribe(this.mSlotController.betId));\r\n        cc.audioEngine.stopAll();\r\n        App.instance.loadScene(\"Lobby\");\r\n    }\r\n\r\n    private onBtnTry(){\r\n        this.mSlotController.betId = 0;\r\n        SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(this.mSlotController.betId));\r\n        this.node.active = false;\r\n        \r\n        this.mSlotController.onJoinRoom(null);\r\n        this.mSlotController.isTrial = false;\r\n    }\r\n\r\n\r\n    public onUpdateJackpot(pData){\r\n        let res = new cmd.ResUpdateJackpotSlots(pData);\r\n        let resJson = JSON.parse(res.pots);\r\n        Tween.numberTo(this.listPot[0], resJson['tamhung']['100'].p, 0.3);\r\n        Tween.numberTo(this.listPot[1], resJson['tamhung']['1000'].p, 0.3);\r\n        Tween.numberTo(this.listPot[2], resJson['tamhung']['10000'].p, 0.3);\r\n    }\r\n}\r\n","\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Slot4Controller from \"./Slot4Controller\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupBonus extends Dialog {\r\n    @property(cc.Node)\r\n    items: cc.Node = null;\r\n    @property(cc.Node)\r\n    nodeBoxNotify: cc.Node = null;\r\n    @property(cc.Label)\r\n    txtNotify: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblLeft: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblFactor: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblHeso: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblWin: cc.Label = null;\r\n    private factor = 1;\r\n    private left = 0;\r\n    private betValue = 0;\r\n    private onFinished: () => void = null;\r\n    private onSpecialFinished: () => void = null;\r\n    private dataBonus: Array<number> = [];\r\n    private dataSpecial: number = -1;\r\n    private heso:number = 0;\r\n    private win : number = 0;\r\n    private controller:Slot4Controller = null;\r\n    start() {\r\n        \r\n        for (let i = 0; i < this.items.childrenCount; i++) {\r\n            let node = this.items.children[i];\r\n            node[\"btn\"] = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            node[\"label\"] = node.getChildByName(\"label\").getComponent(cc.Label);\r\n\r\n            node[\"btn\"].node.on(\"click\", () => {\r\n                this.controller.onBtnSoundTouchBonus();\r\n                var value = this.dataBonus[this.dataBonus.length - this.left];\r\n                //  cc.log(\"click:\"+value+\" : \"+node[\"is_open\"]);\r\n                if(node[\"is_open\"] == false && this.left > 0){\r\n                    node[\"is_open\"] = true;\r\n                    switch (value) {\r\n                        case 0:\r\n                            this.factor++;\r\n                            this.lblFactor.string = this.factor+\"\";\r\n                            node[\"btn_spine\"].setAnimation(0,\"idle_0\",true);\r\n                            node[\"btn_spine\"].addAnimation(1,\"open_0\",false); \r\n                            \r\n                            break;\r\n                        case 1:\r\n                            node[\"btn_spine\"].setAnimation(0,\"idle_1\",true);\r\n                            node[\"btn_spine\"].addAnimation(1,\"open_1\",false); \r\n                            node[\"label\"].node.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"], 4*this.betValue , 0.3);\r\n                            this.win += 4* this.betValue;\r\n                            Tween.numberTo(this.lblWin,this.win, 0.3);\r\n                            break;\r\n                       \r\n                        case 2:\r\n                            node[\"btn_spine\"].setAnimation(0,\"idle_2\",true);\r\n                            node[\"btn_spine\"].addAnimation(1,\"open_2\",false); \r\n                            node[\"label\"].node.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"],10* this.betValue * this.factor, 0.3);\r\n                            this.win += 10* this.betValue * this.factor;\r\n                            Tween.numberTo(this.lblWin,this.win, 0.3);\r\n                            break;\r\n                        case 3:\r\n                            node[\"btn_spine\"].setAnimation(0,\"idle_3\",true);\r\n                            node[\"btn_spine\"].addAnimation(1,\"open_3\",false); \r\n                            node[\"label\"].node.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"],15* this.betValue * this.factor, 0.3);\r\n                            this.win += 15* this.betValue * this.factor;\r\n                            Tween.numberTo(this.lblWin,this.win, 0.3);\r\n                            break;\r\n                        case 4:\r\n                            node[\"btn_spine\"].setAnimation(0,\"idle_4\",true);\r\n                            node[\"btn_spine\"].addAnimation(1,\"open_4\",false); \r\n                            node[\"label\"].node.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            this.win += 20* this.betValue * this.factor;\r\n                            Tween.numberTo(node[\"label\"],20* this.betValue * this.factor, 0.3);\r\n                            Tween.numberTo(this.lblWin,this.win, 0.3);\r\n                            break;\r\n                        \r\n\r\n                    }\r\n                    this.left--;\r\n                    this.lblLeft.string = \"\" + this.left;\r\n                    if (this.left <= 0) {\r\n                        this.hidden();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    showBonus(betValue: number, bonus: string,controller, onFinished: () => void) {\r\n        super.show();\r\n        this.controller = controller;\r\n        this.win = 0;\r\n        for (let i = 0; i < this.items.childrenCount; i++) {\r\n            let node = this.items.children[i];\r\n            node[\"btn\"] = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            node[\"btn_spine\"] = node[\"btn\"].getComponentInChildren(sp.Skeleton);\r\n            node[\"btn_spine\"].setAnimation(0,\"idle\",true);\r\n            node[\"btn_spine\"].addAnimation(1,\"appear\",false); \r\n            node[\"is_open\"] = false;\r\n        }\r\n        for (let i = 0; i < this.items.childrenCount; i++) {\r\n            let node = this.items.children[i];\r\n            let btn = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            btn.node.active = true;\r\n            btn.interactable = true;\r\n            node.getChildByName(\"label\").active = false;\r\n        }\r\n        this.betValue = betValue;\r\n        this.onFinished = onFinished;\r\n        let arrBonus = bonus.split(\",\");\r\n        this.dataBonus = [];\r\n        for (let i = 0; i < arrBonus.length; i++) {\r\n            this.dataBonus.push(Number(arrBonus[i]));\r\n        }\r\n        this.left = this.dataBonus.length - 1;\r\n        this.factor = 1;\r\n        this.lblLeft.string = \"\" + this.left;\r\n        this.lblFactor.string =  this.factor+\"\";\r\n        this.heso = this.dataBonus[0];\r\n        this.lblHeso.string = \"x\"+this.heso;\r\n    }\r\n\r\n    \r\n    hidden() {\r\n        this.controller.onBtnSoundSumary();\r\n        Tween.showPopup(this.nodeBoxNotify,this.nodeBoxNotify.parent);\r\n        Tween.numberTo(this.txtNotify,this.win, 0.3);\r\n        \r\n    }\r\n\r\n    onBtnExit(){\r\n        Tween.hidePopup(this.nodeBoxNotify,this.nodeBoxNotify.parent,false);\r\n        this.scheduleOnce(() => {\r\n            this.dismiss();\r\n            this.onFinished();\r\n        }, 1.5);\r\n    }\r\n}\r\nexport default PopupBonus;","import Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot4ChooseLine extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    nodeBox:cc.Node = null;\r\n    @property(cc.Button)\r\n    btnClose: cc.Button = null;\r\n    @property(cc.Node)\r\n    lineParent: cc.Node = null;\r\n\r\n    listToggle: cc.Toggle[] = [];\r\n    private readonly SELECTED = \"selected\";\r\n\r\n    onSelectedChanged: (lines: Array<number>) => void = null;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n        for(let i = 0; i < this.lineParent.childrenCount; i++) {\r\n            let node = this.lineParent.children[i];\r\n            let toggle = node.getComponent(cc.Toggle);\r\n            this.listToggle.push(toggle);\r\n            node[this.SELECTED] = true;\r\n            node.on('click', () => {\r\n                node[this.SELECTED] = !node[this.SELECTED];\r\n                // node.opacity = node[this.SELECTED] ? 255 : 80;\r\n                // toggle.isChecked = node[this.SELECTED];\r\n                if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());                \r\n            });\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    getLineSelected() {\r\n        let lines = new Array<number>();\r\n        for(let i = 0; i < this.listToggle.length; i++) {\r\n            let node = this.listToggle[i].node;\r\n            if (typeof node[this.SELECTED] == \"undefined\" || node[this.SELECTED]) {\r\n                lines.push(i + 1);\r\n            }\r\n        }\r\n       \r\n        this.btnClose.interactable = lines.length > 0;\r\n        return lines;\r\n    }\r\n\r\n    selectAll() {\r\n        for(let i = 0; i < this.listToggle.length; i++) {   \r\n            this.listToggle[i].node[this.SELECTED] = true;\r\n            // this.listToggle[i].node.opacity =  this.listToggle[i].node[this.SELECTED] ? 255 : 80;\r\n            this.listToggle[i].isChecked = true;        \r\n        }\r\n        if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());\r\n    }\r\n\r\n    deSelectAll() {\r\n        for(let i = 0; i < this.listToggle.length; i++) {   \r\n            this.listToggle[i].node[this.SELECTED] = false;\r\n            // this.listToggle[i].node.opacity =  this.listToggle[i].node[this.SELECTED] ? 255 : 80;\r\n            this.listToggle[i].isChecked = false;        \r\n        }\r\n        if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());\r\n    }\r\n\r\n    selectEven() {\r\n        for(let i = 0; i < this.listToggle.length; i++) {    \r\n            this.listToggle[i].node[this.SELECTED] = i % 2 != 0;\r\n            // this.listToggle[i].node.opacity = this.listToggle[i].node[this.SELECTED] ? 255 : 80;        \r\n            this.listToggle[i].isChecked = i % 2 !== 0;           \r\n        }\r\n        if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());\r\n    }\r\n\r\n    selectOdd() {\r\n        for(let i = 0; i < this.listToggle.length; i++) {    \r\n            this.listToggle[i].node[this.SELECTED] = i % 2 == 0;\r\n            // this.listToggle[i].node.opacity = this.listToggle[i].node[this.SELECTED] ? 255 : 80;        \r\n            this.listToggle[i].isChecked = i % 2 == 0;           \r\n        }\r\n        if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());\r\n    }\r\n\r\n    show(arrLineSelected) {\r\n        Tween.showPopup(this.nodeBox,this.nodeBox.parent);\r\n        for(let i = 0; i < this.listToggle.length; i++) {\r\n            let node = this.listToggle[i];\r\n            this.listToggle[i].isChecked = this.listToggle[i].node[this.SELECTED];    \r\n            // this.listToggle[i].node.opacity = this.listToggle[i].node[this.SELECTED] ? 255 : 80;        \r\n        }\r\n\r\n    }\r\n\r\n    hide() {\r\n       \r\n        Tween.hidePopup(this.nodeBox,this.nodeBox.parent,false);\r\n    }\r\n\r\n\r\n\r\n    // update (dt) {}\r\n}\r\n","import InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport OutPacket from \"../../Lobby/LobbyScript/Script/networks/Network.OutPacket\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\nexport namespace cmd {\r\n    export class Code {\r\n        static SUBCRIBE = 14003;\r\n        static UNSUBCRIBE = 14004;\r\n        static CHANGE_ROOM = 14005;\r\n        static PLAY = 14001;\r\n        static UPDATE_RESULT = 14001;\r\n        static UPDATE_POT = 14002;\r\n        static AUTO = 14006;\r\n        static STOP_AUTO = 14006;\r\n        static FORCE_STOP_AUTO = 14008;\r\n        static DATE_X2 = 14009;\r\n        static BIG_WIN = 14010;\r\n        static FREE = 14011;\r\n        static FREE_DAI_LY = 14012;\r\n        static MINIMIZE = 14013;\r\n        static UPDATE_JACKPOT_SLOTS = 10003;\r\n        static SUBCRIBE_HALL_SLOT = 10001;\r\n    }\r\n    export class ReceiveFreeDaiLy extends InPacket {\r\n      \r\n        freeSpin = 0;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.freeSpin = this.getByte();\r\n        }\r\n    }\r\n    export class ResUpdateJackpotSlots extends InPacket {\r\n        pots = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.pots = this.getString()\r\n        }\r\n    }\r\n    export class SendUnSubcribe extends OutPacket {\r\n        constructor(roomId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.UNSUBCRIBE);\r\n            this.packHeader();\r\n            this.putByte(roomId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendSubcribe extends OutPacket {\r\n        constructor(roomId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE);\r\n            this.packHeader();\r\n            this.putByte(roomId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendPlay extends OutPacket {\r\n        constructor(lines: string) {\r\n            super();            \r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.PLAY);\r\n            this.packHeader();\r\n            this.putString(lines);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendChangeRoom extends OutPacket {\r\n        constructor(roomLeavedId: number, roomJoinedId: number) {\r\n            super();\r\n            // cc.log(\"SendChangeRoom roomLeavedId:\"+roomLeavedId+\" roomJoinedId:\"+roomJoinedId);\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHANGE_ROOM);\r\n            this.packHeader();\r\n            this.putByte(roomLeavedId);\r\n            this.putByte(roomJoinedId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ReceiveUpdatePot extends InPacket {\r\n        valueRoom1 = 0;\r\n        valueRoom2 = 0;\r\n        valueRoom3 = 0;\r\n      \r\n        x21 = 0;\r\n        x22 = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.valueRoom1 = this.getLong();\r\n            this.valueRoom2 = this.getLong();\r\n            this.valueRoom3 = this.getLong();\r\n            \r\n            this.x21 = this.getByte();\r\n            this.x22 = this.getByte();\r\n        }\r\n    }\r\n    export class ReceiveResult extends InPacket {\r\n        ref = 0;\r\n        result = 0;\r\n        matrix = \"\";\r\n        linesWin = \"\";\r\n        haiSao = \"\";\r\n        prize = 0;\r\n        currentMoney = 0;\r\n        isFreeSpin = 0;\r\n        ratio = 0;\r\n        currentNumberFreeSpin = 0;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.ref = this.getLong();\r\n            this.result = this.getByte();\r\n            this.matrix = this.getString();\r\n            this.linesWin = this.getString();\r\n            this.haiSao = this.getString();\r\n            this.prize = this.getLong();\r\n            this.currentMoney = this.getLong();\r\n            this.isFreeSpin = this.getByte();\r\n            this.ratio = this.getByte();\r\n            this.currentNumberFreeSpin = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ReceiveDateX2 extends InPacket {\r\n        \r\n        ngayX2 = \"\";\r\n        remain = 0;\r\n        currentMoney = 0;\r\n        freeSpin = 0;\r\n        lines = \"\";\r\n        currentRoom = 0;\r\n\r\n      \r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n           \r\n            this.ngayX2 = this.getString();\r\n            this.remain = this.getByte();\r\n            this.currentMoney = this.getLong();\r\n            this.freeSpin = this.getByte();\r\n            this.lines = this.getString();\r\n            this.currentRoom = this.getByte();\r\n        }\r\n    }\r\n    export class ReqSubcribeHallSlot extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE_HALL_SLOT);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n}\r\nexport default cmd;","import cmd from './Slot4Cmd';\r\n\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Slot4ChooseLine from './Slot4ChooseLine';\r\nimport Slot4TrialResult from './Slot4TrialResult';\r\n\r\nimport Slot4Lobby from \"./Slot4.Lobby\";\r\nimport Slot4PopupBonus from \"./Slot4.PopupBonus\";\r\nimport Slot4Tutorial from \"./Slot4Tutorial\";\r\nimport App from '../../Lobby/LobbyScript/Script/common/App';\r\nimport BroadcastReceiver from '../../Lobby/LobbyScript/Script/common/BroadcastReceiver';\r\nimport Tween from '../../Lobby/LobbyScript/Script/common/Tween';\r\nimport Utils from '../../Lobby/LobbyScript/Script/common/Utils';\r\nimport InPacket from '../../Lobby/LobbyScript/Script/networks/Network.InPacket';\r\nimport SlotNetworkClient from '../../Lobby/LobbyScript/Script/networks/SlotNetworkClient';\r\nimport UIItemIconSlot25 from '../../Lobby/LobbyScript/Script/BaseSlot25/ItemIconSlot25';\r\nvar MAX_CYCCLE_SPIN = 20;\r\nvar FAST_CYCCLE_SPIN = 10;\r\nvar ERROR_CYCCLE_SPIN = 50;\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot4Controller extends cc.Component {\r\n    @property(cc.Button)\r\n    btnBack: cc.Button = null;\r\n    @property(cc.Node)\r\n    nodeCoin: cc.Node = null;\r\n    @property(cc.Button)\r\n    btnLine: cc.Button = null;\r\n    @property(cc.Label)\r\n    lblFreeSpinCount: cc.Label = null;\r\n    @property(cc.Node)\r\n    nodeBoxSetting: cc.Node = null;\r\n    @property(cc.Toggle)\r\n    toggleMusic: cc.Toggle = null;\r\n    @property(cc.Toggle)\r\n    toggleSound: cc.Toggle = null;\r\n    @property(Slot4PopupBonus)\r\n    popupBonus: Slot4PopupBonus = null;\r\n    @property(sp.Skeleton)\r\n    skeSpin: sp.Skeleton = null;\r\n    @property(cc.Node)\r\n    nodeDemo: cc.Node = null;\r\n    @property(cc.Node)\r\n    nodeWinJackpot: cc.Node = null;\r\n    @property(cc.Label)\r\n    txtWinJackpot: cc.Label = null;\r\n    @property(cc.Node)\r\n    nodeGamePlay: cc.Node = null;\r\n    @property(Slot4Lobby)\r\n    mSlotLobby: Slot4Lobby = null;\r\n    @property(cc.Label)\r\n    jackpotLabel: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    moneyLabel: cc.Label = null;\r\n\r\n    \r\n    @property(cc.Label)\r\n    totalLineLabel: cc.Label = null;\r\n\r\n    @property(cc.Button)\r\n    btnSpin: cc.Button = null;\r\n    @property(cc.Toggle)\r\n    toggleFast: cc.Toggle = null;\r\n\r\n    //win\r\n    @property(cc.Node)\r\n    winNormalBg: cc.Node = null;\r\n    @property(cc.Node)\r\n    bonusNode: cc.Node = null;\r\n    @property(cc.Node)\r\n    bigWinNode: cc.Node = null;\r\n    @property(cc.Label)\r\n    txtWinBigWin: cc.Label = null;\r\n    @property(cc.Node)\r\n    jackpotNode: cc.Node = null;\r\n    @property(cc.Node)\r\n    freespinNode: cc.Node = null;\r\n    @property(cc.Label)\r\n    winLabel: cc.Label = null;\r\n    @property(cc.Node)\r\n    freespinCurrent: cc.Node = null;\r\n    //line win\r\n    @property(cc.Node)\r\n    lineWinParent: cc.Node = null;\r\n\r\n    //show result\r\n    @property(cc.Label)\r\n    totalWinLabel: cc.Label = null;\r\n    @property(cc.Label)\r\n    totalBetLabel: cc.Label = null;\r\n\r\n    //choose line\r\n    @property(Slot4ChooseLine)\r\n    chooseLineScript: Slot4ChooseLine = null;\r\n\r\n\r\n    @property(Slot4Tutorial)\r\n    popupGuide: Slot4Tutorial = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    musicLobby: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    musicGame: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    musicBonus: cc.AudioClip = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundStartSpin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundRepeatSpin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundEndSpin: cc.AudioClip = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundSpinWin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundBigWin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundJackpot: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundBonus: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundFreeSpin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundtouchBonus: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundSmumary: cc.AudioClip = null;\r\n    private listActiveItem: cc.Node[] = [];         //list 15 item nhin thay tren man hinh\r\n\r\n    private TIME_DELAY_SHOW_LINE: number = 1;\r\n    private dailyFreeSpin = 0;\r\n    public betId = 0;\r\n    private listBet = [100, 1000, 10000];\r\n    private listBetString = [\"100\", \"1K\", \"10K\"];\r\n    private arrLineSelected = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\r\n    public isTrial: Boolean = false;\r\n    private isSpining: Boolean = false;\r\n    private mapLine = [\r\n        [5, 6, 7, 8, 9],\r\n        [0, 1, 2, 3, 4],\r\n        [10, 11, 12, 13, 14],\r\n        [5, 6, 2, 8, 9],\r\n        [5, 6, 12, 8, 9],\r\n        [0, 1, 7, 3, 4],\r\n        [10, 11, 7, 13, 14],\r\n        [0, 11, 2, 13, 4],\r\n        [10, 1, 12, 3, 14],\r\n        [5, 1, 12, 3, 9],\r\n        [10, 6, 2, 8, 14],\r\n        [0, 6, 12, 8, 4],\r\n        [5, 11, 7, 3, 9],\r\n        [5, 1, 7, 13, 9],\r\n        [10, 6, 7, 8, 14],\r\n        [0, 6, 7, 8, 4],\r\n        [5, 1, 2, 3, 9],\r\n        [5, 11, 12, 13, 9],\r\n        [10, 11, 7, 3, 4],\r\n        [0, 1, 7, 13, 14]\r\n    ];\r\n\r\n    //new \r\n\r\n    private isFastCurrent = false;\r\n    private isFast = false;\r\n\r\n    @property([cc.Node])\r\n    arrReel: cc.Node[] = [];\r\n\r\n    @property\r\n    distanceReel: number = 0;\r\n\r\n    @property([cc.SpriteFrame])\r\n    iconSFBlurArr100: cc.SpriteFrame[] = [];\r\n    @property([cc.SpriteFrame])\r\n    iconSFArr100: cc.SpriteFrame[] = [];\r\n    @property([sp.SkeletonData])\r\n    arrSkeletonIcon100: sp.SkeletonData[] = [];\r\n\r\n    @property([cc.SpriteFrame])\r\n    iconSFBlurArr1K: cc.SpriteFrame[] = [];\r\n    @property([cc.SpriteFrame])\r\n    iconSFArr1K: cc.SpriteFrame[] = [];\r\n    @property([sp.SkeletonData])\r\n    arrSkeletonIcon1K: sp.SkeletonData[] = [];\r\n\r\n    @property([cc.SpriteFrame])\r\n    iconSFBlurArr10K: cc.SpriteFrame[] = [];\r\n    @property([cc.SpriteFrame])\r\n    iconSFArr10K: cc.SpriteFrame[] = [];\r\n    @property([sp.SkeletonData])\r\n    arrSkeletonIcon10K: sp.SkeletonData[] = [];\r\n\r\n    @property([UIItemIconSlot25])\r\n    arrUIItemIcon: UIItemIconSlot25[] = [];\r\n\r\n\r\n\r\n\r\n    public numberSpinReel = null;\r\n    public isHaveResultSpin = false;\r\n    public dataResult = null;\r\n    private isFirst = false;\r\n   \r\n    public isSound = false;\r\n    public isMusic = true;\r\n    mutipleJpNode=null;\r\n\r\n    start() {\r\n        this.dailyFreeSpin = 0;\r\n        this.isSound = true;\r\n        this.isMusic = true;\r\n        this.totalWinLabel.string = \"\";\r\n        var musicId = 0;\r\n        SlotNetworkClient.getInstance().addOnClose(() => {\r\n            this.mSlotLobby.onBtnBack();\r\n        }, this);\r\n\r\n      \r\n\r\n        this.init();\r\n        SlotNetworkClient.getInstance().addListener((data) => {\r\n            let inpacket = new InPacket(data);\r\n            //  cc.log(inpacket.getCmdId());\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.UPDATE_JACKPOT_SLOTS:\r\n                    this.mSlotLobby.onUpdateJackpot(data);\r\n                break;\r\n                case cmd.Code.UPDATE_POT:\r\n                    {\r\n                        \r\n                        let res = new cmd.ReceiveUpdatePot(data);\r\n                        //  cc.log(\"update Jackpot:\"+(this.betId == 0));\r\n                        if(this.betId == -1){\r\n                            Tween.numberTo(this.jackpotLabel, res.valueRoom3, 0.3);\r\n                        }\r\n                        else if(this.betId == 0){\r\n                            Tween.numberTo(this.jackpotLabel, res.valueRoom1, 0.3);\r\n                        }\r\n                        else if(this.betId == 1){\r\n                            Tween.numberTo(this.jackpotLabel, res.valueRoom2, 0.3);\r\n                        }\r\n                        else if(this.betId == 2){\r\n                            Tween.numberTo(this.jackpotLabel, res.valueRoom3, 0.3);\r\n                        }\r\n                        \r\n                    }\r\n                    break;\r\n                case cmd.Code.UPDATE_RESULT:\r\n                    {\r\n                        let res = new cmd.ReceiveResult(data);\r\n                        this.spinResult(res);\r\n                    }\r\n                    break;\r\n                case cmd.Code.FREE_DAI_LY:\r\n                        {\r\n                            if(!this.isTrial){\r\n                                let res = new cmd.ReceiveFreeDaiLy(data);\r\n                                this.dailyFreeSpin = res.freeSpin;\r\n                                if(this.dailyFreeSpin > 0){\r\n                                    this.lblFreeSpinCount.node.parent.active = true;\r\n                                    this.lblFreeSpinCount.string = this.dailyFreeSpin+\"\";\r\n                                }\r\n                                else{\r\n                                    this.lblFreeSpinCount.node.parent.active = false;\r\n                                }\r\n                            }\r\n                            \r\n                        }\r\n                        break;\r\n                case cmd.Code.DATE_X2:\r\n                    {\r\n                        let res = new cmd.ReceiveDateX2(data);\r\n                        if(this.isFirst == false){\r\n                            //vua vao lobby\r\n                            this.hideGamePlay();\r\n                            this.isFirst = true;\r\n                        }\r\n                        else{\r\n                            this.mSlotLobby.node.active = false;\r\n                            this.onJoinRoom(res);\r\n                        }\r\n                    }\r\n                    break;\r\n                case cmd.Code.CHANGE_ROOM:\r\n                    {\r\n                        //  cc.log(\"changeRoom:\" + JSON.stringify(data));\r\n                    }\r\n                    break;\r\n            }\r\n        }, this);\r\n\r\n        SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n        SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(0));\r\n\r\n\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\r\n            Tween.numberTo(this.moneyLabel, Configs.Login.Coin, 0.3);\r\n        }, this);\r\n        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n\r\n        App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n        SlotNetworkClient.getInstance().checkConnect(() => {\r\n            App.instance.showLoading(false);\r\n        });\r\n\r\n        \r\n        this.chooseLineScript.onSelectedChanged = (lines) => {\r\n            this.arrLineSelected = lines;\r\n            this.totalLineLabel.string = lines.length.toString();\r\n            Tween.numberTo(this.totalBetLabel, lines.length * this.listBet[this.betId], 0.3);\r\n        }\r\n\r\n        this.mSlotLobby.init(this);\r\n\r\n        //this.initMutipleJPNode();\r\n    }\r\n    private initMutipleJPNode() {\r\n        if (!this.mutipleJpNode) {\r\n            cc.assetManager.getBundle(\"Lobby\").load(\"prefabs/MutipleJackpotPr\", cc.Prefab, function (finish, total, item) {\r\n            }, (err1, prefab: cc.Prefab) => {\r\n                if (err1 != null) {\r\n                    //  cc.log(\"errr load game TIENLEN:\", err1);\r\n                } else {\r\n                    this.mutipleJpNode = cc.instantiate(prefab).getComponent(\"MutipleJackpot\");\r\n                    this.mutipleJpNode.node.parent = cc.director.getScene().getChildByName(\"Canvas\")\r\n                    this.mutipleJpNode.setInfo(\"ANGRY\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n    showAnimations() {\r\n        var self = this;\r\n        for (var i = 0; i < self.arrUIItemIcon.length; i++) {\r\n            var nodeItem = self.arrUIItemIcon[i].nodeBox;\r\n            var indexCol = i % 5;\r\n            nodeItem.opacity = 0;\r\n            nodeItem.position = cc.v3(0, self.distanceReel, 0);\r\n            cc.tween(nodeItem)\r\n                .delay(indexCol * 0.1)\r\n                .to(1, { position: cc.v3(0, 0, 0), opacity: 255 }, { easing: \"backOut\" })\r\n                .start();\r\n        }\r\n    }\r\n\r\n    showGamePlay() {\r\n        if(this.isMusic) cc.audioEngine.playMusic(this.musicGame, true);\r\n        this.randomIconList();\r\n        this.nodeGamePlay.active = true;\r\n        this.showAnimations();\r\n    }\r\n\r\n    hideGamePlay() {\r\n        if(this.isMusic) cc.audioEngine.playMusic(this.musicLobby, true);\r\n        this.nodeGamePlay.active = false;\r\n    }\r\n\r\n    init() {\r\n        this.totalWinLabel.string = \"\";\r\n    }\r\n    private showCoins(prize){\r\n        var number = prize/20000;\r\n        if(number <= 10) number = 10;\r\n        else if(number >= 30) number = 30;\r\n        App.instance.showCoins(number,this.totalWinLabel.node,this.nodeCoin);\r\n    }\r\n    public onJoinRoom(res = null) {\r\n        var betIdTmp = this.betId;\r\n        if(betIdTmp == -1) betIdTmp = 2;\r\n        let totalbet = (this.arrLineSelected.length * this.listBet[betIdTmp]);\r\n        Tween.numberTo(this.totalBetLabel, totalbet, 0.3);\r\n        this.mSlotLobby.hide();\r\n        this.nodeDemo.active = this.isTrial ? true : false;\r\n        this.showGamePlay();\r\n        this.setButtonEnable(true);\r\n        \r\n       if(res == null){\r\n         this.freespinCurrent.active = false;\r\n       }\r\n       else{\r\n            if(res.freeSpin + this.dailyFreeSpin > 0){\r\n                this.freespinCurrent.active = true;\r\n                this.freespinCurrent.getComponentInChildren(cc.Label).string = res.freeSpin + this.dailyFreeSpin;\r\n            }\r\n            else{\r\n                this.freespinCurrent.active = false;\r\n            }\r\n       }\r\n\r\n    }\r\n\r\n    randomIconList() {\r\n        var self = this;\r\n        for (var i = 0; i < self.arrUIItemIcon.length; i++) {\r\n            var index = i;\r\n            var itemId = Math.floor(Math.random() * (self.iconSFArr100.length));\r\n            self.arrUIItemIcon[i].init(itemId, index, self);\r\n            self.arrUIItemIcon[i].changeSpineIcon(itemId);\r\n            self.arrUIItemIcon[i].spriteIcon.node.active = false;\r\n            self.arrUIItemIcon[i].spineIcon.node.active = true;\r\n            // self.arrUIItemIcon[i].spineIcon.setAnimation(0, \"idle\", true);\r\n            self.arrUIItemIcon[i].spineIcon.animation = \"idle\";\r\n            self.arrUIItemIcon[i].spineIcon.loop = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * random between, min, max included\r\n     */\r\n    randomBetween(min: number, max: number) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n\r\n    spinClick() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        \r\n        \r\n\r\n        //hide effect\r\n       \r\n        // this.setButtonAuto(false);\r\n        // this.setButtonFlash(false);\r\n        if (!this.isTrial) {\r\n            \r\n            if (this.dailyFreeSpin > 0) {\r\n                this.dailyFreeSpin--;\r\n                if(this.dailyFreeSpin > 0){\r\n                    this.lblFreeSpinCount.node.parent.active = true;\r\n                    this.lblFreeSpinCount.string = this.dailyFreeSpin+\"\";\r\n                }\r\n                else{\r\n                    this.lblFreeSpinCount.node.parent.active = false;\r\n                }\r\n            }\r\n            else{\r\n                if (Configs.Login.Coin < this.listBet[this.betId] * this.arrLineSelected.length) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_not_enough\"));\r\n                    return;\r\n                }\r\n            }\r\n            this.hideWinEffect();\r\n            this.hideLineWin(true);\r\n            this.setButtonEnable(false);\r\n            this.totalWinLabel.string = \"\";\r\n            SlotNetworkClient.getInstance().send(new cmd.SendPlay(this.arrLineSelected.toString()));\r\n        } else {\r\n            this.hideWinEffect();\r\n            this.hideLineWin(true);\r\n            this.setButtonEnable(false);\r\n            this.totalWinLabel.string = \"\";\r\n            var rIdx = Utils.randomRangeInt(0, Slot4TrialResult.results.length);\r\n            this.spinResult(Slot4TrialResult.results[rIdx]);\r\n        }\r\n    }\r\n\r\n    onBtnSoundTouchBonus(){\r\n        if(this.isSound){\r\n            cc.audioEngine.play(this.soundtouchBonus,false,1);\r\n        }\r\n    }\r\n\r\n    onBtnSoundSumary(){\r\n        if(this.isSound){\r\n            cc.audioEngine.play(this.soundSmumary,false,1);\r\n        }\r\n    }\r\n\r\n    private audioIdRepeatSpin = 0;\r\n    spinResult(res: cmd.ReceiveResult | any) {\r\n        this.isSpining = true;\r\n        //  cc.log(\"spinResult:\"+JSON.stringify(res));\r\n        \r\n\r\n        let that = this;\r\n        let successResult = [0, 1, 2, 3,4, 5, 6];\r\n        let result = res.result;\r\n        if (successResult.indexOf(result) === -1) {\r\n            //fail\r\n            if (result === 102) {\r\n                //khong du tien\r\n                //  cc.log(\"so du khong du\");\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_not_enough\"));\r\n\r\n            } else {\r\n                //  cc.log(\"co loi xay ra\");\r\n            }\r\n            return;\r\n        }\r\n\r\n        //set icon\r\n        let matrix = res.matrix.split(\",\");\r\n        this.numberSpinReel = new Array(this.arrReel.length);\r\n        this.dataResult = res;\r\n        this.isHaveResultSpin = true;\r\n\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundStartSpin, false, 1);\r\n        }\r\n        if (this.isSound) {\r\n            this.audioIdRepeatSpin = cc.audioEngine.play(this.soundRepeatSpin, true, 1);\r\n        }\r\n        for (var i = 0; i < this.arrReel.length; i++) {\r\n            this.beginSpinReel(i);\r\n        }\r\n\r\n    }\r\n\r\n    spinFinish(hasDelay: boolean) {\r\n        this.isSpining = false;\r\n        var that = this;\r\n        this.node.runAction(\r\n            cc.sequence(\r\n                cc.delayTime(hasDelay ? 1 : 0),\r\n                cc.callFunc(() => {\r\n                    if (that.toggleFast.isChecked) {\r\n                        that.spinClick();\r\n                    } else {\r\n                        that.setButtonEnable(true);\r\n                        that.setButtonFlash(true);\r\n                    }\r\n                })\r\n            )\r\n        )\r\n\r\n    }\r\n\r\n    showWinEffect(prize: number, currentMoney: number, result: number) {\r\n        var self = this;\r\n        if (prize > 0) {\r\n            if (result == 5) {\r\n                //bonus\r\n                if (this.isSound) {\r\n                    cc.audioEngine.play(this.soundBonus, false, 1);\r\n                }\r\n                this.bonusNode.active = true;\r\n                let bonusSpine = this.bonusNode.getComponentInChildren(sp.Skeleton);\r\n                bonusSpine.setAnimation(0,\"angrybirds_bonus\",false);\r\n                this.node.runAction(\r\n                    cc.sequence(\r\n                        cc.delayTime(5),\r\n                        cc.callFunc(() => {\r\n                            this.bonusNode.active = false;\r\n                            if(this.isMusic) cc.audioEngine.playMusic(this.musicBonus, true);\r\n                            this.popupBonus.showBonus(this.isTrial ? 100 : this.listBet[this.betId], this.dataResult.haiSao,this, () => {\r\n                                this.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                                this.showCoins(prize);\r\n                                Tween.numberTo(this.winLabel, prize, 0.3);\r\n                                Tween.numberTo(this.totalWinLabel, prize, 0.3);\r\n                                Tween.numberTo(this.totalBetLabel, this.arrLineSelected.length * this.listBet[this.betId], 0.3);\r\n                                if (!this.isTrial) Tween.numberTo(this.moneyLabel, currentMoney, 0.3);\r\n                                if (this.toggleFast.isChecked) {\r\n                                    self.spinFinish(true);\r\n                                } else {\r\n                                    if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                                    else self.spinFinish(false);\r\n                                }\r\n                            });\r\n                        })\r\n                    )\r\n                )\r\n\r\n            } else if (result == 2 || result == 6) {\r\n                //thang lon                \r\n                if (this.isSound) {\r\n                    cc.audioEngine.play(this.soundBigWin, false, 1);\r\n                }\r\n                this.bigWinNode.active = true;\r\n                let bigwinSpine = this.bigWinNode.getComponentInChildren(sp.Skeleton);\r\n                bigwinSpine.setAnimation(0,\"angrybirds_bigwin\",false);\r\n                Tween.numberTo(this.txtWinBigWin, prize, 0.3);\r\n                this.node.runAction(\r\n                    cc.sequence(\r\n                        cc.delayTime(5),\r\n                        cc.callFunc(() => {\r\n                            this.bigWinNode.active = false;\r\n                            if (this.toggleFast.isChecked) {\r\n                                self.spinFinish(true);\r\n                            } else {\r\n                                if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                                else self.spinFinish(false);\r\n                            }\r\n                        })\r\n                    )\r\n                )\r\n                this.showCoins(prize);\r\n                Tween.numberTo(this.winLabel, prize, 0.3);\r\n                Tween.numberTo(this.totalWinLabel, prize, 0.3);\r\n                Tween.numberTo(this.totalBetLabel, this.arrLineSelected.length * this.listBet[this.betId], 0.3);\r\n                if (!this.isTrial) Tween.numberTo(this.moneyLabel, currentMoney, 0.3);\r\n               \r\n            } else if (result == 3 || result == 4) {\r\n                //no hu\r\n                if (this.isSound) {\r\n                    var audioIdJackpot = cc.audioEngine.play(this.soundJackpot, false, 1);\r\n                }\r\n                if (this.isSound) {\r\n                    var audioIdJackpot = cc.audioEngine.play(this.soundSmumary, false, 1);\r\n                }\r\n                this.jackpotNode.active = true;\r\n                let jackpotSpine = this.jackpotNode.getComponentInChildren(sp.Skeleton);\r\n                jackpotSpine.setAnimation(0,\"appear\",false);\r\n                jackpotSpine.addAnimation(0,\"angrybirds_jackpot\",true);\r\n                this.showCoins(prize);\r\n                cc.Tween.stopAllByTarget(this.nodeWinJackpot);\r\n                Tween.numberTo(this.txtWinJackpot, prize, 0.3);\r\n                this.nodeWinJackpot.position = cc.v3(0,-360,0);\r\n                this.nodeWinJackpot.active = true;\r\n                cc.tween(this.nodeWinJackpot)\r\n                .to(1,{position:cc.v3(0,0,0)})\r\n                .delay(3)\r\n                .to(1,{position:cc.v3(0,-360,0)})\r\n                .start();\r\n                this.node.runAction(\r\n                    cc.sequence(\r\n                        cc.delayTime(5),\r\n                        cc.callFunc(() => {\r\n                            this.jackpotNode.active = false;\r\n                            if (this.toggleFast.isChecked) {\r\n                                self.spinFinish(true);\r\n                            } else {\r\n                                if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                                else self.spinFinish(false);\r\n                            }\r\n                            if (this.isSound) {\r\n                                cc.audioEngine.stop(audioIdJackpot);\r\n                            }\r\n                        })\r\n                    )\r\n                )\r\n                Tween.numberTo(this.winLabel, prize, 0.3);\r\n                Tween.numberTo(this.totalWinLabel, prize, 0.3);\r\n                Tween.numberTo(this.totalBetLabel, this.arrLineSelected.length * this.listBet[this.betId], 0.3);\r\n                if (!this.isTrial) Tween.numberTo(this.moneyLabel, currentMoney, 0.3);\r\n                \r\n            } else {\r\n                if (this.isSound) {\r\n                    cc.audioEngine.play(this.soundSpinWin, false, 1);\r\n                }\r\n                this.winNormalBg.active = true;\r\n                this.showCoins(prize);\r\n                Tween.numberTo(this.winLabel, prize, 0.3);\r\n                Tween.numberTo(this.totalWinLabel, prize, 0.3);\r\n                Tween.numberTo(this.totalBetLabel, this.arrLineSelected.length * this.listBet[this.betId], 0.3);\r\n                if (!this.isTrial) Tween.numberTo(this.moneyLabel, currentMoney, 0.3);\r\n                if (this.toggleFast.isChecked) {\r\n                    if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                    else self.spinFinish(false);\r\n                } else {\r\n                    if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                    else self.spinFinish(false);\r\n                }\r\n            }\r\n\r\n            \r\n        } else {\r\n            \r\n            Tween.numberTo(this.totalWinLabel, prize, 0.3);\r\n            Tween.numberTo(this.totalBetLabel, this.arrLineSelected.length * this.listBet[this.betId], 0.3);\r\n            if (!this.isTrial) Tween.numberTo(this.moneyLabel, currentMoney, 0.3);\r\n            if (this.toggleFast.isChecked) {\r\n                if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                else self.spinFinish(false);\r\n            } else {\r\n                if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                else self.spinFinish(false);\r\n            }\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    public beginSpinReel(indexReel) {\r\n        var self = this;\r\n        self.isFastCurrent = self.toggleFast.isChecked;\r\n        self.numberSpinReel[indexReel] = 0;\r\n        cc.Tween.stopAllByTarget(self.arrReel[indexReel]);\r\n        cc.tween(self.arrReel[indexReel])\r\n            .delay(indexReel * 0.2)\r\n            .to(0.1, { position: cc.v3(self.arrReel[indexReel].position.x, 70, 0) }, { easing: \"linear\" })\r\n            .call(() => {\r\n                self.loopSpinReel(indexReel);\r\n            })\r\n            .start();\r\n    }\r\n\r\n    loopSpinReel(indexReel) {\r\n\r\n        var self = this;\r\n        cc.tween(self.arrReel[indexReel])\r\n            .to(0.06, { position: cc.v3(self.arrReel[indexReel].position.x, -self.distanceReel, 0) }, { easing: \"linear\" })\r\n            .call(() => {\r\n                self.processLoopSpinReel(indexReel);\r\n            })\r\n            .start();\r\n    }\r\n\r\n    processLoopSpinReel(indexReel) {\r\n        var self = this;\r\n        self.numberSpinReel[indexReel] += 1;\r\n        for (var i = 4; i >= 0; i--) {\r\n            var index = indexReel + (i * 5);\r\n\r\n            var indexRow = Math.floor(index / 5);\r\n            var itemIdTmp = 0;\r\n            if (indexRow == 0) {\r\n                itemIdTmp = Math.floor(Math.random() * self.iconSFBlurArr100.length);\r\n            }\r\n            else {\r\n                itemIdTmp = self.arrUIItemIcon[index - 5].itemId;\r\n            }\r\n            self.arrUIItemIcon[index].changeSpriteBlurByItemId(itemIdTmp);\r\n            if (self.arrUIItemIcon[index].spriteIcon.node.active == false) {\r\n                self.arrUIItemIcon[index].spriteIcon.node.active = true;\r\n                self.arrUIItemIcon[index].spineIcon.node.active = false;\r\n            }\r\n        }\r\n        self.arrReel[indexReel].position = cc.v3(self.arrReel[indexReel].position.x, 0, 0);\r\n        if (self.isHaveResultSpin) {\r\n            if (self.isFastCurrent == false) {\r\n                if (self.numberSpinReel[indexReel] >= MAX_CYCCLE_SPIN) {\r\n                    self.endSpinReel(indexReel);\r\n                }\r\n                else {\r\n                    self.loopSpinReel(indexReel);\r\n                }\r\n            }\r\n            else {\r\n                if (self.numberSpinReel[indexReel] >= FAST_CYCCLE_SPIN) {\r\n                    self.endSpinReel(indexReel);\r\n                }\r\n                else {\r\n                    self.loopSpinReel(indexReel);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (self.numberSpinReel[indexReel] >= ERROR_CYCCLE_SPIN) {\r\n                self.endSpinReel(indexReel);\r\n            }\r\n            else {\r\n                self.loopSpinReel(indexReel);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    endSpinReel(indexReel) {\r\n        var self = this;\r\n        if (self.dataResult == null) {\r\n            for (var i = 3; i >= 1; i--) {\r\n                var index = indexReel + (i * 5);\r\n                var itemId = Math.floor(Math.random() * (self.iconSFArr100.length));\r\n                self.arrUIItemIcon[index].changeSpineIcon(itemId);\r\n                self.arrUIItemIcon[index].spriteIcon.node.active = false;\r\n                self.arrUIItemIcon[index].spineIcon.node.active = true;\r\n                self.arrUIItemIcon[index].spineIcon.setAnimation(0, \"idle\", true);\r\n            }\r\n            return;\r\n        }\r\n        var matrix = self.dataResult.matrix.split(',');\r\n        var roll = this.arrReel[indexReel];\r\n        self.arrReel[indexReel].position = cc.v3(self.arrReel[indexReel].position.x, self.distanceReel, 0);\r\n        for (var i = 3; i >= 1; i--) {\r\n            var index = indexReel + (i * 5);\r\n            self.arrUIItemIcon[index].changeSpineIcon(matrix[index - 5]);\r\n            self.arrUIItemIcon[index].spriteIcon.node.active = false;\r\n            self.arrUIItemIcon[index].spineIcon.node.active = true;\r\n            self.arrUIItemIcon[index].spineIcon.setAnimation(0, \"idle\", true);\r\n        }\r\n        cc.tween(self.arrReel[indexReel])\r\n            .to(0.3, { position: cc.v3(self.arrReel[indexReel].position.x, 0, 0) }, { easing: \"backOut\" })\r\n            .call(() => {\r\n                if(self.isSound){\r\n                    cc.audioEngine.play(self.soundEndSpin,false,1);\r\n                }\r\n                if (indexReel == 4) {\r\n                    cc.audioEngine.stop(this.audioIdRepeatSpin);\r\n                   \r\n                    Configs.Login.Coin = self.dataResult.currentMoney;\r\n                    if(self.dataResult.currentNumberFreeSpin > 0){\r\n                        self.freespinCurrent.active = true;\r\n                        self.freespinCurrent.getComponentInChildren(cc.Label).string = self.dataResult.currentNumberFreeSpin;\r\n                    }\r\n                    else{\r\n                        self.freespinCurrent.active = false;\r\n                    }\r\n                    if(self.dataResult.isFreeSpin == 1){\r\n                        this.freespinNode.active = true;\r\n                        let freeSpineSpine = this.freespinNode.getComponentInChildren(sp.Skeleton);\r\n                        freeSpineSpine.setAnimation(0,\"idle\",false);\r\n                        this.node.runAction(\r\n                            cc.sequence(\r\n                                cc.delayTime(5),\r\n                                cc.callFunc(() => {\r\n                                    this.freespinNode.active = false;\r\n                                    if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                                    else self.spinFinish(false);\r\n                                })\r\n                            )\r\n                        )\r\n                    }\r\n                    else{\r\n                        self.showWinEffect(self.dataResult.prize, self.dataResult.currentMoney, self.dataResult.result);\r\n                    }\r\n                    \r\n                }\r\n\r\n            })\r\n            .start();\r\n    }\r\n\r\n    getSpriteFrameIconBlur(indexIcon) {\r\n        var self = this;\r\n        if (this.betId == -1)\r\n            return self.iconSFBlurArr10K[indexIcon];\r\n        else if (this.betId == 0)\r\n            return self.iconSFBlurArr100[indexIcon];\r\n        else if (this.betId == 1)\r\n            return self.iconSFBlurArr1K[indexIcon];\r\n        else if (this.betId == 2)\r\n            return self.iconSFBlurArr10K[indexIcon];\r\n    }\r\n\r\n    getSpriteFrameIcon(indexIcon) {\r\n        var self = this;\r\n        if (this.betId == -1)\r\n            return self.iconSFArr10K[indexIcon];\r\n        else if (this.betId == 0)\r\n            return self.iconSFArr100[indexIcon];\r\n        else if (this.betId == 1)\r\n            return self.iconSFArr1K[indexIcon];\r\n        else if (this.betId == 2)\r\n            return self.iconSFArr10K[indexIcon];\r\n    }\r\n\r\n    getSpineIcon(indexIcon) {\r\n        var self = this;\r\n        if (this.betId == -1)\r\n            return self.arrSkeletonIcon10K[indexIcon];\r\n        else if (this.betId == 0)\r\n            return self.arrSkeletonIcon100[indexIcon];\r\n        else if (this.betId == 1)\r\n            return self.arrSkeletonIcon1K[indexIcon];\r\n        else if (this.betId == 2)\r\n            return self.arrSkeletonIcon10K[indexIcon];\r\n    }\r\n\r\n    hideWinEffect() {\r\n        this.winNormalBg.active = false;\r\n        this.winLabel.string = \"0\";\r\n        this.bonusNode.active = false;\r\n        this.bigWinNode.active = false;\r\n        this.jackpotNode.active = false;\r\n    }\r\n\r\n    onBtnToggleMusic(){\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.isMusic = !this.isMusic;\r\n        cc.audioEngine.setMusicVolume(this.isMusic?1:0);\r\n    }\r\n\r\n    onBtnToggleSound(){\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.isSound = !this.isSound;\r\n    }\r\n\r\n    onBtnHistory(){\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.onBtnHideSetting();\r\n    }\r\n\r\n    onBtnHistoryJackpot(){\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.onBtnHideSetting();\r\n    }\r\n\r\n    onBtnHideSetting(){\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        Tween.hidePopup(this.nodeBoxSetting,this.nodeBoxSetting.parent,false);\r\n    }\r\n\r\n    onBtnSoundClick(){\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n    }\r\n\r\n    onBtnSetting(){\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.toggleMusic.isChecked = this.isMusic;\r\n        this.toggleSound.isChecked = this.isSound;\r\n        Tween.showPopup(this.nodeBoxSetting,this.nodeBoxSetting.parent);\r\n    }\r\n    showLineWin(lines: Array<number>) {\r\n        if (lines.length == 0) return;\r\n        for (let i = 0; i < lines.length; i++) {\r\n            let line = lines[i];\r\n            //  cc.log(\"showLIneWin :\"+i+\" : \"+line);\r\n            let lineNode = this.lineWinParent.children[line - 1];\r\n            lineNode.active = true;\r\n        }\r\n\r\n        let that = this;\r\n        //hide all line\r\n        this.lineWinParent.runAction(\r\n            cc.sequence(\r\n                cc.delayTime(1),\r\n                cc.callFunc(() => {\r\n                    that.hideLineWin(false);\r\n                })\r\n            )\r\n        );\r\n\r\n        this.lineWinParent.runAction(\r\n            cc.sequence(\r\n                cc.delayTime(1.5),\r\n                cc.callFunc(() => {\r\n                    //active line one by one\r\n                    for (let i = 0; i < lines.length; i++) {\r\n                        let line = lines[i];\r\n                        let lineNode = this.lineWinParent.children[line - 1];\r\n                        this.lineWinParent.runAction(\r\n                            cc.sequence(\r\n                                cc.delayTime(i * this.TIME_DELAY_SHOW_LINE),\r\n                                cc.callFunc(() => {\r\n                                    lineNode.active = true;\r\n\r\n                                }),\r\n                                cc.delayTime(this.TIME_DELAY_SHOW_LINE),\r\n                                cc.callFunc(() => {\r\n                                    lineNode.active = false;\r\n                                   \r\n                                    if (i == lines.length - 1)\r\n                                        that.spinFinish(false);\r\n                                })\r\n                            )\r\n\r\n                        );\r\n                    }\r\n                })\r\n            )\r\n        );\r\n\r\n    }\r\n\r\n    hideLineWin(stopAction: boolean) {\r\n        if (stopAction) this.lineWinParent.stopAllActions();\r\n        this.lineWinParent.children.forEach(element => {\r\n            element.active = false;\r\n        });\r\n    }\r\n\r\n    setButtonEnable(active: boolean) {\r\n        this.btnSpin.interactable = active;\r\n        this.btnBack.interactable = active;\r\n        this.btnLine.interactable = active;\r\n        if (active == true) {\r\n            this.skeSpin.setAnimation(0, \"spin\", true);\r\n        }\r\n        else {\r\n            this.skeSpin.setAnimation(0, \"stop\", true);\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    setButtonFlash(active: boolean) {\r\n        this.toggleFast.interactable = active;\r\n        this.toggleFast.node.children[0].color = active ? cc.Color.WHITE : cc.Color.GRAY;\r\n    }\r\n\r\n    //#region CHANGE BET\r\n    changeBet() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n\r\n        this.mSlotLobby.node.active = !this.mSlotLobby.node.active;\r\n    }\r\n\r\n    chooseBet(event, bet) {\r\n        \r\n        let oldIdx = this.betId;\r\n        this.betId = parseInt(bet);\r\n        this.dailyFreeSpin = 0;\r\n        this.lblFreeSpinCount.node.parent.active = false;\r\n        //  cc.log(\"tat roi\");\r\n        this.isTrial = bet == -1 ? true : false;\r\n        this.betId = bet == -1 ? 2 : bet;\r\n        // //  cc.log(\"chooseBet oldIdx:\"+oldIdx+\" betId\"+this.betId+\" this.listBet.length\"+this.listBet.length);\r\n        if (this.betId >= this.listBet.length) {\r\n            this.betId = 0;\r\n            SlotNetworkClient.getInstance().send(new cmd.SendChangeRoom(oldIdx, this.betId));\r\n        }\r\n        else{\r\n            SlotNetworkClient.getInstance().send(new cmd.SendChangeRoom(oldIdx, this.betId));\r\n        }\r\n        \r\n\r\n        \r\n    }\r\n\r\n\r\n    showGuide() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.popupGuide.show(this);\r\n    }\r\n\r\n    closeGuide() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.popupGuide.hide();\r\n    }\r\n\r\n    showChooseLine() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.chooseLineScript.show(this.arrLineSelected);\r\n    }\r\n\r\n    changeSpeed() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.isFastCurrent = this.toggleFast.isChecked;\r\n        if (this.toggleFast.isChecked && !this.isSpining) {\r\n            this.spinClick();\r\n        }\r\n    }\r\n\r\n    setAutoSpin() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n   \r\n        if (!this.isSpining) {\r\n            this.spinClick();\r\n        }\r\n    }\r\n\r\n\r\n    actBack() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        cc.audioEngine.stopAll();\r\n        SlotNetworkClient.getInstance().send(new cmd.SendUnSubcribe(this.betId));\r\n\r\n        this.mSlotLobby.show();\r\n        this.hideGamePlay();\r\n    }\r\n}\r\n","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot4Glory extends cc.Component {\r\n    @property(cc.Node)\r\n    nodeBox:cc.Node = null;\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        Tween.showPopup(this.nodeBox,this.nodeBox.parent);\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    dismiss() {\r\n        Tween.hidePopup(this.nodeBox,this.nodeBox.parent,false);\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 138, \"p\": this.page, \"gn\": \"TAMHUNG\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (!res[\"success\"]) return;\r\n\r\n            if (this.items.length == 0) {\r\n                for (var i = 0; i < 7; i++) {\r\n                    let item = cc.instantiate(this.itemTemplate);\r\n                    item.parent = this.itemTemplate.parent;\r\n                    this.items.push(item);\r\n                }\r\n                this.itemTemplate.destroy();\r\n                this.itemTemplate = null;\r\n            }\r\n\r\n            this.maxPage = res[\"totalPages\"];\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                let item = this.items[i];\r\n                if (i < res[\"results\"].length) {\r\n                    let itemData = res[\"results\"][i];\r\n                    item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"];\r\n                    item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                    item.getChildByName(\"Type\").getComponent(cc.Label).string = itemData[\"un\"];\r\n                    item.getChildByName(\"Prize\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot4History extends cc.Component {\r\n    @property(cc.Node)\r\n    nodeBox:cc.Node = null;\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        Tween.showPopup(this.nodeBox,this.nodeBox.parent);\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    dismiss() {\r\n        Tween.hidePopup(this.nodeBox,this.nodeBox.parent,false);\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n  \r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 137, \"p\": this.page, \"un\": Configs.Login.Nickname, \"gn\": \"TAMHUNG\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (!res[\"success\"]) return;\r\n\r\n            if (this.items.length == 0) {\r\n                for (var i = 0; i < 7; i++) {\r\n                    let item = cc.instantiate(this.itemTemplate);\r\n                    item.parent = this.itemTemplate.parent;\r\n                    this.items.push(item);\r\n                }\r\n                this.itemTemplate.destroy();\r\n                this.itemTemplate = null;\r\n            }\r\n\r\n            this.maxPage = res[\"totalPages\"];\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                let item = this.items[i];\r\n                if (i < res[\"results\"].length) {\r\n                    let itemData = res[\"results\"][i];\r\n                    item.getChildByName(\"Id\").getComponent(cc.Label).string = itemData[\"rf\"];\r\n                    item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"];\r\n                    item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                    item.getChildByName(\"Linebet\").getComponent(cc.Label).string = itemData[\"lb\"] === \"\" ? 0 : itemData[\"lb\"].split(\",\").length;\r\n                    item.getChildByName(\"Linewin\").getComponent(cc.Label).string = itemData[\"lw\"] === \"\" ? 0 : itemData[\"lw\"].split(\",\").length;\r\n                    item.getChildByName(\"Prize\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    @property(cc.Node)\r\n    nodeIcon: cc.Node = null;\r\n    @property(cc.Node)\r\n    fxJackpot: cc.Node = null;\r\n    @property(cc.Node)\r\n    fxBonus: cc.Node = null;\r\n    @property(cc.Node)\r\n    fxFree: cc.Node = null;\r\n\r\n    private animation: cc.Animation;\r\n\r\n    onLoad() {\r\n        this.animation = this.getComponent(cc.Animation);\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    setSprite(sf: cc.SpriteFrame) {\r\n        this.nodeIcon.active = true;\r\n        this.fxJackpot.active = false;\r\n        this.fxBonus.active = false;\r\n        this.fxFree.active = false;\r\n\r\n        this.nodeIcon.getComponent(cc.Sprite).spriteFrame = sf;\r\n    }\r\n\r\n    setSpine(id) {\r\n        this.nodeIcon.active = false;\r\n        this.fxJackpot.active = false;\r\n        this.fxBonus.active = false;\r\n        this.fxFree.active = false;\r\n        switch (parseInt(id)) {\r\n            case 0:\r\n                this.fxJackpot.active = true;\r\n                break;\r\n            case 1:\r\n                this.fxBonus.active = true;\r\n                break;\r\n            case 2:\r\n                this.fxFree.active = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    scale() {\r\n        if (this.nodeIcon.active) {\r\n            this.animation.play();\r\n        }\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","export default class TrialResults {\r\n    static results = [\r\n        {\"_pos\":72,\"_data\":{\"0\":1,\"1\":54,\"2\":177,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":195,\"10\":185,\"11\":21,\"12\":1,\"13\":0,\"14\":29,\"15\":53,\"16\":44,\"17\":48,\"18\":44,\"19\":52,\"20\":44,\"21\":48,\"22\":44,\"23\":48,\"24\":44,\"25\":54,\"26\":44,\"27\":52,\"28\":44,\"29\":49,\"30\":44,\"31\":54,\"32\":44,\"33\":52,\"34\":44,\"35\":50,\"36\":44,\"37\":51,\"38\":44,\"39\":54,\"40\":44,\"41\":48,\"42\":44,\"43\":53,\"44\":0,\"45\":5,\"46\":50,\"47\":44,\"48\":52,\"49\":44,\"50\":54,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":5,\"60\":20,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":1,\"66\":244,\"67\":190,\"68\":240,\"69\":0,\"70\":0,\"71\":0},\"_length\":72,\"_controllerId\":1,\"_cmdId\":14001,\"_error\":0,\"ref\":12826901,\"result\":1,\"matrix\":\"5,0,4,0,0,6,4,1,6,4,2,3,6,0,5\",\"linesWin\":\"2,4,6\",\"haiSao\":\"\",\"prize\":1300,\"currentMoney\":32816880,\"isFreeSpin\":0,\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":72,\"_data\":{\"0\":1,\"1\":54,\"2\":177,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":195,\"10\":185,\"11\":23,\"12\":1,\"13\":0,\"14\":29,\"15\":54,\"16\":44,\"17\":51,\"18\":44,\"19\":53,\"20\":44,\"21\":53,\"22\":44,\"23\":51,\"24\":44,\"25\":50,\"26\":44,\"27\":49,\"28\":44,\"29\":54,\"30\":44,\"31\":51,\"32\":44,\"33\":51,\"34\":44,\"35\":49,\"36\":44,\"37\":54,\"38\":44,\"39\":48,\"40\":44,\"41\":51,\"42\":44,\"43\":51,\"44\":0,\"45\":5,\"46\":49,\"47\":52,\"48\":44,\"49\":50,\"50\":48,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":3,\"60\":32,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":1,\"66\":244,\"67\":178,\"68\":112,\"69\":0,\"70\":0,\"71\":0},\"_length\":72,\"_controllerId\":1,\"_cmdId\":14001,\"_error\":0,\"ref\":12826903,\"result\":1,\"matrix\":\"6,3,5,5,3,2,1,6,3,3,1,6,0,3,3\",\"linesWin\":\"14,20\",\"haiSao\":\"\",\"prize\":800,\"currentMoney\":32813680,\"isFreeSpin\":0,\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":86,\"_data\":{\"0\":1,\"1\":54,\"2\":177,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":195,\"10\":185,\"11\":24,\"12\":1,\"13\":0,\"14\":29,\"15\":51,\"16\":44,\"17\":48,\"18\":44,\"19\":51,\"20\":44,\"21\":51,\"22\":44,\"23\":52,\"24\":44,\"25\":54,\"26\":44,\"27\":51,\"28\":44,\"29\":48,\"30\":44,\"31\":53,\"32\":44,\"33\":51,\"34\":44,\"35\":51,\"36\":44,\"37\":48,\"38\":44,\"39\":51,\"40\":44,\"41\":52,\"42\":44,\"43\":50,\"44\":0,\"45\":19,\"46\":50,\"47\":44,\"48\":52,\"49\":44,\"50\":53,\"51\":44,\"52\":57,\"53\":44,\"54\":49,\"55\":48,\"56\":44,\"57\":49,\"58\":49,\"59\":44,\"60\":49,\"61\":50,\"62\":44,\"63\":49,\"64\":56,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":12,\"74\":128,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":1,\"80\":244,\"81\":183,\"82\":32,\"83\":0,\"84\":0,\"85\":0},\"_length\":86,\"_controllerId\":1,\"_cmdId\":14001,\"_error\":0,\"ref\":12826904,\"result\":1,\"matrix\":\"3,0,3,3,4,6,3,0,5,3,3,0,3,4,2\",\"linesWin\":\"2,4,5,9,10,11,12,18\",\"haiSao\":\"\",\"prize\":3200,\"currentMoney\":32814880,\"isFreeSpin\":0,\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":80,\"_data\":{\"0\":1,\"1\":54,\"2\":177,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":195,\"10\":185,\"11\":27,\"12\":1,\"13\":0,\"14\":29,\"15\":54,\"16\":44,\"17\":49,\"18\":44,\"19\":53,\"20\":44,\"21\":52,\"22\":44,\"23\":50,\"24\":44,\"25\":53,\"26\":44,\"27\":51,\"28\":44,\"29\":50,\"30\":44,\"31\":54,\"32\":44,\"33\":53,\"34\":44,\"35\":50,\"36\":44,\"37\":53,\"38\":44,\"39\":51,\"40\":44,\"41\":52,\"42\":44,\"43\":49,\"44\":0,\"45\":13,\"46\":52,\"47\":44,\"48\":49,\"49\":51,\"50\":44,\"51\":49,\"52\":55,\"53\":44,\"54\":49,\"55\":56,\"56\":44,\"57\":49,\"58\":57,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":3,\"68\":32,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":1,\"74\":244,\"75\":165,\"76\":240,\"77\":1,\"78\":1,\"79\":1},\"_length\":80,\"_controllerId\":1,\"_cmdId\":14001,\"_error\":0,\"ref\":12826907,\"result\":1,\"matrix\":\"6,1,5,4,2,5,3,2,6,5,2,5,3,4,1\",\"linesWin\":\"4,13,17,18,19\",\"haiSao\":\"\",\"prize\":800,\"currentMoney\":32810480,\"isFreeSpin\":1,\"ratio\":1,\"currentNumberFreeSpin\":1},\r\n        {\"_pos\":67,\"_data\":{\"0\":1,\"1\":54,\"2\":177,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":195,\"10\":185,\"11\":28,\"12\":1,\"13\":0,\"14\":29,\"15\":52,\"16\":44,\"17\":54,\"18\":44,\"19\":53,\"20\":44,\"21\":51,\"22\":44,\"23\":53,\"24\":44,\"25\":52,\"26\":44,\"27\":54,\"28\":44,\"29\":49,\"30\":44,\"31\":52,\"32\":44,\"33\":49,\"34\":44,\"35\":54,\"36\":44,\"37\":52,\"38\":44,\"39\":49,\"40\":44,\"41\":51,\"42\":44,\"43\":48,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":1,\"61\":244,\"62\":165,\"63\":240,\"64\":0,\"65\":0,\"66\":0},\"_length\":67,\"_controllerId\":1,\"_cmdId\":14001,\"_error\":0,\"ref\":12826908,\"result\":1,\"matrix\":\"4,6,5,3,5,4,6,1,4,1,6,4,1,3,0\",\"linesWin\":\"\",\"haiSao\":\"\",\"prize\":0,\"currentMoney\":32810480,\"isFreeSpin\":0,\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":89,\"_data\":{\"0\":1,\"1\":54,\"2\":177,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":195,\"10\":185,\"11\":29,\"12\":1,\"13\":0,\"14\":29,\"15\":53,\"16\":44,\"17\":52,\"18\":44,\"19\":54,\"20\":44,\"21\":51,\"22\":44,\"23\":51,\"24\":44,\"25\":53,\"26\":44,\"27\":51,\"28\":44,\"29\":51,\"30\":44,\"31\":54,\"32\":44,\"33\":53,\"34\":44,\"35\":51,\"36\":44,\"37\":49,\"38\":44,\"39\":54,\"40\":44,\"41\":51,\"42\":44,\"43\":51,\"44\":0,\"45\":22,\"46\":51,\"47\":44,\"48\":54,\"49\":44,\"50\":55,\"51\":44,\"52\":57,\"53\":44,\"54\":49,\"55\":49,\"56\":44,\"57\":49,\"58\":53,\"59\":44,\"60\":49,\"61\":54,\"62\":44,\"63\":49,\"64\":57,\"65\":44,\"66\":50,\"67\":48,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":32,\"77\":208,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":1,\"83\":244,\"84\":190,\"85\":240,\"86\":0,\"87\":0,\"88\":0},\"_length\":89,\"_controllerId\":1,\"_cmdId\":14001,\"_error\":0,\"ref\":12826909,\"result\":1,\"matrix\":\"5,4,6,3,3,5,3,3,6,5,3,1,6,3,3\",\"linesWin\":\"3,6,7,9,11,15,16,19,20\",\"haiSao\":\"\",\"prize\":8400,\"currentMoney\":32816880,\"isFreeSpin\":0,\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        \r\n    ]\r\n}","\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Slot4Controller from \"./Slot4Controller\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot4Glory extends cc.Component {\r\n    @property(cc.Node)\r\n    nodeBox:cc.Node = null;\r\n    @property(cc.Sprite)\r\n    spriteTutorial: cc.Sprite = null;\r\n    @property([cc.SpriteFrame])\r\n    sfTutorialArr: cc.SpriteFrame[] = [];\r\n\r\n    show(controller:Slot4Controller) {\r\n        Tween.showPopup(this.nodeBox,this.nodeBox.parent);\r\n        if(controller.betId == -1){\r\n            this.spriteTutorial.spriteFrame = this.sfTutorialArr[2];\r\n        }\r\n        else if(controller.betId == 0){\r\n            this.spriteTutorial.spriteFrame = this.sfTutorialArr[0];\r\n        }\r\n        else if(controller.betId == 1){\r\n            this.spriteTutorial.spriteFrame = this.sfTutorialArr[1];\r\n        }\r\n        else{\r\n            this.spriteTutorial.spriteFrame = this.sfTutorialArr[2];\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        Tween.hidePopup(this.nodeBox,this.nodeBox.parent,false);\r\n        \r\n    }\r\n\r\n    \r\n}"],"file":"index.js"}