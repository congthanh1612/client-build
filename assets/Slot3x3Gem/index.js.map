{"version":3,"sources":["assets/Slot3x3Gem/Scripts/Slot3x3Gem.Cmd.ts","assets/Slot3x3Gem/Scripts/Slot3x3Gem.ItemSlot.ts","assets/Slot3x3Gem/Scripts/Slot3x3Gem.PopupHistory.ts","assets/Slot3x3Gem/Scripts/Slot3x3Gem.PopupHonors.ts","assets/Slot3x3Gem/Scripts/Slot3x3Gem.PopupSelectLine.ts","assets/Slot3x3Gem/Scripts/Slot3x3Gem.Slot3x3Controller.ts"],"names":["cmd","Network_InPacket_1","require","Network_OutPacket_1","Code","SCRIBE","UNSCRIBE","CHANGE_ROOM","SPIN","UPDATE_JACKPOT","SendScribe","_super","betIdx","_this","call","this","initData","setControllerId","setCmdId","packHeader","putByte","updateSize","__extends","default","SendUnScribe","SendChangeRoom","oldBetIdx","newBetIdx","SendSpin","betValue","betLines","putInt","putString","ReceiveUpdateJackpot","data","value","x2","getLong","getByte","ReceiveSpin","result","matrix","linesWin","prize","currentMoney","getString","exports","_a","cc","_decorator","ccclass","property","ItemSlot","apply","arguments","sprite","spine","sprAtlas","id","animName","prototype","setId","spriteFrame","getSpriteFrame","node","active","setAnimation","setBlur","__decorate","Sprite","sp","Skeleton","SpriteAtlas","Component","Http_1","Configs_1","App_1","Dialog_1","Utils_1","PopupHistory","lblPage","itemTemplate","page","maxPage","items","Array","show","instance","showBgMiniGame","i","length","dismiss","_onShowed","string","loadData","actNextPage","actPrevPage","showLoading","get","App","API","c","mt","MONEY_TYPE","p","un","Login","Nickname","err","res","item","instantiate","parent","push","destroy","i_1","itemData","getChildByName","opacity","getComponent","Label","formatNumber","split","Node","PopupHonors","PopupSelectLine","buttonsLine","btnClose","onSelectedChanged","SELECTED","start","_loop_1","this_1","children","on","getSelectedLines","interactable","childrenCount","actSelectAll","actSelectEven","actSelectOdd","actDeselectAll","lines","Button","Slot3x3Gem_Cmd_1","Slot3x3Gem_PopupSelectLine_1","MiniGame_1","BroadcastReceiver_1","Tween_1","MiniGameNetworkClient_1","Slot3x3Gem_PopupHistory_1","Slot3x3Gem_PopupHonors_1","ButtonBet","button","sfNormal","sfActive","_isActive","setActive","isActive","SpriteFrame","Slot3x3GemController","_this_1","popupContainer","buttonBets","columns","btnSpin","btnLine","btnAuto","sfAuto0","sfAuto1","btnBoost","sfBoost0","sfBoost1","lblJackpot","lblWinCash","lblToast","effectJackpot","effectBigWin","lbTotalLine","popupSelectLine","popups","rollStartItemCount","rollAddItemCount","spinDuration","addSpinDuration","itemHeight","listBet","arrLineSelect","isSpined","isBoost","isAuto","isCanChangeBet","lastSpinRes","popupGuide","popupHistory","popupHonor","height","column","count","j","randomRangeInt","removeFromParent","btn","oldIdx","scheduleOnce","getInstance","send","showToast","getTextLang","actSpin","setEnabledAllButtons","register","USER_LOGOUT","addOnClose","addListener","getCmdId","numberTo","onSpinResult","reOrder","hideGameMini","even","stopAllEffects","stopShowLinesWin","toString","isEnabled","getComponentInChildren","message","stopAllActions","runAction","sequence","fadeIn","delayTime","fadeOut","callFunc","log","indexOf","Coin","USER_UPDATE_COIN","timeScale","_loop_2","i_2","roll","this_2","step1Pos","step2Pos","step3Pos","moveTo","v2","getPosition","x","easing","easeQuadraticActionOut","easeQuadraticActionInOut","easeQuadraticActionIn","setPosition","spined","parseInt","itemBlur1","itemBlur2","itemBlur3","showLineWins","showEffectBigWin","showEffectJackpot","cash","cb","label","showWinCash","coin","stopAllItemEffect","scaleTo","linesWinChildren","actions","actGuide","assetManager","getBundle","load","Prefab","err1","prefab","actHistory","actHonor","actSelectLine"],"mappings":"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","sourcesContent":["import InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport OutPacket from \"../../Lobby/LobbyScript/Script/networks/Network.OutPacket\";\r\n\r\nexport namespace cmd {\r\n    export class Code {\r\n        static SCRIBE = 8003;\r\n        static UNSCRIBE = 8004;\r\n        static CHANGE_ROOM = 8005;\r\n        static SPIN = 8001;\r\n        static UPDATE_JACKPOT = 8002;\r\n    }\r\n\r\n    export class SendScribe extends OutPacket {\r\n        constructor(betIdx: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SCRIBE);\r\n            this.packHeader();\r\n            this.putByte(betIdx);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendUnScribe extends OutPacket {\r\n        constructor(betIdx: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.UNSCRIBE);\r\n            this.packHeader();\r\n            this.putByte(betIdx);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendChangeRoom extends OutPacket {\r\n        constructor(oldBetIdx: number, newBetIdx: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHANGE_ROOM);\r\n            this.packHeader();\r\n            this.putByte(oldBetIdx);\r\n            this.putByte(newBetIdx);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendSpin extends OutPacket {\r\n        constructor(betValue: number, betLines: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SPIN);\r\n            this.packHeader();\r\n            this.putInt(betValue);\r\n            this.putString(betLines);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReceiveUpdateJackpot extends InPacket {\r\n        value = 0;\r\n        x2 = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.value = this.getLong();\r\n            this.x2 = this.getByte()\r\n        }\r\n    }\r\n\r\n    export class ReceiveSpin extends InPacket {\r\n        result = 0;\r\n        matrix = \"\";\r\n        linesWin = \"\";\r\n        prize = 0;\r\n        currentMoney = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.result = this.getByte();\r\n            this.matrix = this.getString();\r\n            this.linesWin = this.getString();\r\n            this.prize = this.getLong();\r\n            this.currentMoney = this.getLong()\r\n        }\r\n    }\r\n}\r\nexport default cmd;","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ItemSlot extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    sprite: cc.Sprite = null;\r\n    @property(sp.Skeleton)\r\n    spine: sp.Skeleton = null;\r\n\r\n    @property(cc.SpriteAtlas)\r\n    sprAtlas: cc.SpriteAtlas = null;\r\n\r\n    id = 0;\r\n    animName = \"\";\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n    setId(id) {\r\n\r\n        id = id + 1;\r\n        this.id = id;\r\n        this.sprite.spriteFrame = this.sprAtlas.getSpriteFrame(\"icon\" + this.id);\r\n        this.spine.node.active = true;\r\n        this.sprite.node.active = false;\r\n        switch (this.id) {\r\n            case 1:\r\n                this.animName = \"wild\"\r\n                break;\r\n            case 2:\r\n                this.animName = 'do';\r\n                break;\r\n            case 3:\r\n                this.animName = 'xanh luc';\r\n                break;\r\n            case 4:\r\n                this.animName = 'la';\r\n                break;\r\n            case 5:\r\n                this.animName = 'tim';\r\n                break;\r\n            case 6:\r\n                this.animName = 'xanh duong';\r\n                break;\r\n        }\r\n        this.spine.setAnimation(0, this.animName, true);\r\n    }\r\n    setBlur() {\r\n        this.sprite.spriteFrame = this.sprAtlas.getSpriteFrame(\"icon\" + (this.id + 1) + \"_blur\");\r\n        this.spine.node.active = false;\r\n        this.sprite.node.active = true;\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","\r\nimport Http from \"../../Loading/src/Http\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupHistory extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        super.show();\r\n        App.instance.showBgMiniGame(\"Slot3x3Gem\");\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n\r\n\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 141, \"mt\": Configs.App.MONEY_TYPE, \"p\": this.page, \"un\": Configs.Login.Nickname }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (res[\"success\"]) {\r\n\r\n                if (this.items.length == 0) {\r\n                    for (var i = 0; i < 7; i++) {\r\n                        let item = cc.instantiate(this.itemTemplate);\r\n                        item.parent = this.itemTemplate.parent;\r\n                        this.items.push(item);\r\n                    }\r\n                    this.itemTemplate.destroy();\r\n                    this.itemTemplate = null;\r\n                }\r\n\r\n                this.maxPage = res[\"totalPages\"];\r\n                this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n                for (let i = 0; i < this.items.length; i++) {\r\n                    let item = this.items[i];\r\n                    if (i < res[\"results\"].length) {\r\n                        let itemData = res[\"results\"][i];\r\n                        item.getChildByName(\"bg\").opacity = i % 2 == 0 ? 10 : 0;\r\n                        item.getChildByName(\"Session\").getComponent(cc.Label).string = itemData[\"rf\"];\r\n                        item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"];\r\n                        item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                        item.getChildByName(\"LineBet\").getComponent(cc.Label).string = itemData[\"lb\"] == \"\" ? 0 : itemData[\"lb\"].split(\",\").length;\r\n                        item.getChildByName(\"LineWin\").getComponent(cc.Label).string = itemData[\"lb\"] == \"\" ? 0 : itemData[\"lw\"].split(\",\").length;\r\n                        item.getChildByName(\"Result\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                        item.active = true;\r\n                    } else {\r\n                        item.active = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","\r\nimport Http from \"../../Loading/src/Http\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupHonors extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        super.show();\r\n        App.instance.showBgMiniGame(\"Slot3x3Gem\");\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n\r\n\r\n    }\r\n\r\n    dismiss(){\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 142, \"mt\": Configs.App.MONEY_TYPE, \"p\": this.page }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (res[\"success\"]) {\r\n\r\n                if (this.items.length == 0) {\r\n                    for (var i = 0; i < 7; i++) {\r\n                        let item = cc.instantiate(this.itemTemplate);\r\n                        item.parent = this.itemTemplate.parent;\r\n                        this.items.push(item);\r\n                    }\r\n                    this.itemTemplate.destroy();\r\n                    this.itemTemplate = null;\r\n                }\r\n\r\n                this.maxPage = res[\"totalPages\"];\r\n                this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n                for (let i = 0; i < this.items.length; i++) {\r\n                    let item = this.items[i];\r\n                    if (i < res[\"results\"].length) {\r\n                        let itemData = res[\"results\"][i];\r\n                        item.getChildByName(\"bg\").opacity = i % 2 == 0 ? 10 : 0;\r\n                        item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"];\r\n                        item.getChildByName(\"Account\").getComponent(cc.Label).string = itemData[\"un\"];\r\n                        item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                        item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                        // switch (itemData[\"rs\"]) {\r\n                        //     case 3:\r\n                        //         item.getChildByName(\"Result\").getComponent(cc.Label).string = \"Nổ hũ\";\r\n                        //         break;\r\n                        //     default:\r\n                        //         item.getChildByName(\"Result\").getComponent(cc.Label).string = \"Thùng phá sảnh\";\r\n                        //         break\r\n                        // }\r\n                        item.active = true;\r\n                    } else {\r\n                        item.active = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupSelectLine extends Dialog {\r\n    @property(cc.Node)\r\n    buttonsLine: cc.Node = null;\r\n    @property(cc.Button)\r\n    btnClose: cc.Button = null;\r\n\r\n    onSelectedChanged: (lines: Array<number>) => void = null;\r\n    private readonly SELECTED = \"selected\";\r\n\r\n    start() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = true;\r\n            node.on(\"click\", () => {\r\n                node[this.SELECTED] = !node[this.SELECTED];\r\n                node.opacity = node[this.SELECTED] ? 255 : 80;\r\n                if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n                this.btnClose.interactable = this.getSelectedLines().length > 0;\r\n            });\r\n        }\r\n    }\r\n    show(){\r\n        super.show();\r\n        App.instance.showBgMiniGame(\"Slot3x3Gem\");\r\n    }\r\n    actSelectAll() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = true;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n    }\r\n\r\n    actSelectEven() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = i % 2 != 0;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n    }\r\n\r\n    actSelectOdd() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = i % 2 == 0;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n    }\r\n\r\n    actDeselectAll() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = false;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = false;\r\n    }\r\n\r\n    private getSelectedLines() {\r\n        let lines = new Array<number>();\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            if (typeof node[this.SELECTED] == \"undefined\" || node[this.SELECTED]) {\r\n                lines.push(i + 1);\r\n            }\r\n        }\r\n        return lines;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.getSelectedLines().length > 0) {\r\n            super.dismiss();\r\n        }\r\n    }\r\n}","import cmd from \"./Slot3x3Gem.Cmd\";\r\nimport PopupSelectLine from \"./Slot3x3Gem.PopupSelectLine\";\r\n\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport MiniGame from \"../../Lobby/LobbyScript/MiniGame\";\r\nimport BroadcastReceiver from \"../../Lobby/LobbyScript/Script/common/BroadcastReceiver\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"../../Lobby/LobbyScript/Script/networks/MiniGameNetworkClient\";\r\nimport InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport PopupHistory from \"./Slot3x3Gem.PopupHistory\";\r\nimport PopupHonors from \"./Slot3x3Gem.PopupHonors\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass(\"Slot3x3Gem.ButtonBet\")\r\nexport class ButtonBet {\r\n  @property(cc.Button)\r\n  button: cc.Button = null;\r\n  @property(cc.SpriteFrame)\r\n  sfNormal: cc.SpriteFrame = null;\r\n  @property(cc.SpriteFrame)\r\n  sfActive: cc.SpriteFrame = null;\r\n\r\n  _isActive = false;\r\n\r\n  setActive(isActive: boolean) {\r\n    this._isActive = isActive;\r\n    this.button.getComponent(cc.Sprite).spriteFrame = isActive\r\n      ? this.sfActive\r\n      : this.sfNormal;\r\n    this.button.interactable = !isActive;\r\n  }\r\n}\r\n\r\n@ccclass\r\nexport default class Slot3x3GemController extends MiniGame {\r\n  @property(cc.Node)\r\n  itemTemplate: cc.Node = null;\r\n  @property(cc.Node)\r\n  popupContainer: cc.Node = null;\r\n  @property([ButtonBet])\r\n  buttonBets: ButtonBet[] = [];\r\n  @property(cc.Node)\r\n  columns: cc.Node = null;\r\n  @property(cc.Node)\r\n  linesWin: cc.Node = null;\r\n  @property(cc.Button)\r\n  btnSpin: cc.Button = null;\r\n  @property(cc.Button)\r\n  btnLine: cc.Button = null;\r\n  @property(cc.Button)\r\n  btnClose: cc.Button = null;\r\n  @property(cc.Button)\r\n  btnAuto: cc.Button = null;\r\n  @property(cc.SpriteFrame)\r\n  sfAuto0: cc.SpriteFrame = null;\r\n  @property(cc.SpriteFrame)\r\n  sfAuto1: cc.SpriteFrame = null;\r\n  @property(cc.Button)\r\n  btnBoost: cc.Button = null;\r\n  @property(cc.SpriteFrame)\r\n  sfBoost0: cc.SpriteFrame = null;\r\n  @property(cc.SpriteFrame)\r\n  sfBoost1: cc.SpriteFrame = null;\r\n  @property(cc.Label)\r\n  lblJackpot: cc.Label = null;\r\n  @property(cc.Node)\r\n  lblWinCash: cc.Node = null;\r\n  @property(cc.Label)\r\n  lblToast: cc.Label = null;\r\n  @property(cc.Node)\r\n  effectJackpot: cc.Node = null;\r\n  @property(cc.Node)\r\n  effectBigWin: cc.Node = null;\r\n  @property(cc.Label)\r\n  lbTotalLine: cc.Label = null;\r\n  @property(PopupSelectLine)\r\n  popupSelectLine: PopupSelectLine = null;\r\n  @property([cc.Node])\r\n  public popups: cc.Node[] = [];\r\n\r\n  private rollStartItemCount = 15;\r\n  private rollAddItemCount = 10;\r\n  private spinDuration = 1.2;\r\n  private addSpinDuration = 0.3;\r\n  private itemHeight = 0;\r\n  private betIdx = 0;\r\n  private listBet = [100, 1000, 10000];\r\n  private arrLineSelect = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\r\n  ];\r\n  private isSpined = true;\r\n  private isBoost = false;\r\n  private isAuto = false;\r\n  private isCanChangeBet = true;\r\n  private lastSpinRes: cmd.ReceiveSpin = null;\r\n  private popupGuide = null;\r\n  private popupHistory: PopupHistory = null;\r\n  private popupHonor: PopupHonors = null;\r\n  start() {\r\n    this.itemHeight = this.itemTemplate.height;\r\n    for (let i = 0; i < this.columns.childrenCount; i++) {\r\n      let column = this.columns.children[i];\r\n      let count = this.rollStartItemCount + i * this.rollAddItemCount;\r\n      for (let j = 0; j < count; j++) {\r\n        let item = cc.instantiate(this.itemTemplate);\r\n        item.parent = column;\r\n        if (j >= 3) {\r\n          item.getComponent(\"Slot3x3Gem.ItemSlot\").id = Utils.randomRangeInt(\r\n            0,\r\n            6\r\n          );\r\n          item.getComponent(\"Slot3x3Gem.ItemSlot\").setBlur();\r\n        } else {\r\n          item\r\n            .getComponent(\"Slot3x3Gem.ItemSlot\")\r\n            .setId(Utils.randomRangeInt(0, 6));\r\n        }\r\n      }\r\n    }\r\n    this.itemTemplate.removeFromParent();\r\n    this.itemTemplate = null;\r\n\r\n    for (let i = 0; i < this.buttonBets.length; i++) {\r\n      var btn = this.buttonBets[i];\r\n      btn.setActive(i == this.betIdx);\r\n      btn.button.node.on(\"click\", () => {\r\n        App.instance.showBgMiniGame(\"Slot3x3Gem\");\r\n        if (!this.isCanChangeBet) {\r\n          this.showToast(App.instance.getTextLang(\"txt_notify_fast_action\"));\r\n          return;\r\n        }\r\n        let oldIdx = this.betIdx;\r\n        this.betIdx = i;\r\n        for (let i = 0; i < this.buttonBets.length; i++) {\r\n          this.buttonBets[i].setActive(i == this.betIdx);\r\n        }\r\n        this.isCanChangeBet = false;\r\n        this.scheduleOnce(() => {\r\n          this.isCanChangeBet = true;\r\n        }, 1);\r\n        MiniGameNetworkClient.getInstance().send(\r\n          new cmd.SendChangeRoom(oldIdx, this.betIdx)\r\n        );\r\n      });\r\n    }\r\n\r\n    this.btnAuto.node.on(\"click\", () => {\r\n      this.isAuto = !this.isAuto;\r\n      App.instance.showBgMiniGame(\"Slot3x3Gem\");\r\n      if (this.isAuto) {\r\n        if (this.isSpined) this.actSpin();\r\n        this.btnBoost.interactable = false;\r\n        this.btnAuto.getComponent(cc.Sprite).spriteFrame = this.sfAuto1;\r\n      } else {\r\n        this.btnBoost.interactable = true;\r\n        this.btnAuto.getComponent(cc.Sprite).spriteFrame = this.sfAuto0;\r\n        if (this.isSpined) {\r\n          this.setEnabledAllButtons(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.btnBoost.node.on(\"click\", () => {\r\n      this.isBoost = !this.isBoost;\r\n      App.instance.showBgMiniGame(\"Slot3x3Gem\");\r\n      if (this.isBoost) {\r\n        if (this.isSpined) this.actSpin();\r\n        this.btnAuto.interactable = false;\r\n        this.btnBoost.getComponent(cc.Sprite).spriteFrame = this.sfBoost1;\r\n      } else {\r\n        this.btnAuto.interactable = true;\r\n        this.btnBoost.getComponent(cc.Sprite).spriteFrame = this.sfBoost0;\r\n        if (this.isSpined) {\r\n          this.setEnabledAllButtons(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    BroadcastReceiver.register(\r\n      BroadcastReceiver.USER_LOGOUT,\r\n      () => {\r\n        if (!this.node.active) return;\r\n        this.dismiss();\r\n      },\r\n      this\r\n    );\r\n\r\n    MiniGameNetworkClient.getInstance().addOnClose(() => {\r\n      if (!this.node.active) return;\r\n      this.dismiss();\r\n    }, this);\r\n\r\n    MiniGameNetworkClient.getInstance().addListener((data: Uint8Array) => {\r\n      if (!this.node.active) return;\r\n      let inpacket = new InPacket(data);\r\n      switch (inpacket.getCmdId()) {\r\n        case cmd.Code.UPDATE_JACKPOT: {\r\n          let res = new cmd.ReceiveUpdateJackpot(data);\r\n          Tween.numberTo(this.lblJackpot, res.value, 0.3);\r\n          break;\r\n        }\r\n        case cmd.Code.SPIN: {\r\n          let res = new cmd.ReceiveSpin(data);\r\n          this.onSpinResult(res);\r\n          break;\r\n        }\r\n      }\r\n    }, this);\r\n  }\r\n\r\n  show() {\r\n    if (this.node.active) {\r\n      this.reOrder();\r\n      return;\r\n    }\r\n    App.instance.showBgMiniGame(\"Slot3x3Gem\");\r\n    super.show();\r\n    this.lblToast.node.parent.active = false;\r\n    this.lblWinCash.parent.active = false;\r\n\r\n    for (let i = 0; i < this.linesWin.childrenCount; i++) {\r\n      this.linesWin.children[i].active = false;\r\n    }\r\n\r\n    this.isSpined = true;\r\n    this.isCanChangeBet = true;\r\n    this.betIdx = 0;\r\n    for (let i = 0; i < this.buttonBets.length; i++) {\r\n      this.buttonBets[i].setActive(i == this.betIdx);\r\n    }\r\n\r\n    MiniGameNetworkClient.getInstance().send(new cmd.SendScribe(this.betIdx));\r\n  }\r\n\r\n  dismiss() {\r\n    super.dismiss();\r\n    for (let i = 0; i < this.popups.length; i++) {\r\n      this.popups[i].active = false;\r\n    }\r\n    App.instance.hideGameMini(\"Slot3x3Gem\");\r\n    MiniGameNetworkClient.getInstance().send(new cmd.SendUnScribe(this.betIdx));\r\n  }\r\n\r\n  public reOrder() {\r\n    super.reOrder();\r\n  }\r\n\r\n  actSpin(even = null) {\r\n    if (!this.isSpined) {\r\n      this.showToast(App.instance.getTextLang(\"txt_notify_fast_action\"));\r\n      return;\r\n    }\r\n    if (even != null) {\r\n      App.instance.showBgMiniGame(\"Slot3x3Gem\");\r\n    }\r\n    this.isSpined = false;\r\n    this.stopAllEffects();\r\n    this.stopShowLinesWin();\r\n    this.setEnabledAllButtons(false);\r\n    for (var i = 0; i < this.buttonBets.length; i++) {\r\n      this.buttonBets[i].button.interactable = false;\r\n    }\r\n    MiniGameNetworkClient.getInstance().send(\r\n      new cmd.SendSpin(this.listBet[this.betIdx], this.arrLineSelect.toString())\r\n    );\r\n  }\r\n\r\n  private setEnabledAllButtons(isEnabled: boolean) {\r\n    this.btnSpin.interactable = isEnabled;\r\n    this.btnClose.interactable = isEnabled;\r\n    this.btnLine.interactable = isEnabled;\r\n    this.btnSpin.node.getComponentInChildren(sp.Skeleton).node.active =\r\n      isEnabled;\r\n  }\r\n\r\n  private showToast(message: string) {\r\n    this.lblToast.string = message;\r\n    let parent = this.lblToast.node.parent;\r\n    parent.stopAllActions();\r\n    parent.active = true;\r\n    parent.opacity = 0;\r\n    parent.runAction(\r\n      cc.sequence(\r\n        cc.fadeIn(0.1),\r\n        cc.delayTime(2),\r\n        cc.fadeOut(0.2),\r\n        cc.callFunc(() => {\r\n          parent.active = false;\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private onSpinResult(res: cmd.ReceiveSpin) {\r\n    cc.log(res);\r\n    var _this = this;\r\n\r\n    var resultSuccess = [0, 1, 2, 3, 4, 5, 6];\r\n    if (resultSuccess.indexOf(res.result) < 0) {\r\n      this.scheduleOnce(function () {\r\n        this.isSpined = true;\r\n      }, 1);\r\n      this.setEnabledAllButtons(true);\r\n      for (var i = 0; i < this.buttonBets.length; i++) {\r\n        this.buttonBets[i].button.interactable = true;\r\n      }\r\n\r\n      this.isAuto = false;\r\n      this.btnAuto.interactable = true;\r\n      this.btnAuto.getComponent(cc.Sprite).spriteFrame = this.sfAuto0;\r\n\r\n      this.isBoost = false;\r\n      this.btnBoost.interactable = true;\r\n      this.btnBoost.getComponent(cc.Sprite).spriteFrame = this.sfBoost0;\r\n\r\n      switch (res.result) {\r\n        case 102:\r\n          this.showToast(App.instance.getTextLang(\"txt_not_enough\"));\r\n          break;\r\n        default:\r\n          this.showToast(App.instance.getTextLang(\"txt_unknown_error1\"));\r\n          break;\r\n      }\r\n      return;\r\n    }\r\n\r\n    Configs.Login.Coin -= this.listBet[this.betIdx] * this.arrLineSelect.length;\r\n    BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n    Configs.Login.Coin = res.currentMoney;\r\n    // this.node.scale=0.2;\r\n    this.lastSpinRes = res;\r\n    let matrix = res.matrix.split(\",\");\r\n    let timeScale = this.isBoost ? 0.5 : 1;\r\n    for (let i = 0; i < this.columns.childrenCount; i++) {\r\n      let roll = this.columns.children[i];\r\n      let step1Pos = this.itemHeight * 0.3;\r\n      let step2Pos =\r\n        -this.itemHeight * roll.childrenCount +\r\n        this.itemHeight * 3 -\r\n        this.itemHeight * 0.3;\r\n      let step3Pos =\r\n        -this.itemHeight * roll.childrenCount + this.itemHeight * 3;\r\n      roll.runAction(\r\n        cc.sequence(\r\n          cc.delayTime(0.2 * i * timeScale),\r\n          cc\r\n            .moveTo(0.2 * timeScale, cc.v2(roll.getPosition().x, step1Pos))\r\n            .easing(cc.easeQuadraticActionOut()),\r\n          cc\r\n            .moveTo(\r\n              (this.spinDuration + this.addSpinDuration * i) * timeScale,\r\n              cc.v2(roll.getPosition().x, step2Pos)\r\n            )\r\n            .easing(cc.easeQuadraticActionInOut()),\r\n          cc\r\n            .moveTo(0.2 * timeScale, cc.v2(roll.getPosition().x, step3Pos))\r\n            .easing(cc.easeQuadraticActionIn()),\r\n          cc.callFunc(() => {\r\n            roll.setPosition(cc.v2(roll.getPosition().x, 0));\r\n            if (i === this.columns.childrenCount - 1) {\r\n              _this.spined();\r\n            }\r\n          })\r\n        )\r\n      );\r\n      roll.runAction(\r\n        cc.sequence(\r\n          cc.delayTime((0.7 + 0.2 * i) * timeScale),\r\n          cc.callFunc(() => {\r\n            let children = roll.children;\r\n            children[2]\r\n              .getComponent(\"Slot3x3Gem.ItemSlot\")\r\n              .setId(parseInt(matrix[i]));\r\n            children[1]\r\n              .getComponent(\"Slot3x3Gem.ItemSlot\")\r\n              .setId(parseInt(matrix[3 + i]));\r\n            children[0]\r\n              .getComponent(\"Slot3x3Gem.ItemSlot\")\r\n              .setId(parseInt(matrix[6 + i]));\r\n            let itemBlur1 = children[children.length - 1].getComponent(\r\n              \"Slot3x3Gem.ItemSlot\"\r\n            );\r\n            let itemBlur2 = children[children.length - 2].getComponent(\r\n              \"Slot3x3Gem.ItemSlot\"\r\n            );\r\n            let itemBlur3 = children[children.length - 3].getComponent(\r\n              \"Slot3x3Gem.ItemSlot\"\r\n            );\r\n\r\n            itemBlur1.setId(parseInt(matrix[i]));\r\n            itemBlur2.setId(parseInt(matrix[3 + i]));\r\n            itemBlur3.setId(parseInt(matrix[6 + i]));\r\n          })\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  private spined() {\r\n    BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n    this.isSpined = true;\r\n    if (!this.isAuto && !this.isBoost) this.setEnabledAllButtons(true);\r\n    switch (this.lastSpinRes.result) {\r\n      case 0: //k an\r\n        this.showLineWins();\r\n        break;\r\n      case 1: // thang thuong\r\n        this.showLineWins();\r\n        break;\r\n      case 2: // thang lon\r\n        this.showEffectBigWin(this.lastSpinRes.prize, () =>\r\n          this.showLineWins()\r\n        );\r\n        break;\r\n      case 3: //jackpot\r\n      case 4:\r\n        this.showEffectJackpot(this.lastSpinRes.prize, () =>\r\n          this.showLineWins()\r\n        );\r\n        break;\r\n      case 6: //thang sieu lon\r\n        this.showEffectBigWin(this.lastSpinRes.prize, () =>\r\n          this.showLineWins()\r\n        );\r\n        break;\r\n    }\r\n  }\r\n\r\n  private showEffectBigWin(cash: number, cb: () => void) {\r\n    this.effectBigWin.stopAllActions();\r\n    this.effectBigWin.active = true;\r\n    let label = this.effectBigWin.getComponentInChildren(cc.Label);\r\n    label.node.active = false;\r\n\r\n    this.effectBigWin.runAction(\r\n      cc.sequence(\r\n        cc.delayTime(1),\r\n        cc.callFunc(() => {\r\n          label.string = \"\";\r\n          label.node.active = true;\r\n          Tween.numberTo(label, cash, 1);\r\n        }),\r\n        cc.delayTime(3),\r\n        cc.callFunc(() => {\r\n          this.effectBigWin.active = false;\r\n          if (cb != null) cb();\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private showEffectJackpot(cash: number, cb: () => void = null) {\r\n    this.effectJackpot.stopAllActions();\r\n    this.effectJackpot.active = true;\r\n    let label = this.effectJackpot.getComponentInChildren(cc.Label);\r\n    label.node.active = false;\r\n\r\n    this.effectJackpot.runAction(\r\n      cc.sequence(\r\n        cc.delayTime(1),\r\n        cc.callFunc(() => {\r\n          label.string = \"\";\r\n          label.node.active = true;\r\n          Tween.numberTo(label, cash, 1);\r\n        }),\r\n        cc.delayTime(3),\r\n        cc.callFunc(() => {\r\n          this.effectJackpot.active = false;\r\n          if (cb != null) cb();\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private showWinCash(coin: number) {\r\n    let parent = this.lblWinCash.parent;\r\n    let label = this.lblWinCash.getComponent(cc.Label);\r\n    parent.stopAllActions();\r\n    parent.active = true;\r\n    label.string = \"0\";\r\n    parent.opacity = 0;\r\n    parent.runAction(\r\n      cc.sequence(\r\n        cc.fadeIn(0.3),\r\n        cc.callFunc(() => {\r\n          Tween.numberTo(label, coin, 0.5);\r\n        }),\r\n        cc.delayTime(1.5),\r\n        cc.fadeOut(0.3),\r\n        cc.callFunc(() => {\r\n          parent.active = false;\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private stopAllEffects() {\r\n    this.effectJackpot.stopAllActions();\r\n    this.effectJackpot.active = false;\r\n    this.effectBigWin.stopAllActions();\r\n    this.effectBigWin.active = false;\r\n  }\r\n\r\n  private stopShowLinesWin() {\r\n    this.linesWin.stopAllActions();\r\n    for (var i = 0; i < this.linesWin.childrenCount; i++) {\r\n      this.linesWin.children[i].active = false;\r\n    }\r\n    this.stopAllItemEffect();\r\n  }\r\n\r\n  private stopAllItemEffect() {\r\n    for (var i = 0; i < this.columns.childrenCount; i++) {\r\n      var children = this.columns.children[i].children;\r\n      children[0].stopAllActions();\r\n      children[1].stopAllActions();\r\n      children[2].stopAllActions();\r\n\r\n      children[0].runAction(cc.scaleTo(0.1, 1));\r\n      children[1].runAction(cc.scaleTo(0.1, 1));\r\n      children[2].runAction(cc.scaleTo(0.1, 1));\r\n    }\r\n  }\r\n\r\n  private showLineWins() {\r\n    this.linesWin.stopAllActions();\r\n    var linesWin = this.lastSpinRes.linesWin.split(\",\");\r\n    var linesWinChildren = this.linesWin.children;\r\n    for (var i = 0; i < linesWinChildren.length; i++) {\r\n      linesWinChildren[i].active = linesWin.indexOf(\"\" + (i + 1)) >= 0;\r\n    }\r\n    var actions = [];\r\n    if (this.lastSpinRes.prize > 0) {\r\n      this.showWinCash(this.lastSpinRes.prize);\r\n      actions.push(cc.delayTime(1.5));\r\n      actions.push(\r\n        cc.callFunc(function () {\r\n          for (var i = 0; i < linesWinChildren.length; i++) {\r\n            linesWinChildren[i].active = false;\r\n          }\r\n        })\r\n      );\r\n    }\r\n    actions.push(cc.delayTime(0.5));\r\n    actions.push(\r\n      cc.callFunc(() => {\r\n        this.isSpined = true;\r\n        if (this.isBoost || this.isAuto) {\r\n          this.actSpin();\r\n        } else {\r\n          this.setEnabledAllButtons(true);\r\n          for (var i = 0; i < this.buttonBets.length; i++) {\r\n            this.buttonBets[i].button.interactable = true;\r\n          }\r\n        }\r\n      })\r\n    );\r\n    this.linesWin.runAction(cc.sequence.apply(null, actions));\r\n  }\r\n  actGuide() {\r\n    if (this.popupGuide == null) {\r\n      cc.assetManager.getBundle(\"Slot3x3Gem\").load(\r\n        \"Prefabs/PopupGuide\",\r\n        cc.Prefab,\r\n        function (finish, total, item) {},\r\n        (err1, prefab: cc.Prefab) => {\r\n          this.popupGuide = cc.instantiate(prefab).getComponent(\"Dialog\");\r\n          this.popupGuide.node.parent = this.popupContainer;\r\n          this.popupGuide.show();\r\n          this.popups.push(this.popupGuide.node);\r\n          App.instance.showLoading(false);\r\n        }\r\n      );\r\n    } else {\r\n      this.popupGuide.show();\r\n    }\r\n  }\r\n  actHistory() {\r\n    if (this.popupHistory == null) {\r\n      cc.assetManager.getBundle(\"Slot3x3Gem\").load(\r\n        \"Prefabs/PopupHistory\",\r\n        cc.Prefab,\r\n        function (finish, total, item) {},\r\n        (err1, prefab: cc.Prefab) => {\r\n          this.popupHistory = cc.instantiate(prefab).getComponent(PopupHistory);\r\n          this.popupHistory.node.parent = this.popupContainer;\r\n          this.popupHistory.show();\r\n          this.popups.push(this.popupHistory.node);\r\n          App.instance.showLoading(false);\r\n        }\r\n      );\r\n    } else {\r\n      this.popupHistory.show();\r\n    }\r\n  }\r\n  actHonor() {\r\n    if (this.popupHonor == null) {\r\n      cc.assetManager.getBundle(\"Slot3x3Gem\").load(\r\n        \"Prefabs/PopupHonors\",\r\n        cc.Prefab,\r\n        function (finish, total, item) {},\r\n        (err1, prefab: cc.Prefab) => {\r\n          this.popupHonor = cc.instantiate(prefab).getComponent(PopupHonors);\r\n          this.popupHonor.node.parent = this.popupContainer;\r\n          this.popupHonor.show();\r\n          this.popups.push(this.popupHonor.node);\r\n          App.instance.showLoading(false);\r\n        }\r\n      );\r\n    } else {\r\n      this.popupHonor.show();\r\n    }\r\n  }\r\n  actSelectLine() {\r\n    if (this.popupSelectLine == null) {\r\n      cc.assetManager.getBundle(\"Slot3x3Gem\").load(\r\n        \"Prefabs/PopupSelectLine\",\r\n        cc.Prefab,\r\n        function (finish, total, item) {},\r\n        (err1, prefab: cc.Prefab) => {\r\n          this.popupSelectLine = cc\r\n            .instantiate(prefab)\r\n            .getComponent(PopupSelectLine);\r\n          this.popupSelectLine.node.parent = this.popupContainer;\r\n          this.popupSelectLine.show();\r\n          this.popups.push(this.popupSelectLine.node);\r\n          App.instance.showLoading(false);\r\n          this.popupSelectLine.onSelectedChanged = (lines) => {\r\n            this.arrLineSelect = lines;\r\n            cc.log(\"lines=\", lines);\r\n            this.lbTotalLine.string = lines.length + \"\";\r\n          };\r\n        }\r\n      );\r\n    } else {\r\n      this.popupSelectLine.show();\r\n    }\r\n  }\r\n}\r\n"],"file":"index.js"}