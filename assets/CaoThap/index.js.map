{"version":3,"sources":["assets/CaoThap/CaoThapScript/CaoThap.CaoThapController.ts","assets/CaoThap/CaoThapScript/CaoThap.Cmd.ts","assets/CaoThap/CaoThapScript/CaoThap.PopupHistory.ts","assets/CaoThap/CaoThapScript/CaoThap.PopupHonors.ts"],"names":["BundleControl_1","require","Configs_1","MiniGame_1","App_1","BroadcastReceiver_1","Tween_1","Utils_1","MiniGameNetworkClient_1","Network_InPacket_1","CaoThap_Cmd_1","_a","cc","_decorator","ccclass","property","ButtonBet","this","button","_isActive","prototype","setActive","isActive","node","color","Color","WHITE","GRAY","interactable","__decorate","Button","exports","CaoThapController","_super","_this","apply","arguments","sprAtlasCards","sprCardBack","buttonBets","lblJackpot","lblSession","lblUp","lblCurrent","lblDown","lblStatus","lblTime","lblPlay","btnNewTurn","btnClose","btnPlay","btnUp","btnDown","sprAt","sprCard","lblToast","lblWinCoin","popups","sprBtn","fontBtn","listBet","betIdx","oldBetIdx","isCanChangeBet","currentTime","currentTimeInt","isPlaying","numA","cardNameMap","Object","popupHonor","popupHistory","popupGuide","__extends","start","i","j","cardPoint","toString","cardSuit","btn","_loop_1","this_1","on","default","instance","showBgMiniGame","i_1","length","scheduleOnce","getInstance","send","SendChangeRoom","showToast","getTextLang","register","USER_LOGOUT","active","dismiss","addOnClose","addListener","data","getCmdId","Code","SCRIBE","res","ReceiveScribe","roomId","UPDATE_INFO","ReceiveUpdateInfo","string","money1","formatNumber","money2","money3","referenceId","spriteFrame","getSpriteFrame","card","fillRange","time","step","getComponent","Sprite","getComponentInChildren","Label","font","cards","split","UPDATE_TIME","ReceiveUpdateTime","START","res_1","ReceiveStart","error","Login","Coin","currentMoney","USER_UPDATE_COIN","spinCard","PLAY","res_2","ReceivePlay","STOP","res_3","ReceiveStop","timeDelay","result","stopAllActions","setPosition","opacity","moneyExchange","runAction","sequence","spawn","fadeIn","moveBy","v2","fadeOut","callFunc","CHANGE_ROOM","ReceiveChangeRoom","status","UPDATE_JACKPOT","ReceiveUpdateJackpot","numberTo","value","update","dt","Math","max","_currentTimeInt","parseInt","longToTime","message","parent","delayTime","id","onFinished","c","schedule","BLACK","fromHEX","randomRangeInt","s","show","reOrder","call","SendScribe","actStart","SendStart","actUp","SendPlay","actDown","actStop","SendStop","hideGameMini","SendUnScribe","actPopupGuide","loadPrefabGame","prefab","showLoading","instantiate","director","getScene","getChildByName","push","actPopupHistory","actPopupHonor","SpriteAtlas","SpriteFrame","Node","BitmapFont","cmd","Network_OutPacket_1","UNSCRIBE","initData","setControllerId","setCmdId","packHeader","putByte","updateSize","getByte","newBetIdx","betValue","putInt","App","MONEY_TYPE","getError","getLong","isUp","getShort","getString","Http_1","Dialog_1","PopupHistory","lblPage","itemTemplate","fontNum","page","maxPage","items","Array","_onShowed","loadData","actNextPage","actPrevPage","get","API","mt","p","nn","Nickname","err","item","destroy","itemData","PopupHonors"],"mappings":"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","sourcesContent":["import BundleControl from \"../../Loading/src/BundleControl\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport MiniGame from \"../../Lobby/LobbyScript/MiniGame\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport BroadcastReceiver from \"../../Lobby/LobbyScript/Script/common/BroadcastReceiver\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"../../Lobby/LobbyScript/Script/networks/MiniGameNetworkClient\";\r\nimport InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport cmd from \"./CaoThap.Cmd\";\r\nimport PopupHistory from \"./CaoThap.PopupHistory\";\r\nimport PopupHonors from \"./CaoThap.PopupHonors\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass(\"CaoThap.ButtonBet\")\r\nexport class ButtonBet {\r\n    @property(cc.Button)\r\n    button: cc.Button = null;\r\n    // @property(cc.SpriteFrame)\r\n    // sfNormal: cc.SpriteFrame = null;\r\n    // @property(cc.SpriteFrame)\r\n    // sfActive: cc.SpriteFrame = null;\r\n\r\n    _isActive = false;\r\n\r\n    setActive(isActive: boolean) {\r\n        this._isActive = isActive;\r\n        // this.button.getComponent(cc.Sprite).spriteFrame = isActive ? this.sfActive : this.sfNormal;\r\n        this.button.node.color = isActive ? cc.Color.WHITE : cc.Color.GRAY;\r\n        this.button.interactable = !isActive;\r\n    }\r\n}\r\n\r\n@ccclass\r\nexport default class CaoThapController extends MiniGame {\r\n    @property(cc.SpriteAtlas)\r\n    sprAtlasCards: cc.SpriteAtlas = null;\r\n    @property(cc.SpriteFrame)\r\n    sprCardBack: cc.SpriteFrame = null;\r\n    @property([ButtonBet])\r\n    buttonBets: ButtonBet[] = [];\r\n    @property(cc.Label)\r\n    lblJackpot: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblSession: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblUp: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblCurrent: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblDown: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblStatus: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblTime: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblPlay: cc.Label = null;\r\n    @property(cc.Button)\r\n    btnNewTurn: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnClose: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnPlay: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnUp: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnDown: cc.Button = null;\r\n    @property(cc.Sprite)\r\n    sprAt: cc.Sprite = null;\r\n    @property(cc.Sprite)\r\n    sprCard: cc.Sprite = null;\r\n    @property(cc.Label)\r\n    lblToast: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblWinCoin: cc.Label = null;\r\n    @property([cc.Node])\r\n    public popups: cc.Node[] = [];\r\n    @property([cc.SpriteFrame])\r\n    sprBtn: cc.SpriteFrame[] = [];\r\n    @property([cc.BitmapFont])\r\n    fontBtn: cc.BitmapFont[] = [];\r\n\r\n    private readonly listBet = [1000, 10000, 50000, 100000, 500000];\r\n    private betIdx = 0;\r\n    private oldBetIdx = 0;\r\n    private isCanChangeBet = true;\r\n    private currentTime = 0;\r\n    private currentTimeInt = 0;\r\n    private isPlaying = false;\r\n    private numA = 0;\r\n    private cardNameMap = new Object();\r\n    private popupHonor: PopupHonors = null;\r\n    private popupHistory: PopupHistory = null;\r\n    private popupGuide = null;\r\n\r\n    start() {\r\n        for (let i = 0; i < 13; i++) {\r\n            for (let j = 0; j < 4; j++) {\r\n                let cardPoint = (i + 2).toString();\r\n                switch (cardPoint) {\r\n                    case \"11\":\r\n                        cardPoint = \"J\";\r\n                        break;\r\n                    case \"12\":\r\n                        cardPoint = \"Q\";\r\n                        break;\r\n                    case \"13\":\r\n                        cardPoint = \"K\";\r\n                        break;\r\n                    case \"14\":\r\n                        cardPoint = \"A\";\r\n                        break;\r\n                }\r\n                let cardSuit = \"\";\r\n                switch (j) {\r\n                    case 0:\r\n                        cardSuit = \"♠\";\r\n                        break;\r\n                    case 1:\r\n                        cardSuit = \"♣\";\r\n                        break;\r\n                    case 2:\r\n                        cardSuit = \"♦\";\r\n                        break;\r\n                    case 3:\r\n                        cardSuit = \"♥\";\r\n                        break;\r\n                }\r\n                this.cardNameMap[i * 4 + j] = cardPoint + cardSuit;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.buttonBets.length; i++) {\r\n            var btn = this.buttonBets[i];\r\n            btn.setActive(i == this.betIdx);\r\n            btn.button.node.on(\"click\", () => {\r\n                if (!this.isCanChangeBet) {\r\n                    this.showToast(App.instance.getTextLang(\"txt_notify_fast_action\"));\r\n                    return;\r\n                }\r\n                App.instance.showBgMiniGame(\"CaoThap\");\r\n                this.oldBetIdx = this.betIdx;\r\n                this.betIdx = i;\r\n                for (let i = 0; i < this.buttonBets.length; i++) {\r\n                    this.buttonBets[i].setActive(i == this.betIdx);\r\n                }\r\n                this.isCanChangeBet = false;\r\n                this.scheduleOnce(() => {\r\n                    this.isCanChangeBet = true;\r\n                }, 1);\r\n                MiniGameNetworkClient.getInstance().send(new cmd.SendChangeRoom(this.oldBetIdx, this.betIdx));\r\n            });\r\n        }\r\n\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_LOGOUT, () => {\r\n            if (!this.node.active) return;\r\n            this.dismiss();\r\n        }, this);\r\n\r\n        MiniGameNetworkClient.getInstance().addOnClose(() => {\r\n            if (!this.node.active) return;\r\n            this.dismiss();\r\n        }, this);\r\n\r\n        MiniGameNetworkClient.getInstance().addListener((data: Uint8Array) => {\r\n            if (!this.node.active) return;\r\n            let inpacket = new InPacket(data);\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.SCRIBE: {\r\n                    let res = new cmd.ReceiveScribe(data);\r\n                    this.betIdx = res.roomId;\r\n                    for (let i = 0; i < this.buttonBets.length; i++) {\r\n                        this.buttonBets[i].setActive(i == this.betIdx);\r\n                    }\r\n                    this.btnPlay.interactable = true;\r\n                    for (let i = 0; i < this.buttonBets.length; i++) {\r\n                        this.buttonBets[i].button.interactable = true;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_INFO: {\r\n                    let res = new cmd.ReceiveUpdateInfo(data);\r\n                    this.numA = res.numA;\r\n                    this.lblUp.string = res.money1 == 0 ? \"\" : Utils.formatNumber(res.money1);\r\n                    this.lblCurrent.string = Utils.formatNumber(res.money2);\r\n                    this.lblDown.string = res.money3 == 0 ? \"\" : Utils.formatNumber(res.money3);\r\n                    this.lblSession.string = \"#\" + res.referenceId.toString();\r\n                    this.sprCard.spriteFrame = this.sprAtlasCards.getSpriteFrame(\"card\" + res.card);\r\n                    this.sprAt.fillRange = this.numA / 3;\r\n                    this.currentTime = res.time;\r\n                    this.btnNewTurn.interactable = res.step > 1;\r\n                    this.btnNewTurn.node.getComponent(cc.Sprite).spriteFrame = res.step > 1 ? this.sprBtn[0] : this.sprBtn[1];\r\n                    this.btnNewTurn.node.getComponentInChildren(cc.Label).font = res.step > 1 ? this.fontBtn[0] : this.fontBtn[1];\r\n                    this.btnPlay.node.active = false;\r\n                    this.btnPlay.node.active = false;\r\n                    this.lblStatus.string = \"\";\r\n                    this.btnUp.interactable = res.money1 > 0;\r\n                    this.btnDown.interactable = res.money3 > 0;\r\n                    for (let i = 0; i < this.buttonBets.length; i++) {\r\n                        this.buttonBets[i].button.interactable = false;\r\n                    }\r\n\r\n                    let cards = res.cards.split(\",\");\r\n                    for (let i = 0; i < cards.length - 1; i++) {\r\n                        if (i > 0) this.lblStatus.string += \",\";\r\n                        this.lblStatus.string += this.cardNameMap[cards[i]];\r\n                    }\r\n                    this.isPlaying = true;\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_TIME: {\r\n                    let res = new cmd.ReceiveUpdateTime(data);\r\n\r\n                    this.currentTime = res.time;\r\n                    break;\r\n                }\r\n                case cmd.Code.START: {\r\n                    let res = new cmd.ReceiveStart(data);\r\n\r\n                    if (res.error != 0) {\r\n                        if (res.error == 3) {\r\n                            this.showToast(App.instance.getTextLang('txt_not_enough'));\r\n                            this.btnPlay.node.active = true;\r\n                            this.btnPlay.node.active = true;\r\n                        }\r\n                        return\r\n                    }\r\n                    Configs.Login.Coin = res.currentMoney;\r\n                    BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                    this.lblStatus.string = \"\";\r\n                    this.lblUp.string = \"\";\r\n                    this.lblDown.string = \"\";\r\n                    this.lblCurrent.string = Utils.formatNumber(res.money2);\r\n                    this.lblSession.string = \"#\" + res.referenceId.toString();\r\n                    this.sprAt.fillRange = 0;\r\n                    this.btnNewTurn.interactable = false;\r\n                    this.btnNewTurn.node.getComponent(cc.Sprite).spriteFrame = this.sprBtn[1];\r\n                    this.btnNewTurn.node.getComponentInChildren(cc.Label).font = this.fontBtn[1];\r\n                    for (let i = 0; i < this.buttonBets.length; i++) {\r\n                        this.buttonBets[i].button.interactable = false;\r\n                    }\r\n                    if (48 == res.card || 49 == res.card || 50 == res.card || 51 == res.card) {\r\n                        this.numA++;\r\n                    }\r\n                    this.spinCard(res.card, () => {\r\n                        this.lblStatus.string += this.cardNameMap[res.card];\r\n                        this.lblUp.string = res.money1 == 0 ? \"\" : Utils.formatNumber(res.money1);\r\n                        this.lblDown.string = res.money3 == 0 ? \"\" : Utils.formatNumber(res.money3);\r\n\r\n                        this.btnUp.interactable = true && this.isPlaying && res.money1 > 0;\r\n                        this.btnDown.interactable = true && this.isPlaying && res.money3 > 0;\r\n                        this.sprAt.fillRange = this.numA / 3;\r\n                    });\r\n                    this.currentTime = 120;\r\n                    this.isPlaying = true;\r\n                    break;\r\n                }\r\n                case cmd.Code.PLAY: {\r\n                    let res = new cmd.ReceivePlay(data);\r\n\r\n                    this.currentTime = 120;\r\n                    for (let i = 0; i < this.buttonBets.length; i++) {\r\n                        this.buttonBets[i].button.interactable = false;\r\n                    }\r\n                    if (48 == res.card || 49 == res.card || 50 == res.card || 51 == res.card) {\r\n                        this.numA++;\r\n                    }\r\n                    this.spinCard(res.card, () => {\r\n                        if (this.lblStatus.string != \"\") this.lblStatus.string += \",\";\r\n                        this.lblStatus.string += this.cardNameMap[res.card];\r\n\r\n                        this.lblUp.string = res.money1 == 0 ? \"\" : Utils.formatNumber(res.money1);\r\n                        this.lblCurrent.string = Utils.formatNumber(res.money2);\r\n                        this.lblDown.string = res.money3 == 0 ? \"\" : Utils.formatNumber(res.money3);\r\n\r\n                        this.btnUp.interactable = this.isPlaying && res.money1 > 0;\r\n                        this.btnDown.interactable = this.isPlaying && res.money3 > 0;\r\n                        this.btnNewTurn.interactable = this.isPlaying;\r\n                        this.btnNewTurn.node.getComponent(cc.Sprite).spriteFrame = this.isPlaying ? this.sprBtn[0] : this.sprBtn[1];\r\n                        this.btnNewTurn.node.getComponentInChildren(cc.Label).font = this.isPlaying ? this.fontBtn[0] : this.fontBtn[1];\r\n                    });\r\n                    break;\r\n                }\r\n                case cmd.Code.STOP: {\r\n                    let res = new cmd.ReceiveStop(data);\r\n\r\n                    this.isPlaying = false;\r\n                    let timeDelay = 3;\r\n                    switch (res.result) {\r\n                        case 4:\r\n                            timeDelay = 0.5;\r\n                            break;\r\n                    }\r\n                    Configs.Login.Coin = res.currentMoney;\r\n                    this.scheduleOnce(() => {\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        // this.lblStatus.string = \"Nhấn nút \\\"Play\\\" để bắt đầu\";\r\n                        this.lblStatus.string = App.instance.getTextLang('txt_caothap_play');\r\n                        this.sprCard.spriteFrame = this.sprCardBack;\r\n                        this.btnNewTurn.interactable = false;\r\n                        this.btnNewTurn.node.getComponent(cc.Sprite).spriteFrame = this.sprBtn[1];\r\n                        this.btnNewTurn.node.getComponentInChildren(cc.Label).font = this.fontBtn[1];\r\n                        this.btnPlay.node.active = true;\r\n                        this.lblPlay.node.active = true;\r\n                        this.sprAt.fillRange = 0;\r\n                        this.numA = 0;\r\n                        for (let i = 0; i < this.buttonBets.length; i++) {\r\n                            this.buttonBets[i].button.interactable = true;\r\n                        }\r\n                        this.lblTime.string = \"2:00\";\r\n                        this.currentTime = 0;\r\n\r\n                        this.lblUp.string = \"\";\r\n                        this.lblDown.string = \"\";\r\n                        this.lblCurrent.string = Utils.formatNumber(this.listBet[this.betIdx]);\r\n\r\n                        //show win coin\r\n                        this.lblWinCoin.node.stopAllActions();\r\n                        this.lblWinCoin.node.setPosition(-26, -16);\r\n                        this.lblWinCoin.node.opacity = 0;\r\n                        this.lblWinCoin.string = \"+\" + Utils.formatNumber(res.moneyExchange);\r\n                        this.lblWinCoin.node.active = true;\r\n                        this.lblWinCoin.node.runAction(cc.sequence(\r\n                            cc.spawn(cc.fadeIn(0.2), cc.moveBy(2, cc.v2(0, 100))),\r\n                            cc.fadeOut(0.15),\r\n                            cc.callFunc(() => {\r\n                                this.lblWinCoin.node.active = false;\r\n                            })\r\n                        ));\r\n                    }, timeDelay);\r\n                    break;\r\n                }\r\n                case cmd.Code.CHANGE_ROOM: {\r\n                    let res = new cmd.ReceiveChangeRoom(data);\r\n\r\n                    if (res.status != 0) {\r\n                        this.betIdx = this.oldBetIdx;\r\n                        for (let i = 0; i < this.buttonBets.length; i++) {\r\n                            this.buttonBets[i].setActive(i == this.betIdx);\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_JACKPOT: {\r\n                    let res = new cmd.ReceiveUpdateJackpot(data);\r\n                    Tween.numberTo(this.lblJackpot, res.value, 0.3);\r\n                    break;\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this.currentTime > 0) {\r\n            this.currentTime = Math.max(0, this.currentTime - dt);\r\n\r\n            let _currentTimeInt = parseInt(this.currentTime.toString());\r\n            if (this.currentTimeInt != _currentTimeInt) {\r\n                this.currentTimeInt = _currentTimeInt;\r\n                this.lblTime.string = this.longToTime(this.currentTimeInt);\r\n            }\r\n        }\r\n    }\r\n\r\n    private showToast(message: string) {\r\n        this.lblToast.string = message;\r\n        let parent = this.lblToast.node.parent;\r\n        parent.stopAllActions();\r\n        parent.active = true;\r\n        parent.opacity = 0;\r\n        parent.runAction(cc.sequence(cc.fadeIn(0.1), cc.delayTime(2), cc.fadeOut(0.2), cc.callFunc(() => {\r\n            parent.active = false;\r\n        })));\r\n    }\r\n\r\n    private spinCard(id: number, onFinished: () => void) {\r\n        let c = 15;\r\n        this.schedule(() => {\r\n            c--;\r\n            if (c == 0) {\r\n                this.sprCard.node.color = cc.Color.WHITE;\r\n                this.sprCard.spriteFrame = this.sprAtlasCards.getSpriteFrame(\"card\" + id);\r\n                onFinished();\r\n            } else {\r\n                this.sprCard.node.color = cc.Color.BLACK.fromHEX(\"#CCCCCC\");\r\n                this.sprCard.spriteFrame = this.sprAtlasCards.getSpriteFrame(\"card\" + Utils.randomRangeInt(0, 52));\r\n            }\r\n        }, 0.1, c - 1, 0);\r\n    }\r\n\r\n    private longToTime(time: number): string {\r\n        let m = parseInt((time / 60).toString());\r\n        let s = time % 60;\r\n        return m + \":\" + (s < 10 ? \"0\" : \"\") + s;\r\n    }\r\n\r\n    show() {\r\n        if (this.node.active) {\r\n            this.reOrder();\r\n            return;\r\n        }\r\n        super.show();\r\n        App.instance.showBgMiniGame(\"CaoThap\");\r\n        this.lblToast.node.parent.active = false;\r\n        // this.lblStatus.string = \"Nhấn nút \\\"Play\\\" để bắt đầu\";\r\n        this.lblStatus.string = App.instance.getTextLang('txt_caothap_play');\r\n        this.lblSession.string = \"\";\r\n        this.lblUp.string = \"\";\r\n        this.lblDown.string = \"\";\r\n        this.lblCurrent.string = Utils.formatNumber(this.listBet[this.betIdx]);\r\n        this.sprAt.fillRange = 0;\r\n        this.btnNewTurn.interactable = false;\r\n        this.btnNewTurn.node.getComponent(cc.Sprite).spriteFrame = this.sprBtn[1];\r\n        this.btnNewTurn.node.getComponentInChildren(cc.Label).font = this.fontBtn[1];\r\n\r\n        this.btnUp.interactable = false;\r\n        this.btnDown.interactable = false;\r\n        this.btnPlay.interactable = false;\r\n        this.lblWinCoin.node.active = false;\r\n\r\n        this.isCanChangeBet = true;\r\n        this.betIdx = 0;\r\n        for (let i = 0; i < this.buttonBets.length; i++) {\r\n            this.buttonBets[i].setActive(i == this.betIdx);\r\n        }\r\n\r\n        MiniGameNetworkClient.getInstance().send(new cmd.SendScribe(this.betIdx));\r\n    }\r\n\r\n    actStart() {\r\n        App.instance.showBgMiniGame(\"CaoThap\");\r\n        this.btnPlay.node.active = false;\r\n        this.lblPlay.node.active = false;\r\n        MiniGameNetworkClient.getInstance().send(new cmd.SendStart(this.listBet[this.betIdx]));\r\n    }\r\n\r\n    actUp() {\r\n        App.instance.showBgMiniGame(\"CaoThap\");\r\n        this.btnUp.interactable = false;\r\n        this.btnDown.interactable = false;\r\n        this.btnNewTurn.interactable = false;\r\n        this.btnNewTurn.node.getComponent(cc.Sprite).spriteFrame = this.sprBtn[1];\r\n        this.btnNewTurn.node.getComponentInChildren(cc.Label).font = this.fontBtn[1];\r\n        MiniGameNetworkClient.getInstance().send(new cmd.SendPlay(this.listBet[this.betIdx], true));\r\n    }\r\n\r\n    actDown() {\r\n        App.instance.showBgMiniGame(\"CaoThap\");\r\n        this.btnUp.interactable = false;\r\n        this.btnDown.interactable = false;\r\n        this.btnNewTurn.interactable = false;\r\n        this.btnNewTurn.node.getComponent(cc.Sprite).spriteFrame = this.sprBtn[1];\r\n        this.btnNewTurn.node.getComponentInChildren(cc.Label).font = this.fontBtn[1];\r\n        MiniGameNetworkClient.getInstance().send(new cmd.SendPlay(this.listBet[this.betIdx], false));\r\n    }\r\n\r\n    actStop() {\r\n        App.instance.showBgMiniGame(\"CaoThap\");\r\n        this.btnNewTurn.interactable = false;\r\n        this.btnNewTurn.node.getComponent(cc.Sprite).spriteFrame = this.sprBtn[1];\r\n        this.btnNewTurn.node.getComponentInChildren(cc.Label).font = this.fontBtn[1];\r\n        MiniGameNetworkClient.getInstance().send(new cmd.SendStop(this.listBet[this.betIdx]));\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        for (let i = 0; i < this.popups.length; i++) {\r\n            this.popups[i].active = false;\r\n        }\r\n        App.instance.hideGameMini(\"CaoThap\");\r\n        MiniGameNetworkClient.getInstance().send(new cmd.SendUnScribe(this.betIdx));\r\n    }\r\n    actPopupGuide() {\r\n        if (this.popupGuide == null) {\r\n            BundleControl.loadPrefabGame(\"CaoThap\", \"res/prefabs/PopupGuide\", (finish, total) => {\r\n                // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupGuide = cc.instantiate(prefab).getComponent(\"Dialog\");\r\n                this.popupGuide.node.parent = cc.director.getScene().getChildByName(\"Canvas\");\r\n                this.popupGuide.show();\r\n                this.popups.push(this.popupGuide.node);\r\n            });\r\n        } else {\r\n            this.popupGuide.show();\r\n        }\r\n    }\r\n    actPopupHistory() {\r\n        if (this.popupHistory == null) {\r\n            BundleControl.loadPrefabGame(\"CaoThap\", \"res/prefabs/PopupHistory\", (finish, total) => {\r\n                // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupHistory = cc.instantiate(prefab).getComponent(\"CaoThap.PopupHistory\");\r\n                this.popupHistory.node.parent = cc.director.getScene().getChildByName(\"Canvas\");\r\n                this.popupHistory.show();\r\n                this.popups.push(this.popupHistory.node);\r\n            });\r\n        } else {\r\n            this.popupHistory.show();\r\n        }\r\n    }\r\n    actPopupHonor() {\r\n        if (this.popupHonor == null) {\r\n            BundleControl.loadPrefabGame(\"CaoThap\", \"res/prefabs/PopupHonors\", (finish, total) => {\r\n                // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupHonor = cc.instantiate(prefab).getComponent(\"CaoThap.PopupHonors\");\r\n                this.popupHonor.node.parent = cc.director.getScene().getChildByName(\"Canvas\");\r\n                this.popupHonor.show();\r\n                this.popups.push(this.popupHonor.node);\r\n            });\r\n        } else {\r\n            this.popupHonor.show();\r\n        }\r\n    }\r\n    public reOrder() {\r\n        super.reOrder();\r\n    }\r\n}\r\n","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport OutPacket from \"../../Lobby/LobbyScript/Script/networks/Network.OutPacket\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nexport namespace cmd {\r\n    export class Code {\r\n        static SCRIBE = 6004;\r\n        static UNSCRIBE = 6005;\r\n        static START = 6001;\r\n        static PLAY = 6002;\r\n        static CHANGE_ROOM = 6006;\r\n        static UPDATE_TIME = 6008;\r\n        static UPDATE_INFO = 6009;\r\n        static UPDATE_JACKPOT = 6003;\r\n        static STOP = 6007;\r\n    }\r\n\r\n    export class SendScribe extends OutPacket {\r\n        constructor(betIdx: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SCRIBE);\r\n            this.packHeader();\r\n            this.putByte(betIdx);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReceiveScribe extends InPacket {\r\n        status = 0;\r\n        roomId = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.status = this.getByte();\r\n            this.roomId = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class SendUnScribe extends OutPacket {\r\n        constructor(betIdx: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.UNSCRIBE);\r\n            this.packHeader();\r\n            this.putByte(betIdx);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendChangeRoom extends OutPacket {\r\n        constructor(oldBetIdx: number, newBetIdx: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHANGE_ROOM);\r\n            this.packHeader();\r\n            this.putByte(oldBetIdx);\r\n            this.putByte(newBetIdx);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReceiveChangeRoom extends InPacket {\r\n        status = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.status = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class SendStart extends OutPacket {\r\n        constructor(betValue: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.START);\r\n            this.packHeader();\r\n            this.putInt(betValue);\r\n            this.putByte(Configs.App.MONEY_TYPE);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReceiveStart extends InPacket {\r\n        error = 0;\r\n        referenceId = 0;\r\n        card = 0;\r\n        money1 = 0;\r\n        money2 = 0;\r\n        money3 = 0;\r\n        currentMoney = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.referenceId = this.getLong();\r\n            this.card = this.getByte();\r\n            this.money1 = this.getLong();\r\n            this.money2 = this.getLong();\r\n            this.money3 = this.getLong();\r\n            this.currentMoney = this.getLong();\r\n        }\r\n    }\r\n\r\n    export class SendPlay extends OutPacket {\r\n        constructor(betValue: number, isUp: boolean) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.PLAY);\r\n            this.packHeader();\r\n            this.putInt(betValue);\r\n            this.putByte(Configs.App.MONEY_TYPE);\r\n            this.putByte(isUp ? 1 : 0);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReceivePlay extends InPacket {\r\n        card = 0;\r\n        money1 = 0;\r\n        money2 = 0;\r\n        money3 = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.card = this.getByte();\r\n            this.money1 = this.getLong();\r\n            this.money2 = this.getLong();\r\n            this.money3 = this.getLong();\r\n        }\r\n    }\r\n\r\n    export class SendStop extends OutPacket {\r\n        constructor(betValue: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.STOP);\r\n            this.packHeader();\r\n            this.putInt(betValue);\r\n            this.putByte(Configs.App.MONEY_TYPE);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReceiveStop extends InPacket {\r\n        result = 0;\r\n        currentMoney = 0;\r\n        moneyExchange = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.result = this.getByte();\r\n            this.currentMoney = this.getLong();\r\n            this.moneyExchange = this.getLong();\r\n        }\r\n    }\r\n\r\n    export class ReceiveUpdateInfo extends InPacket {\r\n        numA = 0;\r\n        card = 0;\r\n        money1 = 0;\r\n        money2 = 0;\r\n        money3 = 0;\r\n        time = 0;\r\n        step = 0;\r\n        referenceId = 0;\r\n        cards = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.numA = this.getByte();\r\n            this.card = this.getByte();\r\n            this.money1 = this.getLong();\r\n            this.money2 = this.getLong();\r\n            this.money3 = this.getLong();\r\n            this.time = this.getShort();\r\n            this.step = this.getByte();\r\n            this.referenceId = this.getLong();\r\n            this.cards = this.getString();\r\n        }\r\n    }\r\n\r\n    export class ReceiveUpdateJackpot extends InPacket {\r\n        value = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.value = this.getLong();\r\n        }\r\n    }\r\n\r\n    export class ReceiveUpdateTime extends InPacket {\r\n        time = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.time = this.getShort();\r\n        }\r\n    }\r\n}\r\nexport default cmd;\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupHistory extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    @property([cc.BitmapFont])\r\n    fontNum: cc.BitmapFont[] = [];\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        super.show();\r\n        App.instance.showBgMiniGame(\"CaoThap\");\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n\r\n\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 107, \"mt\": Configs.App.MONEY_TYPE, \"p\": this.page, \"nn\": Configs.Login.Nickname }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (res[\"success\"]) {\r\n\r\n                if (this.items.length == 0) {\r\n                    for (var i = 0; i < 6; i++) {\r\n                        let item = cc.instantiate(this.itemTemplate);\r\n                        item.parent = this.itemTemplate.parent;\r\n                        this.items.push(item);\r\n                    }\r\n                    this.itemTemplate.destroy();\r\n                    this.itemTemplate = null;\r\n                }\r\n\r\n                this.maxPage = res[\"totalPages\"];\r\n                this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n                for (let i = 0; i < this.items.length; i++) {\r\n                    let item = this.items[i];\r\n                    if (i < res[\"results\"].length) {\r\n                        let itemData = res[\"results\"][i];\r\n                        item.getChildByName(\"Session\").getComponent(cc.Label).string = itemData[\"transId\"];\r\n                        item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"timestamp\"];\r\n                        item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"betValue\"]);\r\n                        item.getChildByName(\"Result\").getComponent(cc.Label).string = itemData[\"cards\"];\r\n                        item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"prize\"]);\r\n                        item.getChildByName(\"Win\").getComponent(cc.Label).font = itemData['prize'] > 0 ? this.fontNum[1] : this.fontNum[0];\r\n                        item.getChildByName(\"Step\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"step\"]);\r\n                        if (itemData[\"step\"] == 1) {\r\n                            item.getChildByName(\"BetDoor\").getComponent(cc.Label).string = \"\";\r\n                        } else {\r\n                            item.getChildByName(\"BetDoor\").getComponent(cc.Label).string = itemData[\"potBet\"] == 0 ? \"Dưới\" : \"Trên\";\r\n                        }\r\n                        item.active = true;\r\n                    } else {\r\n                        item.active = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupHonors extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        super.show();\r\n        App.instance.showBgMiniGame(\"CaoThap\");\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n\r\n\r\n    }\r\n\r\n    dismiss(){\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 108, \"mt\": Configs.App.MONEY_TYPE, \"p\": this.page }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (res[\"success\"]) {\r\n\r\n                if (this.items.length == 0) {\r\n                    for (var i = 0; i < 6; i++) {\r\n                        let item = cc.instantiate(this.itemTemplate);\r\n                        item.parent = this.itemTemplate.parent;\r\n                        this.items.push(item);\r\n                    }\r\n                    this.itemTemplate.destroy();\r\n                    this.itemTemplate = null;\r\n                }\r\n\r\n                this.maxPage = res[\"totalPages\"];\r\n                this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n                for (let i = 0; i < this.items.length; i++) {\r\n                    let item = this.items[i];\r\n                    if (i < res[\"results\"].length) {\r\n                        let itemData = res[\"results\"][i];\r\n                        item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"timestamp\"];\r\n                        item.getChildByName(\"Account\").getComponent(cc.Label).string = itemData[\"nickname\"];\r\n                        item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"betValue\"]);\r\n                        item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"prize\"]);\r\n                        switch (itemData[\"result\"]) {\r\n                            case 4:\r\n                                item.getChildByName(\"Result\").getComponent(cc.Label).string = \"Thắng lớn\";\r\n                                break;\r\n                            default:\r\n                                item.getChildByName(\"Result\").getComponent(cc.Label).string = \"Nổ hũ\";\r\n                                break\r\n                        }\r\n                        item.active = true;\r\n                    } else {\r\n                        item.active = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n"],"file":"index.js"}