{"version":3,"sources":["assets/Slot8/Slot8Script/Slot8.ItemSlot.ts","assets/Slot8/Slot8Script/Slot8.Lobby.ts","assets/Slot8/Slot8Script/Slot8.PopupBonus.ts","assets/Slot8/Slot8Script/Slot8.PopupGuide.ts","assets/Slot8/Slot8Script/Slot8.Tutorial.ts","assets/Slot8/Slot8Script/Slot8ChooseLine.ts","assets/Slot8/Slot8Script/Slot8Cmd.ts","assets/Slot8/Slot8Script/Slot8Controller.ts","assets/Slot8/Slot8Script/Slot8Glory.ts","assets/Slot8/Slot8Script/Slot8History.ts","assets/Slot8/Slot8Script/Slot8Icon.ts","assets/Slot8/Slot8Script/Slot8TrialResult.ts"],"names":["_a","cc","_decorator","ccclass","property","Slot8ItemSlot","_super","_this","apply","this","arguments","spriteIcon","spineIcon","nodeBox","itemAtlast","itemBlur","item4","gamePlayManager","itemId","index","animName","__extends","prototype","onLoad","find","node","getComponent","Sprite","sp","Skeleton","getChildByName","setContentSize","size","init","active","scale","y","width","height","setSpriteFrame","changeSpriteBlurByItemId","sizeMode","SizeMode","TRIMMED","changeSpriteRealByItemId","changeSpineIcon","parseInt","isBlur","atlast","spriteFrame","getSpriteFrame","checkShowSpriteOrSpine","Tween","stopAllByTarget","color","Color","WHITE","tween","repeatForever","sequence","to","easing","sineOut","start","delay","call","GRAY","setAnimation","__decorate","Node","SpriteAtlas","SpriteFrame","Component","exports","default","App_1","require","Tween_1","SlotNetworkClient_1","Slot8Cmd_1","Slot8Lobby","listPot","rooms","mSlotController","pSlot3Controller","zIndex","isMusic","audioEngine","playMusic","musicGame","show","getComponentInChildren","setScale","v2","winSize","hide","onBtnBack","isSound","play","soundClick","getInstance","send","SendUnSubcribe","betId","stopAll","instance","loadScene","onBtnTry","SendSubcribe","onJoinRoom","isTrial","onUpdateJackpot","pData","res","ResUpdateJackpotSlots","resJson","JSON","parse","pots","numberTo","p","Label","Dialog_1","PopupBonus","sfMiss","sfWin","items","nodeBoxNotify","txtNotify","lblLeft","lblFactor","lblHeso","lblWin","factor","left","betValue","onFinished","onSpecialFinished","dataBonus","dataSpecial","heso","win","controller","_loop_1","i","this_1","children","Button","on","onBtnSoundTouchBonus","value","length","string","Math","random","hidden","childrenCount","showBonus","bonus","btn","interactable","arrBonus","split","push","Number","onBtnSoundSumary","showPopup","parent","onBtnExit","hidePopup","scheduleOnce","dismiss","PopupGuide","page","soundSlotState","canPlaySound","Slot8Tutorial","spriteTutorial","sfTutorialArr","Slot8ChooseLine","btnClose","lineParent","listToggle","SELECTED","onSelectedChanged","toggle","Toggle","getLineSelected","lines","Array","selectAll","isChecked","deSelectAll","selectEven","selectOdd","cmd","Network_InPacket_1","Network_OutPacket_1","Code","SUBCRIBE","UNSUBCRIBE","CHANGE_ROOM","PLAY","UPDATE_RESULT","UPDATE_POT","AUTO","STOP_AUTO","FORCE_STOP_AUTO","DATE_X2","BIG_WIN","FREE","FREE_DAI_LY","MINIMIZE","UPDATE_JACKPOT_SLOTS","SUBCRIBE_HALL_SLOT","ReceiveFreeDaiLy","data","freeSpin","getByte","getString","roomId","initData","setControllerId","setCmdId","packHeader","putByte","updateSize","SendPlay","putString","SendChangeRoom","roomLeavedId","roomJoinedId","ReceiveUpdatePot","valueRoom1","valueRoom2","valueRoom3","x21","x22","getLong","ReceiveResult","ref","result","matrix","linesWin","haiSao","prize","currentMoney","isFreeSpin","ratio","currentNumberFreeSpin","ReceiveDateX2","ngayX2","remain","currentRoom","ReqSubcribeHallSlot","Configs_1","Slot8TrialResult_1","Slot8_Lobby_1","Slot8_PopupBonus_1","BroadcastReceiver_1","Utils_1","Slot8ChooseLine_1","Slot8_ItemSlot_1","BundleControl_1","Slot8Controller","btnBack","nodeCoin","initNodeCoin","btnLine","lblFreeSpinCount","nodeBoxSetting","popupContainer","toggleMusic","toggleSound","popupBonus","skeSpin","nodeDemo","nodeWinJackpot","txtWinJackpot","nodeGamePlay","mSlotLobby","jackpotLabel","moneyLabel","totalLineLabel","btnSpin","toggleFast","toggleAuto","winNormalBg","bonusNode","bigWinNode","txtWinBigWin","jackpotNode","freespinNode","winLabel","lbCurrentRoom","freespinCurrent","lineWinParent","colParent","totalWinLabel","totalBetLabel","popupChooseLine","musicLobby","musicBonus","soundStartSpin","soundRepeatSpin","soundEndSpin","soundSpinWin","soundBigWin","soundJackpot","soundBonus","soundFreeSpin","soundtouchBonus","soundSmumary","listActiveItem","TIME_DELAY_SHOW_LINE","dailyFreeSpin","listBet","listBetString","arrLineSelected","isSpining","mapLine","isFastCurrent","isFast","arrReel","distanceReel","iconSFBlurArr100","iconSFArr100","arrSkeletonIcon100","iconSFBlurArr1K","iconSFArr1K","arrSkeletonIcon1K","iconSFBlurArr10K","iconSFArr10K","arrSkeletonIcon10K","arrUIItemIcon","arrRealItem","popupGuide","popupHistory","popupHonor","numberSpinReel","isHaveResultSpin","dataResult","isFirst","mutipleJpNode","audioIdRepeatSpin","addOnClose","addListener","getCmdId","spinResult","hideGamePlay","sendCheck","register","USER_UPDATE_COIN","Login","Coin","showErrLoading","checkConnect","showLoading","onEnable","changeAllItemToDark","initMutipleJPNode","assetManager","getBundle","load","Prefab","err1","prefab","instantiate","director","getScene","setInfo","showAnimations","nodeItem","indexCol","opacity","position","v3","showGamePlay","randomIconList","showCoins","number","betIdTmp","totalbet","setButtonEnable","floor","randomBetween","min","max","spinClick","hideWinEffect","hideLineWin","rIdx","randomRangeInt","results","alertDialog","showMsg","getTextLang","toString","indexOf","beginSpinReel","spinFinish","hasDelay","that","runAction","delayTime","callFunc","setButtonFlash","showWinEffect","self","setSiblingIndex","actShowBonus","showLineWin","audioIdJackpot","stop","indexReel","x","loopSpinReel","speed","processLoopSpinReel","itemIdTmp","endSpinReel","getSpriteFrameIconBlur","indexIcon","getSpriteFrameIcon","getSpineIcon","onBtnToggleMusic","setMusicVolume","onBtnToggleSound","onBtnHistory","onBtnHideSetting","onBtnHistoryJackpot","onBtnSoundClick","onBtnSetting","line","lineNode","arrItem","getItemWinInLine","arrIdOfItem","idWin","forEach","item","getItemIdWinInLine","stopAction","stopAllActions","element","changeBet","chooseBet","event","bet","oldIdx","formatNumber","showGuide","closeGuide","showChooseLine","changeSpeed","check","setAutoSpin","actBack","state","sprite","spine","lineId","lineArr","arrId","count","id","filter","actGuide","loadPrefabGame","actHistory","showToast","actHistoryJackpot","actChooseLine","dataHaiSao","cb","type","AudioClip","SkeletonData","Http_1","Slot8Glory","lblPage","itemTemplate","maxPage","_onShowed","loadData","actNextPage","actPrevPage","get","App","API","c","gn","err","destroy","i_1","itemData","replace","Slot8History","un","Nickname","Slot8Icon","nodeIcon","animation","Animation","setSprite","sf","setSpine","ske","skeletonData","normal","unscale","Slot4TrialResult"],"mappings":"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","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class Slot8ItemSlot extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    spriteIcon: cc.Sprite = null;\r\n\r\n    @property(sp.Skeleton)\r\n    spineIcon: sp.Skeleton = null;\r\n\r\n    @property(cc.Node)\r\n    nodeBox: cc.Node = null;\r\n    @property(cc.SpriteAtlas)\r\n    itemAtlast: cc.SpriteAtlas = null;\r\n    @property(cc.SpriteAtlas)\r\n    itemBlur: cc.SpriteAtlas = null;\r\n    @property(cc.SpriteFrame)\r\n    item4: cc.SpriteFrame = null;\r\n\r\n    public gamePlayManager = null;\r\n    public itemId = null;\r\n    public index = null;\r\n    public animName = null;\r\n    onLoad() {\r\n        this.spriteIcon = cc.find(\"Box/Sprite\", this.node).getComponent(cc.Sprite);\r\n        this.spineIcon = cc.find(\"Box/Spine\", this.node).getComponent(sp.Skeleton);\r\n        this.nodeBox = this.node.getChildByName(\"Box\");\r\n        this.node.setContentSize(cc.size(170, 170));\r\n\r\n    }\r\n    init(itemId, index, gamePlayManager) {\r\n        var self = this;\r\n        self.gamePlayManager = gamePlayManager;\r\n        self.itemId = itemId;\r\n        self.index = index;\r\n        self.spriteIcon.node.active = true;\r\n        this.spineIcon.node.scale = 0.67;\r\n        this.spineIcon.node.y = 5;\r\n        this.spriteIcon.node.setContentSize(cc.size(this.spriteIcon.node.width / 1.7, this.spriteIcon.node.height / 1.7));\r\n        self.spineIcon.node.active = false;\r\n        this.setSpriteFrame(itemId);\r\n    }\r\n\r\n\r\n\r\n    changeSpriteBlurByItemId(itemId) {\r\n        var self = this;\r\n        this.itemId = itemId;\r\n        this.spineIcon.node.active = false;\r\n        this.spriteIcon.node.active = true;\r\n        this.spriteIcon.sizeMode = cc.Sprite.SizeMode.TRIMMED;\r\n        this.setSpriteFrame(itemId, true);\r\n        this.spriteIcon.node.setContentSize(cc.size(this.spriteIcon.node.width / 1, this.spriteIcon.node.height / 1));\r\n    }\r\n\r\n    changeSpriteRealByItemId(itemId) {\r\n        this.itemId = itemId;\r\n        this.spriteIcon.sizeMode = cc.Sprite.SizeMode.TRIMMED;\r\n        this.setSpriteFrame(itemId);\r\n        this.spriteIcon.node.setContentSize(cc.size(this.spriteIcon.node.width / 1, this.spriteIcon.node.height / 1));\r\n    }\r\n\r\n    changeSpineIcon(itemId) {\r\n        var self = this;\r\n        self.itemId = itemId;\r\n        //  cc.log(\"itemid=\" + itemId);\r\n        this.spriteIcon.node.y = 0;\r\n        this.spriteIcon.sizeMode = cc.Sprite.SizeMode.TRIMMED;\r\n        itemId = parseInt(itemId);\r\n        switch (itemId) {\r\n            case 0:\r\n                this.animName = \"jackport\"\r\n                this.spriteIcon.node.y = 10;\r\n                break;\r\n            case 1:\r\n                this.animName = \"bonus\"\r\n                break;\r\n            case 2:\r\n                this.animName = \"freespin\";\r\n                break;\r\n\r\n        }\r\n        this.setSpriteFrame(itemId);\r\n        this.spriteIcon.node.setContentSize(cc.size(this.spriteIcon.node.width / 1, this.spriteIcon.node.height / 1));\r\n        // this.spineIcon.setAnimation(0, animName, true);\r\n    }\r\n    setSpriteFrame(itemId, isBlur = false) {\r\n        let atlast = isBlur ? this.itemBlur : this.itemAtlast;\r\n        switch (itemId) {\r\n            case 0:\r\n                this.spriteIcon.spriteFrame = atlast.getSpriteFrame(\"jackpot\");\r\n                break;\r\n            case 1:\r\n                this.spriteIcon.spriteFrame = atlast.getSpriteFrame(\"bonus\");\r\n                break;\r\n            case 2:\r\n                this.spriteIcon.spriteFrame = atlast.getSpriteFrame(\"freespin\");\r\n                break;\r\n            case 3:\r\n            case 4:\r\n\r\n            case 5:\r\n                this.spriteIcon.spriteFrame = atlast.getSpriteFrame(\"item_\" + (itemId - 2));\r\n                break;\r\n            case 6:\r\n                if (!isBlur)\r\n                    this.spriteIcon.spriteFrame = this.item4;\r\n                else this.spriteIcon.spriteFrame = atlast.getSpriteFrame(\"item_\" + (itemId - 2));\r\n                break;\r\n        }\r\n    }\r\n    checkShowSpriteOrSpine() {\r\n        cc.Tween.stopAllByTarget(this.spriteIcon.node);\r\n        cc.Tween.stopAllByTarget(this.spineIcon.node);\r\n        if (this.itemId > 2) {\r\n            this.spineIcon.node.active = false;\r\n            this.spriteIcon.node.active = true;\r\n            this.spriteIcon.node.color = cc.Color.WHITE;\r\n            cc.tween(this.spriteIcon.node)\r\n                .repeatForever(\r\n                    cc.tween().sequence(\r\n                        cc.tween().to(0.25, { scale: 1.1 }, { easing: cc.easing.sineOut }),\r\n                        cc.tween().to(0.25, { scale: 1.0 }, { easing: cc.easing.sineOut })))\r\n                .start();\r\n            cc.tween(this.spriteIcon.node)\r\n                .delay(0.9)\r\n                .call(() => {\r\n                    this.spriteIcon.node.color = cc.Color.GRAY;\r\n                    cc.Tween.stopAllByTarget(this.spriteIcon.node);\r\n                    this.spriteIcon.node.scale = 1.0\r\n                }).start();\r\n        } else {\r\n            this.spineIcon.node.active = true;\r\n            this.spriteIcon.node.active = false;\r\n            this.spineIcon.setAnimation(0, this.animName, true);\r\n            this.spineIcon.node.color = cc.Color.WHITE;\r\n\r\n            cc.tween(this.spineIcon.node)\r\n                .delay(0.9).call(() => {\r\n                    this.spineIcon.node.color = cc.Color.GRAY;\r\n                    this.spriteIcon.node.active = true;\r\n                    this.spineIcon.node.active = false;\r\n                }).start();\r\n        }\r\n    }\r\n}","\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport SlotNetworkClient from \"../../Lobby/LobbyScript/Script/networks/SlotNetworkClient\";\r\nimport cmd from \"./Slot8Cmd\";\r\nimport Slot8Controller from \"./Slot8Controller\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot8Lobby extends cc.Component {\r\n\r\n    @property([cc.Label])\r\n    listPot: cc.Label[] = [];\r\n    @property([cc.Node])\r\n    rooms: cc.Node[] = [];\r\n\r\n    mSlotController: Slot8Controller = null;\r\n\r\n    public init(pSlot3Controller: Slot8Controller) {\r\n        this.mSlotController = pSlot3Controller;\r\n        this.node.zIndex = 2;\r\n        if (this.mSlotController.isMusic) cc.audioEngine.playMusic(this.mSlotController.musicGame, true);\r\n        this.show();\r\n    }\r\n\r\n    onLoad() {\r\n        this.node.getComponentInChildren(sp.Skeleton).node.setScale(cc.v2(0.67 * (cc.winSize.width / 1280), 0.67 * (cc.winSize.height / 720)));\r\n        // for (let i = 0; i < this.rooms.length; i++) {\r\n        //     this.rooms[i].x = this.rooms[i].x * (cc.winSize.width / 1280);\r\n        //     this.rooms[i].y = this.rooms[i].y * (cc.winSize.width / 1280);\r\n        //     this.rooms[i].scale = this.rooms[i].scale * (cc.winSize.width / 1280)\r\n        // }\r\n    }\r\n    show() {\r\n        this.node.active = true;\r\n\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n\r\n    public onBtnBack() {\r\n        if (this.mSlotController.isSound) {\r\n            cc.audioEngine.play(this.mSlotController.soundClick, false, 1);\r\n        }\r\n        SlotNetworkClient.getInstance().send(new cmd.SendUnSubcribe(this.mSlotController.betId));\r\n        cc.audioEngine.stopAll();\r\n        App.instance.loadScene(\"Lobby\");\r\n    }\r\n\r\n    private onBtnTry() {\r\n        this.mSlotController.betId = 0;\r\n        SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(this.mSlotController.betId));\r\n        this.node.active = false;\r\n\r\n        this.mSlotController.onJoinRoom(null);\r\n        this.mSlotController.isTrial = true;\r\n    }\r\n\r\n\r\n    public onUpdateJackpot(pData) {\r\n        let res = new cmd.ResUpdateJackpotSlots(pData);\r\n        let resJson = JSON.parse(res.pots);\r\n        Tween.numberTo(this.listPot[0], resJson['rollRoye']['100'].p, 3.0);\r\n        Tween.numberTo(this.listPot[1], resJson['rollRoye']['1000'].p, 3.0);\r\n        Tween.numberTo(this.listPot[2], resJson['rollRoye']['10000'].p, 3.0);\r\n    }\r\n}\r\n","\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Slot4Controller from \"./Slot8Controller\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupBonus extends Dialog {\r\n    @property([cc.SpriteFrame])\r\n    sfMiss:cc.SpriteFrame[] = [];\r\n    @property([cc.SpriteFrame])\r\n    sfWin:cc.SpriteFrame[] = [];\r\n    @property(cc.Node)\r\n    items: cc.Node = null;\r\n    @property(cc.Node)\r\n    nodeBoxNotify: cc.Node = null;\r\n    @property(cc.Label)\r\n    txtNotify: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblLeft: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblFactor: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblHeso: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblWin: cc.Label = null;\r\n    private factor = 1;\r\n    private left = 0;\r\n    private betValue = 0;\r\n    private onFinished: () => void = null;\r\n    private onSpecialFinished: () => void = null;\r\n    private dataBonus: Array<number> = [];\r\n    private dataSpecial: number = -1;\r\n    private heso:number = 0;\r\n    private win : number = 0;\r\n    private controller:Slot4Controller = null;\r\n    start() {\r\n        \r\n        for (let i = 0; i < this.items.childrenCount; i++) {\r\n            let node = this.items.children[i];\r\n            node[\"btn\"] = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            node[\"labai\"] = node[\"btn\"].node.getChildByName(\"labai\");\r\n            node[\"miss\"] = node[\"btn\"].node.getChildByName(\"miss\");\r\n            node[\"win\"] = node[\"btn\"].node.getChildByName(\"win\");\r\n            node[\"label\"] = node[\"win\"].getComponentInChildren(cc.Label);\r\n            node[\"chat\"] = node[\"btn\"].node.getChildByName(\"chat\").getComponent(cc.Sprite);\r\n\r\n            node[\"btn\"].node.on(\"click\", () => {\r\n                this.controller.onBtnSoundTouchBonus();\r\n                var value = this.dataBonus[this.dataBonus.length - this.left];\r\n                //  cc.log(\"click:\"+value+\" : \"+node[\"is_open\"]);\r\n                if(node[\"is_open\"] == false && this.left > 0){\r\n                    node[\"is_open\"] = true;\r\n                    switch (value) {\r\n                        case 0:\r\n                            this.factor++;\r\n                            this.lblFactor.string = this.factor+\"\";\r\n                            node[\"labai\"].active = false;\r\n                            node[\"miss\"].active = true;\r\n                            node[\"win\"].active = false;\r\n                            node[\"chat\"].node.active = true;\r\n                            node[\"chat\"].spriteFrame = this.sfMiss[parseInt(Math.random()*this.sfMiss.length+\"\")];\r\n                            break;\r\n                        case 1:\r\n                            node[\"labai\"].active = false;\r\n                            node[\"miss\"].active = false;\r\n                            node[\"win\"].active = true;\r\n                            node[\"chat\"].node.active = true;\r\n                            node[\"chat\"].spriteFrame = this.sfWin[parseInt(Math.random()*this.sfWin.length+\"\")];\r\n                            node[\"label\"].node.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"], 4*this.betValue , 0.3);\r\n                            this.win += 4* this.betValue;\r\n                            Tween.numberTo(this.lblWin,this.win, 0.3);\r\n                            break;\r\n                       \r\n                        case 2:\r\n                            node[\"labai\"].active = false;\r\n                            node[\"miss\"].active = false;\r\n                            node[\"win\"].active = true;\r\n                            node[\"chat\"].node.active = true;\r\n                            node[\"chat\"].spriteFrame = this.sfWin[parseInt(Math.random()*this.sfWin.length+\"\")];\r\n                            node[\"label\"].node.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"],10* this.betValue * this.factor, 0.3);\r\n                            this.win += 10* this.betValue * this.factor;\r\n                            Tween.numberTo(this.lblWin,this.win, 0.3);\r\n                            break;\r\n                        case 3:\r\n                            node[\"labai\"].active = false;\r\n                            node[\"miss\"].active = false;\r\n                            node[\"win\"].active = true;\r\n                            node[\"chat\"].node.active = true;\r\n                            node[\"chat\"].spriteFrame = this.sfWin[parseInt(Math.random()*this.sfWin.length+\"\")];\r\n                            node[\"label\"].node.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"],15* this.betValue * this.factor, 0.3);\r\n                            this.win += 15* this.betValue * this.factor;\r\n                            Tween.numberTo(this.lblWin,this.win, 0.3);\r\n                            break;\r\n                        case 4:\r\n                            node[\"labai\"].active = false;\r\n                            node[\"miss\"].active = false;\r\n                            node[\"win\"].active = true;\r\n                            node[\"chat\"].node.active = true;\r\n                            node[\"chat\"].spriteFrame = this.sfWin[parseInt(Math.random()*this.sfWin.length+\"\") ];\r\n                            node[\"label\"].node.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            this.win += 20* this.betValue * this.factor;\r\n                            Tween.numberTo(node[\"label\"],20* this.betValue * this.factor, 0.3);\r\n                            Tween.numberTo(this.lblWin,this.win, 0.3);\r\n                            break;\r\n                        \r\n\r\n                    }\r\n                    this.left--;\r\n                    this.lblLeft.string = \"\" + this.left;\r\n                    if (this.left <= 0) {\r\n                        this.hidden();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    showBonus(betValue: number, bonus: string,controller, onFinished: () => void) {\r\n        super.show();\r\n        this.controller = controller;\r\n        this.win = 0;\r\n        for (let i = 0; i < this.items.childrenCount; i++) {\r\n            let node = this.items.children[i];\r\n            node[\"btn\"] = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            node[\"labai\"] = node[\"btn\"].node.getChildByName(\"labai\");\r\n            node[\"miss\"] = node[\"btn\"].node.getChildByName(\"miss\");\r\n            node[\"win\"] = node[\"btn\"].node.getChildByName(\"win\");\r\n            node[\"label\"] = node[\"win\"].getComponentInChildren(cc.Label);\r\n            node[\"chat\"] = node[\"btn\"].node.getChildByName(\"chat\").getComponent(cc.Sprite);\r\n            node[\"is_open\"] = false;\r\n        }\r\n        for (let i = 0; i < this.items.childrenCount; i++) {\r\n            let node = this.items.children[i];\r\n            let btn = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            btn.node.active = true;\r\n            btn.interactable = true;\r\n            node[\"labai\"].active = true;\r\n            node[\"miss\"].active = false;\r\n            node[\"win\"].active = false;\r\n            node[\"chat\"].node.active = false;\r\n        }\r\n        this.betValue = betValue;\r\n        this.onFinished = onFinished;\r\n        let arrBonus = bonus.split(\",\");\r\n        this.dataBonus = [];\r\n        for (let i = 0; i < arrBonus.length; i++) {\r\n            this.dataBonus.push(Number(arrBonus[i]));\r\n        }\r\n        this.left = this.dataBonus.length - 1;\r\n        this.factor = 1;\r\n        this.lblLeft.string = \"\" + this.left;\r\n        this.lblFactor.string =  this.factor+\"\";\r\n        this.heso = this.dataBonus[0];\r\n        this.lblHeso.string = \"x\"+this.heso;\r\n    }\r\n\r\n    \r\n    hidden() {\r\n        this.controller.onBtnSoundSumary();\r\n        Tween.showPopup(this.nodeBoxNotify,this.nodeBoxNotify.parent);\r\n        Tween.numberTo(this.txtNotify,this.win, 0.3);\r\n    }\r\n\r\n    onBtnExit(){\r\n        Tween.hidePopup(this.nodeBoxNotify,this.nodeBoxNotify.parent,false);\r\n        this.scheduleOnce(() => {\r\n            this.dismiss();\r\n            this.onFinished();\r\n        }, 1.5);\r\n    }\r\n}\r\nexport default PopupBonus;","import Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupGuide extends Dialog {\r\n\r\n    // @property([cc.Node])\r\n    // pages: cc.Node[] = [];\r\n    // @property(cc.Node)\r\n    // btnNext: cc.Node = null;\r\n    // @property(cc.Node)\r\n    // btnPrev: cc.Node = null;\r\n    // @property({ type: cc.AudioClip })\r\n    // soundClick: cc.AudioClip = null;\r\n\r\n    private page = 0;\r\n\r\n    private soundSlotState = null;\r\n\r\n    start() {\r\n    }\r\n\r\n\r\n    show() {\r\n        // if (this.canPlaySound()) {\r\n        //     cc.audioEngine.play(this.soundClick, false, 1);\r\n        // }\r\n        super.show();\r\n        //this.page = 0;\r\n        //this.btnPrev.active = true;\r\n       // this.reloadData();\r\n    }\r\n\r\n    \r\n    dismiss() {\r\n        \r\n        super.dismiss();\r\n    }\r\n\r\n    canPlaySound() {\r\n       \r\n    }\r\n}\r\nexport default PopupGuide;","\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Slot4Controller from \"./Slot8Controller\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot8Tutorial extends cc.Component {\r\n    @property(cc.Node)\r\n    nodeBox:cc.Node = null;\r\n    @property(cc.Sprite)\r\n    spriteTutorial: cc.Sprite = null;\r\n    @property([cc.SpriteFrame])\r\n    sfTutorialArr: cc.SpriteFrame[] = [];\r\n\r\n    show(controller:Slot4Controller) {\r\n        Tween.showPopup(this.nodeBox,this.nodeBox.parent);\r\n        if(controller.betId == -1){\r\n            this.spriteTutorial.spriteFrame = this.sfTutorialArr[2];\r\n        }\r\n        else if(controller.betId == 0){\r\n            this.spriteTutorial.spriteFrame = this.sfTutorialArr[0];\r\n        }\r\n        else if(controller.betId == 1){\r\n            this.spriteTutorial.spriteFrame = this.sfTutorialArr[1];\r\n        }\r\n        else{\r\n            this.spriteTutorial.spriteFrame = this.sfTutorialArr[2];\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        Tween.hidePopup(this.nodeBox,this.nodeBox.parent,false);\r\n        \r\n    }\r\n\r\n    \r\n}","import Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot8ChooseLine extends Dialog {\r\n\r\n    @property(cc.Node)\r\n    nodeBox:cc.Node = null;\r\n    @property(cc.Button)\r\n    btnClose: cc.Button = null;\r\n    @property(cc.Node)\r\n    lineParent: cc.Node = null;\r\n\r\n    listToggle: cc.Toggle[] = [];\r\n    private readonly SELECTED = \"selected\";\r\n\r\n    onSelectedChanged: (lines: Array<number>) => void = null;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n        for(let i = 0; i < this.lineParent.childrenCount; i++) {\r\n            let node = this.lineParent.children[i];\r\n            let toggle = node.getComponent(cc.Toggle);\r\n            this.listToggle.push(toggle);\r\n            node[this.SELECTED] = true;\r\n            node.on('click', () => {\r\n                node[this.SELECTED] = !node[this.SELECTED];\r\n                // node.opacity = node[this.SELECTED] ? 255 : 80;\r\n                // toggle.isChecked = node[this.SELECTED];\r\n                if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());                \r\n            });\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    getLineSelected() {\r\n        let lines = new Array<number>();\r\n        for(let i = 0; i < this.listToggle.length; i++) {\r\n            let node = this.listToggle[i].node;\r\n            if (typeof node[this.SELECTED] == \"undefined\" || node[this.SELECTED]) {\r\n                lines.push(i + 1);\r\n            }\r\n        }\r\n       \r\n        this.btnClose.interactable = lines.length > 0;\r\n        return lines;\r\n    }\r\n\r\n    selectAll() {\r\n        for(let i = 0; i < this.listToggle.length; i++) {   \r\n            this.listToggle[i].node[this.SELECTED] = true;\r\n            // this.listToggle[i].node.opacity =  this.listToggle[i].node[this.SELECTED] ? 255 : 80;\r\n            this.listToggle[i].isChecked = true;        \r\n        }\r\n        if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());\r\n    }\r\n\r\n    deSelectAll() {\r\n        for(let i = 0; i < this.listToggle.length; i++) {   \r\n            this.listToggle[i].node[this.SELECTED] = false;\r\n            // this.listToggle[i].node.opacity =  this.listToggle[i].node[this.SELECTED] ? 255 : 80;\r\n            this.listToggle[i].isChecked = false;        \r\n        }\r\n        if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());\r\n    }\r\n\r\n    selectEven() {\r\n        for(let i = 0; i < this.listToggle.length; i++) {    \r\n            this.listToggle[i].node[this.SELECTED] = i % 2 != 0;\r\n            // this.listToggle[i].node.opacity = this.listToggle[i].node[this.SELECTED] ? 255 : 80;        \r\n            this.listToggle[i].isChecked = i % 2 !== 0;           \r\n        }\r\n        if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());\r\n    }\r\n\r\n    selectOdd() {\r\n        for(let i = 0; i < this.listToggle.length; i++) {    \r\n            this.listToggle[i].node[this.SELECTED] = i % 2 == 0;\r\n            // this.listToggle[i].node.opacity = this.listToggle[i].node[this.SELECTED] ? 255 : 80;        \r\n            this.listToggle[i].isChecked = i % 2 == 0;           \r\n        }\r\n        if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());\r\n    }\r\n\r\n    showPopup(arrLineSelected) {\r\n        super.show();\r\n        // Tween.showPopup(this.nodeBox,this.nodeBox.parent);\r\n\r\n        for(let i = 0; i < this.listToggle.length; i++) {\r\n            let node = this.listToggle[i];\r\n            this.listToggle[i].isChecked = this.listToggle[i].node[this.SELECTED];    \r\n            // this.listToggle[i].node.opacity = this.listToggle[i].node[this.SELECTED] ? 255 : 80;        \r\n        }\r\n\r\n    }\r\n\r\n    hide() {\r\n       \r\n        Tween.hidePopup(this.nodeBox,this.nodeBox.parent,false);\r\n    }\r\n\r\n\r\n\r\n    // update (dt) {}\r\n}\r\n","import InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport OutPacket from \"../../Lobby/LobbyScript/Script/networks/Network.OutPacket\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\nexport namespace cmd {\r\n    export class Code {\r\n        static SUBCRIBE = 5003;\r\n        static UNSUBCRIBE = 5004;\r\n        static CHANGE_ROOM = 5005;\r\n        static PLAY = 5001;\r\n        static UPDATE_RESULT = 5001;\r\n        static UPDATE_POT = 5002;\r\n        static AUTO = 5006;\r\n        static STOP_AUTO = 5006;\r\n        static FORCE_STOP_AUTO = 5008;\r\n        static DATE_X2 = 5009;\r\n        static BIG_WIN = 5010;\r\n        static FREE = 5011;\r\n        static FREE_DAI_LY = 5012;\r\n        static MINIMIZE = 5013;\r\n        static UPDATE_JACKPOT_SLOTS = 10003;\r\n        static SUBCRIBE_HALL_SLOT = 10001;\r\n    }\r\n    export class ReceiveFreeDaiLy extends InPacket {\r\n      \r\n        freeSpin = 0;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.freeSpin = this.getByte();\r\n        }\r\n    }\r\n    export class ResUpdateJackpotSlots extends InPacket {\r\n        pots = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.pots = this.getString()\r\n        }\r\n    }\r\n    export class SendUnSubcribe extends OutPacket {\r\n        constructor(roomId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.UNSUBCRIBE);\r\n            this.packHeader();\r\n            this.putByte(roomId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendSubcribe extends OutPacket {\r\n        constructor(roomId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE);\r\n            this.packHeader();\r\n            this.putByte(roomId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendPlay extends OutPacket {\r\n        constructor(lines: string) {\r\n            super();            \r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.PLAY);\r\n            this.packHeader();\r\n            this.putString(lines);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendChangeRoom extends OutPacket {\r\n        constructor(roomLeavedId: number, roomJoinedId: number) {\r\n            super();\r\n            // //  cc.log(\"SendChangeRoom roomLeavedId:\"+roomLeavedId+\" roomJoinedId:\"+roomJoinedId);\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHANGE_ROOM);\r\n            this.packHeader();\r\n            this.putByte(roomLeavedId);\r\n            this.putByte(roomJoinedId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ReceiveUpdatePot extends InPacket {\r\n        valueRoom1 = 0;\r\n        valueRoom2 = 0;\r\n        valueRoom3 = 0;\r\n      \r\n        x21 = 0;\r\n        x22 = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.valueRoom1 = this.getLong();\r\n            this.valueRoom2 = this.getLong();\r\n            this.valueRoom3 = this.getLong();\r\n            \r\n            this.x21 = this.getByte();\r\n            this.x22 = this.getByte();\r\n        }\r\n    }\r\n    export class ReceiveResult extends InPacket {\r\n        ref = 0;\r\n        result = 0;\r\n        matrix = \"\";\r\n        linesWin = \"\";\r\n        haiSao = \"\";\r\n        prize = 0;\r\n        currentMoney = 0;\r\n        isFreeSpin = 0;\r\n        ratio = 0;\r\n        currentNumberFreeSpin = 0;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.ref = this.getLong();\r\n            this.result = this.getByte();\r\n            this.matrix = this.getString();\r\n            this.linesWin = this.getString();\r\n            this.haiSao = this.getString();\r\n            this.prize = this.getLong();\r\n            this.currentMoney = this.getLong();\r\n            this.isFreeSpin = this.getByte();\r\n            this.ratio = this.getByte();\r\n            this.currentNumberFreeSpin = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ReceiveDateX2 extends InPacket {\r\n        \r\n        ngayX2 = \"\";\r\n        remain = 0;\r\n        currentMoney = 0;\r\n        freeSpin = 0;\r\n        lines = \"\";\r\n        currentRoom = 0;\r\n\r\n      \r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n           \r\n            this.ngayX2 = this.getString();\r\n            this.remain = this.getByte();\r\n            this.currentMoney = this.getLong();\r\n            this.freeSpin = this.getByte();\r\n            this.lines = this.getString();\r\n            this.currentRoom = this.getByte();\r\n        }\r\n    }\r\n    export class ReqSubcribeHallSlot extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE_HALL_SLOT);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n}\r\nexport default cmd;","import cmd from './Slot8Cmd';\r\n\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Slot4TrialResult from './Slot8TrialResult';\r\n\r\nimport Slot8Lobby from \"./Slot8.Lobby\";\r\nimport Slot8PopupBonus from \"./Slot8.PopupBonus\";\r\nimport Slot8Tutorial from \"./Slot8.Tutorial\";\r\nimport App from '../../Lobby/LobbyScript/Script/common/App';\r\nimport BroadcastReceiver from '../../Lobby/LobbyScript/Script/common/BroadcastReceiver';\r\nimport Tween from '../../Lobby/LobbyScript/Script/common/Tween';\r\nimport Utils from '../../Lobby/LobbyScript/Script/common/Utils';\r\nimport InPacket from '../../Lobby/LobbyScript/Script/networks/Network.InPacket';\r\nimport SlotNetworkClient from '../../Lobby/LobbyScript/Script/networks/SlotNetworkClient';\r\nimport UIItemIconSlot25 from '../../Lobby/LobbyScript/Script/BaseSlot25/ItemIconSlot25';\r\nimport Slot8ChooseLine from './Slot8ChooseLine';\r\nimport Slot8ItemSlot from './Slot8.ItemSlot';\r\nimport BundleControl from '../../Loading/src/BundleControl';\r\nimport Slot8History from './Slot8History';\r\nimport Slot8Glory from './Slot8Glory';\r\nvar MAX_CYCCLE_SPIN = 20;\r\nvar FAST_CYCCLE_SPIN = 10;\r\nvar ERROR_CYCCLE_SPIN = 50;\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot8Controller extends cc.Component {\r\n    @property(cc.Button)\r\n    btnBack: cc.Button = null;\r\n    @property(cc.Node)\r\n    nodeCoin: cc.Node = null;\r\n    @property(cc.Node)\r\n    initNodeCoin: cc.Node = null;\r\n    @property(cc.Button)\r\n    btnLine: cc.Button = null;\r\n    @property(cc.Label)\r\n    lblFreeSpinCount: cc.Label = null;\r\n    @property(cc.Node)\r\n    nodeBoxSetting: cc.Node = null;\r\n    @property(cc.Node)\r\n    popupContainer: cc.Node = null;\r\n    @property(cc.Toggle)\r\n    toggleMusic: cc.Toggle = null;\r\n    @property(cc.Toggle)\r\n    toggleSound: cc.Toggle = null;\r\n    @property(Slot8PopupBonus)\r\n    popupBonus: Slot8PopupBonus = null;\r\n    @property(sp.Skeleton)\r\n    skeSpin: sp.Skeleton = null;\r\n    @property(cc.Node)\r\n    nodeDemo: cc.Node = null;\r\n    @property(cc.Node)\r\n    nodeWinJackpot: cc.Node = null;\r\n    @property(cc.Label)\r\n    txtWinJackpot: cc.Label = null;\r\n    @property(cc.Node)\r\n    nodeGamePlay: cc.Node = null;\r\n    @property(Slot8Lobby)\r\n    mSlotLobby: Slot8Lobby = null;\r\n    @property(cc.Label)\r\n    jackpotLabel: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    moneyLabel: cc.Label = null;\r\n\r\n\r\n    @property(cc.Label)\r\n    totalLineLabel: cc.Label = null;\r\n\r\n    @property(cc.Button)\r\n    btnSpin: cc.Button = null;\r\n    @property(cc.Toggle)\r\n    toggleFast: cc.Toggle = null;\r\n    @property(cc.Toggle)\r\n    toggleAuto: cc.Toggle = null;\r\n\r\n    //win\r\n    @property(cc.Node)\r\n    winNormalBg: cc.Node = null;\r\n    @property(cc.Node)\r\n    bonusNode: cc.Node = null;\r\n    @property(cc.Node)\r\n    bigWinNode: cc.Node = null;\r\n    @property(cc.Label)\r\n    txtWinBigWin: cc.Label = null;\r\n    @property(cc.Node)\r\n    jackpotNode: cc.Node = null;\r\n    @property(cc.Node)\r\n    freespinNode: cc.Node = null;\r\n    @property(cc.Label)\r\n    winLabel: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbCurrentRoom: cc.Label = null;\r\n    @property(cc.Node)\r\n    freespinCurrent: cc.Node = null;\r\n    //line win\r\n    @property(cc.Node)\r\n    lineWinParent: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    colParent: cc.Node = null;\r\n    //show result\r\n    @property(cc.Label)\r\n    totalWinLabel: cc.Label = null;\r\n    @property(cc.Label)\r\n    totalBetLabel: cc.Label = null;\r\n\r\n    //choose line\r\n    @property(Slot8ChooseLine)\r\n    popupChooseLine: Slot8ChooseLine = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    musicLobby: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    musicGame: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    musicBonus: cc.AudioClip = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundStartSpin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundRepeatSpin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundEndSpin: cc.AudioClip = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundSpinWin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundBigWin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundJackpot: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundBonus: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundFreeSpin: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundtouchBonus: cc.AudioClip = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundSmumary: cc.AudioClip = null;\r\n    private listActiveItem: cc.Node[] = [];         //list 15 item nhin thay tren man hinh\r\n\r\n    private TIME_DELAY_SHOW_LINE: number = 1;\r\n    private dailyFreeSpin = 0;\r\n    public betId = 0;\r\n    private listBet = [100, 1000, 10000];\r\n    private listBetString = [\"100\", \"1K\", \"10K\"];\r\n    private arrLineSelected = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\r\n    public isTrial: Boolean = false;\r\n    private isSpining: Boolean = false;\r\n    private mapLine = [\r\n        [5, 6, 7, 8, 9],//1\r\n        [0, 1, 2, 3, 4],//2\r\n        [10, 11, 12, 13, 14],//3\r\n        [5, 6, 2, 8, 9],//4\r\n        [5, 6, 12, 8, 9],//5\r\n        [0, 1, 7, 3, 4],//6\r\n        [10, 11, 7, 13, 14],//7\r\n        [0, 11, 2, 13, 4],//8\r\n        [10, 1, 12, 3, 14],//9\r\n        [5, 1, 12, 3, 9],//10\r\n        [10, 6, 2, 8, 14],//11\r\n        [0, 6, 12, 8, 4],//12\r\n        [5, 11, 7, 3, 9],//13\r\n        [5, 1, 7, 13, 9],//14\r\n        [10, 6, 7, 8, 14],//15\r\n        [0, 6, 7, 8, 4],//16\r\n        [5, 11, 12, 13, 9],//17\r\n        [5, 1, 2, 3, 9],//18\r\n        [10, 11, 7, 3, 4],//19\r\n        [0, 1, 7, 13, 14]//20\r\n    ];\r\n\r\n    //new \r\n\r\n    private isFastCurrent = false;\r\n    private isFast = false;\r\n\r\n    @property([cc.Node])\r\n    arrReel: cc.Node[] = [];\r\n\r\n    @property\r\n    distanceReel: number = 0;\r\n\r\n    @property([cc.SpriteFrame])\r\n    iconSFBlurArr100: cc.SpriteFrame[] = [];\r\n    @property([cc.SpriteFrame])\r\n    iconSFArr100: cc.SpriteFrame[] = [];\r\n    @property([sp.SkeletonData])\r\n    arrSkeletonIcon100: sp.SkeletonData[] = [];\r\n\r\n    @property([cc.SpriteFrame])\r\n    iconSFBlurArr1K: cc.SpriteFrame[] = [];\r\n    @property([cc.SpriteFrame])\r\n    iconSFArr1K: cc.SpriteFrame[] = [];\r\n    @property([sp.SkeletonData])\r\n    arrSkeletonIcon1K: sp.SkeletonData[] = [];\r\n\r\n    @property([cc.SpriteFrame])\r\n    iconSFBlurArr10K: cc.SpriteFrame[] = [];\r\n    @property([cc.SpriteFrame])\r\n    iconSFArr10K: cc.SpriteFrame[] = [];\r\n    @property([sp.SkeletonData])\r\n    arrSkeletonIcon10K: sp.SkeletonData[] = [];\r\n\r\n    @property([Slot8ItemSlot])\r\n    arrUIItemIcon: Slot8ItemSlot[] = [];\r\n    @property([Slot8ItemSlot])\r\n    arrRealItem: Slot8ItemSlot[] = [];\r\n    popupGuide = null;\r\n    popupHistory: Slot8History = null;\r\n    popupHonor: Slot8Glory = null;\r\n\r\n\r\n\r\n\r\n    public numberSpinReel = null;\r\n    public isHaveResultSpin = false;\r\n    public dataResult = null;\r\n    private isFirst = false;\r\n\r\n    public isSound = false;\r\n    public isMusic = true;\r\n    mutipleJpNode = null;\r\n\r\n    start() {\r\n        this.dailyFreeSpin = 0;\r\n        this.isSound = true;\r\n        this.isMusic = true;\r\n        this.totalWinLabel.string = \"\";\r\n        var musicId = 0;\r\n        SlotNetworkClient.getInstance().addOnClose(() => {\r\n            this.mSlotLobby.onBtnBack();\r\n        }, this);\r\n\r\n\r\n\r\n        this.init();\r\n        SlotNetworkClient.getInstance().addListener((data) => {\r\n            let inpacket = new InPacket(data);\r\n            // //  cc.log(inpacket.getCmdId());\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.UPDATE_JACKPOT_SLOTS:\r\n                    this.mSlotLobby.onUpdateJackpot(data);\r\n                    break;\r\n                case cmd.Code.UPDATE_POT:\r\n                    {\r\n\r\n                        let res = new cmd.ReceiveUpdatePot(data);\r\n                        // //  cc.log(\"update Jackpot:\"+(this.betId == 0));\r\n                        if (this.betId == -1) {\r\n                            Tween.numberTo(this.jackpotLabel, res.valueRoom3, 0.3);\r\n                        }\r\n                        else if (this.betId == 0) {\r\n                            Tween.numberTo(this.jackpotLabel, res.valueRoom1, 0.3);\r\n                        }\r\n                        else if (this.betId == 1) {\r\n                            Tween.numberTo(this.jackpotLabel, res.valueRoom2, 0.3);\r\n                        }\r\n                        else if (this.betId == 2) {\r\n                            Tween.numberTo(this.jackpotLabel, res.valueRoom3, 0.3);\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case cmd.Code.UPDATE_RESULT:\r\n                    {\r\n                        let res = new cmd.ReceiveResult(data);\r\n                        this.spinResult(res);\r\n                    }\r\n                    break;\r\n                case cmd.Code.FREE_DAI_LY:\r\n                    {\r\n                        if (!this.isTrial) {\r\n                            let res = new cmd.ReceiveFreeDaiLy(data);\r\n                            this.dailyFreeSpin = res.freeSpin;\r\n                            if (this.dailyFreeSpin > 0) {\r\n                                this.lblFreeSpinCount.node.parent.active = true;\r\n                                this.lblFreeSpinCount.string = this.dailyFreeSpin + \"\";\r\n                            }\r\n                            else {\r\n                                this.lblFreeSpinCount.node.parent.active = false;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case cmd.Code.DATE_X2:\r\n                    {\r\n                        let res = new cmd.ReceiveDateX2(data);\r\n                        if (this.isFirst == false) {\r\n                            //vua vao lobby\r\n                            this.hideGamePlay();\r\n                            this.isFirst = true;\r\n                        }\r\n                        else {\r\n                            this.mSlotLobby.node.active = false;\r\n                            this.onJoinRoom(res);\r\n                        }\r\n                    }\r\n                    break;\r\n                case cmd.Code.CHANGE_ROOM:\r\n                    {\r\n                        //  cc.log(\"changeRoom:\" + JSON.stringify(data));\r\n                    }\r\n                    break;\r\n            }\r\n        }, this);\r\n\r\n        SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n        SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(0));\r\n\r\n\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\r\n            Tween.numberTo(this.moneyLabel, Configs.Login.Coin, 0.3);\r\n        }, this);\r\n        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n\r\n        App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n        SlotNetworkClient.getInstance().checkConnect(() => {\r\n            App.instance.showLoading(false);\r\n        });\r\n\r\n\r\n\r\n\r\n        this.mSlotLobby.init(this);\r\n\r\n        //this.initMutipleJPNode();\r\n    }\r\n    onEnable() {\r\n        this.changeAllItemToDark(false);\r\n    }\r\n    private initMutipleJPNode() {\r\n        if (!this.mutipleJpNode) {\r\n            cc.assetManager.getBundle(\"Lobby\").load(\"prefabs/MutipleJackpotPr\", cc.Prefab, function (finish, total, item) {\r\n            }, (err1, prefab: cc.Prefab) => {\r\n                if (err1 != null) {\r\n                    //  cc.log(\"errr load game TIENLEN:\", err1);\r\n                } else {\r\n                    this.mutipleJpNode = cc.instantiate(prefab).getComponent(\"MutipleJackpot\");\r\n                    this.mutipleJpNode.node.parent = cc.director.getScene().getChildByName(\"Canvas\")\r\n                    this.mutipleJpNode.setInfo(\"ANGRY\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n    showAnimations() {\r\n        var self = this;\r\n        for (var i = 0; i < self.arrUIItemIcon.length; i++) {\r\n            var nodeItem = self.arrUIItemIcon[i].nodeBox;\r\n            var indexCol = i % 5;\r\n            nodeItem.opacity = 0;\r\n            nodeItem.position = cc.v3(0, self.distanceReel, 0);\r\n            cc.tween(nodeItem)\r\n                .delay(indexCol * 0.1)\r\n                .to(1, { position: cc.v3(0, 0, 0), opacity: 255 }, { easing: \"backOut\" })\r\n                .start();\r\n        }\r\n    }\r\n\r\n    showGamePlay() {\r\n        // if (this.isMusic) cc.audioEngine.playMusic(this.musicGame, true);\r\n        this.randomIconList();\r\n        this.nodeGamePlay.active = true;\r\n        this.showAnimations();\r\n    }\r\n\r\n    hideGamePlay() {\r\n        // if (this.isMusic) cc.audioEngine.playMusic(this.musicLobby, true);\r\n        this.nodeGamePlay.active = false;\r\n    }\r\n\r\n    init() {\r\n        this.totalWinLabel.string = \"\";\r\n    }\r\n    private showCoins(prize) {\r\n        var number = prize / 20000;\r\n        if (number <= 10) number = 10;\r\n        else if (number >= 20) number = 20;\r\n        App.instance.showCoins(number, this.initNodeCoin, this.nodeCoin);\r\n    }\r\n    public onJoinRoom(res = null) {\r\n        var betIdTmp = this.betId;\r\n        if (betIdTmp == -1) betIdTmp = 2;\r\n        let totalbet = (this.arrLineSelected.length * this.listBet[betIdTmp]);\r\n        Tween.numberTo(this.totalBetLabel, totalbet, 0.3);\r\n        this.mSlotLobby.hide();\r\n        this.nodeDemo.active = this.isTrial ? true : false;\r\n        this.showGamePlay();\r\n        this.setButtonEnable(true);\r\n\r\n        if (res == null) {\r\n            this.freespinCurrent.active = false;\r\n        }\r\n        else {\r\n            if (res.freeSpin + this.dailyFreeSpin > 0) {\r\n                this.freespinCurrent.active = true;\r\n                this.freespinCurrent.getComponentInChildren(cc.Label).string = res.freeSpin + this.dailyFreeSpin;\r\n            }\r\n            else {\r\n                this.freespinCurrent.active = false;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    randomIconList() {\r\n        var self = this;\r\n        for (var i = 0; i < self.arrUIItemIcon.length; i++) {\r\n            var index = i;\r\n            var itemId = Math.floor(Math.random() * 7);\r\n            self.arrUIItemIcon[i].init(itemId, index, self);\r\n            self.arrUIItemIcon[i].changeSpineIcon(itemId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * random between, min, max included\r\n     */\r\n    randomBetween(min: number, max: number) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n\r\n    spinClick() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n\r\n\r\n\r\n        //hide effect\r\n\r\n        // this.setButtonAuto(false);\r\n        // this.setButtonFlash(false);\r\n        if (!this.isTrial) {\r\n\r\n            if (this.dailyFreeSpin > 0) {\r\n                this.dailyFreeSpin--;\r\n                if (this.dailyFreeSpin > 0) {\r\n                    this.lblFreeSpinCount.node.parent.active = true;\r\n                    this.lblFreeSpinCount.string = this.dailyFreeSpin + \"\";\r\n                }\r\n                else {\r\n                    this.lblFreeSpinCount.node.parent.active = false;\r\n                }\r\n            }\r\n            else {\r\n                if (Configs.Login.Coin < this.listBet[this.betId] * this.arrLineSelected.length) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_not_enough\"));\r\n                    return;\r\n                }\r\n            }\r\n            this.hideWinEffect();\r\n            this.hideLineWin(true);\r\n            this.setButtonEnable(false);\r\n            this.totalWinLabel.string = \"\";\r\n            SlotNetworkClient.getInstance().send(new cmd.SendPlay(this.arrLineSelected.toString()));\r\n        } else {\r\n            this.hideWinEffect();\r\n            this.hideLineWin(true);\r\n            this.setButtonEnable(false);\r\n            this.totalWinLabel.string = \"\";\r\n            var rIdx = Utils.randomRangeInt(0, Slot4TrialResult.results.length);\r\n            this.spinResult(Slot4TrialResult.results[rIdx]);\r\n        }\r\n    }\r\n\r\n    onBtnSoundTouchBonus() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundtouchBonus, false, 1);\r\n        }\r\n    }\r\n\r\n    onBtnSoundSumary() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundSmumary, false, 1);\r\n        }\r\n        if (this.isMusic) cc.audioEngine.playMusic(this.musicGame, true);\r\n    }\r\n\r\n    private audioIdRepeatSpin = 0;\r\n    spinResult(res: cmd.ReceiveResult | any) {\r\n        this.isSpining = true;\r\n        //  cc.log(\"spinResult:\" + JSON.stringify(res));\r\n\r\n\r\n        let that = this;\r\n        let successResult = [0, 1, 2, 3, 4, 5, 6];\r\n        let result = res.result;\r\n        if (successResult.indexOf(result) === -1) {\r\n            //fail\r\n            if (result === 102) {\r\n                //khong du tien\r\n                //  cc.log(\"so du khong du\");\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_not_enough\"));\r\n\r\n            } else {\r\n                //  cc.log(\"co loi xay ra\");\r\n            }\r\n            return;\r\n        }\r\n\r\n        //set icon\r\n        let matrix = res.matrix.split(\",\");\r\n        this.numberSpinReel = new Array(this.arrReel.length);\r\n        this.dataResult = res;\r\n        this.isHaveResultSpin = true;\r\n\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundStartSpin, false, 1);\r\n        }\r\n        if (this.isSound) {\r\n            this.audioIdRepeatSpin = cc.audioEngine.play(this.soundRepeatSpin, false, 1);\r\n        }\r\n        for (var i = 0; i < this.arrReel.length; i++) {\r\n            this.beginSpinReel(i);\r\n        }\r\n\r\n    }\r\n\r\n    spinFinish(hasDelay: boolean) {\r\n        this.isSpining = false;\r\n        var that = this;\r\n        this.changeAllItemToDark(false);\r\n        this.node.runAction(\r\n            cc.sequence(\r\n                cc.delayTime(hasDelay ? 1 : 0),\r\n                cc.callFunc(() => {\r\n                    if (that.toggleFast.isChecked||this.toggleAuto.isChecked) {\r\n                        that.spinClick();\r\n                    } else {\r\n                        that.setButtonEnable(true);\r\n                        that.setButtonFlash(true);\r\n                    }\r\n                })\r\n            )\r\n        )\r\n\r\n    }\r\n\r\n    showWinEffect(prize: number, currentMoney: number, result: number) {\r\n        var self = this;\r\n        if (prize > 0) {\r\n            this.lineWinParent.setSiblingIndex(1);\r\n            this.colParent.setSiblingIndex(0);\r\n            if (result == 5) {\r\n                //bonus\r\n                if (this.isSound) {\r\n                    cc.audioEngine.play(this.soundBonus, false, 1);\r\n                }\r\n                this.bonusNode.active = true;\r\n                let bonusSpine = this.bonusNode.getComponentInChildren(sp.Skeleton);\r\n                bonusSpine.setAnimation(0, \"bounus\", true);\r\n                this.node.runAction(\r\n                    cc.sequence(\r\n                        cc.delayTime(5),\r\n                        cc.callFunc(() => {\r\n                            this.bonusNode.active = false;\r\n                            if (this.isMusic) cc.audioEngine.playMusic(this.musicBonus, true);\r\n                            // this.popupBonus.showBonus(this.isTrial ? 100 : this.listBet[this.betId], this.dataResult.haiSao, this, () => {\r\n                                // this.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                                // this.showCoins(prize);\r\n                                // Tween.numberTo(this.winLabel, prize, 0.3);\r\n                                // Tween.numberTo(this.totalWinLabel, prize, 0.3);\r\n                                // Tween.numberTo(this.totalBetLabel, this.arrLineSelected.length * this.listBet[this.betId], 0.3);\r\n                                // if (!this.isTrial) Tween.numberTo(this.moneyLabel, currentMoney, 0.3);\r\n                                // if (this.toggleFast.isChecked) {\r\n                                //     self.spinFinish(true);\r\n                                // } else {\r\n                                //     if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                                //     else self.spinFinish(false);\r\n                                // }\r\n                            // });\r\n                            this.actShowBonus(this.isTrial ? 100 : this.listBet[this.betId], this.dataResult.haiSao,()=>{\r\n                                this.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                                this.showCoins(prize);\r\n                                Tween.numberTo(this.winLabel, prize, 0.3);\r\n                                Tween.numberTo(this.totalWinLabel, prize, 0.3);\r\n                                Tween.numberTo(this.totalBetLabel, this.arrLineSelected.length * this.listBet[this.betId], 0.3);\r\n                                if (!this.isTrial) Tween.numberTo(this.moneyLabel, currentMoney, 0.3);\r\n                                if (this.toggleFast.isChecked) {\r\n                                    self.spinFinish(true);\r\n                                } else {\r\n                                    if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                                    else self.spinFinish(false);\r\n                                }\r\n                            })\r\n                        })\r\n                    )\r\n                )\r\n\r\n            } else if (result == 2 || result == 6) {\r\n                //thang lon                \r\n                if (this.isSound) {\r\n                    cc.audioEngine.play(this.soundBigWin, false, 1);\r\n                }\r\n                this.bigWinNode.active = true;\r\n                let bigwinSpine = this.bigWinNode.getComponentInChildren(sp.Skeleton);\r\n                bigwinSpine.setAnimation(0, \"thanglon\", true);\r\n                Tween.numberTo(this.txtWinBigWin, prize, 1.5);\r\n                this.node.runAction(\r\n                    cc.sequence(\r\n                        cc.delayTime(5),\r\n                        cc.callFunc(() => {\r\n                            this.bigWinNode.active = false;\r\n                            if (this.toggleFast.isChecked) {\r\n                                self.spinFinish(true);\r\n                            } else {\r\n                                if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                                else self.spinFinish(false);\r\n                            }\r\n                        })\r\n                    )\r\n                )\r\n                this.showCoins(prize);\r\n                Tween.numberTo(this.winLabel, prize, 0.3);\r\n                Tween.numberTo(this.totalWinLabel, prize, 0.3);\r\n                Tween.numberTo(this.totalBetLabel, this.arrLineSelected.length * this.listBet[this.betId], 0.3);\r\n                if (!this.isTrial) Tween.numberTo(this.moneyLabel, currentMoney, 0.3);\r\n\r\n            } else if (result == 3 || result == 4) {\r\n                //no hu\r\n                if (this.isSound) {\r\n                    var audioIdJackpot = cc.audioEngine.play(this.soundJackpot, false, 1);\r\n                }\r\n                if (this.isSound) {\r\n                    var audioIdJackpot = cc.audioEngine.play(this.soundSmumary, false, 1);\r\n                }\r\n                this.jackpotNode.active = true;\r\n                let jackpotSpine = this.jackpotNode.getComponentInChildren(sp.Skeleton);\r\n                jackpotSpine.setAnimation(0, \"jackport\", true);\r\n                this.showCoins(prize);\r\n                cc.Tween.stopAllByTarget(this.nodeWinJackpot);\r\n                Tween.numberTo(this.txtWinJackpot, prize, 0.3);\r\n                this.nodeWinJackpot.position = cc.v3(0, -360, 0);\r\n                this.nodeWinJackpot.active = true;\r\n                cc.tween(this.nodeWinJackpot)\r\n                    .to(1, { position: cc.v3(0, 0, 0) })\r\n                    .delay(3)\r\n                    .to(1, { position: cc.v3(0, -360, 0) })\r\n                    .start();\r\n                this.node.runAction(\r\n                    cc.sequence(\r\n                        cc.delayTime(5),\r\n                        cc.callFunc(() => {\r\n                            this.jackpotNode.active = false;\r\n                            if (this.toggleFast.isChecked) {\r\n                                self.spinFinish(true);\r\n                            } else {\r\n                                if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                                else self.spinFinish(false);\r\n                            }\r\n                            if (this.isSound) {\r\n                                cc.audioEngine.stop(audioIdJackpot);\r\n                            }\r\n                        })\r\n                    )\r\n                )\r\n                Tween.numberTo(this.winLabel, prize, 0.3);\r\n                Tween.numberTo(this.totalWinLabel, prize, 0.3);\r\n                Tween.numberTo(this.totalBetLabel, this.arrLineSelected.length * this.listBet[this.betId], 0.3);\r\n                if (!this.isTrial) Tween.numberTo(this.moneyLabel, currentMoney, 0.3);\r\n\r\n            } else {\r\n                if (this.isSound) {\r\n                    cc.audioEngine.play(this.soundSpinWin, false, 1);\r\n                }\r\n                this.winNormalBg.active = true;\r\n                this.showCoins(prize);\r\n                Tween.numberTo(this.winLabel, prize, 0.3);\r\n                Tween.numberTo(this.totalWinLabel, prize, 0.3);\r\n                Tween.numberTo(this.totalBetLabel, this.arrLineSelected.length * this.listBet[this.betId], 0.3);\r\n                if (!this.isTrial) Tween.numberTo(this.moneyLabel, currentMoney, 0.3);\r\n                if (this.toggleFast.isChecked) {\r\n                    if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                    else self.spinFinish(false);\r\n                } else {\r\n                    if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                    else self.spinFinish(false);\r\n                }\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            Tween.numberTo(this.totalWinLabel, prize, 0.3);\r\n            Tween.numberTo(this.totalBetLabel, this.arrLineSelected.length * this.listBet[this.betId], 0.3);\r\n            if (!this.isTrial) Tween.numberTo(this.moneyLabel, currentMoney, 0.3);\r\n            if (this.toggleFast.isChecked) {\r\n                if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                else self.spinFinish(false);\r\n            } else {\r\n                if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                else self.spinFinish(false);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public beginSpinReel(indexReel) {\r\n        var self = this;\r\n        self.isFastCurrent = self.toggleFast.isChecked;\r\n        self.numberSpinReel[indexReel] = 0;\r\n        cc.Tween.stopAllByTarget(self.arrReel[indexReel]);\r\n        cc.tween(self.arrReel[indexReel])\r\n            .delay(indexReel * 0.2)\r\n            .to(0.1, { position: cc.v3(self.arrReel[indexReel].position.x, 70, 0) }, { easing: \"linear\" })\r\n            .call(() => {\r\n                self.loopSpinReel(indexReel);\r\n            })\r\n            .start();\r\n    }\r\n\r\n    loopSpinReel(indexReel) {\r\n\r\n        var self = this;\r\n        let speed = this.toggleFast.isChecked ? 0.04 : 0.07;\r\n        cc.tween(self.arrReel[indexReel])\r\n            .to(speed, { position: cc.v3(self.arrReel[indexReel].position.x, -self.distanceReel, 0) }, { easing: \"linear\" })\r\n            .call(() => {\r\n                self.processLoopSpinReel(indexReel);\r\n            })\r\n            .start();\r\n    }\r\n\r\n    processLoopSpinReel(indexReel) {\r\n        var self = this;\r\n        self.numberSpinReel[indexReel] += 1;\r\n        for (var i = 4; i >= 0; i--) {\r\n            var index = indexReel + (i * 5);\r\n\r\n            var indexRow = Math.floor(index / 5);\r\n            var itemIdTmp = 0;\r\n            if (indexRow == 0) {\r\n                itemIdTmp = Math.floor(Math.random() * 7);\r\n            }\r\n            else {\r\n                itemIdTmp = self.arrUIItemIcon[index - 5].itemId;\r\n            }\r\n            self.arrUIItemIcon[index].changeSpriteBlurByItemId(itemIdTmp);\r\n        }\r\n        self.arrReel[indexReel].position = cc.v3(self.arrReel[indexReel].position.x, 0, 0);\r\n        if (self.isHaveResultSpin) {\r\n            if (self.isFastCurrent == false) {\r\n                if (self.numberSpinReel[indexReel] >= MAX_CYCCLE_SPIN) {\r\n                    self.endSpinReel(indexReel);\r\n                }\r\n                else {\r\n                    self.loopSpinReel(indexReel);\r\n                }\r\n            }\r\n            else {\r\n                if (self.numberSpinReel[indexReel] >= FAST_CYCCLE_SPIN) {\r\n                    self.endSpinReel(indexReel);\r\n                }\r\n                else {\r\n                    self.loopSpinReel(indexReel);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (self.numberSpinReel[indexReel] >= ERROR_CYCCLE_SPIN) {\r\n                self.endSpinReel(indexReel);\r\n            }\r\n            else {\r\n                self.loopSpinReel(indexReel);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    endSpinReel(indexReel) {\r\n        var self = this;\r\n        if (self.dataResult == null) {\r\n            for (var i = 3; i >= 1; i--) {\r\n                var index = indexReel + (i * 5);\r\n                var itemId = Math.floor(Math.random() * 7);\r\n                self.arrUIItemIcon[index].changeSpineIcon(itemId);\r\n            }\r\n            return;\r\n        }\r\n        var matrix = self.dataResult.matrix.split(',');\r\n        var roll = this.arrReel[indexReel];\r\n        self.arrReel[indexReel].position = cc.v3(self.arrReel[indexReel].position.x, self.distanceReel, 0);\r\n        for (var i = 3; i >= 1; i--) {\r\n            var index = indexReel + (i * 5);\r\n            self.arrUIItemIcon[index].changeSpineIcon(matrix[index - 5]);\r\n        }\r\n        let speed = this.toggleFast.isChecked ? 0.15 : 0.3;\r\n        cc.tween(self.arrReel[indexReel])\r\n            .to(speed, { position: cc.v3(self.arrReel[indexReel].position.x, 0, 0) }, { easing: \"backOut\" })\r\n            .call(() => {\r\n                if (self.isSound) {\r\n                    cc.audioEngine.play(self.soundEndSpin, false, 1);\r\n                }\r\n                if (indexReel == 4) {\r\n                    cc.audioEngine.stop(this.audioIdRepeatSpin);\r\n\r\n                    Configs.Login.Coin = self.dataResult.currentMoney;\r\n                    if (self.dataResult.currentNumberFreeSpin > 0) {\r\n                        self.freespinCurrent.active = true;\r\n                        self.freespinCurrent.getComponentInChildren(cc.Label).string = self.dataResult.currentNumberFreeSpin;\r\n                    }\r\n                    else {\r\n                        self.freespinCurrent.active = false;\r\n                    }\r\n                    if (self.dataResult.isFreeSpin == 1) {\r\n                        this.freespinNode.active = true;\r\n                        let freeSpineSpine = this.freespinNode.getComponentInChildren(sp.Skeleton);\r\n                        freeSpineSpine.setAnimation(0, \"animation\", true);\r\n                        this.node.runAction(\r\n                            cc.sequence(\r\n                                cc.delayTime(5),\r\n                                cc.callFunc(() => {\r\n                                    this.freespinNode.active = false;\r\n                                    if (self.dataResult.linesWin !== \"\") self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                                    else self.spinFinish(false);\r\n                                })\r\n                            )\r\n                        )\r\n                    }\r\n                    else {\r\n                        self.showWinEffect(self.dataResult.prize, self.dataResult.currentMoney, self.dataResult.result);\r\n                    }\r\n\r\n                }\r\n\r\n            })\r\n            .start();\r\n    }\r\n\r\n    getSpriteFrameIconBlur(indexIcon) {\r\n        var self = this;\r\n        if (this.betId == -1)\r\n            return self.iconSFBlurArr10K[indexIcon];\r\n        else if (this.betId == 0)\r\n            return self.iconSFBlurArr100[indexIcon];\r\n        else if (this.betId == 1)\r\n            return self.iconSFBlurArr1K[indexIcon];\r\n        else if (this.betId == 2)\r\n            return self.iconSFBlurArr10K[indexIcon];\r\n    }\r\n\r\n    getSpriteFrameIcon(indexIcon) {\r\n        var self = this;\r\n        if (this.betId == -1)\r\n            return self.iconSFArr10K[indexIcon];\r\n        else if (this.betId == 0)\r\n            return self.iconSFArr100[indexIcon];\r\n        else if (this.betId == 1)\r\n            return self.iconSFArr1K[indexIcon];\r\n        else if (this.betId == 2)\r\n            return self.iconSFArr10K[indexIcon];\r\n    }\r\n\r\n    getSpineIcon(indexIcon) {\r\n        var self = this;\r\n        if (this.betId == -1)\r\n            return self.arrSkeletonIcon10K[indexIcon];\r\n        else if (this.betId == 0)\r\n            return self.arrSkeletonIcon100[indexIcon];\r\n        else if (this.betId == 1)\r\n            return self.arrSkeletonIcon1K[indexIcon];\r\n        else if (this.betId == 2)\r\n            return self.arrSkeletonIcon10K[indexIcon];\r\n    }\r\n\r\n    hideWinEffect() {\r\n        this.winNormalBg.active = false;\r\n        this.winLabel.string = \"0\";\r\n        this.bonusNode.active = false;\r\n        this.bigWinNode.active = false;\r\n        this.jackpotNode.active = false;\r\n    }\r\n\r\n    onBtnToggleMusic() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.isMusic = !this.isMusic;\r\n        cc.audioEngine.setMusicVolume(this.isMusic ? 0.5 : 0);\r\n    }\r\n\r\n    onBtnToggleSound() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.isSound = !this.isSound;\r\n    }\r\n\r\n    onBtnHistory() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.onBtnHideSetting();\r\n    }\r\n\r\n    onBtnHistoryJackpot() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.onBtnHideSetting();\r\n    }\r\n\r\n    onBtnHideSetting() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        Tween.hidePopup(this.nodeBoxSetting, this.nodeBoxSetting.parent, false);\r\n    }\r\n\r\n    onBtnSoundClick() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n    }\r\n\r\n    onBtnSetting() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.toggleMusic.isChecked = this.isMusic;\r\n        this.toggleSound.isChecked = this.isSound;\r\n        // Tween.showPopup(this.nodeBoxSetting, this.nodeBoxSetting.parent);\r\n        this.nodeBoxSetting.active = !this.nodeBoxSetting.active;\r\n    }\r\n    showLineWin(lines: Array<number>) {\r\n        //  cc.log(\"show line win\");\r\n        if (lines.length == 0) return;\r\n        this.changeAllItemToDark(true);\r\n        for (let i = 0; i < lines.length; i++) {\r\n            let line = lines[i];\r\n            //  cc.log(\"showLIneWin :\" + i + \" : \" + line);\r\n            let lineNode = this.lineWinParent.children[line - 1];\r\n            lineNode.active = true;\r\n        }\r\n        let that = this;\r\n        //hide all line\r\n        this.lineWinParent.runAction(\r\n            cc.sequence(\r\n                cc.delayTime(1),\r\n                cc.callFunc(() => {\r\n                    that.hideLineWin(false);\r\n                })\r\n            )\r\n        );\r\n        if (this.toggleFast.isChecked) {\r\n            this.lineWinParent.runAction(\r\n                cc.sequence(\r\n                    cc.delayTime(1.5),\r\n                    cc.callFunc(() => {\r\n                        this.spinFinish(false);\r\n                    })));\r\n        } else {\r\n            this.lineWinParent.runAction(\r\n                cc.sequence(\r\n                    cc.delayTime(1.5),\r\n                    cc.callFunc(() => {\r\n                        this.winNormalBg.active=false;\r\n                        this.lineWinParent.setSiblingIndex(0);\r\n                        this.colParent.setSiblingIndex(1);\r\n                        //active line one by one\r\n                        for (let i = 0; i < lines.length; i++) {\r\n                            let line = lines[i];\r\n                            let lineNode = this.lineWinParent.children[line - 1];\r\n                            this.lineWinParent.runAction(\r\n                                cc.sequence(\r\n                                    cc.delayTime(i * this.TIME_DELAY_SHOW_LINE),\r\n                                    cc.callFunc(() => {\r\n                                        lineNode.active = true;\r\n                                        let arrItem = this.getItemWinInLine(line - 1);\r\n                                        let arrIdOfItem = [];\r\n                                        let idWin = -1;\r\n                                        arrItem.forEach((item) => {\r\n                                            arrIdOfItem.push(item.itemId);\r\n                                        });\r\n                                        arrItem.forEach((item) => {\r\n                                            idWin = this.getItemIdWinInLine(arrIdOfItem);\r\n                                            if (item.itemId == idWin) {\r\n                                                item.checkShowSpriteOrSpine();\r\n                                            }\r\n                                        });\r\n                                    }),\r\n                                    cc.delayTime(this.TIME_DELAY_SHOW_LINE),\r\n                                    cc.callFunc(() => {\r\n                                        lineNode.active = false;\r\n                                        if (i == lines.length - 1)\r\n                                            that.spinFinish(false);\r\n                                    })\r\n                                )\r\n\r\n                            );\r\n                        }\r\n                    })\r\n                )\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideLineWin(stopAction: boolean) {\r\n        if (stopAction) this.lineWinParent.stopAllActions();\r\n        this.lineWinParent.children.forEach(element => {\r\n            element.active = false;\r\n        });\r\n    }\r\n\r\n    setButtonEnable(active: boolean) {\r\n        this.btnSpin.interactable = active;\r\n        this.btnBack.interactable = active;\r\n        this.btnLine.interactable = active;\r\n        if (active == true) {\r\n            this.skeSpin.node.color = cc.Color.WHITE;\r\n            this.skeSpin.setAnimation(0, \"quay\", true);\r\n        }\r\n        else {\r\n            this.skeSpin.setAnimation(0, \"quay2\", true);\r\n            this.skeSpin.node.color = cc.Color.GRAY;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    setButtonFlash(active: boolean) {\r\n        this.toggleFast.interactable = active;\r\n        this.toggleFast.node.children[0].color = active ? cc.Color.WHITE : cc.Color.GRAY;\r\n    }\r\n\r\n    //#region CHANGE BET\r\n    changeBet() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n\r\n        this.mSlotLobby.node.active = !this.mSlotLobby.node.active;\r\n    }\r\n\r\n    chooseBet(event, bet) {\r\n\r\n        let oldIdx = this.betId;\r\n        this.betId = parseInt(bet);\r\n        this.dailyFreeSpin = 0;\r\n        this.lblFreeSpinCount.node.parent.active = false;\r\n        this.isTrial = bet == -1 ? true : false;\r\n        this.betId = bet == -1 ? 2 : bet;\r\n        if (this.betId >= this.listBet.length) {\r\n            this.betId = 0;\r\n            SlotNetworkClient.getInstance().send(new cmd.SendChangeRoom(oldIdx, this.betId));\r\n        }\r\n        else {\r\n            SlotNetworkClient.getInstance().send(new cmd.SendChangeRoom(oldIdx, this.betId));\r\n        }\r\n        this.lbCurrentRoom.string = bet == \"0\" ? \"100\" : Utils.formatNumber(1000);\r\n        if (bet == 2)\r\n            this.lbCurrentRoom.string = Utils.formatNumber(10000)\r\n    }\r\n\r\n\r\n    showGuide() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.popupGuide.show(this);\r\n    }\r\n\r\n    closeGuide() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.popupGuide.hide();\r\n    }\r\n\r\n    showChooseLine() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n    }\r\n\r\n    changeSpeed() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.isFastCurrent = this.toggleFast.isChecked;\r\n        if (!this.toggleAuto.isChecked) {\r\n            this.toggleAuto.check();\r\n        }\r\n        if (this.toggleFast.isChecked && !this.isSpining) {\r\n            this.spinClick();\r\n        }\r\n\r\n    }\r\n\r\n    setAutoSpin() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n\r\n        if (!this.isSpining) {\r\n            this.spinClick();\r\n        }\r\n    }\r\n\r\n\r\n    actBack() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        this.lineWinParent.stopAllActions();\r\n        SlotNetworkClient.getInstance().send(new cmd.SendUnSubcribe(this.betId));\r\n\r\n        this.mSlotLobby.show();\r\n        this.hideGamePlay();\r\n    }\r\n    changeAllItemToDark(state) {\r\n        this.arrUIItemIcon.forEach((item) => {\r\n            let sprite = item.getComponentInChildren(cc.Sprite);\r\n            let spine = item.getComponentInChildren(sp.Skeleton);\r\n\r\n            sprite.node.color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n            sprite.node.active = true;\r\n            spine.node.color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n            spine.node.active = false;\r\n            spine.node.scale = 0.65;\r\n            sprite.node.scale = 1.0;\r\n        })\r\n    }\r\n    getItemWinInLine(lineId) {\r\n        let lineArr = this.mapLine[lineId];\r\n        let arrItem = [];\r\n        for (let i = 0; i < lineArr.length; i++) {\r\n            arrItem.push(this.arrRealItem[lineArr[i]]);\r\n        }\r\n        return arrItem;\r\n    }\r\n    getItemIdWinInLine(arrId: Array<number>) {\r\n        let count = 0;\r\n        let idWin = -1;\r\n        arrId.forEach((id) => {\r\n            let size = arrId.filter(x => x == id).length;\r\n            if (size >= count) {\r\n                count = size;\r\n                idWin = id;\r\n            }\r\n        })\r\n        return idWin;\r\n    }\r\n    actGuide() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.popupGuide == null) {\r\n            BundleControl.loadPrefabGame(\"Slot8\", \"thanbai/prefabs/PopupGuide\", (finish, total) => {\r\n                // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupGuide = cc.instantiate(prefab).getComponent(\"Dialog\");\r\n                this.popupGuide.node.parent = this.popupContainer;\r\n                this.popupGuide.show();\r\n            });\r\n        } else {\r\n            this.popupGuide.show();\r\n        }\r\n    }\r\n    actHistory() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.isTrial) {\r\n            App.instance.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.popupHistory == null) {\r\n            BundleControl.loadPrefabGame(\"Slot8\", \"thanbai/prefabs/History\", (finish, total) => {\r\n                // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupHistory = cc.instantiate(prefab).getComponent(\"Slot8History\");\r\n                this.popupHistory.node.parent = this.popupContainer;\r\n                this.popupHistory.show();\r\n            });\r\n        } else {\r\n            this.popupHistory.show();\r\n        }\r\n    }\r\n    actHistoryJackpot() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.isTrial) {\r\n            App.instance.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.popupHonor == null) {\r\n            BundleControl.loadPrefabGame(\"Slot8\", \"thanbai/prefabs/Glory\", (finish, total) => {\r\n                // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupHonor = cc.instantiate(prefab).getComponent(\"Slot8Glory\");\r\n                this.popupHonor.node.parent = this.popupContainer;\r\n                this.popupHonor.show();\r\n            });\r\n        } else {\r\n            this.popupHonor.show();\r\n        }\r\n    }\r\n    actChooseLine() {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.isTrial) {\r\n            App.instance.showToast(App.instance.getTextLang('txt_slot_error'));\r\n            return;\r\n        }\r\n        if (this.popupChooseLine == null) {\r\n            BundleControl.loadPrefabGame(\"Slot8\", \"thanbai/prefabs/ChooseLine\", (finish, total) => {\r\n                // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupChooseLine = cc.instantiate(prefab).getComponent(\"Slot8ChooseLine\");\r\n                this.popupChooseLine.node.parent = this.popupContainer;\r\n                this.popupChooseLine.showPopup(this.arrLineSelected);\r\n                this.popupChooseLine.onSelectedChanged = (lines) => {\r\n                    this.arrLineSelected = lines;\r\n                    this.totalLineLabel.string = lines.length.toString();\r\n                    Tween.numberTo(this.totalBetLabel, lines.length * this.listBet[this.betId], 0.3);\r\n                }\r\n            });\r\n        } else {\r\n            this.popupChooseLine.showPopup(this.arrLineSelected);\r\n        }\r\n    }\r\n    actShowBonus(isTrial, dataHaiSao, cb) {\r\n        if (this.isSound) {\r\n            cc.audioEngine.play(this.soundBonus, false, 1);\r\n        }\r\n        if (this.popupBonus == null) {\r\n            BundleControl.loadPrefabGame(\"Slot8\", \"thanbai/prefabs/PopupBonus\", (finish, total) => {\r\n                // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                App.instance.showLoading(false);\r\n                this.popupBonus = cc.instantiate(prefab).getComponent(\"Slot8.PopupBonus\");\r\n                this.popupBonus.node.parent = this.popupContainer;\r\n                this.popupBonus.showBonus(isTrial, dataHaiSao, this, cb);\r\n            });\r\n        } else {\r\n            this.popupBonus.showBonus(isTrial, dataHaiSao, this, cb);\r\n        }\r\n    }\r\n}\r\n","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot8Glory extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        super.show();\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 138, \"p\": this.page, \"gn\": \"ROLL_ROYE\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (!res[\"success\"]) return;\r\n\r\n            if (this.items.length == 0) {\r\n                for (var i = 0; i < 8; i++) {\r\n                    let item = cc.instantiate(this.itemTemplate);\r\n                    item.parent = this.itemTemplate.parent;\r\n                    this.items.push(item);\r\n                }\r\n                this.itemTemplate.destroy();\r\n                this.itemTemplate = null;\r\n            }\r\n\r\n            this.maxPage = res[\"totalPages\"];\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                let item = this.items[i];\r\n                if (i < res[\"results\"].length) {\r\n                    let itemData = res[\"results\"][i];\r\n                    item.getChildByName(\"bg\").opacity = i % 2 == 0 ? 128 : 0;\r\n                    item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"].replace(\" \", \"\\n\");\r\n                    item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                    item.getChildByName(\"Type\").getComponent(cc.Label).string = itemData[\"rs\"] == 3 ? \"Nổ hũ\" : \"Thắng lớn\";\r\n                    item.getChildByName(\"Nickname\").getComponent(cc.Label).string = itemData[\"un\"];\r\n                    item.getChildByName(\"Prize\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot8History extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        super.show();\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 137, \"p\": this.page, \"un\": Configs.Login.Nickname, \"gn\": \"ROLL_ROYE\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (!res[\"success\"]) return;\r\n\r\n            if (this.items.length == 0) {\r\n                for (var i = 0; i < 8; i++) {\r\n                    let item = cc.instantiate(this.itemTemplate);\r\n                    item.parent = this.itemTemplate.parent;\r\n                    this.items.push(item);\r\n                }\r\n                this.itemTemplate.destroy();\r\n                this.itemTemplate = null;\r\n            }\r\n\r\n            this.maxPage = res[\"totalPages\"];\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                let item = this.items[i];\r\n                if (i < res[\"results\"].length) {\r\n                    let itemData = res[\"results\"][i];\r\n                    item.getChildByName(\"bg\").opacity = i % 2 == 0 ? 128 : 0;\r\n                    item.getChildByName(\"Id\").getComponent(cc.Label).string = itemData[\"rf\"];\r\n                    item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"].replace(\" \", \"\\n\");\r\n                    item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                    item.getChildByName(\"Linebet\").getComponent(cc.Label).string = itemData[\"lb\"] === \"\" ? 0 : itemData[\"lb\"].split(\",\").length;\r\n                    item.getChildByName(\"Linewin\").getComponent(cc.Label).string = itemData[\"lw\"] === \"\" ? 0 : itemData[\"lw\"].split(\",\").length;\r\n                    item.getChildByName(\"Prize\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot8Icon extends cc.Component {\r\n\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    @property(cc.Node)\r\n    nodeIcon: cc.Node = null;\r\n    @property(sp.Skeleton)\r\n    spineIcon: sp.Skeleton = null;\r\n    @property(cc.Node)\r\n\r\n    private animation: cc.Animation=null;\r\n\r\n    onLoad() {\r\n        this.animation = this.getComponent(cc.Animation);\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    setSprite(sf: cc.SpriteFrame) {\r\n        this.nodeIcon.active = true;\r\n        this.spineIcon.node.active = false;\r\n\r\n        this.nodeIcon.getComponent(cc.Sprite).spriteFrame = sf;\r\n    }\r\n\r\n    setSpine(ske:sp.SkeletonData,id) {\r\n        this.nodeIcon.active = false;\r\n        this.spineIcon.node.active = true;\r\n        \r\n        this.spineIcon.skeletonData = ske;\r\n        if(id == 0){\r\n            this.spineIcon.setAnimation(0,\"jackport\",true);\r\n        }\r\n        else if(id == 1){\r\n            this.spineIcon.setAnimation(0,\"bonus\",true);\r\n        }\r\n        else if(id == 2){\r\n            this.spineIcon.setAnimation(0,\"freespin\",true);\r\n        }\r\n    }\r\n    normal(){\r\n        this.nodeIcon.color = new cc.Color(255,255,255);\r\n        this.spineIcon.node.color = new cc.Color(255,255,255);\r\n    }\r\n\r\n    unscale() {\r\n        this.nodeIcon.color = new cc.Color(50,50,50);\r\n        this.spineIcon.node.color = new cc.Color(50,50,50);\r\n    }\r\n\r\n    scale() {\r\n        this.nodeIcon.color = new cc.Color(255,255,255);\r\n        this.spineIcon.node.color = new cc.Color(255,255,255);\r\n        if (this.nodeIcon.active) {\r\n            this.animation.play();\r\n        }\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot4TrialResult {\r\n\r\n    static results = [\r\n        {\r\n            ref: 3541,\r\n            result: 3,\r\n            matrix: \"2,0,1,6,1,0,5,0,3,0,4,5,1,0,6\",\r\n            linesWin: \"1,2,2,4,5,6,8,8,9,9,10,12,12,13,14,17,18,20\",\r\n            haiSao: \"\",\r\n            prize: 516700,\r\n            currentMoney: 1706231246\r\n        },\r\n        {\r\n            ref: 3542,\r\n            result: 5,\r\n            matrix: \"6,2,2,2,2,5,0,4,5,3,1,2,3,0,6\",\r\n            linesWin: \"2,6,8,9,17,19\",\r\n            haiSao: \"1,0,1,1,1,1,1,1,1,1,1\",\r\n            prize: 19200,\r\n            currentMoney: 1706248446\r\n        },\r\n        {\r\n            ref: 3543,\r\n            result: 5,\r\n            matrix: \"4,5,2,1,1,1,5,2,2,0,1,4,5,2,5\",\r\n            linesWin: \"1,2,2,4,6,6,7,8,8,9,9,10,10,11,13,13,13,14,15,16,17,17,19,19\",\r\n            haiSao: \"0,1,1,1,1,1,1,1,0,1,1,1\",\r\n            prize: 21000,\r\n            currentMoney: 1706267446\r\n        },\r\n        {\r\n            ref: 3546,\r\n            result: 1,\r\n            matrix: \"5,1,3,2,4,1,2,6,3,0,5,2,4,1,4\",\r\n            linesWin: \"3,4,10,10,10,13,14,14,17,17,17,18,18,18,20\",\r\n            haiSao: \"\",\r\n            prize: 8300,\r\n            currentMoney: 1706781306\r\n        },\r\n        {\r\n            ref: 3547,\r\n            result: 1,\r\n            matrix: \"1,6,6,0,1,1,5,2,6,6,3,6,6,3,3\",\r\n            linesWin: \"2,2,3,4,5,6,6,7,8,8,10,12,16,17,18,20\",\r\n            haiSao: \"\",\r\n            prize: 5800,\r\n            currentMoney: 1706785106\r\n        },\r\n        {\r\n            ref: 3549,\r\n            result: 1,\r\n            matrix: \"6,2,1,5,4,2,3,2,3,6,2,4,3,5,0\",\r\n            linesWin: \"4,5,8,11,12,14,17\",\r\n            haiSao: \"\",\r\n            prize: 2200,\r\n            currentMoney: 1706804406\r\n        },\r\n        {\r\n            ref: 3555,\r\n            result: 1,\r\n            matrix: \"1,4,4,0,5,1,5,0,5,2,6,5,3,6,6\",\r\n            linesWin: \"2,6,12,13,16,17\",\r\n            haiSao: \"\",\r\n            prize: 1800,\r\n            currentMoney: 1706823006\r\n        },\r\n        {\r\n\r\n            ref: 3560,\r\n            result: 1,\r\n            matrix: \"3,4,1,0,3,5,3,4,6,1,3,4,3,6,4\",\r\n            linesWin: \"2,4,5,7,8,9,11,12,13,14,16,17,17,20\",\r\n            haiSao: \"\",\r\n            prize: 5400,\r\n            currentMoney: 1707335746\r\n        },\r\n        {\r\n            ref: 3568,\r\n            result: 2,\r\n            matrix: \"1,4,0,6,3,0,1,1,1,4,3,5,5,4,3\",\r\n            linesWin: \"1,1,4,4,5,5,6,6,7,11,11,12,12,14,15,16,19,20,20\",\r\n            haiSao: \"\",\r\n            prize: 57200,\r\n            currentMoney: 1707941766\r\n        },\r\n        {\r\n            ref: 3569,\r\n            result: 1,\r\n            matrix: \"4,2,0,0,6,5,0,0,6,5,1,5,3,1,1\",\r\n            linesWin: \"3,3,7,7,9,9,11,15,18,19,20,20,20\",\r\n            haiSao: \"\",\r\n            prize: 20700,\r\n            currentMoney: 1707960466\r\n        },\r\n        {\r\n            ref: 3578,\r\n            result: 1,\r\n            matrix: \"6,3,2,3,1,5,3,4,1,3,6,4,3,4,4\",\r\n            linesWin: \"1,2,3,4,5,6,7,8,10,12,15,16,16,17,19,20\",\r\n            haiSao: \"\",\r\n            prize: 9800,\r\n            currentMoney: 1708507826\r\n        },\r\n        {\r\n            ref: 3605,\r\n            result: 1,\r\n            matrix: \"0,1,0,4,4,6,6,6,1,6,6,1,4,4,2\",\r\n            linesWin: \"1,2,2,3,4,5,6,8,8,10,12,13,14,15,18,19\",\r\n            haiSao: \"\",\r\n            prize: 5700,\r\n            currentMoney: 1709815386\r\n        },\r\n        {\r\n            ref: 3615,\r\n            result: 1,\r\n            matrix: \"3,0,4,3,2,0,4,4,6,4,0,3,6,3,4\",\r\n            linesWin: \"1,4,8,11,15\",\r\n            haiSao: \"\",\r\n            prize: 1100,\r\n            currentMoney: 1709866486\r\n        },\r\n        {\r\n            ref: 3634,\r\n            result: 1,\r\n            matrix: \"2,2,6,2,5,3,0,5,6,5,5,0,2,3,5\",\r\n            linesWin: \"2,6,10\",\r\n            haiSao: \"\",\r\n            prize: 1200,\r\n            currentMoney: 1711120986\r\n        },\r\n        {\r\n            ref: 3656,\r\n            result: 1,\r\n            matrix: \"1,0,6,3,6,0,6,2,4,1,5,1,3,6,5\",\r\n            linesWin: \"8,10,10,13,13,13,14,17,18,18\",\r\n            haiSao: \"\",\r\n            prize: 4300,\r\n            currentMoney: 1711713906\r\n        },\r\n        {\r\n            ref: 3693,\r\n            result: 2,\r\n            matrix: \"3,3,0,1,1,0,6,3,0,1,3,3,1,3,2\",\r\n            linesWin: \"1,2,2,3,4,5,6,7,8,9,9,10,10,12,12,13,13,14,16,17,17,18,18,19,20\",\r\n            haiSao: \"\",\r\n            prize: 78800,\r\n            currentMoney: 1713716007\r\n        },\r\n        {\r\n            ref: 3848,\r\n            result: 5,\r\n            matrix: \"2,3,5,3,2,5,5,1,1,1,3,0,4,0,5\",\r\n            linesWin: \"1,4,5,5,6,6,7,9,10,11,12,13,13,14,14,15,15,16,17,18,19\",\r\n            haiSao: \"1,1,1,1,1,1,1,1,0,2,0,1\",\r\n            prize: 15200,\r\n            currentMoney: 1721477607\r\n        },\r\n        {\r\n            ref: 3568,\r\n            result: 2,\r\n            matrix: \"1,4,0,6,3,0,1,1,1,4,3,5,5,4,3\",\r\n            linesWin: \"1,1,4,4,5,5,6,6,7,11,11,12,12,14,15,16,19,20,20\",\r\n            haiSao: \"\",\r\n            prize: 57200,\r\n            currentMoney: 0\r\n        }\r\n    ]\r\n}\r\n"],"file":"index.js"}