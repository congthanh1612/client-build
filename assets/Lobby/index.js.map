{"version":3,"sources":["assets/Lobby/LobbyScript/Script/common/AlertDialog.ts","assets/Lobby/LobbyScript/Script/common/App.ts","assets/Lobby/LobbyScript/Payment/BaseTabShop.ts","assets/Lobby/LobbyScript/Script/common/BgMiniGame.ts","assets/Lobby/LobbyScript/Script/common/BgResizer.ts","assets/Lobby/LobbyScript/Script/common/BroadcastReceiver.ts","assets/Lobby/LobbyScript/ButtonMiniGame.ts","assets/Lobby/LobbyScript/Payment/CQRCode.js","assets/Lobby/LobbyScript/Script/common/CanvasResizer.ts","assets/Lobby/LobbyScript/CanvasUpdateApp.ts","assets/Lobby/LobbyScript/Script/networks/CardGame.Cmd.ts","assets/Lobby/LobbyScript/Script/networks/CardGameNetworkClient.ts","assets/Lobby/LobbyScript/Script/cardGameRoom/CardGame_ItemRoom.ts","assets/Lobby/LobbyScript/Clipboards.ts","assets/Lobby/LobbyScript/Script/common/Common.AudioManager.ts","assets/Lobby/LobbyScript/Script/common/Common.CPLabel.ts","assets/Lobby/LobbyScript/Script/common/Common.CPSprite.ts","assets/Lobby/LobbyScript/Script/common/ConfirmDialog.ts","assets/Lobby/LobbyScript/Script/common/CustomUI.Dropdown.ts","assets/Lobby/LobbyScript/Script/common/CustomUI.PageView.ts","assets/Lobby/LobbyScript/Script/common/Dialog.ts","assets/Lobby/LobbyScript/Script/common/Dialogz.ts","assets/Lobby/LobbyScript/Script/common/DropdownItem.ts","assets/Lobby/LobbyScript/Script/common/Dropdown.ts","assets/Lobby/LobbyScript/EditboxFormat.ts","assets/Lobby/LobbyScript/Script/Service/FaceBook/FBsrv.ts","assets/Lobby/LobbyScript/Script/Service/FaceBook/Facebook.ts","assets/Lobby/LobbyScript/Script/games/GameData.ts","assets/Lobby/LobbyScript/GameIconJackpot.ts","assets/Lobby/LobbyScript/GameLive/GameLiveController.ts","assets/Lobby/LobbyScript/GameLive/GameLiveGeneralController.ts","assets/Lobby/LobbyScript/Script/common/HandlerButton.ts","assets/Lobby/LobbyScript/Profile/ItemBankProfile.ts","assets/Lobby/LobbyScript/Payment/ItemChoseBank.ts","assets/Lobby/LobbyScript/GameLive/ItemGameLive.ts","assets/Lobby/LobbyScript/Script/BaseSlot25/ItemIconSlot25.ts","assets/Lobby/LobbyScript/Script/common/Language.Label.ts","assets/Lobby/LobbyScript/Script/common/Language.LanguageManager.ts","assets/Lobby/LobbyScript/Script/common/Language.Sprite.ts","assets/Lobby/LobbyScript/Lobby.BannerList.ts","assets/Lobby/LobbyScript/Lobby.BoxKiemTien.ts","assets/Lobby/LobbyScript/Lobby.BoxLixi.ts","assets/Lobby/LobbyScript/Lobby.ButtonListJackpot.ts","assets/Lobby/LobbyScript/Lobby.CardRoom.ts","assets/Lobby/LobbyScript/Lobby.Cmd.ts","assets/Lobby/LobbyScript/Lobby.ItemEvent.ts","assets/Lobby/LobbyScript/Lobby.ItemGame.ts","assets/Lobby/LobbyScript/Lobby.ItemSlotGame.ts","assets/Lobby/LobbyScript/Lobby.ItemTopHu.ts","assets/Lobby/LobbyScript/Lobby.LobbyController.ts","assets/Lobby/LobbyScript/Lobby.PopupBoomTan.ts","assets/Lobby/LobbyScript/Lobby.PopupCardInfo.ts","assets/Lobby/LobbyScript/Lobby.PopupCashout.ts","assets/Lobby/LobbyScript/Lobby.PopupChangeAvatar.ts","assets/Lobby/LobbyScript/Lobby.PopupChangePassword.ts","assets/Lobby/LobbyScript/Lobby.PopupChangerCoin.ts","assets/Lobby/LobbyScript/Lobby.PopupDaiLy.ts","assets/Lobby/LobbyScript/Lobby.PopupDiemDanh.ts","assets/Lobby/LobbyScript/Lobby.PopupEventLogin.ts","assets/Lobby/LobbyScript/Lobby.PopupForgetPassword.ts","assets/Lobby/LobbyScript/Lobby.PopupGameSBO.ts","assets/Lobby/LobbyScript/Lobby.PopupGameTransfer.ts","assets/Lobby/LobbyScript/Lobby.PopupGiftCode.ts","assets/Lobby/LobbyScript/Lobby.PopupKiemTien.ts","assets/Lobby/LobbyScript/Lobby.PopupLuckyWheel.ts","assets/Lobby/LobbyScript/Lobby.PopupProfile.ts","assets/Lobby/LobbyScript/Lobby.PopupRefund.ts","assets/Lobby/LobbyScript/Lobby.PopupSecurity.ts","assets/Lobby/LobbyScript/Lobby.PopupSettings.ts","assets/Lobby/LobbyScript/Payment/Lobby.PopupShop.ts","assets/Lobby/LobbyScript/Lobby.PopupTaiApp.ts","assets/Lobby/LobbyScript/Payment/Lobby.PopupThes.ts","assets/Lobby/LobbyScript/Payment/Lobby.PopupThe.ts","assets/Lobby/LobbyScript/Lobby.PopupTopHu.ts","assets/Lobby/LobbyScript/Lobby.PopupTransaction.ts","assets/Lobby/LobbyScript/Lobby.Popupnaprut.ts","assets/Lobby/LobbyScript/Lobby.TabsListGame.ts","assets/Lobby/LobbyScript/Lobby.TopHu.ts","assets/Lobby/LobbyScript/Payment/LobbyChoseBank.ts","assets/Lobby/LobbyScript/Payment/LobbyShop.ts","assets/Lobby/LobbyScript/MiniGame1.ts","assets/Lobby/LobbyScript/Script/networks/MiniGameNetworkClient2.ts","assets/Lobby/LobbyScript/Script/networks/MiniGameNetworkClient.ts","assets/Lobby/LobbyScript/Script/networks/MiniGameSockJsClient.ts","assets/Lobby/LobbyScript/MiniGame.ts","assets/Lobby/LobbyScript/Script/common/MultiLanguage.ts","assets/Lobby/LobbyScript/MutipleJackpot.ts","assets/Lobby/LobbyScript/Script/networks/Network.Cmd.ts","assets/Lobby/LobbyScript/Script/networks/Network.InPacket.ts","assets/Lobby/LobbyScript/Script/networks/Network.NetworkClient.ts","assets/Lobby/LobbyScript/Script/networks/Network.NetworkListener.ts","assets/Lobby/LobbyScript/Script/networks/Network.OutPacket.ts","assets/Lobby/LobbyScript/Script/networks/Network.SockJsClient.ts","assets/Lobby/LobbyScript/Script/common/NodeScaler.ts","assets/Lobby/LobbyScript/NumberUpdater.ts","assets/Lobby/LobbyScript/Script/networks/PacketHeaderAnalyze.ts","assets/Lobby/LobbyScript/PopupConfirmTransfer.ts","assets/Lobby/LobbyScript/PopupEventTT.ts","assets/Lobby/LobbyScript/PopupEvent.ts","assets/Lobby/LobbyScript/PopupLogin.ts","assets/Lobby/LobbyScript/PopupRegister.ts","assets/Lobby/LobbyScript/PopupUpdateNickname.ts","assets/Lobby/LobbyScript/PopupWebView.ts","assets/Lobby/LobbyScript/Script/common/Random.ts","assets/Lobby/LobbyScript/Script/common/RestApi.js","assets/Lobby/LobbyScript/Script/common/SPUtils.ts","assets/Lobby/LobbyScript/SamScript/Sam.Cmd.ts","assets/Lobby/LobbyScript/SamScript/Sam.Constant.ts","assets/Lobby/LobbyScript/SamScript/Sam.InGame.ts","assets/Lobby/LobbyScript/SamScript/Sam.Player.ts","assets/Lobby/LobbyScript/SamScript/Sam.Room.ts","assets/Lobby/LobbyScript/Script/networks/SamNetworkClient.ts","assets/Lobby/LobbyScript/Script/common/ScrollViewControl.ts","assets/Lobby/LobbyScript/Script/networks/ShootFishNetworkClient.ts","assets/Lobby/LobbyScript/Script/networks/SlotNetworkClient.ts","assets/Lobby/LobbyScript/Script/networks/TX2NetworkClient.ts","assets/Lobby/LobbyScript/TabMenuGame.ts","assets/Lobby/LobbyScript/Payment/TabPopupBank.ts","assets/Lobby/LobbyScript/Payment/TabTopupCard.ts","assets/Lobby/LobbyScript/Payment/TabTopupChuyenKhoan.ts","assets/Lobby/LobbyScript/Payment/TabTopupClickPay.ts","assets/Lobby/LobbyScript/Payment/TabTopupGame - 001.ts","assets/Lobby/LobbyScript/Payment/TabTopupGameBank.ts","assets/Lobby/LobbyScript/Payment/TabTopupGame.ts","assets/Lobby/LobbyScript/Payment/TabTopupManualBank.ts","assets/Lobby/LobbyScript/Payment/TabTopupManualMomo.ts","assets/Lobby/LobbyScript/Payment/TabTopupManualZalo.ts","assets/Lobby/LobbyScript/Payment/TabTopupMomo.ts","assets/Lobby/LobbyScript/Payment/TabTopupNapThe.ts","assets/Lobby/LobbyScript/Payment/TabTopupPaywell.ts","assets/Lobby/LobbyScript/Payment/TabTopupPrincewell.ts","assets/Lobby/LobbyScript/Payment/TabTopupRoyalwell.ts","assets/Lobby/LobbyScript/Payment/TabTopupSieuToc.ts","assets/Lobby/LobbyScript/Script/networks/TaiXiuSieuToc.NetworkClient.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.CardGoup.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.Card.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.Cmd.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.Constant.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.GameLogic.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.InGame.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.ItemPlayerResult.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.Player.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.Playerz.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.PopupHistory.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.Res.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.Resz.ts","assets/Lobby/LobbyScript/TienLenScript/TienLen.Room.ts","assets/Lobby/LobbyScript/Script/networks/TienLenNetworkClient.ts","assets/Lobby/LobbyScript/TienLenScript/TienLenz.InGame.ts","assets/Lobby/LobbyScript/Script/common/TimeUtils.ts","assets/Lobby/LobbyScript/Script/common/Tween.ts","assets/Lobby/LobbyScript/TienLenScript/UIChatGame.ts","assets/Lobby/LobbyScript/UIItemDiemDanh.ts","assets/Lobby/LobbyScript/UIItemMailClick.ts","assets/Lobby/LobbyScript/UIItemMail.ts","assets/Lobby/LobbyScript/Script/common/UINotifyJackpot.ts","assets/Lobby/LobbyScript/UIPopupDiemDanh.ts","assets/Lobby/LobbyScript/UIPopupMail.ts","assets/Lobby/LobbyScript/UIPopupRule.ts","assets/Lobby/LobbyScript/Script/common/Utils.ts"],"names":["Dialog_1","require","_a","cc","_decorator","ccclass","property","AlertDialogQueueItem","msg","doneTitle","onDismissed","this","AlertDialog","_super","_this","apply","arguments","lblMessage","btnClose","lblDone","queue","Array","__extends","prototype","showMsg","show4","showMsgWithOnDismissed","canClose","node","active","show3","addQueue","forceAddQueue","push","length","string","show","call","_onShowed","_onDismissed","splice","dismiss","isAnimated","__decorate","Label","Button","default","exports","BundleControl_1","Configs_1","Http_1","ButtonMiniGame_1","MiniGame_1","PopupUpdateNickname_1","Network_InPacket_1","SlotNetworkClient_1","AlertDialog_1","BroadcastReceiver_1","ConfirmDialog_1","UINotifyJackpot_1","Lobby_Cmd_1","GameLiveController_1","TaiXiuSieuToc_NetworkClient_1","Global_1","Language_LanguageManager_1","App","clipCoin","prefabCoin","nodeCoin","bgMiniPrefab","gameLiveController","uiNotifyJackpot","taiXiuDoublePrefab","TaiXiuMD5Prefab","miniPokerPrefab","caoThapPrefab","bauCuaPrefab","slot3x3Prefab","oanTuTiPrefab","canvas","designResolution","Size","loading","loadingIcon","loadingLabel","alertDialog","alertToast","confirmDialog","sprFrameAvatars","buttonMiniGameNode","miniGame","popupWebView","popupUpdateNickname","isShowNotifyJackpot","popupGameTransfer","popupGameSBO","popupRule","lastWitdh","lastHeight","timeOutLoading","isFisrtNetworkConnected","subpackageLoaded","taiXiuDouble","miniPoker","caoThap","bauCua","slot3x3","slot3x3Gem","oanTuTi","taiXiuSieuToc","TaiXiuMD5","numMiniGameOpening","cacheWebView","coinPool","topHuData","fakeTopHuData","checkMailUnread","popupEvent","VERSION_CONFIG","timeLixi","isFadeOutBgMini","boxApp","bgMini","arrMiniGame","TYPE_LOGIN","USER_NAME","PASS_WORD","FB_ID","AT_FB","RECONNECT_GAME","App_1","onLoad","Global","LanguageManager","instance","NodePool","initConfigGameStart","game","addPersistRootNode","buttonMiniGame","getComponent","register","USER_LOGOUT","setupTimeRunInBg","destroy","getCoin","ret","size","put","instantiate","get","parent","scale","opacity","position","v3","partical","getComponentInChildren","ParticleSystem","particleCount","stopSystem","resetSystem","getPositionInView","item","worldPos","convertToWorldSpaceAR","getPosition","convertToNodeSpaceAR","getRandomArbitrary","min","max","Math","random","showCoins","numberCoin","nodeStart","nodeTarget","callback","audioEngine","play","posStart","posTarget","bezier","_loop_1","i","chip","this_1","v2","x","y","Tween","stopAllByTarget","tween","delay","getChildByName","then","spawn","scaleTo","easing","easeSineInOut","bezierTo","start","hideGameMini","nameGame","showGameMini","obj","showBgMiniGame","gameName","key","gamePlay","to","reOrder","hideBgMiniGame","onEnable","canvasTmp","director","getScene","Node","width","height","addChild","setUpNode","boxPopup","winSize","actChangeAvatar","Login","IsLogin","popupChangeAvatar","loadPrefabPopup","prefab","popupnaprut","actRule","getTextLang","updateConfigGame","domain","API","MONEY_TYPE","LINK_DOWNLOAD","LINK_EVENT","HOST_MINIGAME","host","HOST_TAI_XIU_MINI2","HOST_SLOT","HOST_TLMN","HOST_SHOOT_FISH","HOST_SAM","HOST_XOCDIA","HOST_BACAY","HOST_BAICAO","HOST_POKER","HOST_XIDACH","HOST_BINH","HOST_LIENG","API_AG","API_IBC","API_WM","API_CMD","DOMAIN","actChangePass","popupChangePassword","on","EVENT_HIDE","timeNow","sys","now","localStorage","setItem","EVENT_SHOW","timeHide","parseInt","getItem","getActionManager","update","floor","getInstance","addListener","data","getCmdId","Code","UPDATE_BIGWIN_JACKPOT_SLOT3X3","res","ResNotifyJackpot","showJackpotNotify","UPDATE_BIGWIN_JACKPOT_SLOT3x3GEM","UPDATE_BIGWIN_JACKPOT_MINIPOKER","UPDATE_BIGWIN_JACKPOT_SLOT1","UPDATE_BIGWIN_JACKPOT_SLOT3","UPDATE_BIGWIN_JACKPOT_SLOT4","UPDATE_BIGWIN_JACKPOT_SLOT5","UPDATE_BIGWIN_JACKPOT_SLOT7","UPDATE_BIGWIN_JACKPOT_SLOT8","UPDATE_BIGWIN_JACKPOT_SLOT10","UPDATE_BIGWIN_JACKPOT_SLOT11","updateSize","dataNotify","addJackpot","showLoading","isShow","timeOut","clearTimeout","setTimeout","stopAllActions","runAction","repeatForever","rotateBy","showErrLoading","frameSize","view","getFrameSize","newDesignSize","ZERO","setContentSize","setPosition","getAvatarSpriteFrame","avatar","avatarInt","isNaN","loadScene","sceneName","preloadScene","c","t","openWebView","url","cache","openURL","actLoginCMD","isPlayNow","nn","Nickname","at","AccessToken","err","balance","actPopupGameTransfer","isMobile","ShowAlertDialog","actLoginSBO","API_SBO","gc","isNative","actShowPopupGameSBO","actLoginIBC","IS_PRO","UserType","actLoginWM","showGameLive","typeGame","showGame","actLoginAG","list","actLoginEbet","API_EBET","js","formatStr","actLoginShootFish","mn","removeAllWebView","CACHE_AG","CACHE_IBC","CACHE_WM","openGame","bundleName","loadSceneGame","finish","total","openMiniGameBauCua","prefabName","loadPrefabGame","bundle","baucuaBundle","openMiniGameTaiXiuDouble","openMiniGameTaiXiuSieuToc","checkConnect","openMiniGameTaiXiuMD5","openMiniGameCaoThap","openMiniGameSlot3x3","openMiniGameSlot3x3Gem","openMiniGameMiniPoker","openMiniGameOneTuTi","openTelegram","name","getLinkTelegram","mess","showConfirmDialog","cb","showToast","zIndex","macro","MAX_ZINDEX","set","sineOut","getString","getJPGameID","gameID","getGameName","checkTimeLixi","timeCurent","Date","deltaTime","getFullYear","getMonth","getDate","getTime","deltaHour","hour","deltaMinutes","minutes","addNotify","message","scheduleOnce","actGetEventLixi","ac","actShowPopupEventLixi","type","showpPopup","actShowPopupRuleLixi","AudioClip","Prefab","SpriteFrame","Component","NewClass","hide","onBtnClickBgMini","BgResizer","common","BroadcastListener","action","target","BroadcastReceiver","listeners","unRegisterByAction","unRegisterByTarget","send","listener","Object","UPDATE_NICKNAME_SUCCESS","LOGINED","USER_INFO_UPDATED","USER_UPDATE_COIN","ON_AUDIO_CHANGED","ON_UPDATE_MAIL","MiniGameNetworkClient_1","ButtonMiniGame","labelTime","labelTimePanel","button","buttonAG","buttonTxSieuToc","buttonIBC","buttonWM","panel","container","buttonClicked","buttonMoved","Vec2","buttonClickedAG","buttonMovedAG","buttonClickedIBC","buttonMovedIBC","buttonClickedWM","buttonMovedWM","os","OS_IOS","color","Color","GRAY","interactable","EventType","TOUCH_START","TOUCH_MOVE","event","pos","add","getDelta","abs","getDeltaX","getDeltaY","TOUCH_END","actButton","posX","actButtonAG","actButtonIBC","actButtonWM","UPDATE_TIME_BUTTON","ReceiveUpdateTimeButton","remainTime","toString","hidden","showTimeTaiXiu","angle","actHidden","sineIn","actTaiXiu","actTaiXiuMD5","actTaiXiuSieuToc","actMiniPoker","actSlot3x3","actSlot3x3Gem","actCaoThap","actBauCua","actChimDien","actMaintain","actOanTuTi","QR8bitByte","mode","QRMode","MODE_8BIT_BYTE","getLength","write","buffer","charCodeAt","QRCode","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","addData","newData","isDark","row","col","Error","getModuleCount","make","rsBlocks","QRRSBlock","getRSBlocks","QRBitBuffer","totalDataCount","dataCount","_i","QRUtil","getLengthInBits","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","beginFill","moveTo","lineTo","endFill","getPatternPosition","j","bits","getBCHTypeNumber","mod","_i2","_mod","getBCHTypeInfo","_i3","_mod2","inc","bitIndex","byteIndex","dark","getMask","PAD0","PAD1","_i4","putBit","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","rsPoly","getErrorCorrectPolynomial","modPoly","QRPolynomial","_i5","modIndex","totalCodeCount","_i6","index","_i7","_r","_i8","_r2","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","errorCorrectLength","a","multiply","QRMath","gexp","qrCode","sameCount","_row","_col","count","_row2","_col2","_col3","_row3","darkCount","_col4","_row4","glog","n","LOG_TABLE","EXP_TABLE","_i9","_i10","num","shift","undefined","_i11","e","_i12","ratio","_i13","_i14","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","_i15","bufIndex","_i16","bit","CQRCode","Class","extends","Graphics","properties","notify","oldValue","setContent","backColor","WHITE","foreColor","BLACK","margin","Float","old","_size","value","setString","customData","sender","clear","fillColor","offsetX","anchorX","offsetY","anchorY","rect","fill","close","qrcode","tileW","tileH","w","ceil","h","round","once","EVENT_ENGINE_INITED","_assembler","Attr","setClassAttr","module","requireComponent","CanvasResizer","Canvas","updateCanvas","fitHeight","fitWidth","CanvasUpdateApp","onDisable","CardGameCmd","Network_OutPacket_1","LOGIN","NOTIFY_DISCONNECT","PING_PONG","JOIN_ROOM","RECONNECT_GAME_ROOM","JOIN_ROOM_FAIL","HOLD","MONEY_BET_CONFIG","GET_LIST_ROOM","TOP_SERVER","CHEAT_CARD","PING_TEST","CHAT_ROOM","NO_HU_VANG","THONG_TIN_HU_VANG","REQUEST_INFO_MOI_CHOI","MOI_CHOI","ACCEPT_MOI_CHOI","CREATE_ROOM","JOIN_GAME_ROOM_BY_ID","FIND_ROOM_LOBBY","GET_XOCDIA_CONFIG","CREATE_ROOM_FAIL","SendMoneyBetConfig","initData","setControllerId","setCmdId","packHeader","ResMoneyBetConfig","rules","listSize","getShort","b","maxUserPerRoom","getInt","moneyType","getByte","moneyBet","getLong","moneyRequire","nPersion","SendGetListRoom","maxPlayer","param3","param4","cardFrom","cardTo","putByte","SendJoinRoom","bet","rule","putInt","putLong","SendJoinRoomById","id","putString","ReceivedJoinRoomFail","error","getError","Network_NetworkClient_1","Network_NetworkListener_1","Network_Cmd_1","CardGameNetworkClient","isLogin","onLogined","isUseWSS","USE_WSS","ws","readyState","WebSocket","CONNECTING","isConnected","_connect","onOpen","ev","SendLogin","onMessage","Uint8Array","packet","Int8Array","_length","_data","sendCheck","CardGame_ItemRoom","labelBet","labelPlayers","labelState","itemInfo","initItems","formatGold","players","maxUser","chooseRoom","gameId","handleJoinRoom","price","replace","Clipboards","fallbackCopyTextToClipboard","text","textArea","document","createElement","style","top","left","body","appendChild","focus","select","execCommand","console","log","removeChild","copyTextToClipboard","navigator","clipboard","writeText","copy","str","SPUtils_1","AudioManager","audioSource","isOnMusic","isOnSound","AudioManager_1","addComponent","AudioSource","getMusicVolumn","getSoundVolumn","mute","stopAllEffects","playEffect","audioClip","volumn","playBackgroundMusic","loop","stop","clip","volume","VersionConfig_1","CPSprite","strR99","CPName","sprR99","sprVip52","sprXXeng","sprManVip","Sprite","spriteFrame","ConfirmDialog","lblConfirm","onConfirmClicked","isClickdConfirm","show1","show2","confirmTitle","actConfirm","Dropdown","label","template","options","blocker","dropdownList","animating","findParent","addBlocker","Widget","enabled","scaleY","sequence","easeBackOut","fadeIn","callFunc","scrContent","ScrollView","content","itemTemp","children","setValue","onValueChanged","p","onDestroy","widget","isAlignTop","isAlignBottom","bottom","isAlignLeft","isAlignRight","right","Director","EVENT_BEFORE_SCENE_LOADING","Scene","easeBackIn","delayTime","fadeOut","setOptions","getValue","getLabelString","setOnValueChange","PageView","autoInit","infinity","cancelInnerEvents","spacing","moveOffset","items","pages","indicator","pageCount","center","pageItems","touchMoved","onTouchStart","onTouchMove","onTouchEndOrCancel","onPageChanged","touch","getLocation","sub","getStartLocation","mag","cancelEvent","Event","EventTouch","getTouches","bubbles","TOUCH_CANCEL","dispatchEvent","cbEnd","idx_1","setPageIndex","childrenCount","init","scrollToIndex","moveToLeft","scrollToNextIndex","idx","updateIndicator","TW","Dialog","_this_1","bg","showScale","startScale","setSiblingIndex","fadeTo","backOut","backIn","edits","getComponentsInChildren","EditBox","tabIndex","bind","DropdownItem","checkMark","DropdownItem_1","itemTemplate","childen","onValueChange","getLastZIndex","getData","Utils_1","EditboxFormat","edit","isMutiple","number","onChanged","temp","ToInt","ToVND","isBrowser","onFormatName","formatName","onFormatNameMark","formatNameBank","onEnded","Facebook_1","FBsrv","isLogined","statusResponse","accessToken","FBsrv_1","getInst","inst","_initWeb","OS_ANDROID","_initAndroid","_initIOS","params","appId","FB_APPID","version","webVersion","status","cookie","xfbml","autoLogAppEvents","FB","isUseSDK","callLoginToFB","self","sdkbox","PluginFacebook","isLoggedIn","getAccessToken","login","Appid","sdk","getLoginStatus","authResponse","fbRespone","scope","Scope","response","loginFB","callBack","_loginWeb","sent","_loginAndroid","_loginIOS","Promise","resolve","auth_type","logout","_logoutWeb","_logoutAndroid","_logoutIOS","checkLoginStatus","_checkLoginStatusWeb","_checkLoginStatusAndroid","_checkLoginStatusIOS","setUserAccessTokenFB","getUserAccessTokenFB","appID","AppId","Callback","s","fjs","window","fbAsyncInit","statusChangeCallback","getElementsByTagName","getElementById","src","parentNode","insertBefore","GameData","gameLogic","gameType","moneyBetWinList","moneyBetXuList","configVinList","configXuList","configGameCoVin","configGameCoXu","save_BetVinList","save_BetXuList","xuTopServerWeekListMoney","xuTopServerAllListMoney","vinTopServerWeekListMoney","vinTopServerAllListMoney","xuTopServerWeekListNumber","xuTopServerAllListNumber","vinTopServerWeekListNumber","vinTopServerAllListNumber","topDayVin_money","topWeekVin_money","topMonthVin_money","topDayVin_number","topWeekVin_number","topMonthVin_number","topDayXu_money","topWeekXu_money","topMonthXu_money","topDayXu_number","topWeekXu_number","topMonthXu_number","vinCaoThuList","xuCaoThuList","RoomFind","fundVipMinRegis","ListRoomHavePass","ruleType","openMoiChoi","NumberUpdater_1","GameIconJackpot","arrayLabel","initJackpots","arrayUpdater","forEach","updater","setNumber","updateJackpot","array","delta","len","unscheduleAllCallbacks","Integer","DropDown_1","Tween_1","ItemGameLive_1","ListGame","GameLiveController","boxLeft","boxRight","arrItem","dropFrom","dropTo","editMoney","txtTotalMoney","balanceAG","balanceIBC","balanceWM","balanceSBO","balanceBanca","balanceEBET","totalMoney","Vec3","initDropFrom","initDropTo","Coin","updateTotalMoney","updateData","updateInfoAG","updateInfoIBC","updateInfoWM","updateInfoSBO","updateInfBanCa","updateInfoEBET","isUpdateTotal","maintain","datas","optionString","clearOptionDatas","addOptionDatas","selectedIndex","numberTo","onToggleDropTo","onToggleDropFrom","onBtnConfirm","labelCaption","money","formatEditBox","formatNumber","GameLiveGeneralController","balanceCMD","updateInfoCMD","spriteFrameOn","spriteFrameOff","sprite","SetActive","txtBank","txtBranch","txtName","txtNumber","popupProfile","bankName","branch","customerName","bankNumber","onBtnClick","ShowBoxUpdate","ItemChoseBank","spriteBank","sfBankArray","tabWell","loader","load","bank_logo","texture","newSpriteFrame","imageUrl","ItemGameLive","txtBalance","txtMaintain","nodeBox","ItemIconSlot25","spriteIcon","spineIcon","gamePlayManager","itemId","getSpriteFrameIcon","changeSpriteBlurByItemId","getSpriteFrameIconBlur","changeSpriteRealByItemId","changeSpineIcon","skeletonData","getSpineIcon","sp","Skeleton","Language","isUpperCase","updateText","trim","toUpperCase","LanguageMananger","json","languageCode","texts","LanguageMananger_1","JSON","parse","langCode","setLanguage","hasOwnProperty","TextAsset","sprFrameVi","sprFrameEn","updateSpriteFrame","BannerList","pageView","itemPage","intervalBanner","dataPage","indexPage","getBanner","success","loadListBanner","dataBanner","element","addPage","image_path","loadImgFromUrl","setInterval","scrollToPage","LobbyController","updateSizeListGame","clearInterval","BoxKiemTien","lbTime","isMove","distance","actKiemTien","BoxLixi","setCountDown","getInfo","schedule","timeRemainSec","seccond","REPEAT_FOREVER","ButtonListJackpot","togglesBlind","labelsRangeRover","labelsMayBach","labelsBentley","labelsRollsRoyce","labelsMiniPoker","labelsSlot3x3","animate","selectedIdx","ButtonListJackpot_1","toggleShowPanel","toggleItems","setData","lastRes","duration","khoBau100","NDV100","Avengers100","Vqv100","miniPoker100","pokeGo100","khoBau1000","NDV1000","Avengers1000","Vqv1000","miniPoker1000","pokeGo1000","khoBau10000","NDV10000","Avengers10000","Vqv10000","miniPoker10000","pokeGo10000","ToggleContainer","Lobby","CardGame_Cmd_1","TienLen_Cmd_1","TienLen_GameLogic_1","CardRoom","roomContent","roomItem","networkClient","handleRoomRespone","JOIN_ROOM_SUCCESS","ReceivedJoinRoomSuccess","initWith","AUTO_START","ReceivedAutoStart","autoStart","initRooms","rooms","client","removeAllChildren","room","txts","ProgressBar","progress","roomIndex","cmd","NOTIFY_MARQUEE","INSERT_GIFTCODE","DEPOSIT_CARD","CHECK_NICKNAME_TRANSFER","SUBCRIBE_HALL_SLOT","UNSUBCRIBE_HALL_SLOT","UPDATE_JACKPOT_SLOTS","SPIN_LUCKY_WHEEL","GET_SECURITY_INFO","CHANGE_EMAIL","UPDATE_USER_INFO","GET_OTP","SEND_OTP","GET_LIST_QUEST","RECEIVE_LIST_QUEST","RESULT_ACTIVE_MOBILE","RESULT_ACTIVE_NEW_MOBILE","RESULT_CHANGE_MOBILE_ACTIVED","ACTIVE_PHONE","CHANGE_PHONE_NUMBER","TRANSFER_COIN","RESULT_TRANSFER_COIN","SAFES","RESULT_SAFES","CHANGE_PASSWORD","RESULT_CHANGE_PASSWORD","EXCHANGE_VIP_POINT","RESULT_EXCHANGE_VIP_POINT","UPDATE_JACKPOTS","SUBCRIBE_JACPORTS","UNSUBCRIBE_JACPORTS","GET_MONEY_USE","DEPOSIT_BANK","DEPOSIT_MOMO","LOGOUT","CASHOUT_CARD","CASHOUT_BANK","CASHOUT_MOMO","TX_SCRIBE","TX_GAME_INFO","TX_UPDATE_INFO","TX_SCRIBE_MD5","TX_GAME_INFO_MD5","TX_UPDATE_INFO_MD5","GET_LIST_BANK","bettingState","getBool","ReqInsertGiftcode","code","ResInsertGiftcode","currentMoneyVin","currentMoneyXu","moneyGiftCodeVin","moneyGiftCodeXu","ReqDepositCard","telcoId","serial","amount","ReqDepositBank","ResDepositBank","currentMoney","timeFail","numFail","ReqDepositMomo","phoneSent","ResDepositMomo","ResDepositCard","ReqCheckNicknameTransfer","nickname","ResCheckNicknameTransfer","fee","ReqSpinLuckyWheel","ResSpinLuckyWheel","prizeVin","prizeXu","prizeSlot","remainCount","ReqGetSecurityInfo","ResGetListQuest","bf","ResReceiveListQuest","isSuccess","ResGetSecurityInfo","username","cmt","email","mobile","isVerifyPhone","usertype","refferalCode","mobileSecure","emailSecure","appSecure","loginSecure","moneyLoginOtp","moneyUse","safe","configGame","address","birthday","gender","ReqUpdateUserInfo","mail","refCode","ResUpdateUserInfo","ReqGetOTP","ResGetOTP","ReqSendDiemDanh","otp","ReqGetListQuest","ReqReceiveQuest","ReqSendOTP","ResSendOTP","ResResultActiveMobie","ResResultActiveNewMobie","ReqChangePhoneNumber","phoneNumber","ResChangePhoneNumber","ReqActivePhone","ResActivePhone","ReqTransferCoin","coin","note","unescape","encodeURIComponent","ResTransferCoin","ResResultTransferCoin","ReqSafes","ResSafes","ResResultSafes","ReqChangePassword","oldPassword","newPassword","md5","ResChangePassword","ResResultChangePassword","ReqExchangeVipPoint","ResExchangeVipPoint","ResResultExchangeVipPoint","moneyAdd","ResNotifyMarquee","betValue","totalPrizes","timestamp","ReqSubcribeJackpots","ReqUnSubcribeJackpots","ResUpdateJackpots","fish100","fish1000","spartan100","spartan1000","spartan5000","spartan10000","ReqGetMoneyUse","ResGetMoneyUse","ReqSubcribeHallSlot","ReqUnSubcribeHallSlot","ResUpdateJackpotSlots","pots","ReqCashoutCard","quantity","ResCashoutCard","listCard","ReqCashoutBank","bankActName","ResCashoutBank","ReqCashoutMomo","ResCashoutMomo","ReqChangeEmail","ResChangeEmail","ResLogin","loginData","SendScribe","putShort","GameId","TaiXiu","TXGameInfo","referenceId","potTai","potXiu","betTai","betXiu","dice1","dice2","dice3","remainTimeRutLoc","jpTai","jpXiu","TXUpdateTime","numBetTai","numBetXiu","ReqDepositMomoQR","ResDepositMomoQR","SendScribeTxMd5","ReqListBank","ResListBank","list_bank","actThamGia","ItemGameType","ItemGame","OTHER","commingSoon","nodeIcon","animIcon","animHot","listLbJP","InitScale","isInitFakeJP","setInfo","dataGame","reset","CARD","SLOT","MINI","clickEvents","customEventData","BundleLobby","SkeletonData","skeData","setAnimation","startEff","gameJP","dataJP","itemJP100","create","itemJP1000","itemJP10000","x2","setJackpot","tabsListGame","isShowStartEff","l","Enum","GameIconJackpot_1","Lobby_ItemGame_1","ItemSlotGame","gameIconJackpot","lblJackpots","fakeJackpot","nodeX2","jackpot0","jackpotMax0","jackpot1","jackpotMax1","jackpot2","jackpotMax2","updateNext0","updateNext1","updateNext2","labelName","icon","spriteFrames","iconX","spriteFramesX","SetData","valueX","gamename","ChangeIcon","gameid","Tophudata","value100","value1000","value10000","valueX100","valueX1000","valueX10000","Lobby_TabsListGame_1","Lobby_ItemTopHu_1","LogEvent_1","Common_AudioManager_1","SamNetworkClient_1","TienLenNetworkClient_1","TienLen_Room_1","Lobby_BannerList_1","Lobby_BoxLixi_1","PanelMenu","toggleMusic","toggleSound","setMusicVolumn","isChecked","setSoundVolumn","toggle","Toggle","nodeTop","nodeBot","nodeCenter","txtMail","txtMailz","panelNotLogin","panelCSKH","bottomBarLeft","bottomBarRight","layoutBtnLeft","layoutLbLeft","layoutBtnRight","layoutLbRight","panelLogined","panelMenu","sprAvatar","lblNickname","lblVipPoint","sliderVipPoint","lblVipPointName","spriteProgressVipPoint","lblCoin","txtNotifyMarquee","bgNotify","boxLixi","clickSfx","bannerList","popupGiftCode","popupTransaction","popupTopHu","popupSecurity","popupKiemTien","popupDiemDanh1","popupRefund","popupEventTT","popupMail","popupDiemDanh","popupDaily","Popupnaprut","popupRegister","poupLogin","popupForgetPassword","popupTaiApp","popupShop","popupCashout","clipBgm","listData100","listData1000","listData10000","dataAlertMini","fakeJPInv","lblTai","lblXiu","isShowCSKH","LobbyController_1","serverVersion","btnLoginFb","isShowBtnFb","initPluginFacebook","buttonjb","actTopHu","tileScreen","sendEventOpenApp","actLoginToken","AccessTokenFB","FacebookID","actLogin","updateMail","Avatar","VipPoint","getVipPointNextLevel","fillRange","getVipPointName","j100","randomRangeInt","j1000","j10000","updateItemJackpots","createListdata","getServerConfig","addOnClose","setupListener","spacingX","DUAXE","BITCOIN","THANTAI","CHIMDIEN","BIKINI","THETHAO","CHIEMTINH","THANBAI","initFakeJP","reConnectGame","res_1","resJson","notifyMarquee","showAlertMiniGame","res_3","isLoginFromOtherPlaces","isForceClose","removeItem","setUserName","setUserPass","res_5","chipEnd","res_6","handleUpdateJP","DataJackpots","spartan","audition","chiemtinh","maybach","tamhung","rangeRover","benley","bikini","galaxy","minipoker","rollroye","caothap","pokego","jackpotID","txtFormat","acMove","by","acCheck","setListener","onLogin","initPluginFirebase","firebase","Analytics","AccessToken2","u","SessionKey","userInfo","base64","decode","Username","Password","password","getUserPass","IpAddress","CreateTime","Birthday","VipPointSave","loginMiniGameSockJs","checkDiemDanh","checkListBankRut","PopupRegister","actDiemDanh1","dataLogin","getUserName","rememberMe","post","HOST_SOCKJS","id_token","AccessTokenSockJs","connect","actMenu","actComingSoon","uname","pass","remember","un","pw","postz","resv2","Token","sendEventClickShop","sendEventSdt","sendEventPurchase","sendEventSigupSuccess","sendEventLogin","Address","userID","actLoginFB","actShareFbLink","link","ui","display","method","href","caption","showFb","atcPopupUpdateNickName","actLoginRegister","even","actLoginPopup","popupLogin","actDaiLy","actTransaction","actForgetPassword","actTaiApp","actnaprut","actGiftCode","actPromotion","actRefund","actSecurity","actShowBanner","popupBanner","actVQMM","actInstall","actEvent","actDownload","actFanpage","getLinkFanpage","actGroup","LINK_GROUP","actTelegram","getLinkTelegramGroup","actAppOTP","actCSKH","scaleX","actKhuyenMai","actDiemDanh","actOpenFB","actOpenMessager","actOpenZalo","actOpenLive","actOpenHotLine","actSupportOnline","actBack","isConfirm","actSwitchCoin","actGameTaiXiu","actGameTaiXiuSieuToc","isOpenGame","actGetEventMoon","lstMoonEvents","actShowPopupEventMoon","actGameBauCua","actGameCaoThap","actGameSlot3x3","actGameSlot3x3Gem","actGameMiniPoker","actGameTaLa","actGoToSlot1","actGoToSlot2","actGoToSlot3","actGoToSlot4","actGoToSlot5","actGoToSlot6","actGoToSlot7","actGoToSlot8","actGoToSlot10","actGoToSlot11","actDev","ListBankRut","actGoToShootFish","actGoToOanTuTi","actGotoLoto","actGoToXocDia","actAddCoin","actCashout","showTabBank","onBtnShowProfile","actProfile","accExchange","actGoToTLMN","IS_SOLO","actGameTLMNSolo","actGoToSam","actGoToMauBinh","actGoToBaCay","actGoToLieng","actGoToPoker","actGoToBaiCao","actGoToGame3Rd","actGameTaiXiuMd5","isHaveBanner","checkAppVersion","VERSION_APP","Layout","Slider","RichText","PopupBoomTan","sfRanks","sfGifts","loadData","itemData","sfGift","getGiftSpriteFrame","lblScore","fromHEX","actTheLe","PopupCardInfo","itemFactorTemplate","contentItem","_nodeTemplate","tabSelectedIdx","setListItem","listItem","itemArray","Telco","Number","Amount","PinCode","Serial","TabBank","boxRut","dropdownBank","edbAmount","edbBankNumber","edbBankAccountName","_listBank","minCashout","maxCashout","isAllowCashout","onChoseBank","indexBank","onAddBank","submit","ddBank","TabMomo","edbPhone","ratio_cashout_momo","cashout_momo_min","cashout_momo_max","is_cashout_momo","amountChange","PopupCashout","tabContents","lblContainsBotOTPs","tabBank","lbl","onTabChanged","onBtnChoseBank","onBtnAddBank","longToTime","actGetOTP","actSubmitNapNganHang","PopupChangeAvatar","actSubmit","PopupChangePassword","info","continue","edbOldPassword","edbNewPassword","edbReNewPassword","edbOTP","reNewPassword","actContinue","TabCashIn","lblBalance","edbCoin","quickButtons","popup","values","stringToInt","btn","Game","token","SessionKeyV8","CoinV8","TabCashOut","_loop_2","this_2","PopupChangerCoin","tabs","tabCashIn","tabCashOut","_loop_3","this_3","LabelOutline","actSubmitCashIn","actSubmitCashOut","actSubmitGo","actClearCashOut","PopupConfirmTransfer_1","ScrollViewControl_1","TYPE_SEARCH","NICKNAME","SDT","REGION","PopupDaiLy","listAgency","listBank","listSearchAgency","typeSearch","scrAgency","scrBankList","edbSearch","edbMoney","edbTransID","lbChipReceive","lblPage","popupBankInfo","popupConfirm","dropBankUser","nodeBankUser","nodeBankAgency","dropBankAgency","nodeTransfer","nodeHistory","lbNameAgency","lbNickname","toggleDropBankUser","toggleDropBankAgency","toggleCashIn","toggleCashOut","itemHistoryContainer","tab","currentDataDaily","currentBankDaily","currentDataUser","page","maxPage","check","onChangeTab","onBtnCopy","API2","setDataList","setDataItem","setInfoDropBankUser","setDataItemBank","slice","onClickItemAgency","rank","dataAgency","listBankAgency","setInfoDropBankAgency","onClickItemDetail","idAgency","scrollView","onClickSearch","keySearch","toLowerCase","paramsSearch","includes","onClickTypeSearch","onEdbChange","onClickFacebook","fbLink","onClickTelegram","tlLink","edbChanged","actBankUpdate","onClickConfirm","agencyName","transactionID","generateTransMsg","dataCashIn","setInfoCashIn","dataCashOut","setInfoCashOut","itemBank","isValid","onClickItemBankUser","onClickItemBankAgency","loadDataHistory","tt","mi","setHistory","formatMoney","YELLOW","GREEN","RED","CYAN","actNextPage","actPrevPage","PopupDiemDanh1","animBox","animChip","animGlow","listDot","listBgConsecutive","listLbBonus","animDice1","animDice2","animDice3","sprDice1","sprDice2","sprDice3","sprProgress","lbRewardNormal","lbBonusDiemDanh","lbBonusVip","lbTotal","lbResultDice","btnSpin","PopupGuide","listSprDice","listFillRange","listPosChip","currentProgress","setCompleteListener","dataHis","onClickReceive","setResult","split","listDice","paused","Animation","effLabelResult","effLb","clone","timeEff","onClickGuide","PopupEventLogin","actOpen","PopupForgetPassword","edbUsername","edbCaptcha","sprCaptcha","toggleAppOTP","actRefreshCaptcha","captchaId","loadSpriteFrameFromBase64","sprFrame","captcha","cp","cid","PopupGameSBO","onClickGame","onClickBack","NapAG","NapIBC","NapSBO","NapWM","NapEBET","napFish","minAmount","lblTitleBalance","currentBalance","RutAG","RutIBC","RutSBO","RutWM","RutEBET","RutFish","Balance","PopupGameTransfer","txtTitle","CoinFish","actClearCashIn","actPlayNow","PopupGiftCode","edbCode","giftcode","errorCode","UtilsNative_1","PopupKiemTien","btnConfirm","edbInviteCode","lbInviteCode","lbTotalUser1","lbTitleInvite","lbBonus1","lbUrlInvite","lbTotalPage_tabList","lbTotalPage_tabHistory","NodeInfo","NodeListUser","NodeHistory","NodePolicy","btnReceive","toggleInfo","nodeTabContainer","scrListUser","scrListHistory","totalPage","tab_popup","status_history","historyData","uncheck","location","indexOfEqual","indexOf","inviteCode","substring","getInfoAll","pg","resetTab","onGetListUser","onGetHistory","onToggleChangeTabSumary","currentTime","day","month","year","fromTime","endTime","onGetSumary","ft","et","listUser","dataUser","st","listHistory","dataHistory","off","onChangeStatusHistory","onClickNext","onClickPrevious","onClickReceiveAll","onClickCopyInviteLink","copyClipboard","onClickUpdateInviteCode","inv","PopupLuckyWheel","wheel1","wheel3","lblCount","spinCount","LuckyWheel","msg_1","rotateToIdx1","rotateToIdx3","rotateTo","actSpin","TabProfile","lblChip","lblEmail","lblGender","lblBirthday","lblVipPointPercent","lblPhone","lblAddress","lblRefcode","lblVipName","spriteAvatar","PopupUpdateInfo","edbMail","edbAddress","edbBirthday","edbRefCode","toggleContainer","refcode","Mail","Gender","onClickUpdate","onClickGender","TabVip","lblTotalVipPoint","lblVipPointNextLevel","getVipPointInfo","VipPoints","getVipPointIndex","vipPointIdx","vipPointNextLevel","vipPointStartLevel","editBank","editName","editNumber","editBranch","dropBank","prefabItem","lbNote1","boxList","boxListEmpty","boxUpdate","editNameUpdate","editNumberUpdate","editBranchUpdate","dropBankUpdate","popupAddBank","idBankChosing","dropBankComp","dropBankUpdateComp","onClickBank","loadBankList","GetListBankProfile","showPopupAddBank","closeTabAddBank","bank","sort","txtNote1","nodeItem","CreateBank","loadBankUpdateList","dataItem","onChangeEditBank","onBtnChoseItemBank","onChangeEditNumber","formatNumberBank","onChangeEditNumberUpdate","onChangeEditBranch","onChangeEditBranchUpdate","onChangeEditName","onChangeEditNameUpdate","HideBoxUpdate","UpdateBank","PopupProfile","tabProfile","tabVip","popupUpdateInfo","actCloseUpdateInfo","enableItalic","enableUnderline","msg1","onBtnChangePass","onBtnRefund","onClickAddress","actUpdateInfo","actSendUpdateInfo","actChangeUserInfo","actChooseGender","actChoseItemBank","actEditBank","actEditNumber","actEditNumberUpdate","actEditBranch","actEditBranchUpdate","actEditNameBank","actEditNameBankUpdate","actHideUpdateBank","actHideAddBank","actUpdateBank","actCreateBank","actAddBankAccount","actShowAddCoin","PopupRefund","fonts","lbSport","lbCasino","lbGameLot","lbInfomation","currentItemRefund","today","dayRefund","date","lbChip","totalRefund","font","fontSize","Font","PanelSmsPlus","infoLblUsername","infoLblPhoneNumber","infoBtnActive","infoBtnChange","updateBtnsActive","updateBtnsNotActive","updateEdbPhoneNumber","continueEdbOTP","btnGetOTP","TabSafes","lblBalanceSafes","edbCoinNap","edbCoinRut","PopupSecurity","panelSmsPlus","tabSafes","tabTeleSafe","edbTeleSafe","sessionInfo","captchaToken","isMobileSecure","showSmsPlusContinue","actSmsPlusActivePhone","actSmsPlusInfo","actSmsPlusUpdate","actSmsPlusSubmitUpdateUserInfo","actGetToken","actTeleSafe","actSmsPlusSubmitUpdatePhoneNumber","actSmsPlusSubmitContinuePhoneNumber","codeOTP","verifyOTP","actConfirmOtp","actSubmitSafesNap","actSubmitSafesRut","submitPhoneNumberAuth","verifyPhone","actGetOtpServer","pn","cpt","httpGet","actGetVerifyCode","isValidOpt","dataRes","confirmationResult","confirm","result","user","catch","setupRecaptcha","recaptchaVerifier","auth","RecaptchaVerifier","phoneNum","appVerifier","signInWithPhoneNumber","onFinished","xhr","XMLHttpRequest","onreadystatechange","responseText","ex","open","dropDownBox","lbCurrentLang","showDropDown","onClickChangeLanguage","TabTransfer","panelContent","panelContinue","lblFee","lblReceive","lblDaiLy","lblNote","edbNickname","edbReNickname","edbCoinTransfer","edbNote","ratioTransfer","SERVER_CONFIG","receiverAgent","reNickname","PopupShop","tabTransfer","inpacket","tabNapThe","resetForm","tabCard","tabBitCoin","showAndOpenTransfer","actContinueTransfer","actSubmitTransfer","actSubmitNapMomo","tabMomo","actSubmitCard","PopupTaiApp","qr_android","qr_ios","qr_android_lote88","qr_ios_lote88","qr_android_lot79","qr_ios_lot79","actTaiApk","actTaiIos","Dropdown_1","Clipboards_1","TabBanks","lblBankNumber","lblBankAccountName","lblTransNote","btnCopy","btnCopyND","nodethongtin","nodenap","lblbanknganhang","lblmoney","lblnganhangname2","qrCodeImage","Getbank","isArray","selectedBank","warn","copyToClipboard","onClickCopyBankNumber","onClickCopyBankContent","updateQRCode","bankId","accountNo","accountName","amountStr","parseFloat","description","qrCodeUrl","onBtnXacNhan","request","fn","am","pt","bc","ds","bn","dataObject","timeToExpired","phoneName1","account_name","account","bankPorvider","bank_code","bankCode","formatMoney2","MiniGameNetworkClient2_1","TabNapThe","dropdownTelco","dropdownAmount","edbSerial","listMenhGiaNapThe","menhGia","nhan","ratioNapThe","concat","listTenNhaMang","listMenhGia","ddTelcoValue","ddAmountValue","listIdNhaMang","actSubmitNapThe","PopupTopHu","scrList","sprIconGame","sprXHu","selectedJpValue","currentList","dataHu","topHu100","getSprIcon","sprIcon","actChangeAmount","actGoToGame","TabMenuGame","find","onBtnTabSlot","onBtnTabMini","PopupTransaction","contentNapRut","itemNapRut","tabPlay","tabNapRut","fontNumber","dataPlay","dataCashout","dataExchange","currentData","totalPageLoaded","GameName","110","170","2","5","11","160","120","150","1","3","9","4","191","190","12","180","197","198","scrollViewEventHandler","EventHandler","component","handler","updateTabsTitleColor","resetDataLoaded","parseDescriptionJson","desJson","loadPage","indexData","itemData_1","IsJsonString","loadCard","convertNameThirdParty","isReloadScr","mt","transactionData","__spread","time","transTime","encodeURI","popupCardInfo","stringify","serviceName","onScrollEvent","scrollview","eventType","SCROLL_TO_BOTTOM","BitmapFont","onClickNap","onClickRut","Tab","sfNormal","sfActive","TabsListGame","itemGames","contentIconGame","seletectIdx","scrListGame","updateAlignment","changeTabGame","scrWidth","getItemGameWithId","arr","x2J100","x2J1000","itemGame","HandlerButton_1","btn100","btn1000","btn10000","animTopHu","nodeHu","onBtn100Clicked","onBtn1000Clicked","onBtn10000Clicked","onClickTopHu","Onshow","ShowData","listdata","itemtophu","LobbyChoseBank","nodeContent","lbTitle","banks","isWithDraw","stat","dataBank","onBtnExit","BaseTabShop_1","NAME_TABS","paywell","royalpay","princepay","clickpay","payasec","chuyenkhoan","napthe","manualbank","gift","LobbyShop","btnTabs","indexTabCurrent","ListPayment","showTabsAlive","isFind","providerConfig","providerName","onBtnChoseTab","baotri","nameTab","dataTab","lobby","MiniGame","MiniGameNetworkClient2","intervalPing","onError","HOST_MINIGAME2","port","ping","onClose","OPEN","MiniGameNetworkClient","TYPE_OBJECT","MultiLanguage","TYPE","LABEL","isAddColon","BundleName","skeletonNode","animationName","updateLanguage","SPRITE","updateSprite","SKELETON","updateSkeleton","visible","String","MutipleJackpot","lbJackpot","sprBg","Bg","position_lb_ANGRY","position_lb_BITCOIN","position_lb_CHIEMTINH","position_lb_EURO","position_lb_THANTAI","position_lb_DUAXE","position_init","listPosLb","dataJPGame","gametype","putData","InPacket","_pos","_controllerId","_cmdId","_error","parseByte","getControllerId","getBytes","getUnsignedShort","byteArrayToLong","getDouble","ArrayBuffer","DataView","getFloat64","getCharArray","fromCharCode","decodeURIComponent","escape","clean","NetworkClient","isAutoReconnect","retryCount","_onOpenes","_onCloses","raw","binaryType","onopen","onmessage","onerror","onclose","addOnOpen","PacketHeaderAnalyze_1","OutPacket","_capacity","_isPackedHeader","cmdId","controllerId","genHeader","putUnsignedShort","putByteArray","putBytes","putDouble","_stringConvertToByteArray","updateUnsignedShortAtPos","INDEX_SIZE_PACKET","SockJS","Stomp","SockJsClient","stompClient","apiSub","retrySubCount","listSubChannel","over","headers","Content-Type","Authorization","onConnected","subscribe","onCustomMessage","reconnect","destination","unSubscribe","idSub","unsubscribe","checkSubChannel","isSub","NodeScaler","fitX","fitY","getCanvas","frameScale","designScale","setScale","NumberUpdater","step","_currentNumber","_formatFunc","preprocessingMoney","defineProperty","updateLabel","money1","preprocessingString","formatFunc","stepTime","currentNumber","interval","repeat","distNumber_1","Network","PacketHeaderAnalyze","getDataSize","isBigSize","getIntAt","BYTE_PACKET_SIZE_INDEX","getUnsignedShortAt","getCmdIdFromData","getShortAt","getBit","BIT_IS_BIG_SIZE_INDEX","isCompress","BIT_IS_COMPRESS_INDEX","getValidSize","BIG_HEADER_SIZE","NORMAL_HEADER_SIZE","setBit","BIT_IS_BINARY_INDEX","BIT_IS_ENCRYPT_INDEX","BIT_IS_BLUE_BOXED_INDEX","PopupConfirmTransfer","lbUserBankName","lbAgencyBankName","lbUserAccountName","lbBankNumber","lbAmount","lbContent","titleContainer","abn","PopupEventTT","listBtn","dataEvent","listPackage","onClick","nameCake","PopupEvent","animLixi","nodeResult","nodeRule","nodeItemContainer","lbMoney","animResult","indexItem","itemReceive","edbPassword","nodeRemember","toggleRemember","edbCodeDaiLi","edbRePassword","txtCodeCheck","btnRegister","btn_refresh","refreshCaptcha","AGENCY_CODE","actCheckCodeDaiLi","repParams","actRegister","rePassword","reqParams","PopupUpdateNickname","nodeNotiTele","nodeChangeNickName","actUpdate","eventHandler","showPopupNotiTele","PopupWebView","webView","boxNode","setMusicVolume","onBtnThuNho","WebView","Random","range","rangeInt","RestApi","CallGet","api","callbackSuccess","getXMLHttpRequest","CallPost","setRequestHeader","SPUtils","encode","k","enc","defaultValue","keyEncrypted","valueEncrypted","setAccessTokenFB","getAccessTokenFB","jsb","input","setAccessToken","setNN","getNN","SamCmd","Sam_Constant_1","QUICK_ROOM_SUCCEED","QUYET_DINH_SAM","DANH_BAI","START_GAME","END_GAME","CHIA_BAI","BO_LUOT","FIRST_TURN","BAO_SAM","UPDATE_GAME_INFO","REQUEST_LEAVE_ROOM","CHANGE_TURN","CHAT_CHONG","HUY_BAO_SAM","USER_LEAVE_ROOM","NOTIFY_KICK_OFF","USER_JOIN_ROOM","UPDATE_MATCH","WAIT_4_DOI_THONG","SendTest","SendReconnectRoom","SendReadyAutoStart","SendStartGame","SendPing","SendDanhBai","SendBoLuot","SendRequestLeaveGame","SendBaoSam","SendHuyBaoSam","myChair","roomOwner","roomId","playerSize","playerStatus","playerInfos","gameAction","handCardSizeSize","handCardSize","currentChair","countDownTime","nickName","ReceivedDisconnect","ReceivedUpdateGameInfo","cards","baoSam","boLuot","toiTrang","newRound","gameServerState","activeTimeRemain","recentCards","hasInfoList","isAutoStart","autoStartTime","ReceivedChiaBai","cardSize","timeBaoSam","ReceivedDanhBai","chair","numberCard","ReceivedBoluot","ReceivedChangeTurn","chairLastTurn","ReceivedWaitBonDoiThong","ReceivedEndGame","winTypes","ketQuaTinhTienList","sizeWinType","kqTinhTienSize","countDown","Config","MAX_PLAYER","ReceivedFirstTurnDecision","isRandom","ReceivedChatChong","winChair","lostChair","winMoney","lostMoney","winCurrentMoney","lostCurrentMoney","ReceivedPingPong2","UserLeaveRoom","ReceiveUserJoinRoom","uChair","uStatus","ReceivedUpdateMatch","hasInfo","infos","ReceiveSamConfig","ReceivedNotifyRegOutRoom","outChair","isOutRoom","ReceivedKickOff","reason","ReceivePingPong","ReceiveBaoSam","ReceiveHuyBaoSam","ReceivedQuyetDinhSam","isSam","ReceivedChatRoom","isIcon","decodeURI","SendChatRoom","SamConstant","GameState","NONE","AUTOSTART","JOINROOM","FIRSTTURN","CHIABAI","CHANGETURN","USERJOIN","DANHBAI","BOLUOT","QUIT","USERLEAVE","ENDGAME","UPDATEMATH","UPDATEOWNERROOM","PLAYCONTINUE","CHATCHONG","JACKPOT","REASONQUIT","NOTIFYOUTROOM","WAITBONDOITHONG","MAX_CARDS","SortType","kSortTangDan","kSortGroup","kSortUnkown","PlayerType","MY","ENEMY","STATENONE","STATEVIEWING","STATEBAOSAM","Sam_Player_1","Sam_Cmd_1","Sam_Room_1","TienLenz_InGame_1","SamInGame","SamInGame_1","initRes","actLeaveRoom","userLeaveRoom","convertChair","setLeaveRoom","refreshRoom","chiaBai","setActiveButtons","setTimeRemain","sendSubmitTurn","cardSelected","sendPassTurn","actBaoSam","actHuyBaoSam","onBaoSam","setStatus","onHuyBaoSam","onQuyetDinhSam","notifyUserRegOutRoom","setNotify","playerChat","seatId","showChatEmotion","showChatMsg","playerChatChong","seatIdWin","seatIdLost","setCoinChange","setCoin","showPopupGuide","popupGuide","closePopupGuide","showUIChat","UI_Chat","closeUIChat","chatEmotion","chatMsg","edtChatInput","override","TienLen_Playerz_1","SamPlayer","setCardRemain","Sam_InGame_1","TienLen_Resz_1","Room","ingameNode","lbCoin","ingame","listRoom","Room_1","updateGameInfo","onUserJoinRoom","firstTurn","changeTurn","submitTurn","passTurn","endGame","updateMatch","names","actQuickPlay","SamNetworkClient","DIRECTION","HORIZONTAL","VERTICAL","ScrollViewControl","direction","itemNodeTemplate","itemHeight","itemWidth","initCount","bufferZone","isLazyInit","updateTimer","updateInterval","lastContentPosY","lastContentPosX","initHeight","listItemRemove","idKeys","updateCallback","setDataCb","listItemData","initialize","_updateCallback","_listItemData","itemID","updateDataList","dt","isDown","viewPos","setStateItem","state","NotifyListener","RequestListener","NetworkListener","ShootFishNetworkClient","onOpenes","onCloses","xorKey","requests","isLogining","ShootFishNetworkClient_1","serverCurrentTimeMillis","TIME_DISTANCE","MIN_PING","systemCurrentTimeMillis","platform","getPlatformName","UsernameFish","PasswordFish","UserIdFish","FishConfigs","NODE_FIXED","doXOR","pack","msgpack","source","end","charAt","Function","route","reqId","msgId","PING","SlotNetworkClient","TX2NetworkClient","listTab","listToggle","listAllGame","listLiveGame","listSlotGame","listCardGame","listMiniGame","listGameSport","tabListGame","startIdxs","getSiblingIndex","onBtnTabAll","onBtnTabSport","onBtnTabLive","onBtnTabCard","onBtnTabFish","TabPopupBank","lblBankAddress","listBank_1","setCallBack","bankAddress","bankAccountName","bankSelected","TabTopupPaywell_1","TabTopupCard","toggleChuyenKhoan","toggleSieutToc","showPayTypes","showTab","dataProvider","LobbyChoseBank_1","TabTopupChuyenKhoan","lobbyChoseBank","btnChoseBank","sfChoseBank","btnXacNhan","nodeArrow","dropCard","dataBankChosing","showBankChosing","onFormatNumber","payurl","redirect_url","ClickPayPayment","TabTopupChuyenKhoan_1","TabTopupSieuToc_1","TabTopupClickPay","tabChuyenKhoan","tabSieuToc","payType","payTypeKey","TabTopupGame","TabTopupGameBank","nodeInfoTransfer","edbAccountName","edbMoneyAmount","transMsg","TabTopupManualBank_1","TabTopupManualMomo_1","TabTopupManualZalo_1","toggleZalo","toggleMomo","lbContentBanking","tabManualMomo","tabManualZalo","payTypesAlive","editBankNumber","TabTopupManualBank","nodeInput","nodeInfoTrans","lbTransMsg","lbBankAccount","lbBank","placeholder","onEdbBankNumberChange","TapTopupManualMomo","btnCopystk","btnCopynoidung","nodeQR","momoConfig","_momoConfig","accountNumber","TapTopupManualZalo","list_bank_auto","TabTopupMomo","TabTopupNapThe","lbFree","listRateCard","loadCardList","cardPin","seri","sn","tc","displayName","TabTopupNapThe_1","TabTopupPaywell","TabTopupMomo_1","TabTopupSieuToc_2","TaiXiuSTNetworkClient","SOCKJS_LOGIN","TXST_SUB_TOPIC","TaiXiuSieuTocController","gameSubscribeId","sendBet","sendChat","getChatHistory","getHistorySession","getHistory","requestAPI","getHistorySessionId","sessionid","getTopHonor","CardGroup","cardsBySuits","sortCards","Map","_cardsBySuits","card","getOrderedBySuit","newMap","orderedCards","newMap_1","__values","newMap_1_1","next","done","_f","__read","delete","newMap_2","newMap_2_1","_g","_key","getNextKey","__key","_value","__value","___key","___value","newMap_3","newMap_3_1","_h","sequenceSuites","getFirstSequenceSuit","keys","newMap_4","newMap_4_1","_j","newMap_5","newMap_5_1","_k","getCardType","mapSize","getSuitableCards","submitCards","submitCardType","maxSubmitCard","getMaxCardOfCards","point","newMap_6","newMap_6_1","newMap_7","newMap_7_1","newMap_8","newMap_8_1","newMap_9","newMap_9_1","_l","newMap_10","newMap_10_1","_m","newMap_11","newMap_11_1","_o","maxCard","newMap_12","newMap_12_1","_p","getSequenceSuitBySize","getSuggestionNoCards","listSelected","isCheck","listSuggestion","get_TU_QUY","get_BON_DOI_THONG","get_BA_DOI_THONG","get_SAM_CO","getSuggestionCards","newMap_13","newMap_13_1","_d","newMap_14","newMap_14_1","_e","newMap_15","newMap_15_1","_c","listTmp","listSg","findIndex","e2","face","i_1","tmp","listTmp_1","_index","tmp_1","indexToCard","filter","state_1","listTmp2","cardRank","state_2","_loop_4","state_3","_b","subCards","found","sortSuits","suits","minCount","_suits","curr","getFirstSequenceSuitBySize","map","listCards","indexsToCards","indexs","cardsToIndexs","cardToIndex","TienLen_Res_1","Card","spr","posY","isSelected","onSelect","setCardData","getCardFace","getCardIndex","deSelect","TienLenCmd","TienLen_Constant_1","THANG_TRANG","uID","TienLenConstant","GameData_1","TienLen_Player_1","TienLenGameLogic","roomOwnerID","roomLock","roomJackpot","gameState","typeToiTrang","timeAutoStart","cardChiabai","cardDanhBai","firstTurnCards","changeTurnChair","activeLocalChair","cardSizes","initReconnect","roomBet","Log","chairInServer","chairLocal","remainCard","numberPlayer","userJoinRoom","updateOwnerRoom","chiabai","danhbai","boluot","notifyOutRoom","changeturn","waitBonDoiThong","quitRoom","chatchong","baosam","huybaosam","quyetdinhsam","jackpot","userLeave","updateMath","ownerChair","TYPECARD","TYPE_WIN","STATE_GAME","audio_clip","TienLen_Card_1","TienLen_CardGoup_1","TienLen_PopupHistory_1","InGame","history","nodeSetting","contentChatNhanh","bgChat","boxSetting","lbRoomId","lbRoomBet","lbTimeCountDown","cardLine","cardItem","board","btnsInGame","lblToast","popupResult","scrollPopupResult","contentPopupResult","prefabPlayerResult","fxWhoPlayFirst","animWin","dataAnimChatHai","animBeat","animToiTrang","animBeatTypeCard","soundManager","dataFirstTurn","dataChiaBai","state_game","WAITING","cardsOnHand","buttons","sortBySuit","currTurnCards","curCardOnBoard","countChat","checkTurn","timeoutChiaBaiDone","timeoutDelayChiaBai","cachePlayersInfo","InGame_1","onBtnClickBoxChat","chatNhanhMsg","showSetting","hideSetting","onBtnHistory","assetManager","getBundle","err1","onBtnToggleMusic","onBtnToggleSound","onBtnSetting","roomInfo","cleanCardLine","cleanCardsOnBoard","cleanCardsOnHand","setRoomInfo","setPlayersInfo","hideChat","setCardsOnHand","closePopupResult","pl","setPlayerInfo","setStateViewing","PLAYING","player","autoInfo","setTimeCountDown","numPlayer","arrSeatId","resolveCardDeal","actCoomingSoon","card4Me","cardDeal","rawPlayerPos","parallel","playAudioEffect","resolveChiaBai","offFirstCard","turn","isExist2","animChatHai_1","cardHalf","ranX","ranY","cardIndex","_card","checkTypeSoundEff","typeCard","getTypeCard","showAnimTypeCard","typeSound","arrPig","some","ele","HAINE","CHETMAYNE","MAYHABUOI","DODI","actSubmitTurn","actPassTurn","_cards","actSort","getCardsOnHand","sortCardsOnHand","setToggleCardsOnHand","onCardSelectCallback","checkSuggestion","suggestionCards","turnCards","tmpCard","clearCardLine","btnNames","actives","FINISH","THUADICUNG","coinChanges","showAnimWinLose","showAnimToiTrang","WIN","LOSE","setCardLine","animWinLose","backInOut","destroyAllChildren","isTLMN","ketQuaTinhTien","countId","indexInDataKqtt","initItem","userName","goldChange","scrollToTop","setBackGame","wait4doithong","onBtnClickBgChat","toggleUIChat","arrCard","indexsToCard","animName","BA_DOI_THONG","BON_DOI_THONG","TU_QUY","showSpecialCard","totalSize","initPos","cardNode","skewX","skewY","cubicOut","TienLen_ItemPlayerResult","labelRank","labelUserName","labelMoneyChange","resultWin","resultLose","fxResult","labelFx","fontFx","sprCups","prefabCard","kiemtraThoiTuQuy","kiemtraThoiHeo","Player","lblCardRemain","timeRemain","lbStatus","clockTurn","fontNormal","ic_back_game","runRemain","timeoutChat","setFirstCard","remain","clearTimeRemain","stt","change","getCardItem","removeComponent","posAnim","winType","sefl","Res","Res_1","loadResDir","sprs","loadRes","SoundManager","bgMusic","effSound","listAudio","playBgMusic","BG","indexAudio","stopBgMusic","ingamePr","prefabItemRoom","bundleGame","arrBet","playerCount","scrollToBottom","room_1","TienLenNetworkClient","cardsDeal","fxMeWin","fxMeLose","timeUnderLayer","TimeUtils","currentTimeMillis","serverTime","minDistanceTime","minPing","TweenListener","curDuration","skeepFrame","countSkeep","curCountSkeep","toNumber","format","_listener","startNumber","showPopup","box","hidePopup","isDestroy","btnEmotion","btnChatNhanh","tabEmotion","tabChatNhanh","onBtnEmotion","onBtnChatNhanh","UIItemDiemDanh","txtProgress","txtDes","imgProgress","btnLam","btnNhanThuong","btnHoanThanh","getDescription","des","dailyQuestData","dailyGiftData","currentValue","valueDone","isReceive","onBtnLam","onBtnNhanThuong","UIItemMailClick","OpenURL","txtContent","nodeNew","uiPopupMail","title","onBtnRead","readMail","mid","mail_id","labelUser","labelGame","labelGold","labelTypeWin","lbNotify","nodeJackpot","nodeNotify","listContent","ctor","showNoti","UIPopupDiemDanh","itemDiemDanhNode","itemDiemDanh","piority","onClickAttendance","UIPopupMail","txtTime","txtSender","boxInfo","boxEmpty","boxHave","listMail","dataMailReading","ListMail","dataMail","createTime","author","onBtnXoa","UIPopupRule","Utils","_sprite","parentScale","loadRemote","tex","sc","reflection","callStaticMethod","el","degreesToVec2","degrees","radianToVec2","Deg2Rad","radian","cos","sin","numberToEnum","typeEnum","vnd","vndtmp","join","img","Image","onload","Texture2D","initWithElement","handleLoadedTexture","àáảãạăắằẳẵặâấầẩẫậ","óòỏõọơớờởỡợôốồổỗộ","éèẻẽẹêếềểễệ","úùủũụưứừửữự","íìỉĩị","ýỳỷỹỵ","đ","~!@#$%^&*()_+`[]{}|;':*-+\",./<>?0123456789","isForMatK","mo","str1","strResult","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatNumberMin","newValue","suffixNum","shortValue","precision","pow","toPrecision","toFixed","randomRange","v2Distance","v1","sqrt","v2Degrees","atan2","PI","dateToYYYYMMdd","mm","dd","dateToYYYYMM","removeDups","unique","params1","Rad2Deg"],"mappings":"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AA,GAAA,IAAA,CAAA,EAAA,GAAA,IAMA,CAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAMA,CAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAMA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAMA,CAAA,EAAA,IAAA,GAAA,EAAA,IAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAMA,CAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAMA,CAAA,EAAA,IAAA,GAAA,EAAA,IAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,IAMA,CAAA,EAAA,IAAA,GAAA,EAAA,IAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,GAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,GAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,EAAA,IAAA,IAAA,GAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,GAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,GAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAMA,CAAA,GAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GA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","sourcesContent":["import Dialog from \"./Dialog\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nclass AlertDialogQueueItem {\r\n    msg: string;\r\n    doneTitle: string;\r\n    onDismissed: () => void;\r\n\r\n    constructor(msg: string, doneTitle: string, onDismissed: () => void) {\r\n        this.msg = msg;\r\n        this.doneTitle = doneTitle;\r\n        this.onDismissed = onDismissed;\r\n    }\r\n}\r\n\r\n@ccclass\r\nexport default class AlertDialog extends Dialog {\r\n\r\n    @property(cc.Label)\r\n    lblMessage: cc.Label = null;\r\n    @property(cc.Button)\r\n    btnClose: cc.Button = null;\r\n    @property(cc.Label)\r\n    lblDone: cc.Label = null;\r\n\r\n    onDismissed: any = null;\r\n\r\n    queue: Array<AlertDialogQueueItem> = new Array<AlertDialogQueueItem>();\r\n\r\n    showMsg(msg: string) {\r\n        this.show4(msg, null, null, false);\r\n    }\r\n\r\n    showMsgWithOnDismissed(msg: string, onDismissed: () => void, canClose = true) {\r\n        this.show4(msg, null, onDismissed);\r\n        this.btnClose.node.active = canClose;\r\n    }\r\n\r\n    show3(msg: string, onDismissed: () => void, addQueue: boolean = false) {\r\n        this.show4(msg, null, onDismissed, addQueue);\r\n    }\r\n\r\n    show4(msg: string, doneTitle: string, onDismissed: () => void, addQueue: boolean = false, forceAddQueue: boolean = true): void {\r\n        if (addQueue) {\r\n            this.queue.push(new AlertDialogQueueItem(msg, doneTitle, onDismissed));\r\n            if (this.queue.length == 1) {\r\n                this.lblDone.string = !doneTitle ? \"XÁC NHẬN\" : doneTitle;\r\n                this.onDismissed = onDismissed;\r\n                this.lblMessage.string = msg;\r\n                super.show();\r\n            }\r\n        } else {\r\n            if (this.queue.length > 0 && forceAddQueue) {\r\n                this.queue.push(new AlertDialogQueueItem(msg, doneTitle, onDismissed));\r\n            } else {\r\n                this.lblDone.string = !doneTitle ? \"XÁC NHẬN\" : doneTitle;\r\n                this.onDismissed = onDismissed;\r\n                this.lblMessage.string = msg;\r\n                super.show()\r\n            }\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n    }\r\n\r\n    _onDismissed() {\r\n        super._onDismissed();\r\n        if (typeof this.onDismissed === \"function\") this.onDismissed();\r\n        if (this.queue.length > 0) {\r\n            this.queue.splice(0, 1);\r\n            if (this.queue.length > 0) {\r\n                this.show4(this.queue[0].msg, this.queue[0].doneTitle, this.queue[0].onDismissed, false, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    dismiss() {\r\n        if (!this.isAnimated) return;\r\n        super.dismiss();\r\n    }\r\n}\r\n","\r\nimport BundleControl from \"../../../../Loading/src/BundleControl\";\r\nimport Configs from \"../../../../Loading/src/Configs\";\r\nimport Http from \"../../../../Loading/src/Http\";\r\nimport ButtonMiniGame from \"../../ButtonMiniGame\";\r\nimport PopupChangeAvatar from \"../../Lobby.PopupChangeAvatar\";\r\nimport PopupChangePassword from \"../../Lobby.PopupChangePassword\";\r\nimport MiniGame from \"../../MiniGame\";\r\nimport PopupUpdateNickname from \"../../PopupUpdateNickname\";\r\nimport InPacket from \"../networks/Network.InPacket\";\r\nimport SlotNetworkClient from \"../networks/SlotNetworkClient\";\r\nimport AlertDialog from \"./AlertDialog\";\r\nimport BroadcastReceiver from \"./BroadcastReceiver\";\r\nimport ConfirmDialog from \"./ConfirmDialog\";\r\nimport SPUtils from \"./SPUtils\";\r\nimport UINotifyJackpot from \"./UINotifyJackpot\";\r\nimport cmd from \"../../Lobby.Cmd\";\r\nimport UIPopupRule from \"../../UIPopupRule\";\r\nimport GameLiveController from \"../../GameLive/GameLiveController\";\r\nimport Utils from \"./Utils\";\r\nimport PopupGameTransfer from \"../../Lobby.PopupGameTransfer\";\r\nimport TaiXiuSTNetworkClient from \"../networks/TaiXiuSieuToc.NetworkClient\";\r\nimport { Global } from \"../../../../Loading/src/Global\";\r\nimport LanguageLanguageManager from \"./Language.LanguageManager\";\r\nimport PopupGameSBO from \"../../Lobby.PopupGameSBO\";\r\nimport PopupEvent from \"../../PopupEvent\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class App extends cc.Component {\r\n    @property(cc.AudioClip)\r\n    clipCoin: cc.AudioClip = null;\r\n    @property(cc.Prefab)\r\n    prefabCoin: cc.Prefab = null;\r\n    @property(cc.Node)\r\n    nodeCoin: cc.Node = null;\r\n\r\n    @property(cc.Prefab)\r\n    bgMiniPrefab: cc.Prefab = null;\r\n    @property(GameLiveController)\r\n    gameLiveController: GameLiveController = null;\r\n    @property(UINotifyJackpot)\r\n    uiNotifyJackpot: UINotifyJackpot = null;\r\n    @property(cc.Prefab)\r\n    public taiXiuDoublePrefab: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    public TaiXiuMD5Prefab: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    public miniPokerPrefab: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    public caoThapPrefab: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    public bauCuaPrefab: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    public slot3x3Prefab: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    public oanTuTiPrefab: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    public canvas: cc.Node = null;\r\n\r\n\r\n    static instance: App = null;\r\n\r\n    @property\r\n    designResolution: cc.Size = new cc.Size(1280, 720);\r\n\r\n    @property(cc.Node)\r\n    loading: cc.Node = null;\r\n    @property(cc.Node)\r\n    loadingIcon: cc.Node = null;\r\n    @property(cc.Label)\r\n    loadingLabel: cc.Label = null;\r\n\r\n    @property(AlertDialog)\r\n    alertDialog: AlertDialog = null;\r\n    @property(cc.Node)\r\n    alertToast: cc.Node = null;\r\n\r\n    @property(ConfirmDialog)\r\n    confirmDialog: ConfirmDialog = null;\r\n\r\n    @property([cc.SpriteFrame])\r\n    sprFrameAvatars: Array<cc.SpriteFrame> = new Array<cc.SpriteFrame>();\r\n\r\n    @property(cc.Node)\r\n    buttonMiniGameNode: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    miniGame: cc.Node = null;\r\n\r\n    @property(cc.Prefab)\r\n    popupWebView: cc.Prefab = null;\r\n\r\n    @property(PopupUpdateNickname)\r\n    popupUpdateNickname: PopupUpdateNickname = null;\r\n\r\n    public isShowNotifyJackpot = true;\r\n    public buttonMiniGame: ButtonMiniGame;\r\n    public popupChangeAvatar: PopupChangeAvatar;\r\n    public popupChangePassword: PopupChangePassword;\r\n    public popupGameTransfer: PopupGameTransfer = null;\r\n    public popupGameSBO: PopupGameSBO = null;\r\n    public popupRule: UIPopupRule = null;\r\n    private lastWitdh: number = 0;\r\n    private lastHeight: number = 0;\r\n\r\n    private timeOutLoading: any = null;\r\n    private isFisrtNetworkConnected = false;\r\n\r\n    private subpackageLoaded: Object = {};\r\n\r\n    private taiXiuDouble: MiniGame = null;\r\n    private miniPoker: MiniGame = null;\r\n    private caoThap: MiniGame = null;\r\n    private bauCua: MiniGame = null;\r\n    private slot3x3: MiniGame = null;\r\n    private slot3x3Gem: MiniGame = null;\r\n    private oanTuTi: MiniGame = null;\r\n    private taiXiuSieuToc: MiniGame = null;\r\n    private TaiXiuMD5: MiniGame = null;\r\n    public numMiniGameOpening = 0;\r\n    public cacheWebView = {};\r\n    // LIFE-CYCLE CALLBACKS:\r\n    private coinPool = null;\r\n    public topHuData: any = null;\r\n    public fakeTopHuData: any = {};\r\n    public checkMailUnread: boolean = false;\r\n    popupEvent: PopupEvent = null;\r\n    public VERSION_CONFIG = \"1.0.3\";\r\n    public timeLixi: number = -1;\r\n\r\n    onLoad() {\r\n        Global.LanguageManager = LanguageLanguageManager;\r\n        if (App.instance != null) {\r\n            this.node.destroy();\r\n            return;\r\n        }\r\n        this.coinPool = new cc.NodePool(\"Coin\");\r\n        this.initConfigGameStart();\r\n        App.instance = this;\r\n        cc.game.addPersistRootNode(App.instance.node);\r\n        this.buttonMiniGame = this.buttonMiniGameNode.getComponent(ButtonMiniGame);\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_LOGOUT, () => {\r\n            this.checkMailUnread = false;\r\n        }, this);\r\n        this.setupTimeRunInBg();\r\n    }\r\n    getCoin() {\r\n        let ret: cc.Node = null;\r\n\r\n        if (this.coinPool.size() <= 0) {\r\n            this.coinPool.put(cc.instantiate(this.prefabCoin));\r\n        }\r\n        ret = this.coinPool.get();\r\n        ret.parent = this.nodeCoin;\r\n        ret.active = true;\r\n        ret.scale = 1;\r\n        ret.opacity = 255;\r\n        ret.position = cc.v3(0, 0, 0);\r\n        let partical = ret.getComponentInChildren(cc.ParticleSystem);\r\n        if (partical.particleCount > 0) { // check if particle has fully plaed\r\n            partical.stopSystem(); // stop particle system\r\n        } else {\r\n            partical.resetSystem(); // restart particle system\r\n        }\r\n        partical.node.active = false;\r\n        return ret;\r\n    }\r\n\r\n\r\n    getPositionInView(item) { // get item position in scrollview's node space\r\n        //  //Utils.Log(\"getPositionInView:\"+item.name);\r\n        let worldPos = item.parent.convertToWorldSpaceAR(item.getPosition());\r\n        let viewPos = this.nodeCoin.convertToNodeSpaceAR(worldPos);\r\n        return viewPos;\r\n    }\r\n\r\n    getRandomArbitrary(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n    showCoins(numberCoin, nodeStart, nodeTarget, callback = null) {\r\n        cc.audioEngine.play(this.clipCoin, false, 1);\r\n        //Utils.Log(\"showCoins:\" + numberCoin);\r\n        if (numberCoin <= 20) numberCoin = 20;\r\n        else if (numberCoin >= 40) numberCoin = 40;\r\n        for (let i = 0; i < numberCoin; i++) {\r\n            let chip = this.getCoin();\r\n            chip.scale = 2.5;\r\n            var posStart = this.getPositionInView(nodeStart);\r\n            var posTarget = this.getPositionInView(nodeTarget);\r\n            chip.position = posStart;\r\n            var bezier = [cc.v2(posStart.x, posStart.y), cc.v2(posStart.x + 200, posStart.y + 300), posTarget];\r\n            cc.Tween.stopAllByTarget(chip);\r\n            cc.tween(chip)\r\n                .delay(0 + (numberCoin * 0.1 - i * 0.1))\r\n                // .to(0.5, {scale:1, x: this.getRandomArbitrary(posStart.x-50,posStart.x+50), y: this.getRandomArbitrary(posStart.y-50,posStart.y+50) }, { easing: cc.easing.backOut })\r\n                // .delay(0.1)\r\n                .call(() => {\r\n                    chip.getChildByName(\"partical\").active = true;\r\n                })\r\n                .then(cc.spawn(cc.scaleTo(1.0, 1.0).easing(cc.easeSineInOut()), cc.bezierTo(1, bezier).easing(cc.easeSineInOut())))\r\n                // .to(0.5, { position: posTarget }, { easing: cc.easing.sineIn })\r\n                .call(() => {\r\n                    // chip.active = false;\r\n                    let partical = chip.getComponentInChildren(cc.ParticleSystem);\r\n                    if (partical.particleCount > 0) { // check if particle has fully plaed\r\n                        partical.stopSystem(); // stop particle system\r\n                    } else {\r\n                        partical.resetSystem(); // restart particle system\r\n                    }\r\n                    partical.node.active = false;\r\n                    chip.position = posStart;\r\n                    this.coinPool.put(chip);\r\n                }).start();\r\n        }\r\n    }\r\n    public hideGameMini(nameGame) {\r\n        delete this.arrMiniGame[nameGame];\r\n        this.numMiniGameOpening--;\r\n        if (this.numMiniGameOpening <= 0) {\r\n            this.numMiniGameOpening = 0;\r\n            this.bgMini.active = false;\r\n        }\r\n    }\r\n\r\n    public showGameMini(nameGame, obj = null) {\r\n        if (obj != null) {\r\n            this.arrMiniGame[nameGame] = obj;\r\n            this.numMiniGameOpening++;\r\n        }\r\n        if (this.numMiniGameOpening == 0) {\r\n            this.bgMini.active = true;\r\n        }\r\n\r\n\r\n    }\r\n    private isFadeOutBgMini = false;\r\n\r\n    public showBgMiniGame(gameName) {\r\n        this.isFadeOutBgMini = false;\r\n        this.bgMini.active = true;\r\n        for (var key in this.arrMiniGame) {\r\n            if (gameName == key) {\r\n                cc.tween(this.arrMiniGame[key].getComponent('MiniGame').gamePlay).to(0.2, { scale: 1.0 }).start();\r\n                this.arrMiniGame[key].getComponent(\"MiniGame\").reOrder();\r\n            }\r\n            else {\r\n                cc.tween(this.arrMiniGame[key].getComponent('MiniGame').gamePlay).to(0.1, { scale: 0.5 }).start();\r\n            }\r\n        }\r\n    }\r\n\r\n    public hideBgMiniGame() {\r\n        this.isFadeOutBgMini = true;\r\n        this.bgMini.active = false;\r\n        for (var key in this.arrMiniGame) {\r\n            // this.arrMiniGame[key].opacity = 100;\r\n            this.arrMiniGame[key].getComponent('MiniGame').gamePlay.scale = 0.5;\r\n            // cc.tween(this.arrMiniGame[key]).to(0.1, { scale: 0.5 }).start();\r\n        }\r\n    }\r\n    public boxApp: cc.Node = null;\r\n    private bgMini: cc.Node = null;\r\n    private arrMiniGame = {};\r\n    onEnable() {\r\n        var canvasTmp = cc.director.getScene().getChildByName(\"Canvas\");\r\n        this.miniPoker = null;\r\n        this.caoThap = null;\r\n        this.taiXiuDouble = null;\r\n        this.TaiXiuMD5 = null;\r\n        this.bauCua = null;\r\n        this.slot3x3 = null;\r\n        this.slot3x3Gem = null;\r\n        this.taiXiuSieuToc = null;\r\n        this.arrMiniGame = {};\r\n        this.miniGame = new cc.Node('BoxMiniGame');\r\n        this.miniGame.width = 1280;\r\n        this.miniGame.height = 720;\r\n        // this.miniGame.position = cc.v3(1280/2,720/2,0);\r\n        this.bgMini = cc.instantiate(this.bgMiniPrefab);\r\n        this.bgMini.parent = this.miniGame;\r\n        this.bgMini.active = false;\r\n        canvasTmp.addChild(this.miniGame);\r\n\r\n        // var boxPopup = new cc.Node('BoxPopup');\r\n        // boxPopup.width = cc.winSize.width;\r\n        // boxPopup.height = cc.winSize.height;\r\n        // canvasTmp.addChild(boxPopup);\r\n        this.canvas = this.miniGame;\r\n    }\r\n    setUpNode() {\r\n        var canvasTmp = cc.director.getScene().getChildByName(\"Canvas\");\r\n        this.miniPoker = null;\r\n        this.caoThap = null;\r\n        this.taiXiuDouble = null;\r\n        this.TaiXiuMD5 = null;\r\n        this.bauCua = null;\r\n        this.slot3x3 = null;\r\n        this.slot3x3Gem = null;\r\n\r\n        this.miniGame = new cc.Node('BoxMiniGame');\r\n        this.miniGame.width = 1280;\r\n        this.miniGame.height = 720;\r\n        canvasTmp.addChild(this.miniGame);\r\n\r\n        var boxPopup = new cc.Node('BoxPopup');\r\n        boxPopup.width = cc.winSize.width;\r\n        boxPopup.height = cc.winSize.height;\r\n        canvasTmp.addChild(boxPopup);\r\n        this.canvas = boxPopup;\r\n    }\r\n\r\n    actChangeAvatar() {\r\n        if (!Configs.Login.IsLogin) {\r\n            this.alertDialog.showMsg(\"Bạn chưa đăng nhập.\");\r\n            return;\r\n        }\r\n        if (!this.popupChangeAvatar) {\r\n            let cb = (prefab) => {\r\n                let popupnaprut = cc.instantiate(prefab).getComponent(\"Lobby.PopupChangeAvatar\");\r\n                popupnaprut.node.parent = this.canvas;\r\n                this.popupChangeAvatar = popupnaprut;\r\n                this.popupChangeAvatar.show();\r\n            }\r\n            BundleControl.loadPrefabPopup(\"PrefabPopup/PopupChangeAvatar\", cb);\r\n        } else {\r\n            this.popupChangeAvatar.show();\r\n        }\r\n    }\r\n\r\n    actRule() {\r\n        if (!Configs.Login.IsLogin) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n            return;\r\n        }\r\n        if (!this.popupRule) {\r\n            let cb = (prefab) => {\r\n                let popupRule = cc.instantiate(prefab).getComponent(\"UIPopupRule\");\r\n                App.instance.canvas.addChild(popupRule.node);\r\n                this.popupRule = popupRule;\r\n                this.popupRule.show();\r\n            }\r\n            BundleControl.loadPrefabPopup(\"PrefabPopup/UIPopupRule\", cb);\r\n        } else {\r\n            this.popupRule.show();\r\n        }\r\n    }\r\n\r\n    public TYPE_LOGIN = \"NORMAL\";//NORMAL , FACEBOOK\r\n    public USER_NAME = \"\";\r\n    public PASS_WORD = \"\";\r\n    public FB_ID = \"\";\r\n    public AT_FB = \"\";\r\n    public RECONNECT_GAME = false;\r\n\r\n    static DOMAIN = \"sunus1.win\";\r\n    static API_CMD: string = \"https://ga.sunus1.win/3rd/cmd\";\r\n    static API_IBC: string = \"https://ga.sunus1.win/3rd/ibc\";\r\n    static API_SBO: string = \"https://ga.sunus1.win/3rd/sbo\"\r\n    static API_AG: string = \"https://ga.sunus1.win/3rd/ag\";\r\n    static API_EBET: string = \"https://ga.sunus1.win/3rd/ebet\";\r\n    static API_WM: string = \"https://ga.sunus1.win/3rd/wm\";\r\n\r\n    //http://localhost:8081/api?c=2021&nn=tuanbigbird&at=1628224022&ip=127.0.0.1&mn=100\r\n    updateConfigGame(domain = \"sunus1.win\") {\r\n        this.RECONNECT_GAME = true;\r\n\r\n        Configs.App.API = \"https://iportal.\" + domain + \"/api\";\r\n        Configs.App.MONEY_TYPE = 1;\r\n        Configs.App.LINK_DOWNLOAD = \"https://\" + domain + \"\";\r\n        Configs.App.LINK_EVENT = \"https://\" + domain + \"/event\";\r\n\r\n        Configs.App.HOST_MINIGAME.host = \"wmini.\" + domain + \"\";\r\n        Configs.App.HOST_TAI_XIU_MINI2.host = \"overunder.\" + domain + \"\";\r\n        Configs.App.HOST_SLOT.host = \"wslot.\" + domain + \"\";\r\n        Configs.App.HOST_TLMN.host = \"wtlmn.\" + domain + \"\";\r\n        Configs.App.HOST_SHOOT_FISH.host = \"wbanca.\" + domain + \"\";\r\n        Configs.App.HOST_SAM.host = \"wsam.\" + domain + \"\";\r\n        Configs.App.HOST_XOCDIA.host = \"wxocdia.\" + domain + \"\";\r\n        Configs.App.HOST_BACAY.host = \"wbacay.\" + domain + \"\";\r\n        Configs.App.HOST_BAICAO.host = \"wbaicao.\" + domain + \"\";\r\n        Configs.App.HOST_POKER.host = \"wpoker.\" + domain + \"\";\r\n        Configs.App.HOST_XIDACH.host = \"wxizach.\" + domain + \"\";\r\n        Configs.App.HOST_BINH.host = \"wbinh.\" + domain + \"\";\r\n        Configs.App.HOST_LIENG.host = \"wlieng.\" + domain + \"\";\r\n\r\n        App.API_AG = \"https://ga.\" + domain + \"/3rd/ag\";\r\n        App.API_IBC = \"https://ga.\" + domain + \"/3rd/ibc\";\r\n        App.API_WM = \"https://ga.\" + domain + \"/3rd/wm\";\r\n        App.API_CMD = \"https://ga.\" + domain + \"/3rd/cmd\";\r\n        //Utils.Log(\"CONFIG_API:\" + Configs.App.API);\r\n    }\r\n\r\n    initConfigGameStart() {\r\n        this.updateConfigGame(App.DOMAIN);\r\n    }\r\n\r\n    actChangePass() {\r\n        if (!Configs.Login.IsLogin) {\r\n            this.alertDialog.showMsg(\"Bạn chưa đăng nhập.\");\r\n            return;\r\n        }\r\n        if (!this.popupChangePassword) {\r\n            let cb = (prefab) => {\r\n                let popupnaprut = cc.instantiate(prefab).getComponent(\"Lobby.PopupChangePassword\");\r\n                popupnaprut.node.parent = this.canvas;\r\n                this.popupChangePassword = popupnaprut;\r\n                this.popupChangePassword.show();\r\n            }\r\n            BundleControl.loadPrefabPopup(\"PrefabPopup/PopupChangePassword\", cb);\r\n        } else {\r\n            this.popupChangePassword.show();\r\n        }\r\n    }\r\n\r\n    setupTimeRunInBg() {\r\n        cc.game.on(cc.game.EVENT_HIDE, () => {\r\n            let timeNow = cc.sys.now()\r\n\r\n            //Utils.Log('-=-=EVENT_HIDE  ', timeNow)\r\n            cc.sys.localStorage.setItem('timenow', timeNow)\r\n        })\r\n\r\n        cc.game.on(cc.game.EVENT_SHOW, () => {\r\n            let timeNow = cc.sys.now()\r\n            let timeHide = parseInt(cc.sys.localStorage.getItem('timenow'))\r\n            //Utils.Log('-=-=EVENT_SHOW2_IN_SECCOND  ' + ((timeNow - timeHide) / 1000));\r\n            cc.director.getActionManager().update((timeNow - timeHide) / 1000);\r\n            this.timeLixi = Math.floor(this.timeLixi - ((timeNow - timeHide) / 1000));\r\n        });\r\n    }\r\n    start() {\r\n        SlotNetworkClient.getInstance().addListener((data) => {\r\n            let inPacket = new InPacket(data);\r\n            switch (inPacket.getCmdId()) {\r\n                case cmd.Code.UPDATE_BIGWIN_JACKPOT_SLOT3X3: {\r\n                    let res = new cmd.ResNotifyJackpot(data);\r\n                    this.showJackpotNotify(res, \"Pokemon\");\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_BIGWIN_JACKPOT_SLOT3x3GEM: {\r\n                    let res = new cmd.ResNotifyJackpot(data);\r\n                    this.showJackpotNotify(res, \"Gem\");\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_BIGWIN_JACKPOT_MINIPOKER: {\r\n                    let res = new cmd.ResNotifyJackpot(data);\r\n                    this.showJackpotNotify(res, \"MiniPoker\");\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_BIGWIN_JACKPOT_SLOT1: {\r\n                    let res = new cmd.ResNotifyJackpot(data);\r\n                    this.showJackpotNotify(res, \"AVENGER\");\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_BIGWIN_JACKPOT_SLOT3: {\r\n                    let res = new cmd.ResNotifyJackpot(data);\r\n                    this.showJackpotNotify(res, \"Thần Tài\");\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_BIGWIN_JACKPOT_SLOT4: {\r\n                    let res = new cmd.ResNotifyJackpot(data);\r\n                    this.showJackpotNotify(res, \"THỦY CUNG\");\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_BIGWIN_JACKPOT_SLOT5: {\r\n                    let res = new cmd.ResNotifyJackpot(data);\r\n                    this.showJackpotNotify(res, \"PIRATE KING\");\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_BIGWIN_JACKPOT_SLOT7: {\r\n                    let res = new cmd.ResNotifyJackpot(data);\r\n                    this.showJackpotNotify(res, \"NATRA\");\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_BIGWIN_JACKPOT_SLOT8: {\r\n                    let res = new cmd.ResNotifyJackpot(data);\r\n                    this.showJackpotNotify(res, \"TÂY DU THẦN KÝ\");\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_BIGWIN_JACKPOT_SLOT10: {\r\n                    let res = new cmd.ResNotifyJackpot(data);\r\n                    this.showJackpotNotify(res, \"TỨ THẦN THÚ\");\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_BIGWIN_JACKPOT_SLOT11: {\r\n                    let res = new cmd.ResNotifyJackpot(data);\r\n                    this.showJackpotNotify(res, \"\");\r\n                    break;\r\n                }\r\n            }\r\n        }, this);\r\n\r\n        this.updateSize();\r\n        // cc.tween(this.loadingIcon).repeatForever(cc.tween().to(0.5, { scale: 1.1 }).to(0.5, { scale: 0.9 }).to(0.5, { scale: 1.0 })).start();\r\n    }\r\n    showJackpotNotify(res, gameName) {\r\n        //Utils.Log('showJackpotNotify:', res);\r\n        if (res[\"type\"] == 3) {\r\n            var dataNotify = {};\r\n            dataNotify[\"username\"] = res[\"username\"];\r\n            dataNotify[\"totalPrizes\"] = res[\"totalPrizes\"];\r\n            dataNotify[\"type\"] = res[\"type\"] == 3 ? \"Nỗ Hũ\" : \"Thắng Lớn\";\r\n            dataNotify[\"gameName\"] = gameName;\r\n            App.instance.uiNotifyJackpot.addJackpot(dataNotify);\r\n        }\r\n    }\r\n    showLoading(isShow: boolean, timeOut: number = 15) {\r\n       // this.loading.zIndex = this.node.children[this.node.childrenCount - 1].zIndex + 1;\r\n        this.loadingLabel.string = App.instance.getTextLang('txt_loading1');\r\n        if (this.timeOutLoading != null) clearTimeout(this.timeOutLoading);\r\n        if (isShow) {\r\n            if (timeOut > 0) {\r\n                this.timeOutLoading = setTimeout(() => {\r\n                    this.showLoading(false);\r\n                }, timeOut * 1000);\r\n            }\r\n            this.loading.active = true;\r\n        } else {\r\n            this.loading.active = false;\r\n        }\r\n        this.loadingIcon.stopAllActions();\r\n        this.loadingIcon.runAction(cc.repeatForever(cc.rotateBy(1.5, 360)));\r\n        // cc.tween(this.loadingIcon).to(0.5, { scale: 1.2 }).to(0.5, { scale: 0.8 }).to(0.5, { scale: 1.0 }).repeatForever().start();\r\n    }\r\n\r\n    showErrLoading(msg?: string) {\r\n        this.showLoading(true, -1);\r\n        this.loadingLabel.string = msg ? msg : \"Mất kết nối, đang thử lại...\";\r\n    }\r\n\r\n    update(dt: number) {\r\n        this.updateSize();\r\n    }\r\n\r\n    updateSize() {\r\n        var frameSize = cc.view.getFrameSize();\r\n        if (this.lastWitdh !== frameSize.width || this.lastHeight !== frameSize.height) {\r\n\r\n            this.lastWitdh = frameSize.width;\r\n            this.lastHeight = frameSize.height;\r\n\r\n            var newDesignSize = cc.Size.ZERO;\r\n            if (this.designResolution.width / this.designResolution.height > frameSize.width / frameSize.height) {\r\n                newDesignSize = cc.size(this.designResolution.width, this.designResolution.width * (frameSize.height / frameSize.width));\r\n            } else {\r\n                newDesignSize = cc.size(this.designResolution.height * (frameSize.width / frameSize.height), this.designResolution.height);\r\n            }\r\n            this.node.setContentSize(newDesignSize);\r\n            this.node.setPosition(cc.v2(newDesignSize.width / 2, newDesignSize.height / 2));\r\n        }\r\n    }\r\n\r\n    getAvatarSpriteFrame(avatar: string): cc.SpriteFrame {\r\n        // avatar = \"999\";\r\n        let avatarInt = parseInt(avatar);\r\n        // if (avatarInt == 999) {\r\n        //     let sprAvatar: cc.SpriteFrame;\r\n        //     let url = 'https://platform-lookaside.fbsbx.com/platform/profilepic/?asid=%fbid&height=100&width=100&ext=1633535436&hash=AeSjxozlk2teYdmfI_0';\r\n        //     url = url.replace(\"%fbid\", Configs.Login.FacebookID);\r\n        //     cc.assetManager.loadRemote(url, { ext: \".png\" }, (err, img: cc.Texture2D) => {\r\n\r\n        //         if (err) {\r\n        //             return this.sprFrameAvatars[0];\r\n        //         }\r\n        //          //Utils.Log(img);\r\n        //         sprAvatar = new cc.SpriteFrame(img);\r\n        //         return sprAvatar;\r\n        //         // sprite.spriteFrame = new cc.SpriteFrame(tex);\r\n        //     });\r\n        // }\r\n        if (isNaN(avatarInt) || avatarInt < 0 || avatarInt >= this.sprFrameAvatars.length) {\r\n            return this.sprFrameAvatars[0];\r\n        }\r\n\r\n        return this.sprFrameAvatars[avatarInt];\r\n    }\r\n\r\n    loadScene(sceneName: string) {\r\n        cc.director.preloadScene(sceneName, (c, t, item) => {\r\n            this.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt(\"\" + ((c / t) * 100)) + \"%\");\r\n        }, () => {\r\n            this.showLoading(false);\r\n            cc.director.loadScene(sceneName);\r\n        });\r\n    }\r\n\r\n    openWebView(url, cache = \"\") {\r\n        cc.sys.openURL(url);\r\n        return;\r\n\r\n        if (cache == \"AG\") {\r\n            if (Configs.Login.CACHE_AG) {\r\n                SPUtils.setMusicVolumn(0);\r\n                BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n                this.cacheWebView[cache].position = cc.v3(0, 0, 0);\r\n            } else {\r\n                var item = cc.instantiate(this.popupWebView);\r\n                item.parent = this.node;\r\n                item.getComponent(\"PopupWebView\").show(url, cache);\r\n                this.cacheWebView[cache] = item;\r\n            }\r\n        }\r\n        else if (cache == \"IBC\") {\r\n            if (Configs.Login.CACHE_IBC) {\r\n                SPUtils.setMusicVolumn(0);\r\n                BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n                this.cacheWebView[cache].position = cc.v3(0, 0, 0);\r\n            } else {\r\n                var item = cc.instantiate(this.popupWebView);\r\n                item.parent = this.node;\r\n                item.getComponent(\"PopupWebView\").show(url, cache);\r\n                this.cacheWebView[cache] = item;\r\n            }\r\n        }\r\n        else if (cache == \"WM\") {\r\n            if (Configs.Login.CACHE_WM) {\r\n                SPUtils.setMusicVolumn(0);\r\n                BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n                this.cacheWebView[cache].position = cc.v3(0, 0, 0);\r\n            } else {\r\n                var item = cc.instantiate(this.popupWebView);\r\n                item.parent = this.node;\r\n                item.getComponent(\"PopupWebView\").show(url, cache);\r\n                this.cacheWebView[cache] = item;\r\n            }\r\n        }\r\n        else {\r\n            var item = cc.instantiate(this.popupWebView);\r\n            item.parent = this.node;\r\n            item.getComponent(\"PopupWebView\").show(url, cache);\r\n        }\r\n\r\n    }\r\n\r\n    actLoginCMD(isPlayNow = false) {\r\n        if (!Configs.Login.IsLogin) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        Http.get(App.API_CMD, { t: \"bl\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            //Utils.Log(\"updateInfoCMD:\" + JSON.stringify(res));\r\n            App.instance.showLoading(false);\r\n            if (res[\"code\"] == 0) {\r\n                var balance = res[\"data\"][\"data\"][0][\"betAmount\"];\r\n                if (balance < 10000 && isPlayNow == false) {\r\n                    this.actPopupGameTransfer(\"CMD\", balance);\r\n                }\r\n                else {\r\n                    App.instance.showLoading(true);\r\n                    Http.get(App.API_CMD, { t: \"lg\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                        App.instance.showLoading(false);\r\n                        if (res[\"code\"] == 0) {\r\n                            var url = res[\"data\"][\"webRoot\"] + \"/auth.aspx?lang=vi-VN&user=\" + res[\"data\"][\"userName\"] + \"&token=\" + res[\"data\"][\"token\"] + \"&currency=VD&templatename=blue&view=v2\";\r\n\r\n                            if (cc.sys.isMobile == true) {\r\n                                url = res[\"data\"][\"mobileRoot\"] + \"/auth.aspx?lang=vi-VN&user=\" + res[\"data\"][\"userName\"] + \"&token=\" + res[\"data\"][\"token\"] + \"&currency=VD&templatename=blue&view=v2\";\r\n                            }\r\n                            cc.sys.openURL(url);\r\n                        }\r\n                        else {\r\n                            App.instance.ShowAlertDialog(res[\"message\"]);\r\n                        }\r\n                        //Utils.Log(\"LoginIBC err:\" + JSON.stringify(err));\r\n                        //Utils.Log(\"LoginIBC res:\" + JSON.stringify(res));\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                this.ShowAlertDialog(\"Game đang bảo trì\");\r\n            }\r\n        });\r\n    }\r\n\r\n    actLoginSBO(isPlayNow = false) {\r\n        if (!Configs.Login.IsLogin) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        Http.get(App.API_SBO, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            //Utils.Log(\"updateInfoSBO:\" + JSON.stringify(res));\r\n            App.instance.showLoading(false);\r\n            if (res != null && res[\"res\"] == 0) {\r\n                var balance = parseInt(res[\"data\"][\"balance\"]) * 1000;\r\n                if (balance < 10000 && isPlayNow == false) {\r\n                    this.actPopupGameTransfer(\"SBO\", balance);\r\n                }\r\n                else {\r\n                    App.instance.showLoading(true);\r\n                    Http.get(App.API_SBO, { t: \"Login\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, gc: 'SportsBook' }, (err, res) => {\r\n                        //Utils.Log(\"Login SBO:\" + JSON.stringify(res));\r\n                        App.instance.showLoading(false);\r\n                        if (res[\"res\"] == 0) {\r\n                            var url = \"https:\" + res['data'] + \"&lang=vi-vn&oddstyle=MY&theme=sbo&device=\" + (cc.sys.isNative ? \"m\" : \"d\");\r\n                            //Utils.Log(\"url=\" + url);\r\n                            cc.sys.openURL(url);\r\n                        }\r\n                        else {\r\n                            App.instance.ShowAlertDialog(res[\"message\"]);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                this.ShowAlertDialog(\"Game đang bảo trì\");\r\n            }\r\n        });\r\n\r\n    }\r\n    actShowPopupGameSBO() {\r\n        if (!this.popupGameSBO) {\r\n            let cb = (prefab) => {\r\n                App.instance.showLoading(false);\r\n                this.popupGameSBO = cc.instantiate(prefab).getComponent(\"Lobby.PopupGameSBO\");\r\n                this.popupGameSBO.node.parent = App.instance.canvas;\r\n                this.popupGameSBO.show();\r\n            }\r\n            BundleControl.loadPrefabPopup(\"PrefabPopup/PopupGameSBO\", cb);\r\n        } else {\r\n            App.instance.showLoading(false);\r\n            this.popupGameSBO.show();\r\n        }\r\n    }\r\n    actLoginIBC(isPlayNow = false) {\r\n        if (!Configs.Login.IsLogin) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        Http.get(App.API_IBC, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            //Utils.Log(\"updateInfoICB:\" + JSON.stringify(res));\r\n            App.instance.showLoading(false);\r\n            if (res[\"code\"] == 0) {\r\n                var balance = parseInt(res[\"data\"][\"balance\"]) * 1000;\r\n                if (balance < 10000 && isPlayNow == false) {\r\n                    this.actPopupGameTransfer(\"IBC\", balance);\r\n                }\r\n                else {\r\n                    App.instance.showLoading(true);\r\n                    Http.get(App.API_IBC, { t: \"Login\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                        App.instance.showLoading(false);\r\n                        if (res[\"code\"] == 0) {\r\n                            if (Configs.App.IS_PRO == true && Configs.Login.UserType != \"2\") {\r\n                                var url = \"https://mkt.l0030.ig128.com/deposit_processlogin.aspx?lang=vn&token=\" + res[\"data\"][\"data\"];\r\n                                if (cc.sys.isMobile == true) {\r\n                                    url = \"https://ismart.l0030.ig128.com/deposit_processlogin.aspx?lang=vn&token=\" + res[\"data\"][\"data\"];\r\n                                }\r\n                                cc.sys.openURL(url);\r\n\r\n                            }\r\n                            else {\r\n                                var url = \"http://sbtest.l0030.ig128.com/deposit_processlogin.aspx?lang=vn&token=\" + res[\"data\"][\"data\"];\r\n                                if (cc.sys.isMobile == true) {\r\n                                    url = \"http://smartsbtest.l0030.ig128.com/deposit_processlogin.aspx?lang=vn&token=\" + res[\"data\"][\"data\"];\r\n                                }\r\n                                cc.sys.openURL(url);\r\n                            }\r\n                        }\r\n                        else {\r\n                            App.instance.ShowAlertDialog(res[\"message\"]);\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.ShowAlertDialog(\"Game đang bảo trì\");\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    actLoginWM(isPlayNow = false) {\r\n        if (!Configs.Login.IsLogin) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        Http.get(App.API_WM, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (res[\"list\"][0] == 0) {\r\n                var balance = parseInt(res[\"list\"][1]) * 1000;\r\n                if (balance < 10000 && isPlayNow == false) {\r\n                    this.actPopupGameTransfer(\"WM\", balance);\r\n                }\r\n                else {\r\n                    App.instance.showLoading(true);\r\n                    Http.get(App.API_WM, { t: \"Login\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                        App.instance.showLoading(false);\r\n\r\n                        if (res[\"list\"][0] == 0) {\r\n                            App.instance.openWebView(res[\"list\"][1], \"WM\");\r\n                        }\r\n                        else {\r\n                            App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                        }\r\n\r\n                    });\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.ShowAlertDialog(\"Game đang bảo trì\");\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    showGameLive() {\r\n        if (!this.gameLiveController) {\r\n            let cb = (prefab) => {\r\n                let gameLiveController = cc.instantiate(prefab).getComponent(\"GameLiveController\");\r\n                App.instance.canvas.addChild(gameLiveController.node)\r\n                this.gameLiveController = gameLiveController;\r\n                this.gameLiveController.show();\r\n            }\r\n            BundleControl.loadPrefabPopup(\"PrefabPopup/GameLive\", cb);\r\n        } else {\r\n            this.gameLiveController.show();\r\n        }\r\n\r\n\r\n    }\r\n    actPopupGameTransfer(typeGame, balance = null) {\r\n        if (!Configs.Login.IsLogin) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n            return;\r\n        }\r\n        if (!this.popupGameTransfer) {\r\n            let cb = (prefab) => {\r\n                let popupGameTransfer = cc.instantiate(prefab).getComponent(\"Lobby.PopupGameTransfer\");\r\n                popupGameTransfer.node.parent = App.instance.canvas;\r\n                this.popupGameTransfer = popupGameTransfer;\r\n                this.popupGameTransfer.showGame(typeGame, balance);\r\n            }\r\n            BundleControl.loadPrefabPopup(\"PrefabPopup/PopupGameTransfer\", cb);\r\n        } else {\r\n            this.popupGameTransfer.showGame(typeGame, balance);\r\n        }\r\n    }\r\n\r\n    actLoginAG(isPlayNow = false) {\r\n        if (!Configs.Login.IsLogin) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        var self = this;\r\n        Http.get(App.API_AG, { t: \"GetBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (res[\"res\"] == 0) {\r\n                if (res[\"list\"][0][\"info\"] == \"error\") {\r\n                    this.ShowAlertDialog(\"Game đang bảo trì\");\r\n                }\r\n                else {\r\n                    var balance = parseInt(res.list[0][\"info\"]) * 1000;\r\n                    if (balance < 10000 && isPlayNow == false) {\r\n                        this.actPopupGameTransfer(\"AG\", balance);\r\n                    }\r\n                    else {\r\n                        App.instance.showLoading(true);\r\n                        Http.get(App.API_AG, { t: \"Forward\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                            App.instance.showLoading(false);\r\n                            //Utils.Log(\"LoginAG err:\" + JSON.stringify(err));\r\n                            //Utils.Log(\"LoginAG res:\" + JSON.stringify(res));\r\n                            if (res[\"res\"] == 0) {\r\n                                if (res[\"list\"].length > 0) {\r\n                                    App.instance.openWebView(res[\"list\"][0], \"AG\");\r\n                                }\r\n                            }\r\n                            else {\r\n                                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.ShowAlertDialog(\"Game đang bảo trì\");\r\n            }\r\n        });\r\n\r\n    }\r\n    actLoginEbet(isPlayNow = false) {\r\n        if (!Configs.Login.IsLogin) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        var self = this;\r\n        Http.get(App.API_EBET, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            //Utils.Log(res);\r\n            if (res[\"res\"] == 0) {\r\n                if (res[\"data\"] == null) {\r\n                    this.ShowAlertDialog(\"Game đang bảo trì\");\r\n                }\r\n                else {\r\n                    var balance = parseInt(res.data[\"money\"]) * 1000;\r\n                    if (balance < 10000 && isPlayNow == false) {\r\n                        this.actPopupGameTransfer(\"EBET\", balance);\r\n                    }\r\n                    else {\r\n                        App.instance.showLoading(true);\r\n                        Http.get(App.API_EBET, { t: \"Login\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                            App.instance.showLoading(false);\r\n                            if (res[\"res\"] == 0) {\r\n                                let url = \"https://zf.live-b2b.com/h5/72895c?username=%s&accessToken=%s\";\r\n                                cc.sys.openURL(cc.js.formatStr(url, res['data']['ebetid'], res['data']['token']))\r\n                            }\r\n                            else {\r\n                                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.ShowAlertDialog(\"Game đang bảo trì\");\r\n            }\r\n        });\r\n\r\n    }\r\n    actLoginShootFish(isPlayNow = false, balance = 0) {\r\n        // flow:Check Balance->show popup->goto game\r\n        if (!Configs.Login.IsLogin) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n            return;\r\n        }\r\n        if (!isPlayNow) {\r\n            this.actPopupGameTransfer(\"FISH\");\r\n        } else {\r\n            App.instance.showLoading(true);\r\n            Http.get(Configs.App.API, { c: 2021, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, mn: balance }, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                //Utils.Log(\"Res Login ShootFish:\", res);\r\n                if (res[\"errorCode\"] == \"0\") {\r\n                    //Utils.Log(\"Login Succes\");\r\n                    if (res.data != null && res.data != \"\") {\r\n                        App.instance.openWebView(res.data);\r\n                    }\r\n                } else {\r\n                    App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    removeAllWebView() {\r\n        Configs.Login.CACHE_AG = false;\r\n        Configs.Login.CACHE_IBC = false;\r\n        Configs.Login.CACHE_WM = false;\r\n\r\n        for (var key in this.cacheWebView) {\r\n            if (this.cacheWebView[key] != null) {\r\n                this.cacheWebView[key].destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    openGame(bundleName, sceneName) {\r\n        this.showLoading(true, -1);\r\n        BundleControl.loadSceneGame(bundleName, sceneName, (finish, total) => {\r\n            this.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n        }, bundle => {\r\n            this.showLoading(false);\r\n        });\r\n        // }\r\n    }\r\n\r\n    openMiniGameBauCua(bundleName, prefabName) {\r\n        this.showLoading(true, -1);\r\n        BundleControl.loadPrefabGame(bundleName, prefabName, (finish, total) => {\r\n            this.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n        }, (prefab, bundle) => {\r\n            this.showLoading(false);\r\n            if (this.bauCua == null) {\r\n                let node = cc.instantiate(prefab);\r\n                node.parent = this.canvas;\r\n                node.active = false;\r\n                this.bauCua = node.getComponent(MiniGame);\r\n                node.getComponent(\"BauCua.BauCuaController\").baucuaBundle = bundle;\r\n            }\r\n            this.showGameMini(\"BauCua\", this.bauCua.node);\r\n            this.bauCua.show();\r\n        });\r\n        // }\r\n    }\r\n\r\n    openMiniGameTaiXiuDouble(bundleName, prefabName) {\r\n        if (this.taiXiuDouble == null) {\r\n            this.showLoading(true, -1);\r\n            BundleControl.loadPrefabGame(bundleName, prefabName, (finish, total) => {\r\n                this.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                this.showLoading(false);\r\n                if (this.taiXiuDouble == null) {\r\n                    let node = cc.instantiate(prefab);\r\n                    node.parent = this.canvas;\r\n                    node.active = false;\r\n\r\n                    this.taiXiuDouble = node.getComponent(MiniGame);\r\n                }\r\n                this.showGameMini(\"TaiXiu\", this.taiXiuDouble.node);\r\n                this.taiXiuDouble.show();\r\n            });\r\n        } else {\r\n            this.showGameMini(\"TaiXiu\", this.taiXiuDouble.node);\r\n            this.taiXiuDouble.show();\r\n        }\r\n\r\n        // }\r\n    }\r\n    openMiniGameTaiXiuSieuToc(bundleName, prefabName) {\r\n        TaiXiuSTNetworkClient.getInstance().checkConnect(() => {\r\n            if (this.taiXiuSieuToc == null) {\r\n                this.showLoading(true, -1);\r\n                BundleControl.loadPrefabGame(bundleName, prefabName, (finish, total) => {\r\n                    this.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n                }, prefab => {\r\n                    this.showLoading(false);\r\n                    if (this.taiXiuSieuToc == null) {\r\n                        let node = cc.instantiate(prefab);\r\n                        node.parent = this.miniGame;\r\n                        node.active = false;\r\n                        this.taiXiuSieuToc = node.getComponent(MiniGame);\r\n                    }\r\n                    this.showGameMini(\"TaiXiuSieuToc\", this.taiXiuSieuToc.node);\r\n                    this.taiXiuSieuToc.show();\r\n                });\r\n            } else {\r\n                this.showGameMini(\"TaiXiuSieuToc\", this.taiXiuSieuToc.node);\r\n                this.taiXiuSieuToc.show();\r\n            }\r\n        })\r\n    }\r\n    openMiniGameTaiXiuMD5(bundleName, prefabName) {\r\n        if (this.TaiXiuMD5 == null) {\r\n            this.showLoading(true, -1);\r\n            BundleControl.loadPrefabGame(bundleName, prefabName, (finish, total) => {\r\n                this.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n            }, prefab => {\r\n                this.showLoading(false);\r\n                if (this.TaiXiuMD5 == null) {\r\n                    let node = cc.instantiate(prefab);\r\n                    node.parent = this.canvas;\r\n                    node.active = false;\r\n\r\n                    this.TaiXiuMD5 = node.getComponent(MiniGame);\r\n                }\r\n                this.showGameMini(\"TaiXiuMD5\", this.TaiXiuMD5.node);\r\n                this.TaiXiuMD5.show();\r\n            });\r\n        } else {\r\n            this.showGameMini(\"TaiXiuMD5\", this.TaiXiuMD5.node);\r\n            this.TaiXiuMD5.show();\r\n        }\r\n\r\n        // }\r\n    }\r\n\r\n    openMiniGameCaoThap(bundleName, prefabName) {\r\n        this.showLoading(true, -1);\r\n        BundleControl.loadPrefabGame(bundleName, prefabName, (finish, total) => {\r\n            this.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n        }, prefab => {\r\n            this.showLoading(false);\r\n            if (this.caoThap == null) {\r\n                let node = cc.instantiate(prefab);\r\n                node.parent = this.miniGame;\r\n                node.active = false;\r\n\r\n                this.caoThap = node.getComponent(MiniGame);\r\n            }\r\n            this.caoThap.show();\r\n            this.showGameMini(\"CaoThap\", this.caoThap.node);\r\n        });\r\n        // }\r\n    }\r\n\r\n    openMiniGameSlot3x3(bundleName, prefabName) {\r\n        this.showLoading(true, -1);\r\n        BundleControl.loadPrefabGame(bundleName, prefabName, (finish, total) => {\r\n            this.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n        }, prefab => {\r\n            this.showLoading(false);\r\n            if (this.slot3x3 == null) {\r\n                let node = cc.instantiate(prefab);\r\n                node.parent = this.miniGame;\r\n                node.active = false;\r\n\r\n                this.slot3x3 = node.getComponent(MiniGame);\r\n            }\r\n            this.slot3x3.show();\r\n            this.showGameMini(\"Slot3x3\", this.slot3x3.node);\r\n        });\r\n        // }\r\n    }\r\n    openMiniGameSlot3x3Gem(bundleName, prefabName) {\r\n        this.showLoading(true, -1);\r\n        BundleControl.loadPrefabGame(bundleName, prefabName, (finish, total) => {\r\n            this.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n        }, prefab => {\r\n            this.showLoading(false);\r\n            if (this.slot3x3Gem == null) {\r\n                let node = cc.instantiate(prefab);\r\n                node.parent = this.miniGame;\r\n                node.active = false;\r\n\r\n                this.slot3x3Gem = node.getComponent(MiniGame);\r\n            }\r\n            this.slot3x3Gem.show();\r\n            this.showGameMini(\"Slot3x3Gem\", this.slot3x3Gem.node);\r\n        });\r\n        // }\r\n    }\r\n\r\n    openMiniGameMiniPoker(bundleName, prefabName) {\r\n        this.showLoading(true, -1);\r\n        BundleControl.loadPrefabGame(bundleName, prefabName, (finish, total) => {\r\n            this.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n        }, prefab => {\r\n            this.showLoading(false);\r\n            if (this.miniPoker == null) {\r\n                let node = cc.instantiate(prefab);\r\n                node.parent = this.miniGame;\r\n                node.active = false;\r\n                this.miniPoker = node.getComponent(MiniGame);\r\n            }\r\n            this.miniPoker.show();\r\n            this.showGameMini(\"MiniPoker\", this.miniPoker.node);\r\n        });\r\n        // }\r\n    }\r\n\r\n    openMiniGameOneTuTi(bundleName, prefabName) {\r\n        this.showLoading(true, -1);\r\n\r\n        BundleControl.loadPrefabGame(bundleName, prefabName, (finish, total) => {\r\n            this.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n        }, prefab => {\r\n            this.showLoading(false);\r\n            if (this.oanTuTi == null) {\r\n                let node = cc.instantiate(prefab);\r\n                node.parent = this.miniGame;\r\n                node.active = false;\r\n                this.oanTuTi = node.getComponent(MiniGame);\r\n            }\r\n            this.oanTuTi.show();\r\n        });\r\n        // }\r\n    }\r\n    public openTelegram(name: string = null) {\r\n        if (name == null) {\r\n            name = Configs.App.getLinkTelegram();\r\n        }\r\n        let url = \"http://www.telegram.me/\" + name;\r\n        if (cc.sys.isNative) {\r\n            url = \"tg://resolve?domain=\" + name;\r\n        }\r\n        cc.sys.openURL(url);\r\n    }\r\n    public ShowAlertDialog(mess: string) {\r\n        this.alertDialog.showMsg(mess);\r\n    }\r\n    public showConfirmDialog(mess, cb, canClose) {\r\n        this.alertDialog.showMsgWithOnDismissed(mess, cb, canClose)\r\n    }\r\n    public showToast(msg) {\r\n        this.alertToast.active = true;\r\n        this.alertToast.zIndex = cc.macro.MAX_ZINDEX - 9;\r\n        this.alertToast.getComponentInChildren(cc.Label).string = msg;\r\n        cc.Tween.stopAllByTarget(this.alertToast);\r\n        cc.tween(this.alertToast).set({ y: 0 }).to(2.0, { y: 100 }, { easing: cc.easing.sineOut }).call(() => {\r\n            this.alertToast.active = false;\r\n        }).start();\r\n    }\r\n    public getTextLang(key: string) {\r\n        return LanguageLanguageManager.instance.getString(key)\r\n    }\r\n    public getJPGameID(gameName): string {\r\n        let gameID = \"\";\r\n        switch (gameName) {\r\n            case \"THANTAI\":\r\n                gameID = \"spartan\";\r\n                break;\r\n            case \"DUAXE\":\r\n                gameID = \"audition\";\r\n                break;\r\n            case \"CHIEMTINH\":\r\n                gameID = \"chiemtinh\";\r\n                break;\r\n            case \"THETHAO\":\r\n                gameID = \"maybach\";\r\n                break;\r\n            case \"CHIMDIEN\":\r\n                gameID = \"tamhung\";\r\n                break;\r\n            case \"BITCOIN\":\r\n                gameID = \"benley\";\r\n                break;\r\n            case \"THANBAI\":\r\n                gameID = \"rollRoye\";\r\n                break;\r\n            case \"BIKINI\":\r\n                gameID = \"bikini\";\r\n                break;\r\n            case \"PIKACHU\":\r\n                gameID = \"pokemon\";\r\n                break;\r\n            case \"MINIPOKER\":\r\n                gameID = \"minipoker\";\r\n                break;\r\n            case \"TAIXIU\":\r\n                gameID = \"TAI_XIU\";\r\n                break;\r\n        }\r\n        return gameID;\r\n    }\r\n    public getGameName(gameID) {\r\n        let gameName = gameID;\r\n        switch (gameID) {\r\n            case 'audition':\r\n                gameName = \"Đua Xe\";\r\n                break;\r\n            case 'spartan':\r\n                gameName = \"Thần Tài\";\r\n                break;\r\n            case 'pokemon':\r\n                gameName = \"Xèng\";\r\n                break;\r\n            case 'benley':\r\n                gameName = \"Bitcoin\";\r\n                break;\r\n            case 'maybach':\r\n                gameName = \"Thể Thao\";\r\n                break;\r\n            case 'tamhung':\r\n                gameName = \"Chim Điên\";\r\n                break;\r\n            case 'chiemtinh':\r\n                gameName = \"Chiêm Tinh\";\r\n                break;\r\n            case 'bikini':\r\n                gameName = \"Bikini\";\r\n                break;\r\n            case 'minipoker':\r\n                gameName = \"Mini Poker\";\r\n                break;\r\n            case 'caothap':\r\n                gameName = \"Cao Thấp\";\r\n                break;\r\n            case 'rollRoye':\r\n                gameName = \"Thần Bài\";\r\n                break;\r\n            case 'galaxy':\r\n                gameName = \"Gem\";\r\n                break;\r\n            case 'TAI_XIU':\r\n                gameName = \"Tài Xỉu\";\r\n                break;\r\n        }\r\n        return gameName;\r\n    }\r\n    checkTimeLixi() {\r\n        let timeCurent = new Date();\r\n        let timeLixi = new Date(timeCurent.getFullYear(), timeCurent.getMonth(), timeCurent.getDate(), 16);\r\n        let deltaTime = timeLixi.getTime() - timeCurent.getTime();\r\n        let deltaHour = Math.floor(deltaTime / 1000 / 3600);\r\n        let hour = deltaHour > 9 ? deltaHour : \"0\" + deltaHour;\r\n        let deltaMinutes = Math.floor((deltaTime / 1000 / 60) % 60);\r\n        let minutes = deltaMinutes > 9 ? deltaMinutes : \"0\" + deltaMinutes;\r\n        let msg = \"Sự kiện \\\"Lì Xì Giờ Vàng\\\" sẽ diễn ra sau: %sh %s phút nữa!\";\r\n        msg = cc.js.formatStr(msg, hour, minutes);\r\n        if (deltaTime > 60000) {\r\n            this.uiNotifyJackpot.addNotify({ message: msg });\r\n            this.scheduleOnce(() => {\r\n                this.checkTimeLixi();\r\n            }, 1800);\r\n        }\r\n    }\r\n    actGetEventLixi() {\r\n        // http://43.128.27.35:8081/api?c=2036&nn=BigBird&at=9350306a24c780af46509750ba4b50ab&ac=get\r\n        Http.get(Configs.App.API, { \"c\": 2036, \"nn\": Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, \"ac\": \"get\" }, (err, res) => {\r\n            if (err) {\r\n                return;\r\n            } else {\r\n             //   cc.log(res);\r\n                if (res['data'] == \"Not passed conditions\") {\r\n                    App.instance.ShowAlertDialog(\"Quý khách không đủ điều kiện tham gia sự kiện \\\"Lì Xì Giờ Vàng\\\"\\nVui lòng đọc thể lệ hoặc liên hệ CSKH!\");\r\n                } else if (res['data'] == \"Received bonus\" || res['errorCode'] == \"1003\") {\r\n                    // App.instance.ShowAlertDialog(\"Quý khách \");\r\n                } else {\r\n                    this.actShowPopupEventLixi();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    actShowPopupEventLixi() {\r\n        if (!this.popupEvent) {\r\n            let cb = (prefab) => {\r\n                this.popupEvent = cc.instantiate(prefab).getComponent(\"PopupEvent\");\r\n                this.popupEvent.node.parent = App.instance.node;\r\n                this.popupEvent.type = 1;\r\n                this.popupEvent.showpPopup();\r\n            }\r\n            BundleControl.loadPrefabPopup(\"PrefabPopup/PopupEvent\", cb);\r\n        } else {\r\n            this.popupEvent.type = 1;\r\n            this.popupEvent.showpPopup();\r\n        }\r\n    }\r\n    actShowPopupRuleLixi() {\r\n        if (!this.popupEvent) {\r\n            let cb = (prefab) => {\r\n                this.popupEvent = cc.instantiate(prefab).getComponent(\"PopupEvent\");\r\n                this.popupEvent.node.parent = App.instance.node;\r\n                this.popupEvent.type = 0;\r\n                this.popupEvent.showpPopup();\r\n            }\r\n            BundleControl.loadPrefabPopup(\"PrefabPopup/PopupEvent\", cb);\r\n        } else {\r\n            this.popupEvent.type = 0;\r\n            this.popupEvent.showpPopup();\r\n        }\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n  \r\n    show(data){\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide(){\r\n        this.node.active = false;\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport App from \"./App\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n   \r\n\r\n    public onBtnClickBgMini(){\r\n        App.instance.hideBgMiniGame();\r\n        \r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BgResizer extends cc.Component {\r\n    @property\r\n    designResolution: cc.Size = new cc.Size(1280, 720);\r\n\r\n    lastWitdh: number = 0;\r\n    lastHeight: number = 0;\r\n\r\n    start() {\r\n        this.updateSize();\r\n    }\r\n\r\n    update(dt: number) {\r\n        this.updateSize();\r\n    }\r\n\r\n    updateSize() {\r\n        var frameSize = cc.view.getFrameSize();\r\n        if (this.lastWitdh !== frameSize.width || this.lastHeight !== frameSize.height) {\r\n\r\n            this.lastWitdh = frameSize.width;\r\n            this.lastHeight = frameSize.height;\r\n\r\n            if (this.designResolution.width / this.designResolution.height > frameSize.width / frameSize.height) {\r\n                var height = this.designResolution.width * frameSize.height / frameSize.width;\r\n                var width = height * this.designResolution.width / this.designResolution.height;\r\n                \r\n                var newDesignSize = cc.size(width, height);\r\n                this.node.setContentSize(newDesignSize);\r\n            } else {\r\n                var width = this.designResolution.height * frameSize.width / frameSize.height;\r\n                var height = width * this.designResolution.height / this.designResolution.width;\r\n                var newDesignSize = cc.size(width, height);\r\n\r\n                var newDesignSize = cc.size(width, height);\r\n                this.node.setContentSize(newDesignSize);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace common {\r\n    export class BroadcastListener {\r\n        action: string;\r\n        target: cc.Component;\r\n        callback: (data: any) => void;\r\n\r\n        constructor(action: string, callback: (data: any) => void, target: cc.Component) {\r\n            this.action = action;\r\n            this.target = target;\r\n            this.callback = callback;\r\n        }\r\n    }\r\n\r\n    export class BroadcastReceiver {\r\n        public static UPDATE_NICKNAME_SUCCESS = \"UPDATE_NICKNAME_SUCCESS\";\r\n        public static LOGINED = \"LOGINED\";\r\n        public static USER_INFO_UPDATED = \"USER_INFO_UPDATED\";\r\n        public static USER_LOGOUT = \"USER_LOGOUT\";\r\n        public static USER_UPDATE_COIN = \"USER_UPDATE_COIN\";\r\n        public static ON_AUDIO_CHANGED = \"ON_AUDIO_CHANGED\";\r\n        public static ON_UPDATE_MAIL = \"ON_UPDATE_MAIL\";\r\n\r\n        private static listeners: Array<BroadcastListener> = new Array<BroadcastListener>();\r\n\r\n        public static register(action: string, callback: (data: any) => void, target: cc.Component) {\r\n            this.listeners.push(new BroadcastListener(action, callback, target));\r\n        }\r\n\r\n        public static unRegisterByAction(action: string){\r\n            for(var i = 0; i < this.listeners.length; i++){\r\n                if(this.listeners[i].action == action){\r\n                    this.listeners.splice(i--, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        public static unRegisterByTarget(target: cc.Component){\r\n            for(var i = 0; i < this.listeners.length; i++){\r\n                if(this.listeners[i].target == target){\r\n                    this.listeners.splice(i--, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        public static send(action: string, data: any = null){\r\n            for(var i = 0; i < this.listeners.length; i++){\r\n                let listener = this.listeners[i];\r\n                if(listener.action == action){\r\n                    if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                        listener.callback(data);\r\n                    } else {\r\n                        this.listeners.splice(i--, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default common.BroadcastReceiver;","//import Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport cmd from \"./Lobby.Cmd\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport SPUtils from \"./Script/common/SPUtils\";\r\nimport Utils from \"./Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"./Script/networks/MiniGameNetworkClient\";\r\nimport InPacket from \"./Script/networks/Network.InPacket\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ButtonMiniGame extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    labelTime: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelTimePanel: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    button: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    buttonAG: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    buttonTxSieuToc: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    buttonIBC: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    buttonWM: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    panel: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    container: cc.Node = null;\r\n\r\n\r\n\r\n    private buttonClicked = true;\r\n    private buttonMoved = cc.Vec2.ZERO;\r\n\r\n    private buttonClickedAG = true;\r\n    private buttonMovedAG = cc.Vec2.ZERO;\r\n\r\n    private buttonClickedIBC = true;\r\n    private buttonMovedIBC = cc.Vec2.ZERO;\r\n\r\n    private buttonClickedWM = true;\r\n    private buttonMovedWM = cc.Vec2.ZERO;\r\n\r\n    onLoad() {\r\n        if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\r\n            this.buttonTxSieuToc.color = cc.Color.GRAY;\r\n            this.buttonTxSieuToc.getComponent(cc.Button).interactable = false;\r\n        }\r\n        this.panel.active = false;\r\n        this.button.active = false;\r\n        this.labelTime.string = \"00\";\r\n        this.labelTimePanel.string = \"00\";\r\n        this.button.x = cc.winSize.width / 2 - 50;\r\n        this.button.on(cc.Node.EventType.TOUCH_START, (event: cc.Event.EventTouch) => {\r\n            this.buttonClicked = true;\r\n            this.buttonMoved = cc.Vec2.ZERO;\r\n        }, this);\r\n\r\n        this.button.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\r\n            this.buttonMoved = this.buttonMoved.add(event.getDelta());\r\n            if (this.buttonClicked) {\r\n                if (Math.abs(this.buttonMoved.x) > 30 || Math.abs(this.buttonMoved.y) > 30) {\r\n                    let pos = this.button.position;\r\n                    pos.x += this.buttonMoved.x;\r\n                    pos.y += this.buttonMoved.y;\r\n                    this.button.position = pos;\r\n                    this.buttonClicked = false;\r\n                }\r\n            } else {\r\n                let pos = this.button.position;\r\n                pos.x += event.getDeltaX();\r\n                pos.y += event.getDeltaY();\r\n                this.button.position = pos;\r\n            }\r\n        }, this);\r\n\r\n        this.button.on(cc.Node.EventType.TOUCH_END, (event: cc.Event.EventTouch) => {\r\n            if (this.buttonClicked) {\r\n                this.actButton();\r\n            }\r\n            let posX = this.button.x > 0 ? cc.winSize.width / 2 - 55 : -cc.winSize.width / 2 + 90;\r\n            cc.tween(this.button).to(0.3, { x: posX }, { easing: cc.easing.sineOut }).start();\r\n        }, this);\r\n\r\n        //AG\r\n        this.buttonAG.on(cc.Node.EventType.TOUCH_START, (event: cc.Event.EventTouch) => {\r\n            this.buttonClickedAG = true;\r\n            this.buttonMovedAG = cc.Vec2.ZERO;\r\n        }, this);\r\n\r\n        this.buttonAG.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\r\n            this.buttonMovedAG = this.buttonMovedAG.add(event.getDelta());\r\n            if (this.buttonClickedAG) {\r\n                if (Math.abs(this.buttonMovedAG.x) > 30 || Math.abs(this.buttonMovedAG.y) > 30) {\r\n                    let pos = this.buttonAG.position;\r\n                    pos.x += this.buttonMovedAG.x;\r\n                    pos.y += this.buttonMovedAG.y;\r\n                    this.buttonAG.position = pos;\r\n                    this.buttonClickedAG = false;\r\n                }\r\n            } else {\r\n                let pos = this.buttonAG.position;\r\n                pos.x += event.getDeltaX();\r\n                pos.y += event.getDeltaY();\r\n                this.buttonAG.position = pos;\r\n            }\r\n        }, this);\r\n\r\n        this.buttonAG.on(cc.Node.EventType.TOUCH_END, (event: cc.Event.EventTouch) => {\r\n            if (this.buttonClickedAG) {\r\n                this.actButtonAG();\r\n            }\r\n        }, this);\r\n\r\n        //IBC\r\n        this.buttonIBC.on(cc.Node.EventType.TOUCH_START, (event: cc.Event.EventTouch) => {\r\n            this.buttonClickedIBC = true;\r\n            this.buttonMovedIBC = cc.Vec2.ZERO;\r\n        }, this);\r\n\r\n        this.buttonIBC.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\r\n            this.buttonMovedIBC = this.buttonMovedIBC.add(event.getDelta());\r\n            if (this.buttonClickedIBC) {\r\n                if (Math.abs(this.buttonMovedIBC.x) > 30 || Math.abs(this.buttonMovedIBC.y) > 30) {\r\n                    let pos = this.buttonIBC.position;\r\n                    pos.x += this.buttonMovedIBC.x;\r\n                    pos.y += this.buttonMovedIBC.y;\r\n                    this.buttonIBC.position = pos;\r\n                    this.buttonClickedIBC = false;\r\n                }\r\n            } else {\r\n                let pos = this.buttonIBC.position;\r\n                pos.x += event.getDeltaX();\r\n                pos.y += event.getDeltaY();\r\n                this.buttonIBC.position = pos;\r\n            }\r\n        }, this);\r\n\r\n        this.buttonIBC.on(cc.Node.EventType.TOUCH_END, (event: cc.Event.EventTouch) => {\r\n            if (this.buttonClickedIBC) {\r\n                this.actButtonIBC();\r\n            }\r\n        }, this);\r\n\r\n        //WM\r\n        this.buttonWM.on(cc.Node.EventType.TOUCH_START, (event: cc.Event.EventTouch) => {\r\n            this.buttonClickedWM = true;\r\n            this.buttonMovedWM = cc.Vec2.ZERO;\r\n        }, this);\r\n\r\n        this.buttonWM.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\r\n            this.buttonMovedWM = this.buttonMovedWM.add(event.getDelta());\r\n            if (this.buttonClickedWM) {\r\n                if (Math.abs(this.buttonMovedWM.x) > 30 || Math.abs(this.buttonMovedWM.y) > 30) {\r\n                    let pos = this.buttonWM.position;\r\n                    pos.x += this.buttonMovedWM.x;\r\n                    pos.y += this.buttonMovedWM.y;\r\n                    this.buttonWM.position = pos;\r\n                    this.buttonClickedWM = false;\r\n                }\r\n            } else {\r\n                let pos = this.buttonWM.position;\r\n                pos.x += event.getDeltaX();\r\n                pos.y += event.getDeltaY();\r\n                this.buttonWM.position = pos;\r\n            }\r\n        }, this);\r\n\r\n        this.buttonWM.on(cc.Node.EventType.TOUCH_END, (event: cc.Event.EventTouch) => {\r\n            if (this.buttonClickedWM) {\r\n                this.actButtonWM();\r\n            }\r\n        }, this);\r\n\r\n        MiniGameNetworkClient.getInstance().addListener((data: Uint8Array) => {\r\n            let inpacket = new InPacket(data);\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.UPDATE_TIME_BUTTON:\r\n                    {\r\n                        let res = new cmd.ReceiveUpdateTimeButton(data);\r\n                        this.labelTime.string = res.remainTime > 9 ? res.remainTime.toString() : \"0\" + res.remainTime;\r\n                        this.labelTimePanel.string = res.remainTime > 9 ? res.remainTime.toString() : \"0\" + res.remainTime;\r\n                    }\r\n                    break;\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    \r\n\r\n   \r\n\r\n    \r\n\r\n\r\n    show() {\r\n        this.panel.active = false;\r\n        this.button.active = true;\r\n        this.labelTime.string = \"00\";\r\n        this.labelTimePanel.string = \"00\";\r\n    }\r\n\r\n    hidden() {\r\n\r\n        this.panel.active = false;\r\n        this.button.active = false;\r\n\r\n\r\n\r\n    }\r\n\r\n    showTimeTaiXiu(isShow: boolean) {\r\n        this.labelTime.node.parent.active = isShow;\r\n    }\r\n\r\n    actButton() {\r\n        this.panel.active = true;\r\n        this.button.active = false;\r\n        cc.tween(this.panel.getChildByName(\"Container\")).set({ angle: -180, scale: 0 }).to(0.3, { scale: 1.0, angle: 0 }, { easing: cc.easing.sineOut }).start();\r\n    }\r\n\r\n    actHidden() {\r\n        cc.tween(this.panel.getChildByName(\"Container\")).to(0.3, { angle: -180, scale: 0 }, { easing: cc.easing.sineIn }).call(() => {\r\n            this.panel.active = false;\r\n            this.button.active = true;\r\n        }).start();\r\n    }\r\n\r\n    actTaiXiu() {\r\n        App.instance.openMiniGameTaiXiuDouble(\"TaiXiuDouble\", \"TaiXiuDouble\");\r\n        this.actHidden();\r\n    }\r\n\tactTaiXiuMD5() {\r\n        App.instance.openMiniGameTaiXiuMD5(\"TaiXiuMD5\", \"TaiXiuMD5\");\r\n        this.actHidden();\r\n    }\r\n    actTaiXiuSieuToc() {\r\n        App.instance.openMiniGameTaiXiuSieuToc(\"TaiXiuSieuToc\", \"TaiXiuSieuToc\");\r\n        this.actHidden();\r\n    }\r\n\r\n    actMiniPoker() {\r\n        App.instance.openMiniGameMiniPoker(\"MiniPoker\", \"MiniPoker\");\r\n        this.actHidden();\r\n    }\r\n\r\n    actSlot3x3() {\r\n        App.instance.openMiniGameSlot3x3(\"Slot3x3\", \"Slot3x3\");\r\n        this.actHidden();\r\n    }\r\n    actSlot3x3Gem() {\r\n        App.instance.openMiniGameSlot3x3Gem(\"Slot3x3Gem\", \"Slot3x3Gem\");\r\n        this.actHidden();\r\n    }\r\n\r\n    actCaoThap() {\r\n        App.instance.openMiniGameCaoThap(\"CaoThap\", \"CaoThap\");\r\n        this.actHidden();\r\n    }\r\n\r\n    actBauCua() {\r\n        App.instance.openMiniGameBauCua(\"BauCua\", \"BauCua\");\r\n        this.actHidden();\r\n    }\r\n\r\n    actChimDien() {\r\n        App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_coming_soon\"));\r\n        this.actHidden();\r\n    }\r\n    actMaintain() {\r\n        App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_reparing\"));\r\n        this.actHidden();\r\n    }\r\n\r\n    actOanTuTi() {\r\n        App.instance.openMiniGameOneTuTi(\"OanTuTi\", \"OanTuTi\");\r\n        this.actHidden();\r\n    }\r\n}","//---------------------------------------------------------------------\r\n// QRCode for JavaScript\r\n//\r\n// Copyright (c) 2009 Kazuhiko Arase\r\n//\r\n// URL: http://www.d-project.com/\r\n//\r\n// Licensed under the MIT license:\r\n//   http://www.opensource.org/licenses/mit-license.php\r\n//\r\n// The word \"QR Code\" is registered trademark of \r\n// DENSO WAVE INCORPORATED\r\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\r\n//\r\n//---------------------------------------------------------------------\r\n\r\n//---------------------------------------------------------------------\r\n// QR8bitByte\r\n//---------------------------------------------------------------------\r\n\r\nfunction QR8bitByte(data) {\r\n    this.mode = QRMode.MODE_8BIT_BYTE;\r\n    this.data = data;\r\n}\r\n\r\nQR8bitByte.prototype = {\r\n\r\n    getLength: function (buffer) {\r\n        return this.data.length;\r\n    },\r\n\r\n    write: function (buffer) {\r\n        for (let i = 0; i < this.data.length; i++) {\r\n            // not JIS ...\r\n            buffer.put(this.data.charCodeAt(i), 8);\r\n        }\r\n    }\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRCode\r\n//---------------------------------------------------------------------\r\n\r\nlet QRCode = function (typeNumber, errorCorrectLevel) {\r\n    this.typeNumber = typeNumber;\r\n    this.errorCorrectLevel = errorCorrectLevel;\r\n    this.modules = null;\r\n    this.moduleCount = 0;\r\n    this.dataCache = null;\r\n    this.dataList = new Array();\r\n}\r\n\r\nQRCode.prototype = {\r\n\r\n    addData: function (data) {\r\n        let newData = new QR8bitByte(data);\r\n        this.dataList.push(newData);\r\n        this.dataCache = null;\r\n    },\r\n\r\n    isDark: function (row, col) {\r\n        if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\r\n            throw new Error(row + \",\" + col);\r\n        }\r\n        return this.modules[row][col];\r\n    },\r\n\r\n    getModuleCount: function () {\r\n        return this.moduleCount;\r\n    },\r\n\r\n    make: function () {\r\n        // Calculate automatically typeNumber if provided is < 1\r\n        if (this.typeNumber < 1) {\r\n            let typeNumber = 1;\r\n            for (typeNumber = 1; typeNumber < 40; typeNumber++) {\r\n                let rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\r\n\r\n                let buffer = new QRBitBuffer();\r\n                let totalDataCount = 0;\r\n                for (let i = 0; i < rsBlocks.length; i++) {\r\n                    totalDataCount += rsBlocks[i].dataCount;\r\n                }\r\n\r\n                for (let i = 0; i < this.dataList.length; i++) {\r\n                    let data = this.dataList[i];\r\n                    buffer.put(data.mode, 4);\r\n                    buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\r\n                    data.write(buffer);\r\n                }\r\n                if (buffer.getLengthInBits() <= totalDataCount * 8)\r\n                    break;\r\n            }\r\n            this.typeNumber = typeNumber;\r\n        }\r\n        this.makeImpl(false, this.getBestMaskPattern());\r\n    },\r\n\r\n    makeImpl: function (test, maskPattern) {\r\n\r\n        this.moduleCount = this.typeNumber * 4 + 17;\r\n        this.modules = new Array(this.moduleCount);\r\n\r\n        for (let row = 0; row < this.moduleCount; row++) {\r\n\r\n            this.modules[row] = new Array(this.moduleCount);\r\n\r\n            for (let col = 0; col < this.moduleCount; col++) {\r\n                this.modules[row][col] = null;//(col + row) % 3;\r\n            }\r\n        }\r\n\r\n        this.setupPositionProbePattern(0, 0);\r\n        this.setupPositionProbePattern(this.moduleCount - 7, 0);\r\n        this.setupPositionProbePattern(0, this.moduleCount - 7);\r\n        this.setupPositionAdjustPattern();\r\n        this.setupTimingPattern();\r\n        this.setupTypeInfo(test, maskPattern);\r\n\r\n        if (this.typeNumber >= 7) {\r\n            this.setupTypeNumber(test);\r\n        }\r\n\r\n        if (this.dataCache == null) {\r\n            this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\r\n        }\r\n\r\n        this.mapData(this.dataCache, maskPattern);\r\n    },\r\n\r\n    setupPositionProbePattern: function (row, col) {\r\n\r\n        for (let r = -1; r <= 7; r++) {\r\n\r\n            if (row + r <= -1 || this.moduleCount <= row + r) continue;\r\n\r\n            for (let c = -1; c <= 7; c++) {\r\n\r\n                if (col + c <= -1 || this.moduleCount <= col + c) continue;\r\n\r\n                if ((0 <= r && r <= 6 && (c == 0 || c == 6))\r\n                    || (0 <= c && c <= 6 && (r == 0 || r == 6))\r\n                    || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\r\n                    this.modules[row + r][col + c] = true;\r\n                } else {\r\n                    this.modules[row + r][col + c] = false;\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    getBestMaskPattern: function () {\r\n\r\n        let minLostPoint = 0;\r\n        let pattern = 0;\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n\r\n            this.makeImpl(true, i);\r\n\r\n            let lostPoint = QRUtil.getLostPoint(this);\r\n\r\n            if (i == 0 || minLostPoint > lostPoint) {\r\n                minLostPoint = lostPoint;\r\n                pattern = i;\r\n            }\r\n        }\r\n\r\n        return pattern;\r\n    },\r\n\r\n    createMovieClip: function (target_mc, instance_name, depth) {\r\n\r\n        let qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\r\n        let cs = 1;\r\n\r\n        this.make();\r\n\r\n        for (let row = 0; row < this.modules.length; row++) {\r\n\r\n            let y = row * cs;\r\n\r\n            for (let col = 0; col < this.modules[row].length; col++) {\r\n\r\n                let x = col * cs;\r\n                let dark = this.modules[row][col];\r\n\r\n                if (dark) {\r\n                    qr_mc.beginFill(0, 100);\r\n                    qr_mc.moveTo(x, y);\r\n                    qr_mc.lineTo(x + cs, y);\r\n                    qr_mc.lineTo(x + cs, y + cs);\r\n                    qr_mc.lineTo(x, y + cs);\r\n                    qr_mc.endFill();\r\n                }\r\n            }\r\n        }\r\n\r\n        return qr_mc;\r\n    },\r\n\r\n    setupTimingPattern: function () {\r\n\r\n        for (let r = 8; r < this.moduleCount - 8; r++) {\r\n            if (this.modules[r][6] != null) {\r\n                continue;\r\n            }\r\n            this.modules[r][6] = (r % 2 == 0);\r\n        }\r\n\r\n        for (let c = 8; c < this.moduleCount - 8; c++) {\r\n            if (this.modules[6][c] != null) {\r\n                continue;\r\n            }\r\n            this.modules[6][c] = (c % 2 == 0);\r\n        }\r\n    },\r\n\r\n    setupPositionAdjustPattern: function () {\r\n\r\n        let pos = QRUtil.getPatternPosition(this.typeNumber);\r\n\r\n        for (let i = 0; i < pos.length; i++) {\r\n\r\n            for (let j = 0; j < pos.length; j++) {\r\n\r\n                let row = pos[i];\r\n                let col = pos[j];\r\n\r\n                if (this.modules[row][col] != null) {\r\n                    continue;\r\n                }\r\n\r\n                for (let r = -2; r <= 2; r++) {\r\n\r\n                    for (let c = -2; c <= 2; c++) {\r\n\r\n                        if (r == -2 || r == 2 || c == -2 || c == 2\r\n                            || (r == 0 && c == 0)) {\r\n                            this.modules[row + r][col + c] = true;\r\n                        } else {\r\n                            this.modules[row + r][col + c] = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    setupTypeNumber: function (test) {\r\n\r\n        let bits = QRUtil.getBCHTypeNumber(this.typeNumber);\r\n\r\n        for (let i = 0; i < 18; i++) {\r\n            let mod = (!test && ((bits >> i) & 1) == 1);\r\n            this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\r\n        }\r\n\r\n        for (let i = 0; i < 18; i++) {\r\n            let mod = (!test && ((bits >> i) & 1) == 1);\r\n            this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\r\n        }\r\n    },\r\n\r\n    setupTypeInfo: function (test, maskPattern) {\r\n\r\n        let data = (this.errorCorrectLevel << 3) | maskPattern;\r\n        let bits = QRUtil.getBCHTypeInfo(data);\r\n\r\n        // vertical\t\t\r\n        for (let i = 0; i < 15; i++) {\r\n\r\n            let mod = (!test && ((bits >> i) & 1) == 1);\r\n\r\n            if (i < 6) {\r\n                this.modules[i][8] = mod;\r\n            } else if (i < 8) {\r\n                this.modules[i + 1][8] = mod;\r\n            } else {\r\n                this.modules[this.moduleCount - 15 + i][8] = mod;\r\n            }\r\n        }\r\n\r\n        // horizontal\r\n        for (let i = 0; i < 15; i++) {\r\n\r\n            let mod = (!test && ((bits >> i) & 1) == 1);\r\n\r\n            if (i < 8) {\r\n                this.modules[8][this.moduleCount - i - 1] = mod;\r\n            } else if (i < 9) {\r\n                this.modules[8][15 - i - 1 + 1] = mod;\r\n            } else {\r\n                this.modules[8][15 - i - 1] = mod;\r\n            }\r\n        }\r\n\r\n        // fixed module\r\n        this.modules[this.moduleCount - 8][8] = (!test);\r\n\r\n    },\r\n\r\n    mapData: function (data, maskPattern) {\r\n\r\n        let inc = -1;\r\n        let row = this.moduleCount - 1;\r\n        let bitIndex = 7;\r\n        let byteIndex = 0;\r\n\r\n        for (let col = this.moduleCount - 1; col > 0; col -= 2) {\r\n\r\n            if (col == 6) col--;\r\n\r\n            while (true) {\r\n\r\n                for (let c = 0; c < 2; c++) {\r\n\r\n                    if (this.modules[row][col - c] == null) {\r\n\r\n                        let dark = false;\r\n\r\n                        if (byteIndex < data.length) {\r\n                            dark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\r\n                        }\r\n\r\n                        let mask = QRUtil.getMask(maskPattern, row, col - c);\r\n\r\n                        if (mask) {\r\n                            dark = !dark;\r\n                        }\r\n\r\n                        this.modules[row][col - c] = dark;\r\n                        bitIndex--;\r\n\r\n                        if (bitIndex == -1) {\r\n                            byteIndex++;\r\n                            bitIndex = 7;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                row += inc;\r\n\r\n                if (row < 0 || this.moduleCount <= row) {\r\n                    row -= inc;\r\n                    inc = -inc;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nQRCode.PAD0 = 0xEC;\r\nQRCode.PAD1 = 0x11;\r\n\r\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\r\n\r\n    let rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\r\n\r\n    let buffer = new QRBitBuffer();\r\n\r\n    for (let i = 0; i < dataList.length; i++) {\r\n        let data = dataList[i];\r\n        buffer.put(data.mode, 4);\r\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\r\n        data.write(buffer);\r\n    }\r\n\r\n    // calc num max data.\r\n    let totalDataCount = 0;\r\n    for (let i = 0; i < rsBlocks.length; i++) {\r\n        totalDataCount += rsBlocks[i].dataCount;\r\n    }\r\n\r\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\r\n        throw new Error(\"code length overflow. (\"\r\n            + buffer.getLengthInBits()\r\n            + \">\"\r\n            + totalDataCount * 8\r\n            + \")\");\r\n    }\r\n\r\n    // end code\r\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\r\n        buffer.put(0, 4);\r\n    }\r\n\r\n    // padding\r\n    while (buffer.getLengthInBits() % 8 != 0) {\r\n        buffer.putBit(false);\r\n    }\r\n\r\n    // padding\r\n    while (true) {\r\n\r\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n            break;\r\n        }\r\n        buffer.put(QRCode.PAD0, 8);\r\n\r\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n            break;\r\n        }\r\n        buffer.put(QRCode.PAD1, 8);\r\n    }\r\n\r\n    return QRCode.createBytes(buffer, rsBlocks);\r\n}\r\n\r\nQRCode.createBytes = function (buffer, rsBlocks) {\r\n\r\n    let offset = 0;\r\n\r\n    let maxDcCount = 0;\r\n    let maxEcCount = 0;\r\n\r\n    let dcdata = new Array(rsBlocks.length);\r\n    let ecdata = new Array(rsBlocks.length);\r\n\r\n    for (let r = 0; r < rsBlocks.length; r++) {\r\n\r\n        let dcCount = rsBlocks[r].dataCount;\r\n        let ecCount = rsBlocks[r].totalCount - dcCount;\r\n\r\n        maxDcCount = Math.max(maxDcCount, dcCount);\r\n        maxEcCount = Math.max(maxEcCount, ecCount);\r\n\r\n        dcdata[r] = new Array(dcCount);\r\n\r\n        for (let i = 0; i < dcdata[r].length; i++) {\r\n            dcdata[r][i] = 0xff & buffer.buffer[i + offset];\r\n        }\r\n        offset += dcCount;\r\n\r\n        let rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\r\n        let rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\r\n\r\n        let modPoly = rawPoly.mod(rsPoly);\r\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\r\n        for (let i = 0; i < ecdata[r].length; i++) {\r\n            let modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n            ecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\r\n        }\r\n\r\n    }\r\n\r\n    let totalCodeCount = 0;\r\n    for (let i = 0; i < rsBlocks.length; i++) {\r\n        totalCodeCount += rsBlocks[i].totalCount;\r\n    }\r\n\r\n    let data = new Array(totalCodeCount);\r\n    let index = 0;\r\n\r\n    for (let i = 0; i < maxDcCount; i++) {\r\n        for (let r = 0; r < rsBlocks.length; r++) {\r\n            if (i < dcdata[r].length) {\r\n                data[index++] = dcdata[r][i];\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < maxEcCount; i++) {\r\n        for (let r = 0; r < rsBlocks.length; r++) {\r\n            if (i < ecdata[r].length) {\r\n                data[index++] = ecdata[r][i];\r\n            }\r\n        }\r\n    }\r\n\r\n    return data;\r\n\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRMode\r\n//---------------------------------------------------------------------\r\n\r\nlet QRMode = {\r\n    MODE_NUMBER: 1 << 0,\r\n    MODE_ALPHA_NUM: 1 << 1,\r\n    MODE_8BIT_BYTE: 1 << 2,\r\n    MODE_KANJI: 1 << 3\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRErrorCorrectLevel\r\n//---------------------------------------------------------------------\r\n\r\nlet QRErrorCorrectLevel = {\r\n    L: 1,\r\n    M: 0,\r\n    Q: 3,\r\n    H: 2\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRMaskPattern\r\n//---------------------------------------------------------------------\r\n\r\nlet QRMaskPattern = {\r\n    PATTERN000: 0,\r\n    PATTERN001: 1,\r\n    PATTERN010: 2,\r\n    PATTERN011: 3,\r\n    PATTERN100: 4,\r\n    PATTERN101: 5,\r\n    PATTERN110: 6,\r\n    PATTERN111: 7\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRUtil\r\n//---------------------------------------------------------------------\r\n\r\nlet QRUtil = {\r\n\r\n    PATTERN_POSITION_TABLE: [\r\n        [],\r\n        [6, 18],\r\n        [6, 22],\r\n        [6, 26],\r\n        [6, 30],\r\n        [6, 34],\r\n        [6, 22, 38],\r\n        [6, 24, 42],\r\n        [6, 26, 46],\r\n        [6, 28, 50],\r\n        [6, 30, 54],\r\n        [6, 32, 58],\r\n        [6, 34, 62],\r\n        [6, 26, 46, 66],\r\n        [6, 26, 48, 70],\r\n        [6, 26, 50, 74],\r\n        [6, 30, 54, 78],\r\n        [6, 30, 56, 82],\r\n        [6, 30, 58, 86],\r\n        [6, 34, 62, 90],\r\n        [6, 28, 50, 72, 94],\r\n        [6, 26, 50, 74, 98],\r\n        [6, 30, 54, 78, 102],\r\n        [6, 28, 54, 80, 106],\r\n        [6, 32, 58, 84, 110],\r\n        [6, 30, 58, 86, 114],\r\n        [6, 34, 62, 90, 118],\r\n        [6, 26, 50, 74, 98, 122],\r\n        [6, 30, 54, 78, 102, 126],\r\n        [6, 26, 52, 78, 104, 130],\r\n        [6, 30, 56, 82, 108, 134],\r\n        [6, 34, 60, 86, 112, 138],\r\n        [6, 30, 58, 86, 114, 142],\r\n        [6, 34, 62, 90, 118, 146],\r\n        [6, 30, 54, 78, 102, 126, 150],\r\n        [6, 24, 50, 76, 102, 128, 154],\r\n        [6, 28, 54, 80, 106, 132, 158],\r\n        [6, 32, 58, 84, 110, 136, 162],\r\n        [6, 26, 54, 82, 110, 138, 166],\r\n        [6, 30, 58, 86, 114, 142, 170]\r\n    ],\r\n\r\n    G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\r\n    G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\r\n    G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\r\n\r\n    getBCHTypeInfo: function (data) {\r\n        let d = data << 10;\r\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\r\n            d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15)));\r\n        }\r\n        return ((data << 10) | d) ^ QRUtil.G15_MASK;\r\n    },\r\n\r\n    getBCHTypeNumber: function (data) {\r\n        let d = data << 12;\r\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\r\n            d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18)));\r\n        }\r\n        return (data << 12) | d;\r\n    },\r\n\r\n    getBCHDigit: function (data) {\r\n\r\n        let digit = 0;\r\n\r\n        while (data != 0) {\r\n            digit++;\r\n            data >>>= 1;\r\n        }\r\n\r\n        return digit;\r\n    },\r\n\r\n    getPatternPosition: function (typeNumber) {\r\n        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\r\n    },\r\n\r\n    getMask: function (maskPattern, i, j) {\r\n\r\n        switch (maskPattern) {\r\n\r\n            case QRMaskPattern.PATTERN000: return (i + j) % 2 == 0;\r\n            case QRMaskPattern.PATTERN001: return i % 2 == 0;\r\n            case QRMaskPattern.PATTERN010: return j % 3 == 0;\r\n            case QRMaskPattern.PATTERN011: return (i + j) % 3 == 0;\r\n            case QRMaskPattern.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\r\n            case QRMaskPattern.PATTERN101: return (i * j) % 2 + (i * j) % 3 == 0;\r\n            case QRMaskPattern.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 == 0;\r\n            case QRMaskPattern.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 == 0;\r\n\r\n            default:\r\n                throw new Error(\"bad maskPattern:\" + maskPattern);\r\n        }\r\n    },\r\n\r\n    getErrorCorrectPolynomial: function (errorCorrectLength) {\r\n\r\n        let a = new QRPolynomial([1], 0);\r\n\r\n        for (let i = 0; i < errorCorrectLength; i++) {\r\n            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\r\n        }\r\n\r\n        return a;\r\n    },\r\n\r\n    getLengthInBits: function (mode, type) {\r\n\r\n        if (1 <= type && type < 10) {\r\n\r\n            // 1 - 9\r\n\r\n            switch (mode) {\r\n                case QRMode.MODE_NUMBER: return 10;\r\n                case QRMode.MODE_ALPHA_NUM: return 9;\r\n                case QRMode.MODE_8BIT_BYTE: return 8;\r\n                case QRMode.MODE_KANJI: return 8;\r\n                default:\r\n                    throw new Error(\"mode:\" + mode);\r\n            }\r\n\r\n        } else if (type < 27) {\r\n\r\n            // 10 - 26\r\n\r\n            switch (mode) {\r\n                case QRMode.MODE_NUMBER: return 12;\r\n                case QRMode.MODE_ALPHA_NUM: return 11;\r\n                case QRMode.MODE_8BIT_BYTE: return 16;\r\n                case QRMode.MODE_KANJI: return 10;\r\n                default:\r\n                    throw new Error(\"mode:\" + mode);\r\n            }\r\n\r\n        } else if (type < 41) {\r\n\r\n            // 27 - 40\r\n\r\n            switch (mode) {\r\n                case QRMode.MODE_NUMBER: return 14;\r\n                case QRMode.MODE_ALPHA_NUM: return 13;\r\n                case QRMode.MODE_8BIT_BYTE: return 16;\r\n                case QRMode.MODE_KANJI: return 12;\r\n                default:\r\n                    throw new Error(\"mode:\" + mode);\r\n            }\r\n\r\n        } else {\r\n            throw new Error(\"type:\" + type);\r\n        }\r\n    },\r\n\r\n    getLostPoint: function (qrCode) {\r\n\r\n        let moduleCount = qrCode.getModuleCount();\r\n\r\n        let lostPoint = 0;\r\n\r\n        // LEVEL1\r\n\r\n        for (let row = 0; row < moduleCount; row++) {\r\n\r\n            for (let col = 0; col < moduleCount; col++) {\r\n\r\n                let sameCount = 0;\r\n                let dark = qrCode.isDark(row, col);\r\n\r\n                for (let r = -1; r <= 1; r++) {\r\n\r\n                    if (row + r < 0 || moduleCount <= row + r) {\r\n                        continue;\r\n                    }\r\n\r\n                    for (let c = -1; c <= 1; c++) {\r\n\r\n                        if (col + c < 0 || moduleCount <= col + c) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (r == 0 && c == 0) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (dark == qrCode.isDark(row + r, col + c)) {\r\n                            sameCount++;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (sameCount > 5) {\r\n                    lostPoint += (3 + sameCount - 5);\r\n                }\r\n            }\r\n        }\r\n\r\n        // LEVEL2\r\n\r\n        for (let row = 0; row < moduleCount - 1; row++) {\r\n            for (let col = 0; col < moduleCount - 1; col++) {\r\n                let count = 0;\r\n                if (qrCode.isDark(row, col)) count++;\r\n                if (qrCode.isDark(row + 1, col)) count++;\r\n                if (qrCode.isDark(row, col + 1)) count++;\r\n                if (qrCode.isDark(row + 1, col + 1)) count++;\r\n                if (count == 0 || count == 4) {\r\n                    lostPoint += 3;\r\n                }\r\n            }\r\n        }\r\n\r\n        // LEVEL3\r\n\r\n        for (let row = 0; row < moduleCount; row++) {\r\n            for (let col = 0; col < moduleCount - 6; col++) {\r\n                if (qrCode.isDark(row, col)\r\n                    && !qrCode.isDark(row, col + 1)\r\n                    && qrCode.isDark(row, col + 2)\r\n                    && qrCode.isDark(row, col + 3)\r\n                    && qrCode.isDark(row, col + 4)\r\n                    && !qrCode.isDark(row, col + 5)\r\n                    && qrCode.isDark(row, col + 6)) {\r\n                    lostPoint += 40;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let col = 0; col < moduleCount; col++) {\r\n            for (let row = 0; row < moduleCount - 6; row++) {\r\n                if (qrCode.isDark(row, col)\r\n                    && !qrCode.isDark(row + 1, col)\r\n                    && qrCode.isDark(row + 2, col)\r\n                    && qrCode.isDark(row + 3, col)\r\n                    && qrCode.isDark(row + 4, col)\r\n                    && !qrCode.isDark(row + 5, col)\r\n                    && qrCode.isDark(row + 6, col)) {\r\n                    lostPoint += 40;\r\n                }\r\n            }\r\n        }\r\n\r\n        // LEVEL4\r\n\r\n        let darkCount = 0;\r\n\r\n        for (let col = 0; col < moduleCount; col++) {\r\n            for (let row = 0; row < moduleCount; row++) {\r\n                if (qrCode.isDark(row, col)) {\r\n                    darkCount++;\r\n                }\r\n            }\r\n        }\r\n\r\n        let ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\r\n        lostPoint += ratio * 10;\r\n\r\n        return lostPoint;\r\n    }\r\n\r\n};\r\n\r\n\r\n//---------------------------------------------------------------------\r\n// QRMath\r\n//---------------------------------------------------------------------\r\n\r\nlet QRMath = {\r\n\r\n    glog: function (n) {\r\n\r\n        if (n < 1) {\r\n            throw new Error(\"glog(\" + n + \")\");\r\n        }\r\n\r\n        return QRMath.LOG_TABLE[n];\r\n    },\r\n\r\n    gexp: function (n) {\r\n\r\n        while (n < 0) {\r\n            n += 255;\r\n        }\r\n\r\n        while (n >= 256) {\r\n            n -= 255;\r\n        }\r\n\r\n        return QRMath.EXP_TABLE[n];\r\n    },\r\n\r\n    EXP_TABLE: new Array(256),\r\n\r\n    LOG_TABLE: new Array(256)\r\n\r\n};\r\n\r\nfor (let i = 0; i < 8; i++) {\r\n    QRMath.EXP_TABLE[i] = 1 << i;\r\n}\r\nfor (let i = 8; i < 256; i++) {\r\n    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\r\n        ^ QRMath.EXP_TABLE[i - 5]\r\n        ^ QRMath.EXP_TABLE[i - 6]\r\n        ^ QRMath.EXP_TABLE[i - 8];\r\n}\r\nfor (let i = 0; i < 255; i++) {\r\n    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRPolynomial\r\n//---------------------------------------------------------------------\r\n\r\nfunction QRPolynomial(num, shift) {\r\n\r\n    if (num.length == undefined) {\r\n        throw new Error(num.length + \"/\" + shift);\r\n    }\r\n\r\n    let offset = 0;\r\n\r\n    while (offset < num.length && num[offset] == 0) {\r\n        offset++;\r\n    }\r\n\r\n    this.num = new Array(num.length - offset + shift);\r\n    for (let i = 0; i < num.length - offset; i++) {\r\n        this.num[i] = num[i + offset];\r\n    }\r\n}\r\n\r\nQRPolynomial.prototype = {\r\n\r\n    get: function (index) {\r\n        return this.num[index];\r\n    },\r\n\r\n    getLength: function () {\r\n        return this.num.length;\r\n    },\r\n\r\n    multiply: function (e) {\r\n\r\n        let num = new Array(this.getLength() + e.getLength() - 1);\r\n\r\n        for (let i = 0; i < this.getLength(); i++) {\r\n            for (let j = 0; j < e.getLength(); j++) {\r\n                num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\r\n            }\r\n        }\r\n\r\n        return new QRPolynomial(num, 0);\r\n    },\r\n\r\n    mod: function (e) {\r\n\r\n        if (this.getLength() - e.getLength() < 0) {\r\n            return this;\r\n        }\r\n\r\n        let ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\r\n\r\n        let num = new Array(this.getLength());\r\n\r\n        for (let i = 0; i < this.getLength(); i++) {\r\n            num[i] = this.get(i);\r\n        }\r\n\r\n        for (let i = 0; i < e.getLength(); i++) {\r\n            num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\r\n        }\r\n\r\n        // recursive call\r\n        return new QRPolynomial(num, 0).mod(e);\r\n    }\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRRSBlock\r\n//---------------------------------------------------------------------\r\n\r\nfunction QRRSBlock(totalCount, dataCount) {\r\n    this.totalCount = totalCount;\r\n    this.dataCount = dataCount;\r\n}\r\n\r\nQRRSBlock.RS_BLOCK_TABLE = [\r\n\r\n    // L\r\n    // M\r\n    // Q\r\n    // H\r\n\r\n    // 1\r\n    [1, 26, 19],\r\n    [1, 26, 16],\r\n    [1, 26, 13],\r\n    [1, 26, 9],\r\n\r\n    // 2\r\n    [1, 44, 34],\r\n    [1, 44, 28],\r\n    [1, 44, 22],\r\n    [1, 44, 16],\r\n\r\n    // 3\r\n    [1, 70, 55],\r\n    [1, 70, 44],\r\n    [2, 35, 17],\r\n    [2, 35, 13],\r\n\r\n    // 4\t\t\r\n    [1, 100, 80],\r\n    [2, 50, 32],\r\n    [2, 50, 24],\r\n    [4, 25, 9],\r\n\r\n    // 5\r\n    [1, 134, 108],\r\n    [2, 67, 43],\r\n    [2, 33, 15, 2, 34, 16],\r\n    [2, 33, 11, 2, 34, 12],\r\n\r\n    // 6\r\n    [2, 86, 68],\r\n    [4, 43, 27],\r\n    [4, 43, 19],\r\n    [4, 43, 15],\r\n\r\n    // 7\t\t\r\n    [2, 98, 78],\r\n    [4, 49, 31],\r\n    [2, 32, 14, 4, 33, 15],\r\n    [4, 39, 13, 1, 40, 14],\r\n\r\n    // 8\r\n    [2, 121, 97],\r\n    [2, 60, 38, 2, 61, 39],\r\n    [4, 40, 18, 2, 41, 19],\r\n    [4, 40, 14, 2, 41, 15],\r\n\r\n    // 9\r\n    [2, 146, 116],\r\n    [3, 58, 36, 2, 59, 37],\r\n    [4, 36, 16, 4, 37, 17],\r\n    [4, 36, 12, 4, 37, 13],\r\n\r\n    // 10\t\t\r\n    [2, 86, 68, 2, 87, 69],\r\n    [4, 69, 43, 1, 70, 44],\r\n    [6, 43, 19, 2, 44, 20],\r\n    [6, 43, 15, 2, 44, 16],\r\n\r\n    // 11\r\n    [4, 101, 81],\r\n    [1, 80, 50, 4, 81, 51],\r\n    [4, 50, 22, 4, 51, 23],\r\n    [3, 36, 12, 8, 37, 13],\r\n\r\n    // 12\r\n    [2, 116, 92, 2, 117, 93],\r\n    [6, 58, 36, 2, 59, 37],\r\n    [4, 46, 20, 6, 47, 21],\r\n    [7, 42, 14, 4, 43, 15],\r\n\r\n    // 13\r\n    [4, 133, 107],\r\n    [8, 59, 37, 1, 60, 38],\r\n    [8, 44, 20, 4, 45, 21],\r\n    [12, 33, 11, 4, 34, 12],\r\n\r\n    // 14\r\n    [3, 145, 115, 1, 146, 116],\r\n    [4, 64, 40, 5, 65, 41],\r\n    [11, 36, 16, 5, 37, 17],\r\n    [11, 36, 12, 5, 37, 13],\r\n\r\n    // 15\r\n    [5, 109, 87, 1, 110, 88],\r\n    [5, 65, 41, 5, 66, 42],\r\n    [5, 54, 24, 7, 55, 25],\r\n    [11, 36, 12],\r\n\r\n    // 16\r\n    [5, 122, 98, 1, 123, 99],\r\n    [7, 73, 45, 3, 74, 46],\r\n    [15, 43, 19, 2, 44, 20],\r\n    [3, 45, 15, 13, 46, 16],\r\n\r\n    // 17\r\n    [1, 135, 107, 5, 136, 108],\r\n    [10, 74, 46, 1, 75, 47],\r\n    [1, 50, 22, 15, 51, 23],\r\n    [2, 42, 14, 17, 43, 15],\r\n\r\n    // 18\r\n    [5, 150, 120, 1, 151, 121],\r\n    [9, 69, 43, 4, 70, 44],\r\n    [17, 50, 22, 1, 51, 23],\r\n    [2, 42, 14, 19, 43, 15],\r\n\r\n    // 19\r\n    [3, 141, 113, 4, 142, 114],\r\n    [3, 70, 44, 11, 71, 45],\r\n    [17, 47, 21, 4, 48, 22],\r\n    [9, 39, 13, 16, 40, 14],\r\n\r\n    // 20\r\n    [3, 135, 107, 5, 136, 108],\r\n    [3, 67, 41, 13, 68, 42],\r\n    [15, 54, 24, 5, 55, 25],\r\n    [15, 43, 15, 10, 44, 16],\r\n\r\n    // 21\r\n    [4, 144, 116, 4, 145, 117],\r\n    [17, 68, 42],\r\n    [17, 50, 22, 6, 51, 23],\r\n    [19, 46, 16, 6, 47, 17],\r\n\r\n    // 22\r\n    [2, 139, 111, 7, 140, 112],\r\n    [17, 74, 46],\r\n    [7, 54, 24, 16, 55, 25],\r\n    [34, 37, 13],\r\n\r\n    // 23\r\n    [4, 151, 121, 5, 152, 122],\r\n    [4, 75, 47, 14, 76, 48],\r\n    [11, 54, 24, 14, 55, 25],\r\n    [16, 45, 15, 14, 46, 16],\r\n\r\n    // 24\r\n    [6, 147, 117, 4, 148, 118],\r\n    [6, 73, 45, 14, 74, 46],\r\n    [11, 54, 24, 16, 55, 25],\r\n    [30, 46, 16, 2, 47, 17],\r\n\r\n    // 25\r\n    [8, 132, 106, 4, 133, 107],\r\n    [8, 75, 47, 13, 76, 48],\r\n    [7, 54, 24, 22, 55, 25],\r\n    [22, 45, 15, 13, 46, 16],\r\n\r\n    // 26\r\n    [10, 142, 114, 2, 143, 115],\r\n    [19, 74, 46, 4, 75, 47],\r\n    [28, 50, 22, 6, 51, 23],\r\n    [33, 46, 16, 4, 47, 17],\r\n\r\n    // 27\r\n    [8, 152, 122, 4, 153, 123],\r\n    [22, 73, 45, 3, 74, 46],\r\n    [8, 53, 23, 26, 54, 24],\r\n    [12, 45, 15, 28, 46, 16],\r\n\r\n    // 28\r\n    [3, 147, 117, 10, 148, 118],\r\n    [3, 73, 45, 23, 74, 46],\r\n    [4, 54, 24, 31, 55, 25],\r\n    [11, 45, 15, 31, 46, 16],\r\n\r\n    // 29\r\n    [7, 146, 116, 7, 147, 117],\r\n    [21, 73, 45, 7, 74, 46],\r\n    [1, 53, 23, 37, 54, 24],\r\n    [19, 45, 15, 26, 46, 16],\r\n\r\n    // 30\r\n    [5, 145, 115, 10, 146, 116],\r\n    [19, 75, 47, 10, 76, 48],\r\n    [15, 54, 24, 25, 55, 25],\r\n    [23, 45, 15, 25, 46, 16],\r\n\r\n    // 31\r\n    [13, 145, 115, 3, 146, 116],\r\n    [2, 74, 46, 29, 75, 47],\r\n    [42, 54, 24, 1, 55, 25],\r\n    [23, 45, 15, 28, 46, 16],\r\n\r\n    // 32\r\n    [17, 145, 115],\r\n    [10, 74, 46, 23, 75, 47],\r\n    [10, 54, 24, 35, 55, 25],\r\n    [19, 45, 15, 35, 46, 16],\r\n\r\n    // 33\r\n    [17, 145, 115, 1, 146, 116],\r\n    [14, 74, 46, 21, 75, 47],\r\n    [29, 54, 24, 19, 55, 25],\r\n    [11, 45, 15, 46, 46, 16],\r\n\r\n    // 34\r\n    [13, 145, 115, 6, 146, 116],\r\n    [14, 74, 46, 23, 75, 47],\r\n    [44, 54, 24, 7, 55, 25],\r\n    [59, 46, 16, 1, 47, 17],\r\n\r\n    // 35\r\n    [12, 151, 121, 7, 152, 122],\r\n    [12, 75, 47, 26, 76, 48],\r\n    [39, 54, 24, 14, 55, 25],\r\n    [22, 45, 15, 41, 46, 16],\r\n\r\n    // 36\r\n    [6, 151, 121, 14, 152, 122],\r\n    [6, 75, 47, 34, 76, 48],\r\n    [46, 54, 24, 10, 55, 25],\r\n    [2, 45, 15, 64, 46, 16],\r\n\r\n    // 37\r\n    [17, 152, 122, 4, 153, 123],\r\n    [29, 74, 46, 14, 75, 47],\r\n    [49, 54, 24, 10, 55, 25],\r\n    [24, 45, 15, 46, 46, 16],\r\n\r\n    // 38\r\n    [4, 152, 122, 18, 153, 123],\r\n    [13, 74, 46, 32, 75, 47],\r\n    [48, 54, 24, 14, 55, 25],\r\n    [42, 45, 15, 32, 46, 16],\r\n\r\n    // 39\r\n    [20, 147, 117, 4, 148, 118],\r\n    [40, 75, 47, 7, 76, 48],\r\n    [43, 54, 24, 22, 55, 25],\r\n    [10, 45, 15, 67, 46, 16],\r\n\r\n    // 40\r\n    [19, 148, 118, 6, 149, 119],\r\n    [18, 75, 47, 31, 76, 48],\r\n    [34, 54, 24, 34, 55, 25],\r\n    [20, 45, 15, 61, 46, 16]\r\n];\r\n\r\nQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\r\n\r\n    let rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\r\n\r\n    if (rsBlock == undefined) {\r\n        throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\r\n    }\r\n\r\n    let length = rsBlock.length / 3;\r\n\r\n    let list = new Array();\r\n\r\n    for (let i = 0; i < length; i++) {\r\n\r\n        let count = rsBlock[i * 3 + 0];\r\n        let totalCount = rsBlock[i * 3 + 1];\r\n        let dataCount = rsBlock[i * 3 + 2];\r\n\r\n        for (let j = 0; j < count; j++) {\r\n            list.push(new QRRSBlock(totalCount, dataCount));\r\n        }\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\nQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\r\n\r\n    switch (errorCorrectLevel) {\r\n        case QRErrorCorrectLevel.L:\r\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\r\n        case QRErrorCorrectLevel.M:\r\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\r\n        case QRErrorCorrectLevel.Q:\r\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\r\n        case QRErrorCorrectLevel.H:\r\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRBitBuffer\r\n//---------------------------------------------------------------------\r\n\r\nfunction QRBitBuffer() {\r\n    this.buffer = new Array();\r\n    this.length = 0;\r\n}\r\n\r\nQRBitBuffer.prototype = {\r\n\r\n    get: function (index) {\r\n        let bufIndex = Math.floor(index / 8);\r\n        return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) == 1;\r\n    },\r\n\r\n    put: function (num, length) {\r\n        for (let i = 0; i < length; i++) {\r\n            this.putBit(((num >>> (length - i - 1)) & 1) == 1);\r\n        }\r\n    },\r\n\r\n    getLengthInBits: function () {\r\n        return this.length;\r\n    },\r\n\r\n    putBit: function (bit) {\r\n\r\n        let bufIndex = Math.floor(this.length / 8);\r\n        if (this.buffer.length <= bufIndex) {\r\n            this.buffer.push(0);\r\n        }\r\n\r\n        if (bit) {\r\n            this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\r\n        }\r\n\r\n        this.length++;\r\n    }\r\n};\r\n\r\n/**\r\n * 二维码组件\r\n */\r\nlet CQRCode = cc.Class({\r\n    extends: cc.Graphics,\r\n    properties: {\r\n        string: {\r\n            default: 'Hello World!',\r\n            notify(oldValue) {\r\n                if (this.string === oldValue) {\r\n                    return;\r\n                }\r\n                this.setContent();\r\n            },\r\n        },\r\n\r\n        backColor: {\r\n            type: cc.Color,\r\n            default: cc.Color.WHITE,\r\n            notify() {\r\n                this.setContent();\r\n            },\r\n        },\r\n\r\n        foreColor: {\r\n            type: cc.Color,\r\n            default: cc.Color.BLACK,\r\n            notify(old) {\r\n                this.node.color = this.foreColor;\r\n                this.setContent();\r\n            },\r\n        },\r\n\r\n        margin: {\r\n            type: cc.Float,\r\n            default: 10,\r\n            notify(old) {\r\n                if (old === this.margin) {\r\n                    return;\r\n                }\r\n                this.setContent();\r\n            }\r\n        },\r\n\r\n        _size: 200,\r\n        size: {\r\n            type: cc.Float,\r\n            get() {\r\n                return this._size;\r\n            },\r\n\r\n            set(value) {\r\n                if (this._size === value) {\r\n                    return;\r\n                }\r\n                \r\n                this.node.setContentSize(value, value);\r\n                this.setContent();\r\n                this._size = value;\r\n            },\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n        this.node.setContentSize(this._size, this._size);\r\n        this.setContent();\r\n    },\r\n\r\n    setString(customData, sender) {\r\n        if (sender.string) {\r\n            this.string = sender.string;\r\n        }\r\n    },\r\n\r\n    setContent() {\r\n        this.clear();\r\n        //背景色\r\n        this.fillColor = this.backColor;\r\n        let width = this.node.width;\r\n        let offsetX = -width * this.node.anchorX;\r\n        let offsetY = -width * this.node.anchorY;\r\n        this.rect(offsetX, offsetY, width, width);\r\n        this.fill();\r\n        this.close();\r\n        //生成二维码数据\r\n        let qrcode = new QRCode(-1, 2);\r\n        qrcode.addData(this.string);\r\n        qrcode.make();\r\n        this.fillColor = this.foreColor;\r\n        let size = width - this.margin * 2;\r\n        let num = qrcode.getModuleCount();\r\n        \r\n        let tileW = size / num;\r\n        let tileH = size / num;\r\n        let w = Math.ceil(tileW);\r\n        let h = Math.ceil(tileH);\r\n        for (let row = 0; row < num; row++) {\r\n            for (let col = 0; col < num; col++) {\r\n                if (qrcode.isDark(row, col)) {\r\n                    this.rect(offsetX + this.margin + col * tileW, offsetX + size - tileH - Math.round(row * tileH) + this.margin, w, h);\r\n                    this.fill();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    \r\n});\r\n\r\ncc.game.once(cc.game.EVENT_ENGINE_INITED, function () {\r\n    CQRCode._assembler = cc.Graphics._assembler;\r\n});\r\n\r\ncc.Class.Attr.setClassAttr(CQRCode, 'lineWidth', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'lineJoin', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'lineCap', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'strokeColor', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'miterLimit', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'fillColor', 'visible', false);\r\n\r\nmodule.exports = CQRCode;","import Utils from \"./Utils\";\r\n\r\nconst { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Canvas)\r\nexport default class CanvasResizer extends cc.Component {\r\n\r\n    @property\r\n    designResolution: cc.Size = new cc.Size(1280, 720);\r\n\r\n    lastWitdh: number = 0;\r\n    lastHeight: number = 0;\r\n    canvas: cc.Canvas;\r\n\r\n    onLoad() {\r\n        this.canvas = this.node.getComponent(cc.Canvas);\r\n        this.updateCanvas();\r\n        let tile = cc.winSize.width / cc.winSize.height\r\n        if (tile >= (16 / 9)) {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        } else {\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this.updateCanvas();\r\n    }\r\n\r\n    updateCanvas() {\r\n        var frameSize = cc.view.getFrameSize();\r\n        if (this.lastWitdh !== frameSize.width || this.lastHeight !== frameSize.height) {\r\n\r\n            this.lastWitdh = frameSize.width;\r\n            this.lastHeight = frameSize.height;\r\n\r\n            if (this.designResolution.width / this.designResolution.height > frameSize.width / frameSize.height) {\r\n                var newDesignSize = cc.size(this.designResolution.width, this.designResolution.width * (frameSize.height / frameSize.width));\r\n                this.canvas.designResolution = newDesignSize;\r\n                 //Utils.Log(\"update canvas size: \" + newDesignSize);\r\n            } else {\r\n                var newDesignSize = cc.size(this.designResolution.height * (frameSize.width / frameSize.height), this.designResolution.height);\r\n                this.canvas.designResolution = newDesignSize;\r\n                 //Utils.Log(\"update canvas size: \" + newDesignSize);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport App from \"./Script/common/App\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CanvasUpdateApp extends cc.Component {\r\n\r\n\r\n    start() {\r\n\r\n        // App.instance.removeAllWebView();\r\n        App.instance.node.parent = this.node;\r\n        // App.instance.node.setSiblingIndex(this.node.childrenCount);\r\n        App.instance.node.zIndex = cc.macro.MAX_ZINDEX;\r\n        App.instance.node.position = cc.v3(0, 0, 0);\r\n    }\r\n\r\n    onDisable() {\r\n        App.instance.node.parent = null;\r\n    }\r\n}\r\n","import OutPacket from \"./Network.OutPacket\";\r\nimport InPacket from \"./Network.InPacket\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\nexport namespace CardGameCmd {\r\n    export class Code {\r\n        static LOGIN = 1;\r\n        static NOTIFY_DISCONNECT = 37;\r\n        static PING_PONG = 50;\r\n        static JOIN_ROOM = 3001;\r\n        static RECONNECT_GAME_ROOM = 3002;\r\n        static JOIN_ROOM_FAIL = 3004;\r\n        static HOLD = 3116;\r\n        static MONEY_BET_CONFIG = 3003;\r\n        static GET_LIST_ROOM = 3014;\r\n        static TOP_SERVER = 1001;\r\n        static CHEAT_CARD = 3115;\r\n        static PING_TEST = 1050;\r\n        static CHAT_ROOM = 3008;\r\n        static NO_HU_VANG = 3007;\r\n        static THONG_TIN_HU_VANG = 3009;\r\n        static REQUEST_INFO_MOI_CHOI = 3010;\r\n        static MOI_CHOI = 3011;\r\n        static ACCEPT_MOI_CHOI = 3012;\r\n        static CREATE_ROOM = 3013;\r\n        static JOIN_GAME_ROOM_BY_ID = 3015;\r\n        static FIND_ROOM_LOBBY = 3016;\r\n        static GET_XOCDIA_CONFIG = 3017;\r\n        static CREATE_ROOM_FAIL = 3018;\r\n    }\r\n\r\n    export class SendMoneyBetConfig extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.MONEY_BET_CONFIG);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ResMoneyBetConfig extends InPacket {\r\n        list = [];\r\n        rules = [];\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            let listSize = this.getShort();\r\n            for (var a = 0; a < listSize; a++) {\r\n                var b = {\r\n                    maxUserPerRoom: this.getInt(),\r\n                    moneyType: this.getByte(),\r\n                    moneyBet: this.getLong(),\r\n                    moneyRequire: this.getLong(),\r\n                    nPersion: this.getInt(),\r\n                };\r\n                this.list.push(b);\r\n            }\r\n            for (a = 0; a < listSize; a++) this.rules.push(this.getByte());\r\n        }\r\n    }\r\n\r\n    export class SendGetListRoom extends OutPacket {\r\n        constructor(moneyType: number, maxPlayer: number, param3: number, param4: number, cardFrom: number, cardTo: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.GET_LIST_ROOM);\r\n            this.packHeader();\r\n            this.putByte(moneyType);\r\n            this.putByte(maxPlayer);\r\n            this.putByte(param3);\r\n            this.putByte(param4);\r\n            this.putByte(cardFrom);\r\n            this.putByte(cardTo);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendJoinRoom extends OutPacket {\r\n        constructor(type: number, max: number, bet: number, rule: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.JOIN_ROOM);\r\n            this.packHeader();\r\n            this.putInt(type);\r\n            this.putInt(max);\r\n            this.putLong(bet);\r\n            this.putInt(rule);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendJoinRoomById extends OutPacket {\r\n        constructor(id: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.JOIN_GAME_ROOM_BY_ID);\r\n            this.packHeader();\r\n            this.putInt(id);\r\n            this.putString(\"\");//mat khau\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReceivedJoinRoomFail extends InPacket {\r\n        error = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n        }\r\n    }\r\n}\r\nexport default CardGameCmd;","import NetworkClient from \"./Network.NetworkClient\";\r\nimport OutPacket from \"./Network.OutPacket\";\r\nimport NetworkListener from \"./Network.NetworkListener\";\r\nimport InPacket from \"./Network.InPacket\";\r\nimport cmd from \"./Network.Cmd\";\r\nimport Configs from \"../../../../Loading/src/Configs\";\r\n\r\nexport default class CardGameNetworkClient extends NetworkClient {\r\n    static instance: CardGameNetworkClient;\r\n\r\n    listeners: Array<NetworkListener> = new Array<NetworkListener>();\r\n    isLogin = false;\r\n    onLogined: () => void = null;\r\n\r\n    public static getInstance(): CardGameNetworkClient {\r\n        if (this.instance == null) {\r\n            this.instance = new CardGameNetworkClient();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.isUseWSS = Configs.App.USE_WSS;\r\n    }\r\n\r\n    public checkConnect(onLogined: () => void) {\r\n        this.onLogined = onLogined;\r\n        if (this.ws != null && this.ws.readyState == WebSocket.CONNECTING) return;\r\n        if (!this.isConnected()) {\r\n            this._connect();\r\n            return;\r\n        }\r\n        if (this.isLogin && this.onLogined != null) this.onLogined();\r\n    }\r\n\r\n    _connect() {\r\n    }\r\n\r\n    onOpen(ev: Event) {\r\n        super.onOpen(ev);\r\n        this.send(new cmd.SendLogin(Configs.Login.Nickname, Configs.Login.AccessToken));\r\n    }\r\n\r\n    onMessage(ev: MessageEvent) {\r\n        var data = new Uint8Array(ev.data);\r\n        for (var i = 0; i < this.listeners.length; i++) {\r\n            var listener = this.listeners[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback(data);\r\n            } else {\r\n                this.listeners.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n\r\n        let inpacket = new InPacket(data);\r\n        switch (inpacket.getCmdId()) {\r\n            case cmd.Code.LOGIN:\r\n                this.isLogin = true;\r\n                if (this.onLogined != null) {\r\n                    this.onLogined();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    public addListener(callback: (data: Uint8Array) => void, target: cc.Component) {\r\n        this.listeners.push(new NetworkListener(target, callback));\r\n    }\r\n\r\n    public send(packet: OutPacket) {\r\n        for (var b = new Int8Array(packet._length), c = 0; c < packet._length; c++)\r\n            b[c] = packet._data[c];\r\n        if (this.ws != null && this.isConnected())\r\n            this.ws.send(b.buffer);\r\n    }\r\n\r\n    public sendCheck(packet: OutPacket) {\r\n        this.checkConnect(() => {\r\n            this.send(packet);\r\n        });\r\n    }\r\n}","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CardGame_ItemRoom extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    labelBet: cc.Label=null;\r\n\r\n    @property(cc.Label)\r\n    labelPlayers: cc.Label=null;\r\n\r\n    @property(cc.Label)\r\n    labelState: cc.Label=null;\r\n\r\n    itemInfo = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    // start() {}\r\n\r\n    // update (dt) {}\r\n\r\n    initItems(data) {\r\n        this.itemInfo = data;\r\n        this.labelBet.string = this.formatGold(data.bet);\r\n        this.labelPlayers.string = this.formatGold(data.players);\r\n        this.labelState.string = data.maxUser == 2 ? \"Solo\" : data.maxUser + \" Người\";\r\n    }\r\n\r\n    chooseRoom() {\r\n        let controller = null;\r\n        switch (this.itemInfo.gameId) {\r\n            case 0:\r\n            case 1:\r\n                controller = this.node.parent.parent.parent.parent.getComponent(\"TienLen.Room\");\r\n                controller.handleJoinRoom(this.itemInfo);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        //  //Utils.Log(\"CardGame_ItemRoom chooseRoom : \", this.node.parent.parent);\r\n        //  //Utils.Log(\"CardGame_ItemRoom chooseRoom : \", this.node.parent.parent.parent);\r\n        //  //Utils.Log(\"CardGame_ItemRoom chooseRoom : \", this.node.parent.parent.parent.parent);\r\n    }\r\n\r\n    formatGold(price) {\r\n        return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    }\r\n\r\n}","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Clipboards extends cc.Component {\r\n    private static fallbackCopyTextToClipboard(text: string) {\r\n        var textArea = document.createElement(\"textarea\");\r\n        textArea.value = text;\r\n\r\n        // Avoid scrolling to bottom\r\n        textArea.style.top = \"0\";\r\n        textArea.style.left = \"0\";\r\n        textArea.style.position = \"fixed\";\r\n\r\n        document.body.appendChild(textArea);\r\n        textArea.focus();\r\n        textArea.select();\r\n\r\n        try {\r\n            var successful = document.execCommand('copy');\r\n            var msg = successful ? 'successful' : 'unsuccessful';\r\n            console.log('Fallback: Copying text command was ' + msg);\r\n        } catch (err) {\r\n            console.error('Fallback: Oops, unable to copy', err);\r\n        }\r\n\r\n        document.body.removeChild(textArea);\r\n    }\r\n\r\n    static copyTextToClipboard(text: string) {\r\n        if (!navigator.clipboard) {\r\n            this.fallbackCopyTextToClipboard(text);\r\n            return;\r\n        }\r\n        navigator.clipboard.writeText(text).then(function () {\r\n            console.log('Async: Copying to clipboard was successful!');\r\n        }, function (err) {\r\n            console.error('Async: Could not copy text: ', err);\r\n        });\r\n    }\r\n\r\n    static copy(str: string) {\r\n        if (!CC_JSB) {\r\n            this.copyTextToClipboard(str);\r\n        } else {\r\n            if (cc.sys.os == cc.sys.OS_ANDROID) {\r\n                jsb.reflection.callStaticMethod(\"org.cocos2dx.lib.Cocos2dxHelper\", \"copyTextToClipboard\", \"(Ljava/lang/String;)V\", str);\r\n            } else {\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n","import BroadcastReceiver from \"./BroadcastReceiver\";\r\nimport SPUtils from \"./SPUtils\";\r\nimport Utils from \"./Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class AudioManager extends cc.Component {\r\n\r\n    private static instance: AudioManager = null;\r\n    public static getInstance(): AudioManager {\r\n        if (this.instance == null) {\r\n            let node = new cc.Node(\"AudioManager\");\r\n            this.instance = node.addComponent(AudioManager);\r\n            this.instance.audioSource = node.addComponent(cc.AudioSource);\r\n            cc.game.addPersistRootNode(node);\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    private audioSource: cc.AudioSource = null;\r\n    private isOnMusic = true;\r\n    private isOnSound = true;\r\n\r\n    start() {\r\n        BroadcastReceiver.register(BroadcastReceiver.ON_AUDIO_CHANGED, () => {\r\n            this.isOnMusic = SPUtils.getMusicVolumn() > 0;\r\n            this.isOnSound = SPUtils.getSoundVolumn() > 0;\r\n\r\n            this.audioSource.mute = !this.isOnMusic;\r\n            if (!this.isOnSound) {\r\n                cc.audioEngine.stopAllEffects();\r\n            }\r\n        }, this);\r\n        this.isOnMusic = SPUtils.getMusicVolumn() > 0;\r\n        this.isOnSound = SPUtils.getSoundVolumn() > 0;\r\n        this.audioSource.mute = !this.isOnMusic;\r\n    }\r\n\r\n    public playEffect(audioClip: cc.AudioClip, volumn: number = 1) {\r\n        if (audioClip == null) {\r\n         //   cc.warn(\"AudioManager playEffect audioClip is null\");\r\n            return;\r\n        }\r\n        if (this.isOnSound && volumn > 0) cc.audioEngine.play(audioClip, false, volumn);\r\n    }\r\n\r\n    public playBackgroundMusic(audioClip: cc.AudioClip, loop: boolean = true, volumn: number = 1) {\r\n        if (audioClip == null) {\r\n         //   cc.warn(\"AudioManager playBackgroundMusic audioClip is null\");\r\n             //Utils.Log(\"AudioManager playBackgroundMusic audioClip is null\");\r\n            return;\r\n        }\r\n        this.audioSource.stop();\r\n        this.audioSource.clip = audioClip;\r\n        this.audioSource.volume = volumn;\r\n        this.audioSource.mute = !this.isOnMusic;\r\n        this.audioSource.loop = loop;\r\n        this.audioSource.play();\r\n    }\r\n}\r\n","import VersionConfig from \"../../../../Loading/src/VersionConfig\";\r\n\r\n\r\nconst { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Label)\r\nexport default class CPSprite extends cc.Component {\r\n\r\n    @property\r\n    strR99: string = \"\";\r\n\r\n    onLoad() {\r\n        switch (VersionConfig.CPName) {\r\n            default:\r\n                this.getComponent(cc.Label).string = this.strR99;\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import VersionConfig from \"../../../../Loading/src/VersionConfig\";\r\n\r\n\r\nconst { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\nexport default class CPSprite extends cc.Component {\r\n\r\n    @property(cc.SpriteFrame)\r\n    sprR99: cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    sprVip52: cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    sprXXeng: cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    sprManVip: cc.SpriteFrame = null;\r\n\r\n    onLoad() {\r\n        switch (VersionConfig.CPName) {\r\n            default:\r\n                this.getComponent(cc.Sprite).spriteFrame = this.sprR99;\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import Dialog from \"./Dialog\";\r\nimport Utils from \"./Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ConfirmDialog extends Dialog {\r\n\r\n    @property(cc.Label)\r\n    lblMessage: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblDone: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblConfirm: cc.Label = null;\r\n\r\n    onDismissed: (isConfirm: boolean)=>void = null;\r\n    onConfirmClicked: Function = null;\r\n    isClickdConfirm: boolean = false;\r\n\r\n    show1(msg: string){\r\n        this.show4(msg);\r\n    }\r\n\r\n    show2(msg: string, onDismissed: (isConfirm: boolean)=>void){\r\n         //Utils.Log(\"Parent Confirm:\"+this.node.parent.name);\r\n        this.show4(msg, null, null, onDismissed);\r\n    }\r\n\r\n    show3(msg: string, confirmTitle: string, onDismissed: (isConfirm: boolean)=>void){\r\n        this.show4(msg, null, confirmTitle, onDismissed);\r\n    }\r\n\r\n    show4(msg: string, doneTitle?: string, confirmTitle?: string, onDismissed?: (isConfirm: boolean)=>void) : void {\r\n        this.isClickdConfirm = false;\r\n        this.lblDone.string = !doneTitle ? \"Hủy\" : doneTitle;\r\n        this.lblConfirm.string = !confirmTitle ? \"Đồng ý\" : confirmTitle;\r\n        this.onDismissed = onDismissed;\r\n        this.lblMessage.string = msg;\r\n        super.show()\r\n    }\r\n\r\n    actConfirm(){\r\n        this.isClickdConfirm = true;\r\n        this.dismiss();\r\n    }\r\n\r\n    _onShowed() {\r\n        Dialog.prototype._onShowed.call(this);\r\n    }\r\n\r\n    _onDismissed() {\r\n        Dialog.prototype._onDismissed.call(this);\r\n        if (typeof this.onDismissed === \"function\") this.onDismissed(this.isClickdConfirm);\r\n    }\r\n}\r\n","const { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Button)\r\nexport default class Dropdown extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n    @property(cc.Node)\r\n    template: cc.Node = null;\r\n\r\n    private options: string[] = [];\r\n    private value: number = 0;\r\n    private blocker: cc.Node = null;\r\n    private dropdownList: cc.Node = null;\r\n    private animating = false;\r\n    private onValueChanged: (idx: number) => void;\r\n\r\n    onLoad() {\r\n        this.template.active = false;\r\n\r\n        let parent = this.findParent();\r\n        this.node.on(\"click\", () => {\r\n            if (this.animating) return;\r\n            this.animating = true;\r\n            this.blocker = this.addBlocker(parent);\r\n\r\n            this.dropdownList = cc.instantiate(this.template);\r\n            this.dropdownList.getComponent(cc.Widget).enabled = false;\r\n            this.dropdownList.parent = this.blocker;\r\n            this.dropdownList.name = \"dropdownList\";\r\n\r\n            let pos = this.template.convertToWorldSpaceAR(this.template.position);\r\n            this.dropdownList.position = this.dropdownList.convertToNodeSpaceAR(pos);\r\n\r\n            this.dropdownList.active = true;\r\n            this.dropdownList.scaleY = 0;\r\n            this.dropdownList.opacity = 0;\r\n            this.dropdownList.stopAllActions();\r\n            this.dropdownList.runAction(cc.sequence(\r\n                cc.spawn(\r\n                    cc.scaleTo(0.3, 1, 1).easing(cc.easeBackOut()),\r\n                    cc.fadeIn(0.15)\r\n                ),\r\n                cc.callFunc(() => {\r\n                    this.animating = false;\r\n                }))\r\n            );\r\n\r\n            //draw list options\r\n            let scrContent = this.dropdownList.getComponent(cc.ScrollView).content;\r\n            let itemTemp = scrContent.children[0];\r\n            itemTemp.active = false;\r\n            for (let i = 0; i < this.options.length; i++) {\r\n                let item = cc.instantiate(itemTemp);\r\n                item.parent = itemTemp.parent;\r\n                item.active = true;\r\n\r\n                let label = item.getComponentInChildren(cc.Label);\r\n                label.string = this.options[i];\r\n\r\n                let check = item.getComponentInChildren(cc.Sprite);\r\n                check.node.active = i == this.value;\r\n\r\n                item.on(\"click\", () => {\r\n                    this.setValue(i);\r\n                    if (this.onValueChanged != null) this.onValueChanged(i);\r\n                    this.dismiss();\r\n                });\r\n\r\n                if (i == this.value) {\r\n                    let p = scrContent.position;\r\n                    p.y = itemTemp.height * i - itemTemp.height / 2;\r\n                    scrContent.position = p;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    onEnable() {\r\n        if (this.blocker != null) this.blocker.destroy();\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this.blocker != null) this.blocker.destroy();\r\n    }\r\n\r\n    private addBlocker(parent: cc.Node): cc.Node {\r\n        let blocker = new cc.Node(\"blocker\");\r\n        blocker.parent = parent;\r\n        blocker.addComponent(cc.Button);\r\n        blocker.zIndex = 30000;\r\n\r\n        let widget = blocker.addComponent(cc.Widget);\r\n        widget.isAlignTop = true;\r\n        widget.top = 0;\r\n        widget.isAlignBottom = true;\r\n        widget.bottom = 0;\r\n        widget.isAlignLeft = true;\r\n        widget.left = 0;\r\n        widget.isAlignRight = true;\r\n        widget.right = 0;\r\n        // blocker.setSiblingIndex(30000);\r\n        blocker.on(\"click\", () => {\r\n            this.dismiss();\r\n        });\r\n\r\n        cc.director.on(cc.Director.EVENT_BEFORE_SCENE_LOADING, () => {\r\n            //  //Utils.Log(\"cc.Director.EVENT_BEFORE_SCENE_LOADING\");\r\n            this.onDestroy();\r\n        });\r\n        return blocker;\r\n    }\r\n\r\n    private findParent(node: cc.Node = null): cc.Node {\r\n        if (node == null) node = this.node;\r\n        if (node.parent == null || node.parent instanceof cc.Scene) {\r\n            return node;\r\n        }\r\n        return this.findParent(node.parent);\r\n    }\r\n\r\n    private dismiss() {\r\n        if (this.animating) return;\r\n        this.animating = true;\r\n        this.dropdownList.stopAllActions();\r\n        this.dropdownList.runAction(cc.sequence(\r\n            cc.spawn(\r\n                cc.scaleTo(0.3, 1, 0).easing(cc.easeBackIn()),\r\n                cc.sequence(cc.delayTime(0.15), cc.fadeOut(0.15))\r\n            ),\r\n            cc.callFunc(() => {\r\n                this.blocker.destroy();\r\n                this.blocker = null;\r\n                this.animating = false;\r\n            }))\r\n        );\r\n    }\r\n\r\n    public setOptions(options: string[]) {\r\n        this.options = options;\r\n    }\r\n\r\n    public setValue(value: number) {\r\n        this.value = value;\r\n        this.label.string = this.options[this.value];\r\n    }\r\n\r\n    public getValue(): number {\r\n        return this.value;\r\n    }\r\n\r\n    public getLabelString(): string {\r\n        return this.label.string;\r\n    }\r\n\r\n    public setOnValueChange(onValueChanged: (idx: number) => void) {\r\n        this.onValueChanged = onValueChanged;\r\n    }\r\n}\r\n","import Utils from \"../common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PageView extends cc.Component {\r\n\r\n    @property\r\n    autoInit: boolean = true;\r\n    @property\r\n    infinity: boolean = true;\r\n    @property\r\n    cancelInnerEvents: boolean = true;\r\n    @property\r\n    spacing: number = 30;\r\n    @property\r\n    moveOffset: number = 30;\r\n    @property(cc.Node)\r\n    content: cc.Node = null;\r\n    @property(cc.Node)\r\n    items: cc.Node = null;\r\n    @property(cc.Node)\r\n    pages: cc.Node = null;\r\n    @property(cc.Node)\r\n    indicator: cc.Node = null;\r\n\r\n    private index = 0;\r\n    private pageCount = 0;\r\n    private left: cc.Node = null;\r\n    private center: cc.Node = null;\r\n    private right: cc.Node = null;\r\n    private pageItems: cc.Node[] = [];\r\n    private touchMoved = false;\r\n    public onTouchStart: () => void = null;\r\n    public onTouchMove: () => void = null;\r\n    public onTouchEndOrCancel: () => void = null;\r\n    public onPageChanged: () => void = null;\r\n\r\n    onLoad() {\r\n        cc.PageView\r\n        this.node.on(cc.Node.EventType.TOUCH_START, (event: cc.Event.EventTouch) => {\r\n            this.touchMoved = false;\r\n            if (this.onTouchStart != null) this.onTouchStart();\r\n        }, this.node, true);\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\r\n            if (!this.cancelInnerEvents) {\r\n                return;\r\n            }\r\n\r\n            if (this.touchMoved) {\r\n                let p = this.items.position;\r\n                p.x += event.getDeltaX();\r\n\r\n                let offset = this.content.width + this.spacing;\r\n                if (!this.infinity) {\r\n                    if (this.items.position.x > 0 && this.index == 0) {\r\n                        offset = this.moveOffset;\r\n                    } else if (this.items.position.x < 0 && this.index == this.pageCount - 1) {\r\n                        offset = this.moveOffset;\r\n                    }\r\n                }\r\n\r\n                if (Math.abs(p.x) > offset) {\r\n                    p.x = p.x > 0 ? offset : -offset;\r\n                }\r\n                this.items.position = p;\r\n\r\n                if (this.onTouchMove != null) this.onTouchMove();\r\n            }\r\n\r\n            var deltaMove = event.touch.getLocation().sub(event.touch.getStartLocation()); //FIXME: touch move delta should be calculated by DPI.\r\n            if (deltaMove.mag() > 7) {\r\n                if (!this.touchMoved && event.target != this.node) {\r\n                     //Utils.Log(event.target);\r\n                    // Simulate touch cancel for target node\r\n                    var cancelEvent = new cc.Event.EventTouch(event.getTouches(), event.bubbles);\r\n                    cancelEvent.type = cc.Node.EventType.TOUCH_CANCEL;\r\n                    cancelEvent.touch = event.touch;\r\n                    // cancelEvent.simulate = true;\r\n                    event.target.dispatchEvent(cancelEvent);\r\n                    this.touchMoved = true;\r\n                }\r\n            }\r\n        }, this.node, true);\r\n\r\n        let cbEnd = (event: cc.Event.EventTouch) => {\r\n            if (!this.touchMoved) {\r\n                return;\r\n            }\r\n            if (Math.abs(this.items.position.x) > this.content.width / 4) {\r\n                let idx = this.index;\r\n                let position = cc.Vec2.ZERO;\r\n                if (this.infinity) {\r\n                    if (this.items.position.x < 0) {\r\n                        idx++;\r\n                        if (idx > this.pageCount - 1) idx = 0;\r\n                        position = cc.v2(-this.content.width - this.spacing, 0);\r\n                    } else {\r\n                        idx--;\r\n                        if (idx < 0) idx = this.pageCount - 1;\r\n                        position = cc.v2(this.content.width + this.spacing, 0);\r\n                    }\r\n                } else {\r\n                    if (this.items.position.x < 0 && idx < this.pageItems.length - 1) {\r\n                        idx++;\r\n                    } else if (this.items.position.x > 0 && idx >= 1) {\r\n                        idx--;\r\n                    }\r\n                    position = this.index > idx ? cc.v2(this.content.width + this.spacing, 0) : cc.v2(-this.content.width - this.spacing, 0);\r\n                }\r\n                if (this.index != idx) {\r\n                    this.items.stopAllActions();\r\n                    this.items.runAction(cc.sequence(\r\n                        cc.moveTo((this.content.width + this.spacing - Math.abs(this.items.position.x)) / (this.content.width + this.spacing) * 0.5, position),\r\n                        cc.callFunc(() => {\r\n                            this.setPageIndex(idx);\r\n                            if (this.onPageChanged != null) this.onPageChanged();\r\n                        })\r\n                    ));\r\n                } else {\r\n                    this.items.stopAllActions();\r\n                    this.items.runAction(cc.sequence(\r\n                        cc.moveTo(0.3, cc.Vec2.ZERO),\r\n                        cc.callFunc(() => {\r\n                        })\r\n                    ));\r\n                }\r\n            } else {\r\n                this.items.stopAllActions();\r\n                this.items.runAction(cc.sequence(\r\n                    cc.moveTo(0.3, cc.Vec2.ZERO),\r\n                    cc.callFunc(() => {\r\n                    })\r\n                ));\r\n            }\r\n            if (this.onTouchEndOrCancel != null) this.onTouchEndOrCancel();\r\n        };\r\n        this.node.on(cc.Node.EventType.TOUCH_END, cbEnd, this.node, true);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, cbEnd, this.node, true);\r\n\r\n        for (let i = 0; i < this.pages.childrenCount; i++) {\r\n            this.pages.children[i].active = false;\r\n        }\r\n\r\n        this.left = new cc.Node();\r\n        this.left.parent = this.items;\r\n        this.left.setPosition(-this.content.width - this.spacing, 0);\r\n        this.left.active = true;\r\n\r\n        this.center = new cc.Node();\r\n        this.center.parent = this.items;\r\n        this.center.setPosition(0, 0);\r\n        this.center.active = true;\r\n\r\n        this.right = new cc.Node();\r\n        this.right.parent = this.items;\r\n        this.right.setPosition(this.content.width + this.spacing, 0);\r\n        this.right.active = true;\r\n\r\n        if (this.autoInit) this.init();\r\n    }\r\n\r\n    public init() {\r\n        for (let i = 1; i < this.indicator.childrenCount; i++) {\r\n            this.indicator.children[i].destroy();\r\n            i--;\r\n        }\r\n        this.indicator.children[0].active = false;\r\n\r\n        this.pageCount = this.pages.childrenCount;\r\n         //Utils.Log(\"PageCount: \"+this.pageCount);\r\n        for (let i = 0; i < this.pages.childrenCount; i++) {\r\n            this.pageItems.push(this.pages.children[i]);\r\n            let item = cc.instantiate(this.indicator.children[0]);\r\n            item.parent = this.indicator;\r\n            item.active = true;\r\n        }\r\n        this.setPageIndex(0);\r\n    }\r\n\r\n    public scrollToIndex(index: number, moveToLeft: boolean = false) {\r\n        if (this.index != index) {\r\n            let position = cc.Vec2.ZERO;\r\n            if (this.infinity) {\r\n                position = moveToLeft ? cc.v2(this.content.width + this.spacing, 0) : cc.v2(-this.content.width - this.spacing, 0);\r\n            } else {\r\n                position = this.index > index ? cc.v2(this.content.width + this.spacing, 0) : cc.v2(-this.content.width - this.spacing, 0);\r\n            }\r\n            this.items.stopAllActions();\r\n            if (this.infinity || (Math.abs(this.index - index) == 1 || Math.abs(this.index - index) != this.pageCount - 1)) {\r\n                this.items.runAction(cc.sequence(\r\n                    cc.moveTo(0.5, position),\r\n                    cc.callFunc(() => {\r\n                        this.setPageIndex(index);\r\n                    })\r\n                ));\r\n            } else {\r\n                this.setPageIndex(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    public scrollToNextIndex() {\r\n        let idx = this.index + 1;\r\n        if (idx >= this.pageCount) idx = 0;\r\n        this.scrollToIndex(idx, false);\r\n    }\r\n\r\n    public setPageIndex(index: number) {\r\n        this.index = index;\r\n\r\n        for (let i = 0; i < this.pageItems.length; i++) {\r\n            this.pageItems[i].active = false;\r\n        }\r\n\r\n        if (this.infinity) {\r\n            let idx = this.index - 1;\r\n            if (idx < 0) idx = this.pageCount - 1;\r\n            this.pageItems[idx].active = true;\r\n            this.pageItems[idx].parent = this.left;\r\n\r\n            idx = this.index;\r\n            this.pageItems[idx].active = true;\r\n            this.pageItems[idx].parent = this.center;\r\n\r\n            idx = this.index + 1;\r\n            if (idx > this.pageCount - 1) idx = 0;\r\n            this.pageItems[idx].active = true;\r\n            this.pageItems[idx].parent = this.right;\r\n        } else {\r\n            if (this.pageCount >= 3 && this.index >= 1) {\r\n                this.pageItems[this.index - 1].active = true;\r\n                this.pageItems[this.index - 1].parent = this.left;\r\n            }\r\n            if (this.pageCount >= this.index + 1) {\r\n                this.pageItems[this.index].active = true;\r\n                this.pageItems[this.index].parent = this.center;\r\n            }\r\n            if (this.pageCount >= 2 && this.index < this.pageCount - 1) {\r\n                this.pageItems[this.index + 1].active = true;\r\n                this.pageItems[this.index + 1].parent = this.right;\r\n            }\r\n        }\r\n        this.items.setPosition(cc.Vec2.ZERO);\r\n        this.updateIndicator();\r\n    }\r\n\r\n    private updateIndicator() {\r\n        for (let i = 1; i < this.indicator.childrenCount; i++) {\r\n            let item = this.indicator.children[i];\r\n            item.parent = this.indicator;\r\n            let active = (i - 1) == this.index;\r\n            item.getChildByName(\"active\").active = active;\r\n            item.getChildByName(\"inactive\").active = !active;\r\n        }\r\n    }\r\n}\r\n","import App from \"./App\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nvar TW = cc.tween\r\n@ccclass\r\nexport default class Dialog extends cc.Component {\r\n    isAnimated: boolean = true;\r\n    @property(cc.Node)\r\n    bg: cc.Node = null;\r\n    @property(cc.Node)\r\n    container: cc.Node = null;\r\n    showScale = 1.0;\r\n    startScale = 0.7;\r\n\r\n    show(): void {\r\n        // this.node.parent = App.instance.canvas;\r\n        var _this = this;\r\n        this.node.setSiblingIndex(this.node.parent.childrenCount);\r\n        if (!this.bg) this.bg = this.node.getChildByName(\"Bg\");\r\n        if (!this.container) this.container = this.node.getChildByName(\"Container\");\r\n        this.node.active = true;\r\n        this.isAnimated = false;\r\n\r\n        this.bg.stopAllActions();\r\n        this.bg.opacity = 0;\r\n        this.bg.runAction(cc.fadeTo(0.2, 128));\r\n        this.bg.setContentSize(cc.winSize);\r\n\r\n        // this.container.stopAllActions();\r\n        // this.container.opacity = 0;\r\n        // this.container.scale = this.startScale;\r\n        // this.container.runAction(cc.sequence(\r\n        //     cc.spawn(cc.scaleTo(0.2, this.showScale), cc.fadeIn(0.2)),\r\n        //     cc.scaleTo(0.1, 1),\r\n        //     cc.callFunc(_this._onShowed.bind(this))\r\n        // ));\r\n        cc.Tween.stopAllByTarget(this.container);\r\n        TW(this.container)\r\n            .set({ opacity: 0, scale: this.startScale })\r\n            .to(0.3, { opacity: 255, scale: 1.0 }, { easing: cc.easing.backOut })\r\n            .call(() => {\r\n                this._onShowed();\r\n            })\r\n            .start();\r\n        this.node.zIndex = cc.macro.MAX_ZINDEX - 10;\r\n    }\r\n\r\n    dismiss() {\r\n        if (!this.bg) this.bg = this.node.getChildByName(\"Bg\");\r\n        if (!this.container) this.container = this.node.getChildByName(\"Container\");\r\n        this.isAnimated = false;\r\n\r\n        this.bg.stopAllActions();\r\n        this.bg.opacity = 128;\r\n        this.bg.runAction(cc.fadeOut(0.2));\r\n\r\n        this.container.stopAllActions();\r\n        this.container.opacity = 255;\r\n        this.container.scale = 1;\r\n        TW(this.container).to(0.3, { scale: 0.8, opacity: 150 }, { easing: cc.easing.backIn })\r\n            .call(() => {\r\n                this._onDismissed();\r\n            })\r\n            .start();\r\n    }\r\n\r\n    _onShowed() {\r\n        this.isAnimated = true;\r\n        var edits = this.node.getComponentsInChildren(cc.EditBox);\r\n        for (var i = 0; i < edits.length; i++) {\r\n            edits[i].tabIndex = 0;\r\n        }\r\n    }\r\n\r\n    _onDismissed() {\r\n        var edits = this.node.getComponentsInChildren(cc.EditBox);\r\n\r\n        for (var i = 0; i < edits.length; i++) {\r\n            edits[i].tabIndex = -1;\r\n        }\r\n        this.node.active = false;\r\n        this.isAnimated = true;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Dialog extends cc.Component {\r\n    isAnimated: boolean = true;\r\n\r\n    bg: cc.Node = null;\r\n    container: cc.Node = null;\r\n    showScale = 1.1;\r\n    startScale = 0.7;\r\n\r\n    show(): void {\r\n        var _this = this;\r\n        if(!this.bg) this.bg = this.node.getChildByName(\"Bg\");\r\n        if(!this.container) this.container = this.node.getChildByName(\"Container\");\r\n        this.node.active = true;\r\n        this.isAnimated = false;\r\n\r\n        this.bg.stopAllActions();\r\n        this.bg.opacity = 0;\r\n        this.bg.runAction(cc.fadeTo(0.2, 128));\r\n\r\n        this.container.stopAllActions();\r\n        this.container.opacity = 0;\r\n        this.container.scale = this.startScale;\r\n        this.container.runAction(cc.sequence(\r\n            cc.spawn(cc.scaleTo(0.2, this.showScale), cc.fadeIn(0.2)),\r\n            cc.scaleTo(0.1, 1),\r\n            cc.callFunc(_this._onShowed.bind(this))\r\n        ));\r\n    }\r\n\r\n    dismiss() {\r\n        if(!this.bg) this.bg = this.node.getChildByName(\"Bg\");\r\n        if(!this.container) this.container = this.node.getChildByName(\"Container\");\r\n        var _this = this;\r\n        this.isAnimated = false;\r\n        \r\n        this.bg.stopAllActions();\r\n        this.bg.opacity = 128;\r\n        this.bg.runAction(cc.fadeOut(0.2));\r\n\r\n        this.container.stopAllActions();\r\n        this.container.opacity = 255;\r\n        this.container.scale = 1;\r\n        this.container.runAction(cc.sequence(\r\n            cc.scaleTo(0.1, this.showScale),\r\n            cc.spawn(cc.scaleTo(0.2, this.startScale), cc.fadeOut(0.2)),\r\n            cc.callFunc(_this._onDismissed.bind(this))\r\n        ));\r\n    }\r\n\r\n    _onShowed() {\r\n        this.isAnimated = true;\r\n    }\r\n\r\n    _onDismissed() {\r\n        this.node.active = false;\r\n        this.isAnimated = true;\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property, requireComponent} = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Button)\r\nexport default class DropdownItem extends cc.Component {\r\n    @property(cc.Node)\r\n    checkMark: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    idx: number = -1;\r\n}\r\n","import DropdownItem from \"./DropdownItem\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Button)\r\nexport default class Dropdown extends cc.Component {\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property(DropdownItem)\r\n    itemTemplate: DropdownItem = null;\r\n\r\n    private value: number = 0;\r\n\r\n    private onValueChange: (idx: number) => void;\r\n    private data: Array<string> = [];\r\n    private items: Array<DropdownItem> = [];\r\n\r\n    public start() {\r\n        this.itemTemplate.node.active = false;\r\n    }\r\n\r\n    public show() {\r\n        this.node.active = true;\r\n        this.node.opacity = 0;\r\n        this.node.runAction(cc.fadeIn(0.2));\r\n        \r\n        for (var i = 0; i < this.items.length; i++) {\r\n            this.items[i].checkMark.active = this.items[i].idx == this.value;\r\n        }\r\n    }\r\n\r\n    public setOptions(data: Array<string> = []) {\r\n        this.data = data;\r\n        var childen = this.itemTemplate.node.parent.children;\r\n        for (var i = 0; i < childen.length; i++) {\r\n            childen[i].active = false;\r\n        }\r\n        this.items = [];\r\n        for (var i = 0; i < data.length; i++) {\r\n            var item = this.getItem();\r\n            item.idx = i;\r\n            item.label.string = data[i];\r\n            item.checkMark.active = i == this.value;\r\n            this.items.push(item);\r\n        }\r\n    }\r\n\r\n    public dismiss() {\r\n        var _this = this;\r\n        this.node.runAction(cc.sequence(cc.fadeOut(0.2), cc.callFunc(() => {\r\n            _this.node.active = false;\r\n        })));\r\n    }\r\n\r\n    public setOnValueChange(callback: (idx: number) => void) {\r\n        this.onValueChange = callback;\r\n    }\r\n\r\n    public setValue(value: number) {\r\n        if (value < this.data.length) {\r\n            this.value = value;\r\n            this.label.string = this.data[this.value];\r\n        } else {\r\n            this.value = 0;\r\n        }\r\n    }\r\n\r\n    public getValue(): number {\r\n        return this.value;\r\n    }\r\n\r\n    private getItem(): DropdownItem {\r\n        var node: cc.Node = null;\r\n        var childen = this.itemTemplate.node.parent.children;\r\n        for (var i = 0; i < childen.length; i++) {\r\n            if (!childen[i].active && childen[i] != this.itemTemplate.node) node = childen[i];\r\n        }\r\n        if (node == null) {\r\n            node = cc.instantiate(this.itemTemplate.node);\r\n            node.parent = this.itemTemplate.node.parent;\r\n            node.on(\"click\", (target: any) => {\r\n                this.value = target.getComponent(DropdownItem).idx;\r\n                this.label.string = this.data[this.value];\r\n                if (this.onValueChange) this.onValueChange(this.value);\r\n                this.dismiss();\r\n            }, this);\r\n        }\r\n        node.active = true;\r\n        node.zIndex = this.getLastZIndex();\r\n        return node.getComponent(DropdownItem);\r\n    }\r\n\r\n    private getLastZIndex() {\r\n        var c = 0;\r\n        var childen = this.itemTemplate.node.parent.children;\r\n        for (var i = 1; i < childen.length; i++) {\r\n            if (childen[i].active) c++;\r\n        }\r\n        return c;\r\n    }\r\n\r\n    public getData() : Array<string>{\r\n        return this.data;\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class EditboxFormat extends cc.Component {\r\n\r\n    private edit: cc.EditBox = null;\r\n    @property\r\n    isMutiple: boolean = false;\r\n    number = 0;\r\n    onLoad() {\r\n        this.edit = this.node.getComponent(cc.EditBox);\r\n    }\r\n    onChanged() {\r\n        var temp = Utils.ToInt(this.edit.string);\r\n        temp = Math.abs(temp);\r\n        this.edit.string = Utils.ToVND(temp);\r\n        if (cc.sys.isBrowser) {\r\n            this.edit.focus();\r\n        }\r\n    }\r\n\r\n    onFormatName() {\r\n        this.edit.string = Utils.formatName(this.edit.string);\r\n        if (cc.sys.isBrowser) {\r\n            this.edit.focus();\r\n        }\r\n    }\r\n    onFormatNameMark() {\r\n        this.edit.string = Utils.formatNameBank(this.edit.string);\r\n        if (cc.sys.isBrowser) {\r\n            this.edit.focus();\r\n        }\r\n    }\r\n    onEnded() {\r\n        setTimeout(() => {\r\n            var temp = Utils.ToInt(this.edit.string);\r\n            if (this.isMutiple && temp > 1000) {\r\n                let hs = 1000\r\n                if (temp % hs != 0) {\r\n                    temp = temp - (temp % hs);\r\n                }\r\n\r\n            }\r\n            temp = Math.abs(temp);\r\n            this.edit.string = Utils.ToVND(temp);\r\n        }, 200);\r\n\r\n    }\r\n\r\n\r\n}\r\n","import Configs from \"../../../../../Loading/src/Configs\";\r\nimport App from \"../../common/App\";\r\nimport SPUtils from \"../../common/SPUtils\";\r\nimport Utils from \"../../common/Utils\";\r\nimport facebookSdk from \"./Facebook\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FBsrv extends cc.Component {\r\n\r\n    static inst: FBsrv = null;\r\n    isLogined: boolean = false;\r\n    private statusResponse: fb.StatusResponse = null;\r\n    static appID = '439607153788936';\r\n    static webVersion = '{api-version}';\r\n    accessToken: string = null;\r\n\r\n    start() {\r\n        this.init();\r\n    }\r\n\r\n    static getInst() {\r\n        if (!this.inst) {\r\n            this.inst = new cc.Node().addComponent(FBsrv);\r\n        }\r\n        return this.inst;\r\n    };\r\n\r\n    init() {\r\n        if (cc.sys.isBrowser) {\r\n            this._initWeb();\r\n        } else if (cc.sys.os == cc.sys.OS_ANDROID) {\r\n            this._initAndroid();\r\n        } else if (cc.sys.os == cc.sys.OS_IOS) {\r\n            this._initIOS();\r\n        }\r\n    };\r\n\r\n    _initWeb() {\r\n        let params: fb.InitParams = {\r\n            appId: Configs.App.FB_APPID,\r\n            version: FBsrv.webVersion,\r\n            status: true,\r\n            cookie: true,\r\n            xfbml: true,\r\n            autoLogAppEvents: false\r\n        }\r\n        FB.init(params);\r\n    };\r\n\r\n    isUseSDK()\r\n    {\r\n        if (cc.sys.os == cc.sys.OS_ANDROID) return true;\r\n        if (cc.sys.os == cc.sys.OS_IOS) return true;\r\n        return false;\r\n    };\r\n\r\n    callLoginToFB(callback)\r\n    {\r\n        cc.sys.localStorage.setItem(\"isLoginFB\",1);\r\n        App.instance.showLoading(true,-1);\r\n        var self = this;\r\n        if(self.isUseSDK())\r\n        {\r\n            if (sdkbox.PluginFacebook.isLoggedIn()) {\r\n                Configs.Login.AccessToken = sdkbox.PluginFacebook.getAccessToken();\r\n                callback();\r\n            } else {\r\n                 //Utils.Log(\"FB to Login\");\r\n                sdkbox.PluginFacebook.login(['public_profile', 'email']);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            let Appid = Configs.App.FB_APPID;\r\n            let scope = 'email,public_profile';\r\n            if(self.sdk != null)\r\n            {\r\n                try{\r\n                    FB.getLoginStatus((data) => {\r\n                        if (data.status === 'connected') {\r\n                            \r\n                            Configs.Login.AccessToken = data.authResponse.accessToken;\r\n                            callback();\r\n\r\n                        } else if (data.status === 'not_authorized') {\r\n\r\n                            App.instance.showErrLoading(\"Lỗi đăng nhập status: \" + data.status);\r\n                        } else {\r\n                            FB.login(self.fbRespone, { scope: Scope });\r\n                        }\r\n                    });\r\n                }\r\n                catch (e)\r\n                {\r\n                    App.instance.showLoading(false);\r\n                    App.instance.showErrLoading(\"Lỗi đăng nhập status: \" + e.message);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                self.sdk = new facebookSdk(Appid, scope, self.fbRespone);\r\n            }\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    fbRespone(response)\r\n    {\r\n        var self = this;\r\n        if(response.status != \"200\")\r\n        {\r\n            if(response.response != \"wait\")\r\n            {\r\n                 //Utils.Log(JSON.stringify(response));\r\n                App.instance.showLoading(false);\r\n                App.instance.showErrLoading(\"Lỗi đăng nhập status: \" + response.status);\r\n                \r\n            }\r\n            \r\n        }else\r\n        {\r\n            Configs.Login.AccessToken = response.response.authResponse.accessToken;\r\n            self.loginFB();\r\n        }\r\n    },\r\n\r\n    _initAndroid() {\r\n\r\n    };\r\n\r\n    _initIOS() {\r\n\r\n    };\r\n\r\n    async login(callBack: Function) {\r\n        if (cc.sys.isBrowser) {\r\n            await this._loginWeb(callBack);\r\n        } else if (cc.sys.os == cc.sys.OS_ANDROID) {\r\n            this._loginAndroid(callBack);\r\n        } else if (cc.sys.os == cc.sys.OS_IOS) {\r\n            this._loginIOS(callBack);\r\n        }\r\n        return this.isLogined;\r\n    };\r\n\r\n    async _loginWeb(callBack: Function) {\r\n        let _this = this;\r\n        await new Promise((resolve => {\r\n            FB.login(function (response) {\r\n                callBack(response);\r\n                if (response.status === 'connected') {\r\n                    _this.isLogined = true;\r\n                }\r\n                else{\r\n                    _this.isLogined = false;\r\n                }\r\n                resolve('success');\r\n            }, { auth_type: \"reauthorize\"});\r\n        }));\r\n    };\r\n\r\n    _loginAndroid(callBack: Function) {\r\n\r\n    };\r\n\r\n    _loginIOS(callBack: Function) {\r\n\r\n    };\r\n\r\n    logout(callBack: Function) {\r\n        if (cc.sys.isBrowser) {\r\n            this._logoutWeb(callBack);\r\n        } else if (cc.sys.os == cc.sys.OS_ANDROID) {\r\n            this._logoutAndroid(callBack);\r\n        } else if (cc.sys.os == cc.sys.OS_IOS) {\r\n            this._logoutIOS(callBack);\r\n        }\r\n    };\r\n\r\n    _logoutWeb(callBack: Function) {\r\n        FB.logout(function (response) {\r\n            callBack(response);\r\n        });\r\n    };\r\n\r\n    _logoutAndroid(callBack: Function) {\r\n\r\n    };\r\n\r\n    _logoutIOS(callBack: Function) {\r\n\r\n    };\r\n\r\n    async checkLoginStatus(callBack: Function) {\r\n        if (cc.sys.isBrowser) {\r\n            await this._checkLoginStatusWeb(callBack);\r\n        } else if (cc.sys.os == cc.sys.OS_ANDROID) {\r\n            this._checkLoginStatusAndroid(callBack);\r\n        } else if (cc.sys.os == cc.sys.OS_IOS) {\r\n            this._checkLoginStatusIOS(callBack)\r\n        }\r\n        return this.isLogined;\r\n    };\r\n\r\n    async _checkLoginStatusWeb(callBack: Function) {\r\n        let _this = this;\r\n        await new Promise((resolve => {\r\n            FB.getLoginStatus(function (response) {\r\n                callBack(response);\r\n                if (response.status === 'connected') {\r\n                    _this.isLogined = true;\r\n                    SPUtils.setUserAccessTokenFB(response.authResponse.accessToken);\r\n                }\r\n                else{\r\n                    _this.isLogined = false;\r\n                }\r\n                resolve('success');\r\n            });\r\n        }));\r\n    }\r\n\r\n    _checkLoginStatusAndroid(callBack: Function) {\r\n\r\n    }\r\n\r\n    _checkLoginStatusIOS(callBack: Function) {\r\n\r\n    }\r\n\r\n    async getAccessToken() {\r\n        await this.checkLoginStatus(()=>{});\r\n        return SPUtils.getUserAccessTokenFB();\r\n    }\r\n\r\n}\r\n","export default class facebookSdk {\r\n    constructor(AppId, Scope, Callback) {\r\n        window.fbAsyncInit = () => {\r\n            FB.init({\r\n                appId: AppId,\r\n                xfbml: true,\r\n                version: 'v3.1'\r\n            });\r\n            function statusChangeCallback(data) {\r\n                if (data.status === 'connected') {\r\n                    Callback({ status: 200, response: data });\r\n                } else if (data.status === 'not_authorized') {\r\n                    Callback({ status: 404, response: \"The person is logged into Facebook, but not your app.\" });\r\n                } else {\r\n                    Callback({ status: 500, response: \"They are logged into this app or not\" });\r\n                }\r\n            }\r\n            FB.getLoginStatus((data) => {\r\n                Callback({ status: 301, response: \"wait\" });\r\n                if (data.status === 'connected') {\r\n                    Callback({ status: 200, response: data });\r\n                } else if (data.status === 'not_authorized') {\r\n                    FB.login((statusChangeCallback) => {\r\n                        Callback({ status: 200, response: statusChangeCallback });\r\n                    }, { scope: Scope });\r\n                } else {\r\n                    FB.login((statusChangeCallback) => {\r\n                        Callback({ status: 200, response: statusChangeCallback });\r\n                    }, { scope: Scope });\r\n                }\r\n            });\r\n        };\r\n        ((d, s, id) => {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) { return; }\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = \"//connect.facebook.com/en_US/sdk.js\";\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'facebook-jssdk'));\r\n    }\r\n}","export default class GameData {\r\n    static instance: GameData;\r\n\r\n    gameLogic = null;\r\n    gameType = 0;\r\n    moneyBetWinList = [];\r\n    moneyBetXuList = [];\r\n    configVinList = [];\r\n    configXuList = [];\r\n    configGameCoVin = [];\r\n    configGameCoXu = [];\r\n    save_BetVinList = [];\r\n    save_BetXuList = [];\r\n    xuTopServerWeekListMoney = [];\r\n    xuTopServerAllListMoney = [];\r\n    vinTopServerWeekListMoney = [];\r\n    vinTopServerAllListMoney = [];\r\n    xuTopServerWeekListNumber = [];\r\n    xuTopServerAllListNumber = [];\r\n    vinTopServerWeekListNumber = [];\r\n    vinTopServerAllListNumber = [];\r\n    topDayVin_money = [];\r\n    topWeekVin_money = [];\r\n    topMonthVin_money = [];\r\n    topDayVin_number = [];\r\n    topWeekVin_number = [];\r\n    topMonthVin_number = [];\r\n    topDayXu_money = [];\r\n    topWeekXu_money = [];\r\n    topMonthXu_money = [];\r\n    topDayXu_number = [];\r\n    topWeekXu_number = [];\r\n    topMonthXu_number = [];\r\n    vinCaoThuList = [];\r\n    xuCaoThuList = [];\r\n    maxPlayer = -1;\r\n    RoomFind = [];\r\n    fundVipMinRegis = null;\r\n    ListRoomHavePass = [];\r\n    ruleType = 0;\r\n    openMoiChoi = !1;\r\n\r\n    constructor() {\r\n        this.gameLogic = null;\r\n        this.gameType = 0;\r\n        this.moneyBetWinList = [];\r\n        this.moneyBetXuList = [];\r\n        this.configVinList = [];\r\n        this.configXuList = [];\r\n        this.configGameCoVin = [];\r\n        this.configGameCoXu = [];\r\n        this.save_BetVinList = [];\r\n        this.save_BetXuList = [];\r\n        this.xuTopServerWeekListMoney = [];\r\n        this.xuTopServerAllListMoney = [];\r\n        this.vinTopServerWeekListMoney = [];\r\n        this.vinTopServerAllListMoney = [];\r\n        this.xuTopServerWeekListNumber = [];\r\n        this.xuTopServerAllListNumber = [];\r\n        this.vinTopServerWeekListNumber = [];\r\n        this.vinTopServerAllListNumber = [];\r\n        this.topDayVin_money = [];\r\n        this.topWeekVin_money = [];\r\n        this.topMonthVin_money = [];\r\n        this.topDayVin_number = [];\r\n        this.topWeekVin_number = [];\r\n        this.topMonthVin_number = [];\r\n        this.topDayXu_money = [];\r\n        this.topWeekXu_money = [];\r\n        this.topMonthXu_money = [];\r\n        this.topDayXu_number = [];\r\n        this.topWeekXu_number = [];\r\n        this.topMonthXu_number = [];\r\n        this.vinCaoThuList = [];\r\n        this.xuCaoThuList = [];\r\n        this.maxPlayer = -1;\r\n        this.RoomFind = [];\r\n        this.fundVipMinRegis = null;\r\n        this.ListRoomHavePass = [];\r\n        this.ruleType = 0;\r\n        this.openMoiChoi = !1;\r\n    }\r\n\r\n    public static getInstance(): GameData {\r\n        if (this.instance == null) {\r\n            this.instance = new GameData();\r\n        }\r\n        return this.instance;\r\n    }\r\n}","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport NumberUpdater from \"./NumberUpdater\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameIconJackpot extends cc.Component {\r\n\r\n    @property([cc.Label])\r\n    arrayLabel: cc.Label[] = [];\r\n\r\n    @property([cc.Integer])\r\n        initJackpots: number[] = [\r\n        500000,\r\n        10000000,\r\n        50000000\r\n    ];\r\n\r\n    public arrayUpdater: NumberUpdater[] = [];\r\n\r\n\r\n    onLoad() {\r\n        if (this.arrayLabel.length > 0) {\r\n            this.arrayLabel.forEach((label: cc.Label, i) => {\r\n                let updater = label.node.addComponent(NumberUpdater);\r\n                updater.setNumber(this.initJackpots[i], 1);\r\n                this.arrayUpdater.push(updater);\r\n            });\r\n        }\r\n    }\r\n\r\n    updateJackpot(t) {\r\n        let array = this.initJackpots; //todo gan lai gia tri jackpot vao\r\n        // let array = jackpotSlotBenley;\r\n        let isLogin = Configs.Login.IsLogin;\r\n        if(!isLogin){\r\n            this.initJackpots.forEach((value, i) => {\r\n                let index = i;\r\n                if (array[index] > value * 1.5) {\r\n                    array[index] = value;\r\n                }\r\n                let delta = value / 250 * (Math.random() * 2 + 1);\r\n                array[index] += Math.floor(delta);\r\n            });\r\n        }\r\n\r\n        let len = this.arrayUpdater.length;\r\n        if (len > 0 && array.length >= len) {\r\n            this.arrayUpdater.forEach((updater, i) => {\r\n                let index = i;\r\n                if (array[index] > 0) {\r\n                    updater.setNumber(array[index], t);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        // this.schedule(() => {\r\n        //     this.updateJackpot(1.5)\r\n        // }, 3, cc.macro.REPEAT_FOREVER, 0);\r\n    }\r\n\r\n    onDisable() {\r\n        this.unscheduleAllCallbacks();\r\n    }\r\n}\r\n","import DropDown from \"../../../Loading/Add-on/DropDown/Script/DropDown\";\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport BroadcastReceiver from \"../Script/common/BroadcastReceiver\";\r\nimport Tween from \"../Script/common/Tween\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport ItemGameLive from \"./ItemGameLive\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nvar ListGame = [\"Tài khoản chính\", \"Live Casino AG\", \"Live Casino EBET\", \"Live Casino WM\", \"Thể thao IBC2\", \"Thể thao SBO\", \"Bắn Cá\"];\r\nvar _this = null;\r\n@ccclass\r\nexport default class GameLiveController extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    boxLeft: cc.Node = null;\r\n    @property(cc.Node)\r\n    boxRight: cc.Node = null;\r\n    @property([ItemGameLive])\r\n    arrItem: ItemGameLive[] = [];\r\n    @property(DropDown)\r\n    dropFrom: DropDown = null;\r\n    @property(DropDown)\r\n    dropTo: DropDown = null;\r\n    @property(cc.EditBox)\r\n    editMoney: cc.EditBox = null;\r\n    @property(cc.Label)\r\n    txtTotalMoney: cc.Label = null;\r\n\r\n    private balanceAG = 0;\r\n    private balanceIBC = 0;\r\n    private balanceWM = 0;\r\n    private balanceSBO = 0;\r\n    private balanceBanca = 0;\r\n    private balanceEBET = 0;\r\n    private totalMoney = 0;\r\n    onLoad() {\r\n        _this = this;\r\n        ListGame = [App.instance.getTextLang(\"txt_main_account\"), \"Live Casino AG\", \"Live Casino EBET\", \"Live Casino WM\", \"Thể thao IBC2\", \"Thể thao SBO\", \"Bắn Cá\"];\r\n    }\r\n    show() {\r\n        this.node.setSiblingIndex(this.node.parent.childrenCount);\r\n        this.editMoney.tabIndex = -1;\r\n        this.boxLeft.opacity = 0;\r\n        this.boxLeft.position = new cc.Vec3(0, 200, 0);\r\n        cc.Tween.stopAllByTarget(this.boxLeft);\r\n        cc.tween(this.boxLeft)\r\n            .to(0.5, { position: cc.v3(0, 0, 0), opacity: 255 }, { easing: \"backOut\" })\r\n            .start();\r\n\r\n        this.boxRight.opacity = 0;\r\n        this.boxRight.position = new cc.Vec3(0, -200, 0);\r\n        cc.Tween.stopAllByTarget(this.boxRight);\r\n        cc.tween(this.boxRight)\r\n            .to(0.5, { position: cc.v3(0, 0, 0), opacity: 255 }, { easing: \"backOut\" })\r\n            .start();\r\n\r\n        // this.dropFrom = this.dropFrom.getComponent(\"DropDown\");\r\n        this.dropTo = this.dropTo.getComponent(\"DropDown\");\r\n        this.editMoney.string = \"\";\r\n        this.initDropFrom();\r\n        this.initDropTo();\r\n        this.totalMoney = Configs.Login.Coin;\r\n        this.updateTotalMoney();\r\n        this.node.active = true;\r\n\r\n        for (var i = 0; i < this.arrItem.length; i++) {\r\n            this.arrItem[i].show();\r\n        }\r\n        this.arrItem[0].updateData(Configs.Login.Coin);\r\n        this.updateInfoAG(true);\r\n        this.updateInfoIBC(true);\r\n        this.updateInfoWM(true);\r\n        this.updateInfoSBO(true);\r\n        this.updateInfBanCa(true);\r\n        this.updateInfoEBET(true);\r\n    }\r\n\r\n\r\n\r\n    updateInfoAG(isUpdateTotal = false) {\r\n        Http.get(App.API_AG, { t: \"GetBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoAg:\" + JSON.stringify(res));\r\n            if (res[\"res\"] == 0) {\r\n                if (res[\"list\"][0][\"info\"] == \"error\") {\r\n                    _this.arrItem[1].maintain();\r\n\r\n                }\r\n                else {\r\n                    _this.arrItem[1].updateData(res.list[0][\"info\"]);\r\n                    _this.balanceAG = parseInt(res.list[0][\"info\"]) * 1000;\r\n                    if (isUpdateTotal == true) {\r\n                        _this.totalMoney += parseInt(res.list[0][\"info\"]) * 1000;\r\n                        _this.updateTotalMoney();\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                _this.arrItem[1].maintain();\r\n            }\r\n        });\r\n    }\r\n\r\n    updateInfoIBC(isUpdateTotal = false) {\r\n        Http.get(App.API_IBC, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoICB:\" + JSON.stringify(res));\r\n            if (res[\"code\"] == 0) {\r\n                _this.arrItem[2].updateData(res[\"data\"][\"balance\"]);\r\n                _this.balanceIBC = parseInt(res[\"data\"][\"balance\"]) * 1000;\r\n\r\n                if (isUpdateTotal == true) {\r\n                    _this.totalMoney += parseInt(res[\"data\"][\"balance\"]) * 1000;\r\n                    _this.updateTotalMoney();\r\n                }\r\n            }\r\n            else {\r\n                _this.arrItem[2].maintain();\r\n\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    updateInfoWM(isUpdateTotal = false) {\r\n        Http.get(App.API_WM, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoWM:\" + JSON.stringify(res));\r\n            if (res[\"list\"][0] == 0) {\r\n                _this.arrItem[3].updateData(res[\"list\"][1]);\r\n                _this.balanceWM = parseInt(res[\"list\"][1]) * 1000;\r\n                if (isUpdateTotal == true) {\r\n                    _this.totalMoney += parseInt(res[\"list\"][1]) * 1000;\r\n                    _this.updateTotalMoney();\r\n                }\r\n            }\r\n            else {\r\n                _this.arrItem[3].maintain();\r\n\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    updateInfoSBO(isUpdateTotal = false) {\r\n        Http.get(App.API_SBO, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfo SBO:\" + JSON.stringify(res));\r\n            if (res[\"res\"] == 0) {\r\n                _this.arrItem[4].updateData(res[\"data\"][\"balance\"] * 1000);\r\n                _this.balanceSBO = res[\"data\"][\"balance\"] * 1000;\r\n\r\n                if (isUpdateTotal == true) {\r\n                    _this.totalMoney += res[\"data\"][\"balance\"] * 1000;\r\n                    _this.updateTotalMoney();\r\n                }\r\n            }\r\n            else {\r\n                this.arrItem[4].maintain();\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n    updateInfoEBET(isUpdateTotal = false) {\r\n        Http.get(App.API_EBET, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfo EBET:\" + JSON.stringify(res));\r\n            if (res[\"res\"] == 0) {\r\n                _this.arrItem[6].updateData(res[\"data\"][\"money\"] * 1000);\r\n                _this.balanceEBET = res[\"data\"][\"money\"] * 1000;\r\n\r\n                if (isUpdateTotal == true) {\r\n                    _this.totalMoney += res[\"data\"][\"money\"] * 1000;\r\n                    _this.updateTotalMoney();\r\n                }\r\n            }\r\n            else {\r\n                this.arrItem[6].maintain();\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n    updateInfBanCa(isUpdateTotal = false) {\r\n\r\n        Http.get(Configs.App.API, { c: 2025, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => { //check balance \r\n            App.instance.showLoading(false);\r\n             ////Utils.Log(\"Res Balance ShootFish:\", res);\r\n            if (res[\"errorCode\"] == \"0\") {\r\n                 ////Utils.Log(\"check Balance Succes\");\r\n                this.arrItem[5].updateData(res.data);\r\n                this.balanceBanca = res.data;\r\n                if (isUpdateTotal == true) {\r\n                    _this.totalMoney += res.data\r\n                    _this.updateTotalMoney();\r\n                }\r\n            } else {\r\n                // App.instance.ShowAlertDialog(\"Chưa có thông tin số dư\\n Vui lòng vào game để tạo tài khoản!\");\r\n                this.arrItem[5].updateData(0);\r\n                this.balanceBanca = 0\r\n            }\r\n        })\r\n    }\r\n\r\n    initDropFrom() {\r\n        var datas = new Array();\r\n        for (let i = 0; i < ListGame.length; i++) {\r\n            datas.push({ optionString: ListGame[i] });\r\n        }\r\n        this.dropFrom.clearOptionDatas();\r\n        this.dropFrom.addOptionDatas(datas);\r\n        this.dropFrom.selectedIndex = 0;\r\n    }\r\n\r\n    initDropTo() {\r\n        var datas = new Array();\r\n        for (let i = 0; i < ListGame.length; i++) {\r\n            datas.push({ optionString: ListGame[i] });\r\n        }\r\n        this.dropTo.clearOptionDatas();\r\n        this.dropTo.addOptionDatas(datas);\r\n        this.dropTo.selectedIndex = 1;\r\n    }\r\n\r\n    updateTotalMoney() {\r\n        Tween.numberTo(this.txtTotalMoney, this.totalMoney, 1);\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    onToggleDropTo() {\r\n\r\n    }\r\n\r\n    onToggleDropFrom() {\r\n\r\n    }\r\n    onBtnConfirm() {\r\n         ////Utils.Log(\"vao day cai ne\");\r\n        setTimeout(() => {\r\n            if (this.dropFrom.labelCaption.string == ListGame[0]) {\r\n                //nap\r\n                var money = Utils.formatEditBox(this.editMoney.string) / 1000;\r\n                if (this.editMoney.string == \"\") {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                    return;\r\n                }\r\n\r\n                else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                    return;\r\n                }\r\n                else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                }\r\n                switch (this.dropTo.labelCaption.string) {\r\n                    case ListGame[1]:\r\n                        if (money * 1000 > Configs.Login.Coin) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n                            return;\r\n                        }\r\n                         ////Utils.Log(\"Nap:\" + _this.arrItem[0].money + \" : \" + _this.arrItem[1].money + \" : \" + money);\r\n                        App.instance.showLoading(true);\r\n                        Http.get(App.API_AG, { t: \"Deposit\", a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                            App.instance.showLoading(false);\r\n                            if (res[\"res\"] == 0) {\r\n                                 ////Utils.Log(\"Nap AG res:\" + JSON.stringify(res));\r\n                                _this.updateInfoAG();\r\n                                _this.arrItem[0].updateData(_this.arrItem[0].money - money * 1000);\r\n                                Configs.Login.Coin -= money * 1000;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_note_transfer_8\"));\r\n                            }\r\n                            else {\r\n                                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                            }\r\n                        });\r\n                        break;\r\n                    case ListGame[2]:\r\n                        //ebet\r\n                        var money = Utils.formatEditBox(this.editMoney.string);\r\n                        if (money > Configs.Login.Coin) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n                            return;\r\n                        }\r\n                        if (this.editMoney.string == \"\") {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                            return;\r\n                        }\r\n                        if (money < 50000) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_min_transfer') + \"50.000\");\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                        }\r\n                         ////Utils.Log(\"Nap:\" + _this.arrItem[0].money + \" : \" + _this.arrItem[6].money + \" : \" + money);\r\n                        App.instance.showLoading(true);\r\n                        Http.get(App.API_EBET, { t: \"Trans\", d: 1, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                            App.instance.showLoading(false);\r\n                             ////Utils.Log(\"Nap EBET err:\" + JSON.stringify(err));\r\n                             ////Utils.Log(\"Nap EBET res:\" + JSON.stringify(res));\r\n                            if (res[\"res\"] == 0) {\r\n                                _this.updateInfoEBET();\r\n                                _this.arrItem[0].updateData(_this.arrItem[0].money - money);\r\n                                Configs.Login.Coin -= money;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_note_transfer_8\"));\r\n                            }\r\n                            else {\r\n                                App.instance.ShowAlertDialog(res[\"message\"]);\r\n                            }\r\n                        });\r\n                        break;\r\n                    case ListGame[3]:\r\n                        //wm\r\n                        var money = Utils.formatEditBox(this.editMoney.string);\r\n                        if (money > Configs.Login.Coin) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n                            return;\r\n                        }\r\n                        if (this.editMoney.string == \"\") {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                            return;\r\n                        }\r\n\r\n                        else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                        }\r\n                         ////Utils.Log(\"Nap:\" + _this.arrItem[0].money + \" : \" + _this.arrItem[3].money + \" : \" + money);\r\n                        App.instance.showLoading(true);\r\n                        Http.get(App.API_WM, { t: \"Transfer\", d: 1, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                            App.instance.showLoading(false);\r\n                             ////Utils.Log(\"Nap wm err:\" + JSON.stringify(err));\r\n                             ////Utils.Log(\"Nap wm res:\" + JSON.stringify(res));\r\n                            if (res[\"res\"] == 0) {\r\n                                _this.updateInfoWM();\r\n                                _this.arrItem[0].updateData(_this.arrItem[0].money - money);\r\n                                Configs.Login.Coin -= money;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_note_transfer_8\"));\r\n                            }\r\n                            else {\r\n                                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                            }\r\n                        });\r\n                        break;\r\n                    case ListGame[4]:\r\n                        //\r\n\r\n                        var money = Utils.formatEditBox(this.editMoney.string);\r\n                        if (money > Configs.Login.Coin) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n                            return;\r\n                        }\r\n                        if (this.editMoney.string == \"\") {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                            return;\r\n                        }\r\n\r\n                        else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                        }\r\n                         ////Utils.Log(\"Nap:\" + _this.arrItem[0].money + \" : \" + _this.arrItem[2].money + \" : \" + money);\r\n                        App.instance.showLoading(true);\r\n                        Http.get(App.API_IBC, { t: \"Transfer\", d: 1, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                            App.instance.showLoading(false);\r\n                             ////Utils.Log(\"Nap IBC err:\" + JSON.stringify(err));\r\n                             ////Utils.Log(\"Nap IBC res:\" + JSON.stringify(res));\r\n                            if (res[\"code\"] == 0) {\r\n                                _this.updateInfoIBC();\r\n                                _this.arrItem[0].updateData(_this.arrItem[0].money - money);\r\n                                Configs.Login.Coin -= money;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_note_transfer_8\"));\r\n                            }\r\n                            else {\r\n                                App.instance.ShowAlertDialog(res[\"message\"]);\r\n                            }\r\n                        });\r\n                        break;\r\n                    case ListGame[5]:\r\n                        //\r\n                        var money = Utils.formatEditBox(this.editMoney.string);\r\n                        if (money > Configs.Login.Coin) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n                            return;\r\n                        }\r\n                        if (this.editMoney.string == \"\") {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                            return;\r\n                        }\r\n                        if (money < 50000) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_min_transfer') + \"50.000\");\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                        }\r\n                         ////Utils.Log(\"Nap:\" + _this.arrItem[0].money + \" : \" + _this.arrItem[4].money + \" : \" + money);\r\n                        App.instance.showLoading(true);\r\n                        Http.get(App.API_SBO, { t: \"Transfer\", d: 1, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                            App.instance.showLoading(false);\r\n                             ////Utils.Log(\"Nap SBO err:\" + JSON.stringify(err));\r\n                             ////Utils.Log(\"Nap SBO res:\" + JSON.stringify(res));\r\n                            if (res[\"res\"] == 0) {\r\n                                _this.updateInfoSBO();\r\n                                _this.arrItem[0].updateData(_this.arrItem[0].money - money);\r\n                                Configs.Login.Coin -= money;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_note_transfer_8\"));\r\n                            }\r\n                            else {\r\n                                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                            }\r\n                        });\r\n\r\n\r\n                        break;\r\n                    case ListGame[6]:\r\n                        var money = Utils.formatEditBox(this.editMoney.string);\r\n                        if (money > Configs.Login.Coin) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n                            return;\r\n                        }\r\n                        if (this.editMoney.string == \"\") {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                            return;\r\n                        }\r\n                        if (money < 50000) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_min_transfer') + \"50.000\");\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                        }\r\n                         ////Utils.Log(\"Nap:\" + _this.arrItem[0].money + \" : \" + _this.arrItem[4].money + \" : \" + money);\r\n                        App.instance.showLoading(true);\r\n\r\n                        Http.get(Configs.App.API, { c: 2022, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, mn: money }, (err, res) => { //nap fish\r\n                            App.instance.showLoading(false);\r\n                             ////Utils.Log(\"Deposit ShootFish:\", res);\r\n                            if (res[\"errorCode\"] == \"0\") {\r\n                                 ////Utils.Log(\"Deposit ShootFish Succes\");\r\n                                _this.updateInfBanCa();\r\n                                _this.arrItem[0].updateData(_this.arrItem[0].money - money);\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_8') + \" \" + Utils.formatNumber(money));\r\n                                Configs.Login.Coin -= money;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                            } else {\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_unknown_error1'));\r\n                            }\r\n                        });\r\n                        break;\r\n                }\r\n            }\r\n            else if (this.dropTo.labelCaption.string == ListGame[0]) {\r\n                //rut\r\n                var money = Utils.formatEditBox(this.editMoney.string) / 1000;\r\n                if (this.editMoney.string == \"\") {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                    return;\r\n                }\r\n\r\n                else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                    return;\r\n                }\r\n                else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                }\r\n                switch (this.dropFrom.labelCaption.string) {\r\n                    case ListGame[1]:\r\n                         ////Utils.Log(\"Rut:\" + this.balanceAG);\r\n                        //ag\r\n                        if (money * 1000 > this.balanceAG) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n                            return;\r\n                        }\r\n                        App.instance.showLoading(true);\r\n                        Http.get(App.API_AG, { t: \"Withdraw\", a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                            App.instance.showLoading(false);\r\n                            if (res[\"res\"] == 0) {\r\n                                _this.updateInfoAG();\r\n                                _this.arrItem[0].updateData(_this.arrItem[0].money + money * 1000);\r\n                                Configs.Login.Coin += money * 1000;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_note_transfer_9\"));\r\n                            }\r\n                            else {\r\n                                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                            }\r\n                        });\r\n                        break;\r\n                    case ListGame[2]:\r\n\r\n\r\n                        var money = Utils.formatEditBox(this.editMoney.string);\r\n                         ////Utils.Log(\"balanceEBET:\" + this.balanceEBET);\r\n                        if (money > this.balanceEBET) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n                            return;\r\n                        }\r\n                        if (this.editMoney.string == \"\") {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                            return;\r\n                        }\r\n                        if (money < 50000) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_min_transfer') + \"50.000\");\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                        }\r\n                        App.instance.showLoading(true);\r\n                        Http.get(App.API_EBET, { t: \"Trans\", d: 0, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                            App.instance.showLoading(false);\r\n                             ////Utils.Log(\"withDraw EBET:\" + JSON.stringify(res));\r\n                            if (res[\"res\"] == 0) {\r\n                                _this.updateInfoEBET();\r\n                                _this.arrItem[0].updateData(_this.arrItem[0].money + money);\r\n                                Configs.Login.Coin += money;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_note_transfer_9\"));\r\n                            }\r\n                            else {\r\n                                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                            }\r\n                        });\r\n                        break;\r\n                    case ListGame[3]:\r\n                        var money = Utils.formatEditBox(this.editMoney.string);\r\n                        if (money > this.balanceWM) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n                            return;\r\n                        }\r\n                        if (this.editMoney.string == \"\") {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                            return;\r\n                        }\r\n\r\n                        else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                        }\r\n                        //ibc\r\n                        App.instance.showLoading(true);\r\n                        Http.get(App.API_WM, { t: \"Transfer\", d: 0, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                            App.instance.showLoading(false);\r\n                             ////Utils.Log(\"withDraw IBC:\" + JSON.stringify(res));\r\n                            if (res[\"res\"] == 0) {\r\n                                _this.updateInfoWM();\r\n                                _this.arrItem[0].updateData(_this.arrItem[0].money + money);\r\n                                Configs.Login.Coin += money;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_note_transfer_9\"));\r\n                            }\r\n                            else {\r\n                                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                            }\r\n                        });\r\n                        break;\r\n                    case ListGame[4]:\r\n                        var money = Utils.formatEditBox(this.editMoney.string);\r\n                        if (money > this.balanceIBC) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n                            return;\r\n                        }\r\n                        if (this.editMoney.string == \"\") {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                            return;\r\n                        }\r\n\r\n                        else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                        }\r\n                        //ibc\r\n                        App.instance.showLoading(true);\r\n                        Http.get(App.API_IBC, { t: \"Transfer\", d: 0, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                            App.instance.showLoading(false);\r\n                            if (res[\"code\"] == 0) {\r\n                                _this.updateInfoIBC();\r\n                                _this.arrItem[0].updateData(_this.arrItem[0].money + money);\r\n                                Configs.Login.Coin += money;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_note_transfer_9\"));\r\n                            }\r\n                            else {\r\n                                App.instance.ShowAlertDialog(res[\"message\"]);\r\n                            }\r\n                        });\r\n                        break;\r\n                    case ListGame[5]:\r\n\r\n                        var money = Utils.formatEditBox(this.editMoney.string);\r\n                        if (money > this.balanceSBO) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n                            return;\r\n                        }\r\n                        if (this.editMoney.string == \"\") {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                            return;\r\n                        }\r\n                        if (money < 50000) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_min_transfer') + \"50.000\");\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                        }\r\n                        //ibc\r\n                        App.instance.showLoading(true);\r\n                        Http.get(App.API_SBO, { t: \"Transfer\", d: 0, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                            App.instance.showLoading(false);\r\n                             ////Utils.Log(\"withDraw SBO:\" + JSON.stringify(res));\r\n                            if (res[\"res\"] == 0) {\r\n                                _this.updateInfoSBO();\r\n                                _this.arrItem[0].updateData(_this.arrItem[0].money + money);\r\n                                Configs.Login.Coin += money;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_note_transfer_9\"));\r\n                            }\r\n                            else {\r\n                                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                            }\r\n                        });\r\n\r\n\r\n                        break;\r\n                    case ListGame[6]:\r\n                        var money = Utils.formatEditBox(this.editMoney.string);\r\n                        if (money > this.balanceBanca) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n                            return;\r\n                        }\r\n                        if (this.editMoney.string == \"\") {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                            return;\r\n                        }\r\n                        if (money < 50000) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_min_transfer') + \"50.000\");\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                            return;\r\n                        }\r\n                        else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                        }\r\n                        App.instance.showLoading(true);\r\n                        Http.get(Configs.App.API, { c: 2023, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, mn: money }, (err, res) => { //rut\r\n                            App.instance.showLoading(false);\r\n                             ////Utils.Log(\"WithDraw ShootFish:\", res);\r\n                            if (res[\"errorCode\"] == \"0\") {\r\n                                 ////Utils.Log(\"Withdraw Succes\");\r\n                                _this.updateInfBanCa();\r\n                                _this.arrItem[0].updateData(_this.arrItem[0].money + money);\r\n                                Configs.Login.Coin += money;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_9') + Utils.formatNumber(money) + \"\\n\" + App.instance.getTextLang('txt_note_transfer_10'));\r\n                            } else {\r\n                                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_unknown_error1'));\r\n                            }\r\n                        });\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_error\"));\r\n                return;\r\n            }\r\n        }, 300)\r\n    }\r\n\r\n}\r\n","import Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport BroadcastReceiver from \"../Script/common/BroadcastReceiver\";\r\nimport Tween from \"../Script/common/Tween\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport ItemGameLive from \"./ItemGameLive\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nvar ListGame = [\"Tài khoản chính\", \"Live Casino AG\", \"Thể thao IBC2\", \"Live Casino WM\",\"Thể thao CMD368\"];\r\nvar _this = null;\r\n@ccclass\r\nexport default class GameLiveGeneralController extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    boxLeft: cc.Node = null;\r\n    @property(cc.Node)\r\n    boxRight: cc.Node = null;\r\n    @property([ItemGameLive])\r\n    arrItem: ItemGameLive[] = [];\r\n    @property(cc.Node)\r\n    dropFrom: cc.Node = null;\r\n    @property(cc.Node)\r\n    dropTo: cc.Node = null;\r\n    @property(cc.EditBox)\r\n    editMoney: cc.EditBox = null;\r\n    @property(cc.Label)\r\n    txtTotalMoney: cc.Label = null;\r\n  \r\n    private balanceAG = 0;\r\n    private balanceIBC = 0;\r\n    private balanceWM = 0;\r\n    private balanceCMD = 0;\r\n    private totalMoney = 0;\r\n    onLoad() {\r\n        _this = this;\r\n    }\r\n    show() {\r\n        this.editMoney.tabIndex = -1;\r\n        this.boxLeft.opacity = 0;\r\n        this.boxLeft.position = new cc.Vec3(0, 200, 0);\r\n        cc.Tween.stopAllByTarget(this.boxLeft);\r\n        cc.tween(this.boxLeft)\r\n            .to(0.5, { position: cc.v3(0, 0, 0), opacity: 255 }, { easing: \"backOut\" })\r\n            .start();\r\n\r\n        this.boxRight.opacity = 0;\r\n        this.boxRight.position = new cc.Vec3(0, -200, 0);\r\n        cc.Tween.stopAllByTarget(this.boxRight);\r\n        cc.tween(this.boxRight)\r\n            .to(0.5, { position: cc.v3(0, 0, 0), opacity: 255 }, { easing: \"backOut\" })\r\n            .start();\r\n\r\n        this.dropFrom = this.dropFrom.getComponent(\"DropDown\");\r\n        this.dropTo = this.dropTo.getComponent(\"DropDown\");\r\n        this.editMoney.string = \"\";\r\n        this.initDropFrom();\r\n        this.initDropTo();\r\n        this.totalMoney = 0;\r\n        this.totalMoney += Configs.Login.Coin;\r\n        this.updateTotalMoney();\r\n        this.node.active = true;\r\n\r\n        for (var i = 0; i < this.arrItem.length; i++) {\r\n            this.arrItem[i].show();\r\n        }\r\n        this.arrItem[0].updateData(Configs.Login.Coin);\r\n        this.updateInfoAG(true);\r\n        this.updateInfoIBC(true);\r\n        this.updateInfoWM(true);\r\n        this.updateInfoCMD(true);\r\n    }\r\n\r\n   \r\n\r\n    updateInfoAG(isUpdateTotal = false) {\r\n        Http.get(App.API_AG, { t: \"GetBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoAg:\"+JSON.stringify(res));\r\n            if (res[\"res\"] == 0) {\r\n                if(res[\"list\"][0][\"info\"] == \"error\"){\r\n                    _this.arrItem[1].maintain();\r\n                    \r\n                }\r\n                else{\r\n                    _this.arrItem[1].updateData(res.list[0][\"info\"]);\r\n                    _this.balanceAG =  parseInt(res.list[0][\"info\"]) * 1000;\r\n                    if (isUpdateTotal == true) {\r\n                        _this.totalMoney += parseInt(res.list[0][\"info\"]) * 1000;\r\n                        _this.updateTotalMoney();\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                _this.arrItem[1].maintain();\r\n            }\r\n        });\r\n    }\r\n\r\n    updateInfoIBC(isUpdateTotal = false) {\r\n        Http.get(App.API_IBC, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoICB:\"+JSON.stringify(res));\r\n            if (res[\"code\"] == 0) {\r\n                _this.arrItem[2].updateData(res[\"data\"][\"balance\"]);\r\n                _this.balanceIBC = parseInt(res[\"data\"][\"balance\"]) * 1000;\r\n\r\n                if (isUpdateTotal == true) {\r\n                    _this.totalMoney += parseInt(res[\"data\"][\"balance\"]) * 1000;\r\n                    _this.updateTotalMoney();\r\n                }\r\n            }\r\n            else {\r\n                _this.arrItem[2].maintain();\r\n               \r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    updateInfoWM(isUpdateTotal = false) {\r\n        Http.get(App.API_WM, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoWM:\"+JSON.stringify(res));\r\n            if (res[\"list\"][0] == 0) {\r\n                _this.arrItem[3].updateData(res[\"list\"][1]);\r\n                _this.balanceWM =  parseInt(res[\"list\"][1]) * 1000;\r\n                if (isUpdateTotal == true) {\r\n                    _this.totalMoney += parseInt(res[\"list\"][1]) * 1000;\r\n                    _this.updateTotalMoney();\r\n                }\r\n            }\r\n            else {\r\n                _this.arrItem[3].maintain();\r\n\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    updateInfoCMD(isUpdateTotal = false) {\r\n        Http.get(App.API_CMD, { t: \"bl\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoCMD:\"+JSON.stringify(res));\r\n            if (res[\"code\"] == 0) {\r\n                _this.arrItem[4].updateData(res[\"data\"][\"data\"][0][\"betAmount\"]);\r\n                _this.balanceCMD = res[\"data\"][\"data\"][0][\"betAmount\"];\r\n\r\n                if (isUpdateTotal == true) {\r\n                    _this.totalMoney += res[\"data\"][\"data\"][0][\"betAmount\"];\r\n                    _this.updateTotalMoney();\r\n                }\r\n            }\r\n            else {\r\n                // if (res[\"msg\"] != null) {\r\n                //     App.instance.ShowAlertDialog(\"msg\");\r\n                // }\r\n                _this.arrItem[4].maintain();\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    initDropFrom() {\r\n        var datas = new Array();\r\n        for (let i = 0; i < ListGame.length; i++) {\r\n            datas.push({ optionString: ListGame[i] });\r\n        }\r\n        this.dropFrom.clearOptionDatas();\r\n        this.dropFrom.addOptionDatas(datas);\r\n        this.dropFrom.selectedIndex = 0;\r\n    }\r\n\r\n    initDropTo() {\r\n        var datas = new Array();\r\n        for (let i = 0; i < ListGame.length; i++) {\r\n            datas.push({ optionString: ListGame[i] });\r\n        }\r\n        this.dropTo.clearOptionDatas();\r\n        this.dropTo.addOptionDatas(datas);\r\n        this.dropTo.selectedIndex = 1;\r\n    }\r\n\r\n    updateTotalMoney() {\r\n        Tween.numberTo(this.txtTotalMoney, this.totalMoney, 1);\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    onToggleDropTo() {\r\n\r\n    }\r\n\r\n    onToggleDropFrom() {\r\n\r\n    }\r\n    onBtnConfirm() {\r\n         ////Utils.Log(\"vao day cai ne\");\r\n        if (this.dropFrom.labelCaption.string == ListGame[0]) {\r\n            //nap\r\n            var money = Utils.formatEditBox(this.editMoney.string) / 1000;\r\n            if (this.editMoney.string == \"\") {\r\n                App.instance.ShowAlertDialog(\"Vui lòng điền đầy đủ thông tin\");\r\n                return;\r\n            }\r\n\r\n            else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                return;\r\n            }\r\n            else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n            }\r\n            if (this.dropTo.labelCaption.string == ListGame[1]) {\r\n                //ag\r\n                if (money * 1000 > Configs.Login.Coin) {\r\n                    App.instance.ShowAlertDialog(\"Số dư không đủ!\");\r\n                    return;\r\n                }\r\n                 ////Utils.Log(\"Nap:\" + _this.arrItem[0].money + \" : \" + _this.arrItem[1].money + \" : \" + money);\r\n                App.instance.showLoading(true);\r\n                Http.get(Configs.App.API_AG, { t: \"Deposit\", a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                    if (res[\"res\"] == 0) {\r\n                         ////Utils.Log(\"Nap AG res:\" + JSON.stringify(res));\r\n                        _this.updateInfoAG();\r\n                        _this.arrItem[0].updateData(_this.arrItem[0].money - money * 1000);\r\n                        Configs.Login.Coin -= money * 1000;\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        App.instance.ShowAlertDialog(\"Nạp Thành Công!\");\r\n                    }\r\n                    else {\r\n                        App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                    }\r\n\r\n\r\n                });\r\n            }\r\n            else if (this.dropTo.labelCaption.string == ListGame[2]) {\r\n                //ibc\r\n                var money = Utils.formatEditBox(this.editMoney.string);\r\n                if (money > Configs.Login.Coin) {\r\n                    App.instance.ShowAlertDialog(\"Số dư không đủ!\");\r\n                    return;\r\n                }\r\n                if (this.editMoney.string == \"\") {\r\n                    App.instance.ShowAlertDialog(\"Vui lòng điền đầy đủ thông tin\");\r\n                    return;\r\n                }\r\n\r\n                else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                    App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                    return;\r\n                }\r\n                else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                    App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                }\r\n                 ////Utils.Log(\"Nap:\" + _this.arrItem[0].money + \" : \" + _this.arrItem[2].money + \" : \" + money);\r\n                App.instance.showLoading(true);\r\n                Http.get(App.API_IBC, { t: \"Transfer\", d: 1, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                     ////Utils.Log(\"Nap IBC err:\" + JSON.stringify(err));\r\n                     ////Utils.Log(\"Nap IBC res:\" + JSON.stringify(res));\r\n                    if (res[\"code\"] == 0) {\r\n                        _this.updateInfoIBC();\r\n                        _this.arrItem[0].updateData(_this.arrItem[0].money - money);\r\n                        Configs.Login.Coin -= money;\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        App.instance.ShowAlertDialog(\"Nạp Thành Công!\");\r\n                    }\r\n                    else {\r\n                        App.instance.ShowAlertDialog(res[\"message\"]);\r\n                    }\r\n\r\n\r\n                });\r\n            }\r\n            else if (this.dropTo.labelCaption.string == ListGame[3]) {\r\n                //wm\r\n                var money = Utils.formatEditBox(this.editMoney.string);\r\n                if (money > Configs.Login.Coin) {\r\n                    App.instance.ShowAlertDialog(\"Số dư không đủ!\");\r\n                    return;\r\n                }\r\n                if (this.editMoney.string == \"\") {\r\n                    App.instance.ShowAlertDialog(\"Vui lòng điền đầy đủ thông tin\");\r\n                    return;\r\n                }\r\n\r\n                else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                    App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                    return;\r\n                }\r\n                else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                    App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                }\r\n                 ////Utils.Log(\"Nap:\" + _this.arrItem[0].money + \" : \" + _this.arrItem[3].money + \" : \" + money);\r\n                App.instance.showLoading(true);\r\n                Http.get(App.API_WM, { t: \"Transfer\", d: 1, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                     ////Utils.Log(\"Nap wm err:\" + JSON.stringify(err));\r\n                     ////Utils.Log(\"Nap wm res:\" + JSON.stringify(res));\r\n                    if (res[\"res\"] == 0) {\r\n                        _this.updateInfoWM();\r\n                        _this.arrItem[0].updateData(_this.arrItem[0].money - money);\r\n                        Configs.Login.Coin -= money;\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        App.instance.ShowAlertDialog(\"Nạp Thành Công!\");\r\n                    }\r\n                    else {\r\n                        App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                    }\r\n\r\n\r\n                });\r\n            }\r\n            else if (this.dropTo.labelCaption.string == ListGame[4]) {\r\n                //wm\r\n                var money = Utils.formatEditBox(this.editMoney.string);\r\n                if (money > Configs.Login.Coin) {\r\n                    App.instance.ShowAlertDialog(\"Số dư không đủ!\");\r\n                    return;\r\n                }\r\n                if (this.editMoney.string == \"\") {\r\n                    App.instance.ShowAlertDialog(\"Vui lòng điền đầy đủ thông tin\");\r\n                    return;\r\n                }\r\n                if (money < 50000) {\r\n                    App.instance.ShowAlertDialog(\"Chuyển tiền tối thiểu 50.000\");\r\n                    return;\r\n                }\r\n                else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                    App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                    return;\r\n                }\r\n                else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                    App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                }\r\n                 ////Utils.Log(\"Nap:\" + _this.arrItem[0].money + \" : \" + _this.arrItem[4].money + \" : \" + money);\r\n                App.instance.showLoading(true);\r\n                Http.get(App.API_CMD, { t: \"tf\", d: 1, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                     ////Utils.Log(\"Nap cmd err:\" + JSON.stringify(err));\r\n                     ////Utils.Log(\"Nap cmd res:\" + JSON.stringify(res));\r\n                    if (res[\"code\"] == 0) {\r\n                        _this.updateInfoCMD();\r\n                        _this.arrItem[0].updateData(_this.arrItem[0].money - money);\r\n                        Configs.Login.Coin -= money;\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        App.instance.ShowAlertDialog(\"Nạp Thành Công!\");\r\n                    }\r\n                    else {\r\n                        App.instance.ShowAlertDialog(res[\"message\"]);\r\n                    }\r\n\r\n\r\n                });\r\n            }\r\n        }\r\n        else if (this.dropTo.labelCaption.string == ListGame[0]) {\r\n            //rut\r\n            var money = Utils.formatEditBox(this.editMoney.string) / 1000;\r\n            if (this.editMoney.string == \"\") {\r\n                App.instance.ShowAlertDialog(\"Vui lòng điền đầy đủ thông tin\");\r\n                return;\r\n            }\r\n            \r\n            else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                return;\r\n            }\r\n            else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n            }\r\n            if (this.dropFrom.labelCaption.string == ListGame[1]) {\r\n                 ////Utils.Log(\"Rut:\"+this.balanceAG);\r\n                //ag\r\n                if (money * 1000 > this.balanceAG) {\r\n                    App.instance.ShowAlertDialog(\"Số dư không đủ!\");\r\n                    return;\r\n                }\r\n                App.instance.showLoading(true);\r\n                Http.get(App.API_AG, { t: \"Withdraw\", a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n\r\n                    if (res[\"res\"] == 0) {\r\n                        _this.updateInfoAG();\r\n                        _this.arrItem[0].updateData(_this.arrItem[0].money + money * 1000);\r\n                        Configs.Login.Coin += money * 1000;\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        App.instance.ShowAlertDialog(\"Rút Thành Công!\");\r\n                    }\r\n                    else {\r\n                        App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                    }\r\n\r\n\r\n\r\n                });\r\n            }\r\n            else if (this.dropFrom.labelCaption.string == ListGame[2]) {\r\n                var money = Utils.formatEditBox(this.editMoney.string);\r\n                if (money  > this.balanceIBC) {\r\n                    App.instance.ShowAlertDialog(\"Số dư không đủ!\");\r\n                    return;\r\n                }\r\n                if (this.editMoney.string == \"\") {\r\n                    App.instance.ShowAlertDialog(\"Vui lòng điền đầy đủ thông tin\");\r\n                    return;\r\n                }\r\n\r\n                else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                    App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                    return;\r\n                }\r\n                else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                    App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                }\r\n                //ibc\r\n                App.instance.showLoading(true);\r\n                Http.get(App.API_IBC, { t: \"Transfer\", d: 0, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                    if (res[\"code\"] == 0) {\r\n                        _this.updateInfoIBC();\r\n                        _this.arrItem[0].updateData(_this.arrItem[0].money + money);\r\n                        Configs.Login.Coin += money;\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        App.instance.ShowAlertDialog(\"Rút Thành Công!\");\r\n                    }\r\n                    else {\r\n                        App.instance.ShowAlertDialog(res[\"message\"]);\r\n                    }\r\n\r\n\r\n\r\n                });\r\n            }\r\n            else if (this.dropFrom.labelCaption.string == ListGame[3]) {\r\n                var money = Utils.formatEditBox(this.editMoney.string);\r\n                if (money  > this.balanceWM) {\r\n                    App.instance.ShowAlertDialog(\"Số dư không đủ!\");\r\n                    return;\r\n                }\r\n                if (this.editMoney.string == \"\") {\r\n                    App.instance.ShowAlertDialog(\"Vui lòng điền đầy đủ thông tin\");\r\n                    return;\r\n                }\r\n\r\n                else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                    App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                    return;\r\n                }\r\n                else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                    App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                }\r\n                //ibc\r\n                App.instance.showLoading(true);\r\n                Http.get(App.API_WM, { t: \"Transfer\", d: 0, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                     ////Utils.Log(\"withDraw IBC:\" + JSON.stringify(res));\r\n                    if (res[\"res\"] == 0) {\r\n                        _this.updateInfoWM();\r\n                        _this.arrItem[0].updateData(_this.arrItem[0].money + money);\r\n                        Configs.Login.Coin += money;\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        App.instance.ShowAlertDialog(\"Rút Thành Công!\");\r\n                    }\r\n                    else {\r\n                        App.instance.ShowAlertDialog(res[\"msg\"]);\r\n                    }\r\n\r\n\r\n\r\n                });\r\n            }\r\n            else if (this.dropFrom.labelCaption.string == ListGame[4]) {\r\n                var money = Utils.formatEditBox(this.editMoney.string);\r\n                if (money  > this.balanceCMD) {\r\n                    App.instance.ShowAlertDialog(\"Số dư không đủ!\");\r\n                    return;\r\n                }\r\n                if (this.editMoney.string == \"\") {\r\n                    App.instance.ShowAlertDialog(\"Vui lòng điền đầy đủ thông tin\");\r\n                    return;\r\n                }\r\n                if (money < 50000) {\r\n                    App.instance.ShowAlertDialog(\"Chuyển tiền tối thiểu 50.000\");\r\n                    return;\r\n                }\r\n                else if (this.dropFrom.labelCaption.string == this.dropTo.labelCaption.string) {\r\n                    App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                    return;\r\n                }\r\n                else if (this.dropFrom.selectedIndex != 0 && this.dropTo.selectedIndex != 0) {\r\n                    App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n                }\r\n                //ibc\r\n                App.instance.showLoading(true);\r\n                Http.get(App.API_CMD, { t: \"tf\", d: 0, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                     ////Utils.Log(\"withDraw CMD:\" + JSON.stringify(res));\r\n                    if (res[\"code\"] == 0) {\r\n                        _this.updateInfoCMD();\r\n                        _this.arrItem[0].updateData(_this.arrItem[0].money + money);\r\n                        Configs.Login.Coin += money;\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        App.instance.ShowAlertDialog(\"Rút Thành Công!\");\r\n                    }\r\n                    else {\r\n                        App.instance.ShowAlertDialog(res[\"message\"]);\r\n                    }\r\n\r\n\r\n\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            App.instance.ShowAlertDialog(\"Thông tin chưa chính xác! Vui lòng kiểm tra lại\");\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","\r\n// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.SpriteFrame)\r\n    spriteFrameOn: cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    spriteFrameOff: cc.SpriteFrame = null;\r\n    @property(cc.Sprite)\r\n    sprite: cc.Sprite = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.sprite.spriteFrame=this.spriteFrameOn;\r\n    }\r\n\r\n    public SetActive(active:Boolean)\r\n    {\r\n        //  //Utils.Log(\"activeactiveactiveactiveactive: \"+active);\r\n        if(active)\r\n        this.sprite.spriteFrame=this.spriteFrameOn;\r\n        else\r\n        this.sprite.spriteFrame=this.spriteFrameOff;\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    txtBank: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    txtBranch: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    txtName: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    txtNumber: cc.Label = null;\r\n    \r\n\r\n    private data = null;\r\n    private popupProfile = null;\r\n    init(data,popupProfile){\r\n        this.data = data;\r\n        this.popupProfile = popupProfile;\r\n\r\n        this.txtBank.string = data.bankName;\r\n        this.txtBranch.string = data.branch;\r\n        this.txtName.string =data.customerName;\r\n        this.txtNumber.string = data.bankNumber;\r\n    }\r\n\r\n    onBtnClick(){\r\n        this.popupProfile.ShowBoxUpdate(this.data);\r\n    }\r\n}\r\n","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ItemChoseBank extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    spriteBank: cc.Sprite = null;\r\n\r\n    @property([cc.SpriteFrame])\r\n    sfBankArray: cc.SpriteFrame[] = [];\r\n\r\n    private callback = null;\r\n    private data = null;\r\n    init(tabWell, data, callback) {\r\n        this.data = data;\r\n        this.callback = callback;\r\n        var self = this;\r\n        this.spriteBank.spriteFrame = null;\r\n        if (tabWell == \"clickpay\") {\r\n            try {\r\n                cc.loader.load(data.bank_logo, function (err, texture) {\r\n                    var newSpriteFrame = new cc.SpriteFrame(texture);\r\n                    self.spriteBank.spriteFrame = newSpriteFrame;\r\n                });\r\n            }\r\n            catch (e) {\r\n\r\n            }\r\n        }\r\n        else {\r\n            cc.loader.load(data.imageUrl, function (err, texture) {\r\n                var newSpriteFrame = new cc.SpriteFrame(texture);\r\n                self.spriteBank.spriteFrame = newSpriteFrame;\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    onBtnClick() {\r\n        if (this.callback != null) {\r\n            this.callback(this.data);\r\n        }\r\n    }\r\n}\r\n","import Tween from \"../Script/common/Tween\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n\r\n@ccclass\r\nexport default class ItemGameLive extends cc.Component {\r\n\r\n    @property\r\n    id:number = 0;\r\n    @property(cc.Label)\r\n    txtName:cc.Label = null;\r\n    @property(cc.Label)\r\n    txtBalance:cc.Label = null;\r\n    @property(cc.Label)\r\n    txtMaintain:cc.Label = null;\r\n    @property(cc.Node)\r\n    nodeBox:cc.Node = null;\r\n\r\n    public money = 0;\r\n    show(){\r\n        this.node.active = true;\r\n        this.money = 0;\r\n    }\r\n\r\n    hide(){\r\n        this.node.active = false;\r\n    }\r\n\r\n    maintain(){\r\n        this.txtBalance.node.active = false;\r\n        this.txtMaintain.node.active = true;\r\n    }\r\n    updateData(data){\r\n        this.txtBalance.node.active = true;\r\n        this.txtMaintain.node.active = false;\r\n        this.money  = parseInt(data);\r\n        if(this.id == 1 || this.id == 2 || this.id == 3){\r\n            Tween.numberTo(this.txtBalance,this.money*1000,1);\r\n        }\r\n        else{\r\n            Tween.numberTo(this.txtBalance,this.money,1);\r\n        }\r\n    }\r\n\r\n    onBtnClick(){\r\n\r\n    }\r\n    \r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n@ccclass\r\nexport default class ItemIconSlot25 extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    spriteIcon: cc.Sprite = null;\r\n\r\n    @property(sp.Skeleton)\r\n    spineIcon: sp.Skeleton = null;\r\n\r\n    @property(cc.Node)\r\n    nodeBox:cc.Node = null;\r\n\r\n    public gamePlayManager = null;\r\n    public itemId = null;\r\n    public index = null;\r\n   \r\n    init (itemId, index, gamePlayManager) {\r\n        var self = this;\r\n        self.gamePlayManager = gamePlayManager;\r\n        self.itemId = itemId;\r\n        self.index = index;\r\n        self.spriteIcon.node.active = true;\r\n        if(self.spineIcon){\r\n            self.spineIcon.node.active = false;\r\n        }\r\n        self.spriteIcon.spriteFrame = self.gamePlayManager.getSpriteFrameIcon(self.itemId);\r\n    }\r\n\r\n    \r\n\r\n    changeSpriteBlurByItemId(itemId){\r\n        var self = this;\r\n        self.itemId = itemId;\r\n        self.spriteIcon.spriteFrame = self.gamePlayManager.getSpriteFrameIconBlur(itemId);\r\n    }\r\n\r\n    changeSpriteRealByItemId(itemId){\r\n        var self = this;\r\n        self.itemId = itemId;\r\n        self.spriteIcon.spriteFrame = self.gamePlayManager.getSpriteFrameIcon(itemId);\r\n    }\r\n\r\n    changeSpineIcon(itemId){\r\n        var self = this;\r\n        self.itemId = itemId;\r\n        if(self.spineIcon){\r\n            self.spineIcon.skeletonData = self.gamePlayManager.getSpineIcon(itemId);\r\n        }\r\n    }\r\n}\r\n","const { ccclass, property, requireComponent } = cc._decorator;\r\n\r\nimport LanguageManager from \"./Language.LanguageManager\";\r\n\r\nnamespace Language {\r\n    @ccclass\r\n    @requireComponent(cc.Label)\r\n    export class Label extends cc.Component {\r\n\r\n        @property\r\n        id: string = \"\";\r\n        @property\r\n        isUpperCase: boolean = false;\r\n\r\n        start() {\r\n            LanguageManager.instance.addListener(() => {\r\n                this.updateText();\r\n            }, this);\r\n            this.updateText();\r\n        }\r\n\r\n        private updateText() {\r\n            let str = LanguageManager.instance.getString(this.id);\r\n            if (str != null && str.trim().length == 0) {\r\n                return;\r\n            }\r\n            if (this.isUpperCase) {\r\n                str = str.toUpperCase();\r\n            }\r\n            this.getComponent(cc.Label).string = str;\r\n        }\r\n    }\r\n\r\n}\r\nexport default Language.Label;","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nnamespace Language {\r\n    @ccclass\r\n    export class LanguageMananger extends cc.Component {\r\n\r\n        static instance: LanguageMananger = null;\r\n\r\n        @property(cc.TextAsset)\r\n        json: cc.TextAsset = null;\r\n\r\n\r\n        languageCode = \"vi\";\r\n        private texts: Object = {};\r\n        private listeners: Array<any> = [];\r\n\r\n        onLoad() {\r\n            LanguageMananger.instance = this;\r\n            this.texts = JSON.parse(this.json.text);\r\n            let langCode = cc.sys.localStorage.getItem(\"langCode\");\r\n            if (langCode != null) {\r\n                this.languageCode = langCode;\r\n            }\r\n        }\r\n\r\n        public setLanguage(languageCode: string) {\r\n            this.languageCode = languageCode;\r\n            cc.sys.localStorage.setItem(\"langCode\", languageCode);\r\n            for (var i = 0; i < this.listeners.length; i++) {\r\n                var listener = this.listeners[i];\r\n                if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                    listener.callback(languageCode);\r\n                } else {\r\n                    this.listeners.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n\r\n        public addListener(callback: (languageCode: string) => void, target: cc.Component) {\r\n            this.listeners.push({\r\n                callback: callback,\r\n                target: target\r\n            });\r\n        }\r\n\r\n        public getString(id: string): string {\r\n            if (this.texts.hasOwnProperty(id)) {\r\n                if (this.texts[id].hasOwnProperty(this.languageCode)) {\r\n                    return this.texts[id][this.languageCode];\r\n                }\r\n            }\r\n            return id;\r\n        }\r\n    }\r\n\r\n}\r\nexport default Language.LanguageMananger;","const { ccclass, property, requireComponent} = cc._decorator;\r\n\r\nimport LanguageManager from \"./Language.LanguageManager\";\r\n\r\nnamespace Language {\r\n    @ccclass\r\n    @requireComponent(cc.Sprite)\r\n    export class Sprite extends cc.Component {\r\n\r\n        @property(cc.SpriteFrame)\r\n        sprFrameVi: cc.SpriteFrame = null;\r\n        @property(cc.SpriteFrame)\r\n        sprFrameEn: cc.SpriteFrame = null;\r\n\r\n        start() {\r\n            LanguageManager.instance.addListener(() => {\r\n                this.updateSpriteFrame();\r\n            }, this);\r\n            this.updateSpriteFrame();\r\n        }\r\n\r\n        private updateSpriteFrame(){\r\n            switch (LanguageManager.instance.languageCode) {\r\n                case \"en\":\r\n                    this.getComponent(cc.Sprite).spriteFrame = this.sprFrameEn;\r\n                    break;\r\n                default:\r\n                    this.getComponent(cc.Sprite).spriteFrame = this.sprFrameVi;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\nexport default Language.Sprite;","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BannerList extends cc.Component {\r\n\r\n    @property(cc.PageView)\r\n    pageView: cc.PageView = null;\r\n\r\n    @property(cc.Node)\r\n    itemPage: cc.Node = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    private intervalBanner = null;\r\n    private dataPage = null;\r\n    private indexPage = 0;\r\n    onLoad() {\r\n\r\n    }\r\n\r\n    start() {\r\n        this.getBanner();\r\n    }\r\n    getBanner() {\r\n        var data = {};\r\n        data[\"c\"] = 2020;\r\n        Http.get(Configs.App.API, data, (err, res) => {\r\n            if (res.success) {\r\n                this.loadListBanner(res.data);\r\n            }\r\n            else {\r\n                App.instance.alertDialog.showMsg(res.message);\r\n            }\r\n        });\r\n    }\r\n    loadListBanner(data) {\r\n        var self = this;\r\n        let dataBanner = [];\r\n        data.forEach(element => {\r\n            if (element.status == 1) {\r\n                dataBanner.push(element);\r\n            }\r\n        });\r\n        if (data.length != 0) {\r\n            this.dataPage = data;\r\n            for (let i = 0; i < dataBanner.length; i++) {\r\n                let item = this.pageView.content.children[i];\r\n                if (!item) {\r\n                    item = cc.instantiate(this.itemPage);\r\n                    this.pageView.addPage(item);\r\n                }\r\n                let url = dataBanner[i].image_path;\r\n                Utils.loadImgFromUrl(item.getComponent(cc.Sprite), url);\r\n            }\r\n            this.intervalBanner = setInterval(function () {\r\n                self.pageView.scrollToPage(self.indexPage, 0.5);\r\n                self.indexPage++;\r\n                if (self.indexPage >= self.dataPage.length) {\r\n                    self.indexPage = 0;\r\n                }\r\n            }, 2000);\r\n            Global.LobbyController.updateSizeListGame(true);\r\n        } else {\r\n            Global.LobbyController.updateSizeListGame(false);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    onDestroy() {\r\n        if (this.intervalBanner != null) {\r\n            clearInterval(this.intervalBanner);\r\n            this.intervalBanner = null;\r\n        }\r\n    }\r\n    // update (dt) {}\r\n}\r\n","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BoxKiemTien extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    lbTime: cc.Label = null;\r\n    isMove = false;\r\n    distance: number = 0;\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, (touch) => {\r\n            this.node.setPosition(this.node.getPosition().add(touch.getDelta()));\r\n            this.distance += Math.abs(touch.getDelta().x) + Math.abs(touch.getDelta().y);\r\n            if (this.distance >= 70) {\r\n                this.isMove = true;\r\n            }\r\n        });\r\n        this.node.on(cc.Node.EventType.TOUCH_END, (touch) => {\r\n            if (!this.isMove) {\r\n                Global.LobbyController.actKiemTien();\r\n            }\r\n            this.isMove = false;\r\n        });\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n    // update (dt) {}\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BoxLixi extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    lbTime: cc.Label = null;\r\n    isMove = false;\r\n    distance: number = 0;\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n    //    this.node.on(cc.Node.EventType.TOUCH_MOVE, (touch) => {\r\n    //        this.node.setPosition(this.node.getPosition().add(touch.getDelta()));\r\n    //        this.distance += Math.abs(touch.getDelta().x) + Math.abs(touch.getDelta().y);\r\n    //        if (this.distance >= 70) {\r\n    //            this.isMove = true;\r\n    //        }\r\n    //    });\r\n        this.node.on(cc.Node.EventType.TOUCH_END, (touch) => {\r\n            if (!this.isMove) {\r\n                App.instance.actShowPopupRuleLixi();\r\n            }\r\n            this.isMove = false;\r\n        });\r\n    }\r\n\r\n    start() {\r\n        if (App.instance.timeLixi > 0) {\r\n            this.setCountDown();\r\n        } else if (App.instance.timeLixi == 0) {\r\n            this.lbTime.string = \"Đang diễn ra\";\r\n        }\r\n    }\r\n    getInfo() {\r\n        Http.get(Configs.App.API, { \"c\": 2036, \"nn\": Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, \"ac\": \"time\" }, (err, res) => {\r\n            if (err) {\r\n                return;\r\n            } else {\r\n                //  cc.log(res);\r\n                if (res['data'] != null) {\r\n                    App.instance.timeLixi = res['data']['countTime'];\r\n                    this.setCountDown();\r\n                } else if (res['success']) {// dang trong time su kien\r\n                    this.lbTime.string = \"Đang diễn ra\";\r\n                    if (res[\"errorCode\"] == \"0\") {\r\n                        App.instance.actGetEventLixi();\r\n                    } else {\r\n                        App.instance.ShowAlertDialog(res['message']);\r\n                    }\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n    setCountDown() {\r\n        if (App.instance.timeLixi > 0) {\r\n            this.schedule(() => {\r\n                let timeRemainSec = App.instance.timeLixi;\r\n                if (timeRemainSec > 3600) {\r\n                    let hour = Math.floor(timeRemainSec / 3600) > 9 ? Math.floor(timeRemainSec / 3600) : \"0\" + Math.floor(timeRemainSec / 3600);\r\n                    let minutes = Math.floor((timeRemainSec % 3600) / 60) > 9 ? Math.floor((timeRemainSec % 3600) / 60) : \"0\" + Math.floor((timeRemainSec % 3600) / 60);\r\n                    let seccond = Math.floor((timeRemainSec % 3600) % 60) > 9 ? Math.floor((timeRemainSec % 3600) % 60) : \"0\" + Math.floor((timeRemainSec % 3600) % 60);\r\n                    this.lbTime.string = cc.js.formatStr(\"%s:%s:%s\", hour, minutes, seccond);\r\n                } else if (timeRemainSec > 60) {\r\n                    let minutes = Math.floor((timeRemainSec % 3600) / 60) > 9 ? Math.floor((timeRemainSec % 3600) / 60) : \"0\" + Math.floor((timeRemainSec % 3600) / 60);\r\n                    let seccond = Math.floor((timeRemainSec % 3600) % 60) > 9 ? Math.floor((timeRemainSec % 3600) % 60) : \"0\" + Math.floor((timeRemainSec % 3600) % 60);\r\n                    this.lbTime.string = cc.js.formatStr(\"%s:%s\", minutes, seccond);\r\n                } else if (timeRemainSec == 0) {\r\n                    this.unscheduleAllCallbacks();\r\n                    // this.getInfo();\r\n                    App.instance.actGetEventLixi();\r\n                }\r\n                App.instance.timeLixi--;\r\n            }, 1.0, cc.macro.REPEAT_FOREVER, 0.1);\r\n        } else if (App.instance.timeLixi == 0) {\r\n            this.unscheduleAllCallbacks();\r\n            App.instance.actGetEventLixi();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import cmd from \"./Lobby.Cmd\";\r\nimport Tween from \"./Script/common/Tween\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ButtonListJackpot extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    button: cc.Node = null;\r\n    @property(cc.Node)\r\n    container: cc.Node = null;\r\n\r\n    @property(cc.ToggleContainer)\r\n    togglesBlind: cc.ToggleContainer = null;\r\n\r\n    @property(cc.Label)\r\n    labelsRangeRover: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelsMayBach: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelsBentley: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelsRollsRoyce: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelsMiniPoker: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelsSlot3x3: cc.Label = null;\r\n\r\n    private buttonClicked = true;\r\n    private buttonMoved = cc.Vec2.ZERO;\r\n    private animate = false;\r\n\r\n    private static lastRes: cmd.ResUpdateJackpots = null;\r\n    private selectedIdx = 0;\r\n\r\n    onLoad() {\r\n        this.container.active = false;\r\n\r\n        this.button.on(cc.Node.EventType.TOUCH_START, (event: cc.Event.EventTouch) => {\r\n            this.buttonClicked = true;\r\n            this.buttonMoved = cc.Vec2.ZERO;\r\n        }, this);\r\n\r\n        this.button.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\r\n            this.buttonMoved = this.buttonMoved.add(event.getDelta());\r\n            if (this.buttonClicked) {\r\n                if (Math.abs(this.buttonMoved.x) > 30 || Math.abs(this.buttonMoved.y) > 30) {\r\n                    let pos = this.node.position;\r\n                    pos.x += this.buttonMoved.x;\r\n                    pos.y += this.buttonMoved.y;\r\n                    this.node.position = pos;\r\n                    this.buttonClicked = false;\r\n                }\r\n            } else {\r\n                let pos = this.node.position;\r\n                pos.x += event.getDeltaX();\r\n                pos.y += event.getDeltaY();\r\n                this.node.position = pos;\r\n            }\r\n        }, this);\r\n\r\n        this.button.on(cc.Node.EventType.TOUCH_END, (event: cc.Event.EventTouch) => {\r\n            if (this.buttonClicked) {\r\n                this.toggleShowPanel();\r\n            }\r\n        }, this);\r\n\r\n        for (let i = 0; i < this.togglesBlind.toggleItems.length; i++) {\r\n            this.togglesBlind.toggleItems[i].node.on(\"toggle\", () => {\r\n                this.selectedIdx = i;\r\n                this.updateJackpot(0.3);\r\n            });\r\n        }\r\n    }\r\n\r\n    private toggleShowPanel() {\r\n        if (this.animate) return;\r\n        this.animate = true;\r\n        if (!this.container.active) {\r\n            this.container.stopAllActions();\r\n            this.container.active = true;\r\n            this.container.scaleY = 0;\r\n            this.container.runAction(cc.sequence(\r\n                cc.scaleTo(0.2, 1).easing(cc.easeBackOut()),\r\n                cc.callFunc(() => {\r\n                    this.animate = false;\r\n                })\r\n            ));\r\n        } else {\r\n            this.container.stopAllActions();\r\n            this.container.runAction(cc.sequence(\r\n                cc.scaleTo(0.2, 1, 0).easing(cc.easeBackIn()),\r\n                cc.callFunc(() => {\r\n                    this.container.active = false;\r\n                    this.animate = false;\r\n                })\r\n            ));\r\n        }\r\n    }\r\n\r\n    setData(res: cmd.ResUpdateJackpots) {\r\n        ButtonListJackpot.lastRes = res;\r\n        this.updateJackpot();\r\n    }\r\n\r\n    updateJackpot(duration: number = 4) {\r\n        if (ButtonListJackpot.lastRes == null) return;\r\n        switch (this.selectedIdx) {\r\n            case 0:\r\n                Tween.numberTo(this.labelsRangeRover, ButtonListJackpot.lastRes.khoBau100, duration);\r\n                Tween.numberTo(this.labelsMayBach, ButtonListJackpot.lastRes.NDV100, duration);\r\n                Tween.numberTo(this.labelsBentley, ButtonListJackpot.lastRes.Avengers100, duration);\r\n                Tween.numberTo(this.labelsRollsRoyce, ButtonListJackpot.lastRes.Vqv100, duration);\r\n                Tween.numberTo(this.labelsMiniPoker, ButtonListJackpot.lastRes.miniPoker100, duration);\r\n                Tween.numberTo(this.labelsSlot3x3, ButtonListJackpot.lastRes.pokeGo100, duration);\r\n                break;\r\n            case 1:\r\n                Tween.numberTo(this.labelsRangeRover, ButtonListJackpot.lastRes.khoBau1000, duration);\r\n                Tween.numberTo(this.labelsMayBach, ButtonListJackpot.lastRes.NDV1000, duration);\r\n                Tween.numberTo(this.labelsBentley, ButtonListJackpot.lastRes.Avengers1000, duration);\r\n                Tween.numberTo(this.labelsRollsRoyce, ButtonListJackpot.lastRes.Vqv1000, duration);\r\n                Tween.numberTo(this.labelsMiniPoker, ButtonListJackpot.lastRes.miniPoker1000, duration);\r\n                Tween.numberTo(this.labelsSlot3x3, ButtonListJackpot.lastRes.pokeGo1000, duration);\r\n                break;\r\n            case 2:\r\n                Tween.numberTo(this.labelsRangeRover, ButtonListJackpot.lastRes.khoBau10000, duration);\r\n                Tween.numberTo(this.labelsMayBach, ButtonListJackpot.lastRes.NDV10000, duration);\r\n                Tween.numberTo(this.labelsBentley, ButtonListJackpot.lastRes.Avengers10000, duration);\r\n                Tween.numberTo(this.labelsRollsRoyce, ButtonListJackpot.lastRes.Vqv10000, duration);\r\n                Tween.numberTo(this.labelsMiniPoker, ButtonListJackpot.lastRes.miniPoker10000, duration);\r\n                Tween.numberTo(this.labelsSlot3x3, ButtonListJackpot.lastRes.pokeGo10000, duration);\r\n                break;\r\n        }\r\n    }\r\n}","import Configs from \"../../Loading/src/Configs\";\r\nimport App from \"./Script/common/App\";\r\nimport Tween from \"./Script/common/Tween\";\r\nimport Utils from \"./Script/common/Utils\";\r\nimport CardGameCmd from \"./Script/networks/CardGame.Cmd\";\r\nimport CardGameNetworkClient from \"./Script/networks/CardGameNetworkClient\";\r\nimport InPacket from \"./Script/networks/Network.InPacket\";\r\nimport TienLenCmd from \"./TienLenScript/TienLen.Cmd\";\r\nimport TienLenGameLogic from \"./TienLenScript/TienLen.GameLogic\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nnamespace Lobby {\r\n    @ccclass\r\n    export class CardRoom extends cc.Component {\r\n\r\n        @property(cc.Node)\r\n        roomContent: cc.Node = null;\r\n        @property(cc.Prefab)\r\n        roomItem: cc.Node = null;\r\n\r\n        networkClient: CardGameNetworkClient = null;\r\n\r\n        start() {\r\n            this.networkClient.addListener(this.handleRoomRespone, this);\r\n        }\r\n\r\n        handleRoomRespone = (data) => {\r\n            let inpacket = new InPacket(data);\r\n             ////Utils.Log(inpacket.getCmdId());\r\n            switch (inpacket.getCmdId()) {\r\n                case CardGameCmd.Code.JOIN_ROOM_FAIL: {\r\n                    let res = new CardGameCmd.ReceivedJoinRoomFail(data);\r\n                    var e = \"\";\r\n                    switch (res.error) {\r\n                        case 1:\r\n                            e = \"L\\u1ed7i ki\\u1ec3m tra th\\u00f4ng tin!\";\r\n                            break;\r\n                        case 2:\r\n                            e = \"Kh\\u00f4ng t\\u00ecm \\u0111\\u01b0\\u1ee3c ph\\u00f2ng th\\u00edch h\\u1ee3p. Vui l\\u00f2ng th\\u1eed l\\u1ea1i sau!\";\r\n                            break;\r\n                        case 3:\r\n                            e = \"B\\u1ea1n kh\\u00f4ng \\u0111\\u1ee7 ti\\u1ec1n v\\u00e0o ph\\u00f2ng ch\\u01a1i n\\u00e0y!\";\r\n                            break;\r\n                        case 4:\r\n                            e = \"Kh\\u00f4ng t\\u00ecm \\u0111\\u01b0\\u1ee3c ph\\u00f2ng th\\u00edch h\\u1ee3p. Vui l\\u00f2ng th\\u1eed l\\u1ea1i sau!\";\r\n                            break;\r\n                        case 5:\r\n                            e = \"M\\u1ed7i l\\u1ea7n v\\u00e0o ph\\u00f2ng ph\\u1ea3i c\\u00e1ch nhau 10 gi\\u00e2y!\";\r\n                            break;\r\n                        case 6:\r\n                            e = \"H\\u1ec7 th\\u1ed1ng b\\u1ea3o tr\\u00ec!\";\r\n                            break;\r\n                        case 7:\r\n                            e = \"Kh\\u00f4ng t\\u00ecm th\\u1ea5y ph\\u00f2ng ch\\u01a1i!\";\r\n                            break;\r\n                        case 8:\r\n                            e = \"M\\u1eadt kh\\u1ea9u ph\\u00f2ng ch\\u01a1i kh\\u00f4ng \\u0111\\u00fang!\";\r\n                            break;\r\n                        case 9:\r\n                            e = \"Ph\\u00f2ng ch\\u01a1i \\u0111\\u00e3 \\u0111\\u1ee7 ng\\u01b0\\u1eddi!\";\r\n                            break;\r\n                        case 10:\r\n                            e = \"B\\u1ea1n b\\u1ecb ch\\u1ee7 ph\\u00f2ng kh\\u00f4ng cho v\\u00e0o b\\u00e0n!\"\r\n                    }\r\n                    App.instance.alertDialog.showMsg(e);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.JOIN_ROOM_SUCCESS: {\r\n                    let res = new TienLenCmd.ReceivedJoinRoomSuccess(data);\r\n                     ////Utils.Log(res);\r\n                    TienLenGameLogic.getInstance().initWith(res);\r\n                    App.instance.openGame(\"TienLen\", \"TienLen\");\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.AUTO_START: {\r\n                    let res = new TienLenCmd.ReceivedAutoStart(data);\r\n                     ////Utils.Log(res);\r\n                    TienLenGameLogic.getInstance().autoStart(res);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n\r\n        initRooms(rooms, client) {\r\n            this.networkClient = client;\r\n\r\n            this.roomContent.removeAllChildren();\r\n            rooms.forEach(room => {\r\n                var item = cc.instantiate(this.roomItem);\r\n                var txts = item.getComponentsInChildren(cc.Label);\r\n                Tween.numberTo(txts[2], room.moneyRequire, 0.3);\r\n                Tween.numberTo(txts[3], room.moneyBet, 0.3);\r\n                txts[4].string = room.nPersion + \"/\" + room.maxUserPerRoom;\r\n                var progress = item.getComponentInChildren(cc.ProgressBar);\r\n                progress.progress = room.nPersion / room.maxUserPerRoom;\r\n                var btnJoin = item.getComponentInChildren(cc.Button);\r\n                btnJoin.node.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n                    this.networkClient.send(new CardGameCmd.SendJoinRoom(Configs.App.MONEY_TYPE, room.maxUserPerRoom, room.moneyBet, 0, room.roomIndex));\r\n                });\r\n                item.parent = this.roomContent;\r\n            });\r\n        }\r\n    }\r\n}\r\nexport default Lobby.CardRoom;\r\n","import Utils from \"./Script/common/Utils\";\r\nimport InPacket from \"./Script/networks/Network.InPacket\";\r\nimport OutPacket from \"./Script/networks/Network.OutPacket\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\n\r\n/*name game :\r\n  spartans-Thantai\r\n  BENLEY:bitcoin\r\n  audition:duaxe\r\n  maybach:thethao\r\n  tamhung:chimdien\r\n  chiemtinh:chiemtinh\r\n  RollRoyce:ThanBai\r\n  */\r\nexport namespace cmd {\r\n    export class Code {\r\n        static readonly UPDATE_TIME_BUTTON = 2124;\r\n        static readonly NOTIFY_MARQUEE = 20100;\r\n        static readonly UPDATE_BIGWIN_JACKPOT_SLOT1 = 2010;//Duaxe\r\n        static readonly UPDATE_BIGWIN_JACKPOT_SLOT3 = 12010;//than tai\r\n        static readonly UPDATE_BIGWIN_JACKPOT_SLOT4 = 14010;//Chim Dien-tamhung\r\n        static readonly UPDATE_BIGWIN_JACKPOT_SLOT5 = 6010;//chiemtinh\r\n        static readonly UPDATE_BIGWIN_JACKPOT_SLOT7 = 4010;//Bitcoin\r\n        static readonly UPDATE_BIGWIN_JACKPOT_SLOT8 = 5010;//ThanBai-RollRoyce\r\n        static readonly UPDATE_BIGWIN_JACKPOT_SLOT10 = 3010;//Euro\r\n        static readonly UPDATE_BIGWIN_JACKPOT_SLOT11 = 16010;//bikini\r\n        static readonly UPDATE_BIGWIN_JACKPOT_MINIPOKER = 4010;\r\n        static readonly UPDATE_BIGWIN_JACKPOT_SLOT3X3 = 7010;\r\n        static readonly UPDATE_BIGWIN_JACKPOT_SLOT3x3GEM = 8010;\r\n        static readonly INSERT_GIFTCODE = 20017;\r\n        static readonly DEPOSIT_CARD = 20012;\r\n        static readonly CHECK_NICKNAME_TRANSFER = 20018;\r\n        static readonly SUBCRIBE_HALL_SLOT = 10001;\r\n        static readonly UNSUBCRIBE_HALL_SLOT = 10002;\r\n        static readonly UPDATE_JACKPOT_SLOTS = 10003;\r\n        static readonly SPIN_LUCKY_WHEEL = 20042;\r\n        static readonly GET_SECURITY_INFO = 20050;\r\n        static readonly CHANGE_EMAIL = 20003;\r\n        static readonly UPDATE_USER_INFO = 20002;\r\n        static readonly GET_OTP = 20220;\r\n        static readonly SEND_OTP = 20019;\r\n        static readonly GET_LIST_QUEST = 21000;\r\n        static readonly RECEIVE_LIST_QUEST = 21001;\r\n        static readonly RESULT_ACTIVE_MOBILE = 20026;\r\n        static readonly RESULT_ACTIVE_NEW_MOBILE = 20028;\r\n        static readonly RESULT_CHANGE_MOBILE_ACTIVED = 20027;\r\n        static readonly ACTIVE_PHONE = 20006;\r\n        static readonly CHANGE_PHONE_NUMBER = 20007;\r\n        static readonly TRANSFER_COIN = 20014;\r\n        static readonly RESULT_TRANSFER_COIN = 20034;\r\n        static readonly SAFES = 20009;\r\n        static readonly RESULT_SAFES = 20029;\r\n        static readonly CHANGE_PASSWORD = 20000;\r\n        static readonly RESULT_CHANGE_PASSWORD = 20020;\r\n        static readonly EXCHANGE_VIP_POINT = 20001;\r\n        static readonly RESULT_EXCHANGE_VIP_POINT = 20021;\r\n        static readonly UPDATE_JACKPOTS = 20101;\r\n        static readonly SUBCRIBE_JACPORTS = 20102;\r\n        static readonly UNSUBCRIBE_JACPORTS = 20103;\r\n        static readonly GET_MONEY_USE = 20051;\r\n        static readonly DEPOSIT_BANK = 20201;\r\n        static readonly DEPOSIT_MOMO = 20202;\r\n        static readonly LOGOUT = 2;\r\n        static readonly LOGIN = 1;\r\n\r\n        static readonly CASHOUT_CARD = 20211;\r\n        static readonly CASHOUT_BANK = 20219;\r\n        static readonly CASHOUT_MOMO = 20215;\r\n        \r\n        static readonly TX_SCRIBE = 2000;\r\n        static readonly TX_GAME_INFO = 2111;\r\n        static readonly TX_UPDATE_INFO = 2112;\r\n\r\n        static readonly TX_SCRIBE_MD5 = 22000;\r\n        static readonly TX_GAME_INFO_MD5 = 22111;\r\n        static readonly TX_UPDATE_INFO_MD5 = 22112;\r\n        static readonly GET_LIST_BANK = 20204;\r\n    }\r\n\r\n    export class ReceiveUpdateTimeButton extends InPacket {\r\n        remainTime = 0;\r\n        bettingState = false;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.remainTime = this.getByte();\r\n            this.bettingState = this.getBool();\r\n        }\r\n    }\r\n\r\n    export class ReqInsertGiftcode extends OutPacket {\r\n        constructor(code: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.INSERT_GIFTCODE);\r\n            this.packHeader();\r\n            this.putString(code);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ResInsertGiftcode extends InPacket {\r\n        error = 0;\r\n        currentMoneyVin = 0;\r\n        currentMoneyXu = 0;\r\n        moneyGiftCodeVin = 0;\r\n        moneyGiftCodeXu = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.currentMoneyVin = this.getLong();\r\n            this.currentMoneyXu = this.getLong();\r\n            this.moneyGiftCodeVin = this.getLong();\r\n            this.moneyGiftCodeXu = this.getLong();\r\n        }\r\n    }\r\n\r\n    export class ReqDepositCard extends OutPacket {\r\n        constructor(telcoId: number, serial: string, code: string, amount: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.DEPOSIT_CARD);\r\n            this.packHeader();\r\n            this.putByte(telcoId);\r\n            this.putString(serial);\r\n            this.putString(code);\r\n            this.putString(amount);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ReqDepositBank extends OutPacket {\r\n        constructor(bankNumber: string, amount: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.DEPOSIT_BANK);\r\n            this.packHeader();\r\n            this.putString(bankNumber)\r\n            this.putLong(amount);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResDepositBank extends InPacket {\r\n        error = 0;\r\n        currentMoney = 0;\r\n        timeFail = 0;\r\n        numFail = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.currentMoney = this.getLong();\r\n            this.timeFail = this.getLong();\r\n            this.numFail = this.getInt();\r\n        }\r\n    }\r\n    export class ReqDepositMomo extends OutPacket {\r\n        constructor(amount: number, phoneSent: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.DEPOSIT_MOMO);\r\n            this.packHeader();\r\n\r\n            this.putLong(amount);\r\n            this.putString(phoneSent);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResDepositMomo extends InPacket {\r\n        error = 0;\r\n        currentMoney = 0;\r\n        timeFail = 0;\r\n        numFail = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.currentMoney = this.getLong();\r\n            this.timeFail = this.getLong();\r\n            this.numFail = this.getInt();\r\n        }\r\n    }\r\n\r\n    export class ResDepositCard extends InPacket {\r\n        error = 0;\r\n        currentMoney = 0;\r\n        timeFail = 0;\r\n        numFail = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.currentMoney = this.getLong();\r\n            this.timeFail = this.getLong();\r\n            this.numFail = this.getInt();\r\n        }\r\n    }\r\n\r\n    export class ReqCheckNicknameTransfer extends OutPacket {\r\n        constructor(nickname: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHECK_NICKNAME_TRANSFER);\r\n            this.packHeader();\r\n            this.putString(nickname);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ResCheckNicknameTransfer extends InPacket {\r\n        error = 0;\r\n        type = 0;\r\n        fee = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.type = this.getByte();\r\n            this.fee = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ReqSpinLuckyWheel extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SPIN_LUCKY_WHEEL);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ResSpinLuckyWheel extends InPacket {\r\n        error = 0;\r\n        prizeVin = \"\";\r\n        prizeXu = \"\";\r\n        prizeSlot = \"\";\r\n        remainCount = 0;\r\n        currentMoneyVin = 0;\r\n        currentMoneyXu = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.prizeVin = this.getString();\r\n            this.prizeXu = this.getString();\r\n            this.prizeSlot = this.getString();\r\n            this.remainCount = this.getShort();\r\n            this.currentMoneyVin = this.getLong();\r\n            this.currentMoneyXu = this.getLong();\r\n        }\r\n    }\r\n\r\n    export class ReqGetSecurityInfo extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.GET_SECURITY_INFO);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ResGetListQuest extends InPacket {\r\n        error = 0;\r\n        bf = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.bf = this.getString();\r\n\r\n        }\r\n    }\r\n\r\n    export class ResReceiveListQuest extends InPacket {\r\n        error = 0;\r\n        isSuccess = false;\r\n        currentMoney = 0;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.isSuccess = this.getBool();\r\n            this.currentMoney = this.getLong();\r\n\r\n        }\r\n    }\r\n\r\n\r\n    export class ResGetSecurityInfo extends InPacket {\r\n        error = 0;\r\n        username = \"\";\r\n        cmt = \"\";\r\n        email = \"\";\r\n        mobile = \"\";\r\n        isVerifyPhone = false;\r\n        usertype = \"\";\r\n        refferalCode = \"\";\r\n        mobileSecure = 0;\r\n        emailSecure = 0;\r\n        appSecure = 0;\r\n        loginSecure = 0;\r\n        moneyLoginOtp = 0;\r\n        moneyUse = 0;\r\n        safe = 0;\r\n        configGame = \"\";\r\n        address = \"\";\r\n        birthday = \"\";\r\n        gender=true;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.username = this.getString();\r\n            this.cmt = this.getString();\r\n            this.email = this.getString();\r\n            this.mobile = this.getString();\r\n            this.isVerifyPhone = this.getBool();\r\n            this.usertype = this.getString();\r\n            this.refferalCode = this.getString();\r\n            this.mobileSecure = this.getByte();\r\n            this.emailSecure = this.getByte();\r\n            this.appSecure = this.getByte();\r\n            this.loginSecure = this.getByte();\r\n            this.moneyLoginOtp = this.getLong();\r\n            this.moneyUse = this.getLong();\r\n            this.safe = this.getLong();\r\n            this.configGame = this.getString();\r\n            this.birthday = this.getString();\r\n            this.address = this.getString();\r\n            this.gender = this.getBool();\r\n        }\r\n    }\r\n\r\n    export class ReqUpdateUserInfo extends OutPacket {\r\n        constructor(mail: string, birthday: string, address: string,gender: number,refCode:string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.UPDATE_USER_INFO);\r\n            this.packHeader();\r\n            this.putString(\"\");//cmt\r\n            this.putString(mail);//mail\r\n            this.putString(\"\"); \r\n            this.putString(birthday);//birth\r\n            this.putString(address);//address\r\n            this.putInt(gender);\r\n            this.putString(refCode);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResUpdateUserInfo extends InPacket {\r\n        error = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n        }\r\n    }\r\n\r\n    export class ReqGetOTP extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.GET_OTP);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResGetOTP extends InPacket {\r\n        error = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n        }\r\n    }\r\n\r\n    export class ReqSendDiemDanh extends OutPacket {\r\n        constructor(otp: string, type: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SEND_OTP);\r\n            this.packHeader();\r\n            this.putString(otp);\r\n            this.putByte(type);//0: sms, 1: telegram\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReqGetListQuest extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.GET_LIST_QUEST);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReqReceiveQuest extends OutPacket {\r\n        constructor(index) {\r\n            super();\r\n             ////Utils.Log(\"ReqReceiveQuest\");\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.RECEIVE_LIST_QUEST);\r\n            this.packHeader();\r\n            this.putByte(index);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    export class ReqSendOTP extends OutPacket {\r\n        constructor(otp: string, type: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SEND_OTP);\r\n            this.packHeader();\r\n            this.putString(otp);\r\n            this.putByte(type);//0: sms, 1: telegram\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n\r\n    export class ResSendOTP extends InPacket {\r\n        error = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n        }\r\n    }\r\n\r\n    export class ResResultActiveMobie extends InPacket {\r\n        error = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n        }\r\n    }\r\n\r\n    export class ResResultActiveNewMobie extends InPacket {\r\n        error = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n        }\r\n    }\r\n\r\n    export class ReqChangePhoneNumber extends OutPacket {\r\n        constructor(phoneNumber: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHANGE_PHONE_NUMBER);\r\n            this.packHeader();\r\n            this.putString(phoneNumber);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResChangePhoneNumber extends InPacket {\r\n        error = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n        }\r\n    }\r\n\r\n    export class ReqActivePhone extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.ACTIVE_PHONE);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResActivePhone extends InPacket {\r\n        error = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n        }\r\n    }\r\n\r\n    export class ReqTransferCoin extends OutPacket {\r\n        constructor(nickname: string, coin: number, note: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.TRANSFER_COIN);\r\n            this.packHeader();\r\n            this.putString(nickname);\r\n            this.putLong(coin);\r\n            this.putString(unescape(encodeURIComponent(note)));\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResTransferCoin extends InPacket {\r\n        error = 0;\r\n        moneyUse = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.moneyUse = this.getLong();\r\n        }\r\n    }\r\n    export class ResResultTransferCoin extends InPacket {\r\n        error = 0;\r\n        moneyUse = 0;\r\n        currentMoney = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.moneyUse = this.getLong();\r\n            this.currentMoney = this.getLong();\r\n        }\r\n    }\r\n\r\n    export class ReqSafes extends OutPacket {\r\n        constructor(coin: number, action: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SAFES);\r\n            this.packHeader();\r\n            this.putByte(action);//0: rút, 1: nạp\r\n            this.putLong(coin);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResSafes extends InPacket {\r\n        error = 0;\r\n        moneyUse = 0;\r\n        safe = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.moneyUse = this.getLong();\r\n            this.safe = this.getLong();\r\n        }\r\n    }\r\n    export class ResResultSafes extends InPacket {\r\n        error = 0;\r\n        moneyUse = 0;\r\n        safe = 0;\r\n        currentMoney = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.moneyUse = this.getLong();\r\n            this.safe = this.getLong();\r\n            this.currentMoney = this.getLong();\r\n        }\r\n    }\r\n\r\n    export class ReqChangePassword extends OutPacket {\r\n        constructor(oldPassword: string, newPassword: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHANGE_PASSWORD);\r\n            this.packHeader();\r\n            this.putString(md5(oldPassword));\r\n            this.putString(md5(newPassword));\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResChangePassword extends InPacket {\r\n        error = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n        }\r\n    }\r\n    export class ResResultChangePassword extends InPacket {\r\n        error = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n        }\r\n    }\r\n\r\n    export class ReqExchangeVipPoint extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.EXCHANGE_VIP_POINT);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResExchangeVipPoint extends InPacket {\r\n        error = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n        }\r\n    }\r\n    export class ResResultExchangeVipPoint extends InPacket {\r\n        error = 0;\r\n        currentMoney = 0;\r\n        moneyAdd = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.currentMoney = this.getLong();\r\n            this.moneyAdd = this.getLong()\r\n        }\r\n    }\r\n\r\n    export class ResNotifyMarquee extends InPacket {\r\n        message = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.message = this.getString();\r\n        }\r\n    }\r\n\r\n    export class ResNotifyJackpot extends InPacket {\r\n        username = \"\";\r\n        type = 0;\r\n        betValue = 0;\r\n        totalPrizes = 0;\r\n        timestamp = \"\";\r\n\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.username = this.getString();\r\n            this.type = this.getByte();\r\n            this.betValue = this.getShort();\r\n            this.totalPrizes = this.getLong();\r\n            this.timestamp = this.getString();\r\n        }\r\n    }\r\n\r\n    export class ReqSubcribeJackpots extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE_JACPORTS);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ReqUnSubcribeJackpots extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.UNSUBCRIBE_JACPORTS);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResUpdateJackpots extends InPacket {\r\n        miniPoker100 = 0;\r\n        miniPoker1000 = 0;\r\n        miniPoker10000 = 0;\r\n        pokeGo100 = 0;\r\n        pokeGo1000 = 0;\r\n        pokeGo10000 = 0;\r\n        khoBau100 = 0;\r\n        khoBau1000 = 0;\r\n        khoBau10000 = 0;\r\n        NDV100 = 0;\r\n        NDV1000 = 0;\r\n        NDV10000 = 0;\r\n        Avengers100 = 0;\r\n        Avengers1000 = 0;\r\n        Avengers10000 = 0;\r\n        Vqv100 = 0;\r\n        Vqv1000 = 0;\r\n        Vqv10000 = 0;\r\n        fish100 = 0;\r\n        fish1000 = 0;\r\n\r\n        //spartan\r\n        spartan100 = 0;\r\n        spartan1000 = 0;\r\n        spartan5000 = 0;\r\n        spartan10000 = 0;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.miniPoker100 = this.getLong();\r\n            this.miniPoker1000 = this.getLong();\r\n            this.miniPoker10000 = this.getLong();\r\n            this.pokeGo100 = this.getLong();\r\n            this.pokeGo1000 = this.getLong();\r\n            this.pokeGo10000 = this.getLong();\r\n            this.khoBau100 = this.getLong();\r\n            this.khoBau1000 = this.getLong();\r\n            this.khoBau10000 = this.getLong();\r\n            this.NDV100 = this.getLong();\r\n            this.NDV1000 = this.getLong();\r\n            this.NDV10000 = this.getLong();\r\n            this.Avengers100 = this.getLong();\r\n            this.Avengers1000 = this.getLong();\r\n            this.Avengers10000 = this.getLong();\r\n            this.Vqv100 = this.getLong();\r\n            this.Vqv1000 = this.getLong();\r\n            this.Vqv10000 = this.getLong();\r\n            this.fish100 = this.getLong();\r\n            this.fish1000 = this.getLong();\r\n            //spartan game\r\n            this.spartan100 = this.getLong();\r\n            this.spartan1000 = this.getLong();\r\n            this.spartan5000 = this.getLong();\r\n            this.spartan10000 = this.getLong();\r\n\r\n        }\r\n    }\r\n    export class ReqGetMoneyUse extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.GET_MONEY_USE);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResGetMoneyUse extends InPacket {\r\n        moneyUse = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.moneyUse = this.getLong();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //slot\r\n    export class ReqSubcribeHallSlot extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE_HALL_SLOT);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ReqUnSubcribeHallSlot extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.UNSUBCRIBE_HALL_SLOT);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResUpdateJackpotSlots extends InPacket {\r\n        pots = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.pots = this.getString()\r\n        }\r\n    }\r\n\r\n    // cashout class\r\n\r\n    export class ReqCashoutCard extends OutPacket {\r\n        constructor(telcoId: string, amount: number, quantity: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CASHOUT_CARD);\r\n            this.packHeader();\r\n\r\n            this.putString(telcoId);\r\n            this.putInt(amount);\r\n            this.putInt(quantity);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ResCashoutCard extends InPacket {\r\n        error = 0;\r\n        currentMoney = 0;\r\n        listCard = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.currentMoney = this.getLong();\r\n            this.listCard = this.getString();\r\n        }\r\n    }\r\n\r\n    export class ReqCashoutBank extends OutPacket {\r\n        constructor(bankName: string, bankNumber: string, bankActName: string, amount: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CASHOUT_BANK);\r\n            this.packHeader();\r\n\r\n            this.putString(bankName);\r\n            this.putString(bankNumber);\r\n            this.putString(bankActName);\r\n            this.putInt(amount);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ResCashoutBank extends InPacket {\r\n        error = 0;\r\n        currentMoney = 0;\r\n        //listCard = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.currentMoney = this.getLong();\r\n            //this.listCard = this.getString();\r\n        }\r\n    }\r\n\r\n    export class ReqCashoutMomo extends OutPacket {\r\n        constructor(phoneNumber: string, amount: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CASHOUT_MOMO);\r\n            this.packHeader();\r\n\r\n            this.putString(phoneNumber);\r\n            this.putInt(amount);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ResCashoutMomo extends InPacket {\r\n        error = 0;\r\n        currentMoney = 0;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.currentMoney = this.getLong();\r\n\r\n        }\r\n    }\r\n    export class ReqChangeEmail extends OutPacket {\r\n        constructor(email: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHANGE_EMAIL);\r\n            this.packHeader();\r\n            this.putString(email);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResChangeEmail extends InPacket {\r\n        error = 0;\r\n        email = \"\";\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.email = this.getString();\r\n\r\n        }\r\n    }\r\n    export class ResLogin extends InPacket {\r\n        loginData: string;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n             ////Utils.Log(\"data====\", data);\r\n            this.loginData = this.getString();\r\n             ////Utils.Log(\"loginData====\", this.loginData);\r\n        }\r\n    }\r\n\r\n    export class SendScribe extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.TX_SCRIBE);\r\n            this.packHeader();\r\n            this.putShort(Configs.GameId.TaiXiu);\r\n            this.putShort(Configs.App.MONEY_TYPE);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class TXGameInfo extends InPacket {\r\n        gameId = 0;\r\n        moneyType = 0;\r\n        referenceId = 0;\r\n        remainTime = 0;\r\n        bettingState = false;\r\n        potTai = 0;\r\n        potXiu = 0;\r\n        betTai = 0;\r\n        betXiu = 0;\r\n        dice1 = 0;\r\n        dice2 = 0;\r\n        dice3 = 0;\r\n        remainTimeRutLoc = 0;\r\n        jpTai = 0;\r\n        jpXiu = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.gameId = this.getShort();\r\n            this.moneyType = this.getShort();\r\n            this.referenceId = this.getLong();\r\n            this.remainTime = this.getShort();\r\n            this.bettingState = this.getBool();\r\n            this.potTai = this.getLong();\r\n            this.potXiu = this.getLong();\r\n            this.betTai = this.getLong();\r\n            this.betXiu = this.getLong();\r\n            this.dice1 = this.getShort();\r\n            this.dice2 = this.getShort();\r\n            this.dice3 = this.getShort();\r\n            this.remainTimeRutLoc = this.getShort();\r\n            this.jpTai = this.getLong();\r\n            this.jpXiu = this.getLong();\r\n        }\r\n    }\r\n\r\n    export class TXUpdateTime extends InPacket {\r\n        remainTime = 0;\r\n        bettingState = false;\r\n        potTai = 0;\r\n        potXiu = 0;\r\n        numBetTai = 0;\r\n        numBetXiu = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.remainTime = this.getShort();\r\n            this.bettingState = this.getBool();\r\n            this.potTai = this.getLong();\r\n            this.potXiu = this.getLong();\r\n            this.numBetTai = this.getShort();\r\n            this.numBetXiu = this.getShort();\r\n        }\r\n    }\r\n\r\n    export class ReqDepositMomoQR extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.DEPOSIT_MOMO);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ResDepositMomoQR extends InPacket {\r\n        error = 0;\r\n        data = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.data = this.getString();\r\n        }\r\n    }\r\n\r\n    export class SendScribeTxMd5 extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.TX_SCRIBE_MD5);\r\n            this.packHeader();\r\n            this.putShort(Configs.GameId.TaiXiuMD5);\r\n            this.putShort(Configs.App.MONEY_TYPE);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReqListBank extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.GET_LIST_BANK);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResListBank extends InPacket {\r\n        error = 0;\r\n        list_bank = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.error = this.getError();\r\n            this.list_bank = this.getString();\r\n        }\r\n    }\r\n}\r\n\r\nexport default cmd;\r\n","// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property\r\n    url: string = \"/chat/\";\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    public actThamGia()\r\n    {\r\n        cc.sys.openURL(this.url);\r\n    }\r\n    start () {\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport App from \"./Script/common/App\";\r\nimport Tween from \"./Script/common/Tween\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nexport enum ItemGameType {\r\n    OTHER,\r\n    SLOT,\r\n    CARD,\r\n    MINI\r\n}\r\n\r\n@ccclass\r\nexport default class ItemGame extends cc.Component {\r\n    @property\r\n    id: string = \"\";\r\n    @property({ type: cc.Enum(ItemGameType) })\r\n    type: ItemGameType = ItemGameType.OTHER;\r\n    @property\r\n    commingSoon: boolean = false;\r\n\r\n    @property(cc.Node)\r\n    nodeIcon: cc.Node = null;\r\n    @property(sp.Skeleton)\r\n    animIcon: sp.Skeleton = null;\r\n    @property(sp.Skeleton)\r\n    animHot: sp.Skeleton = null;\r\n    @property([cc.Label])\r\n    listLbJP: cc.Label[] = [];\r\n\r\n    @property(cc.Vec2)\r\n    InitScale: cc.Vec2 = null;\r\n    isInitFakeJP: boolean = false;\r\n\r\n    onLoad() {\r\n        if (this.nodeIcon && this.commingSoon) {\r\n            this.nodeIcon.color = cc.Color.GRAY;\r\n        }\r\n    }\r\n   \r\n    setInfo(dataGame) {\r\n        this.reset();\r\n        this.animIcon.node.setPosition(dataGame['position']);\r\n        switch (dataGame['tabGame']) {\r\n            case 'gamesport':\r\n            case 'gamelive':\r\n            case 'gamefish':\r\n                this.type = ItemGameType.OTHER;\r\n                break;\r\n            case 'gamecard':\r\n                this.type = ItemGameType.CARD;\r\n                break;\r\n            case 'gameslot':\r\n                this.type = ItemGameType.SLOT;\r\n                break;\r\n            case 'gamemini':\r\n                this.type = ItemGameType.MINI;\r\n                break;\r\n\t \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t  \r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t \r\n        }\r\n        this.getComponent(cc.Button).clickEvents[0].customEventData = dataGame['gameName'];\r\n        this.id = dataGame['gameName'];\r\n        Global.BundleLobby.load(dataGame['spinePath'], sp.SkeletonData, (finish, number) => {\r\n        }, (err, skeData: sp.SkeletonData) => {\r\n            if (err) {\r\n                ////Utils.Log(\"Error load spine:\", err);\r\n                return;\r\n            }\r\n            this.animIcon.skeletonData = skeData;\r\n            this.animIcon.setAnimation(0, dataGame['spineName'], true);\r\n            this.animHot.node.active = dataGame['isHot'];\r\n\t\t\t\r\n            if (dataGame['tabGame'] == \"gamesport\" || dataGame['tabGame'] == 'gamelive') {\r\n\t\t\t\t\t\t\t\t\t\t   \r\n\t\t   \r\n                this.node.getChildByName('tagLive').active = true;\r\n            } else {\r\n                this.node.getChildByName('tagLive').active = false;\r\n            }\r\n\t\t\t\r\n            if (this.type != ItemGameType.SLOT && dataGame['gameName'] != \"TAIXIU\") {\r\n\t\t\t\t\t\t\t\t\t\t  \r\n\t\t   \r\n                this.listLbJP.forEach((item) => {\r\n                    item.node.active = false;\r\n                })\r\n            } else {\r\n                this.listLbJP.forEach((item) => {\r\n                    item.node.active = true;\r\n                });\r\n                this.listLbJP[0].node.active = !(this.id == \"TAIXIU\");\r\n            }\r\n            this.startEff();\r\n        });\r\n\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n        if (this.type == ItemGameType.SLOT || this.id == \"TAIXIU\") {//set lại jacpot khi scroll list game . luc moi vao game chua co jp tra ve tu sv thi fix tam 1 thang fake cho so n chay tam.\r\n\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t   \r\n            let gameJP = App.instance.topHuData != null ? App.instance.topHuData : JSON.parse('{\"audition\":{\"100\":{\"p\":647800,\"x2\":0},\"1000\":{\"p\":6959900,\"x2\":0},\"10000\":{\"p\":98156097,\"x2\":0}},\"spartan\":{\"100\":{\"p\":990296,\"x2\":0},\"1000\":{\"p\":9262455,\"x2\":0},\"10000\":{\"p\":73706904,\"x2\":0}},\"pokemon\":{\"100\":{\"p\":941981,\"x2\":1},\"1000\":{\"p\":5422705,\"x2\":1},\"10000\":{\"p\":57632614,\"x2\":1}},\"TAI_XIU\":{\"0\":{\"px\":565528720},\"1\":{\"pt\":715173010}},\"benley\":{\"100\":{\"p\":847257,\"x2\":0},\"1000\":{\"p\":7578500,\"x2\":0},\"10000\":{\"p\":60157886,\"x2\":0}},\"maybach\":{\"100\":{\"p\":680396,\"x2\":0},\"1000\":{\"p\":8596872,\"x2\":0},\"10000\":{\"p\":102489756,\"x2\":0}},\"tamhung\":{\"100\":{\"p\":581493,\"x2\":0},\"1000\":{\"p\":7870119,\"x2\":0},\"10000\":{\"p\":58135430,\"x2\":0}},\"chiemtinh\":{\"100\":{\"p\":511617,\"x2\":0},\"1000\":{\"p\":10404550,\"x2\":0},\"10000\":{\"p\":98601297,\"x2\":0}},\"bikini\":{\"100\":{\"p\":624702,\"x2\":0},\"1000\":{\"p\":9707592,\"x2\":0},\"10000\":{\"p\":50503932,\"x2\":0}},\"minipoker\":{\"100\":{\"p\":173090,\"x2\":0},\"1000\":{\"p\":1052463,\"x2\":0},\"10000\":{\"p\":15795786,\"x2\":0}},\"caothap\":{\"1000\":{},\"10000\":{},\"50000\":{},\"100000\":{},\"500000\":{}},\"rollRoye\":{\"100\":{\"p\":862429,\"x2\":1},\"1000\":{\"p\":7136508,\"x2\":1},\"10000\":{\"p\":65412566,\"x2\":1}},\"galaxy\":{\"100\":{\"p\":829294,\"x2\":1},\"1000\":{\"p\":7155563,\"x2\":1},\"10000\":{\"p\":52915908,\"x2\":1}},\"rangeRover\":{\"100\":{\"p\":540443,\"x2\":0},\"1000\":{\"p\":8776494,\"x2\":0},\"10000\":{\"p\":53316396,\"x2\":0}}}');\r\n\t\t\t  \r\n            let dataJP = [];\r\n            let gameId = App.instance.getJPGameID(dataGame['gameName']);\r\n            let itemJP100 = Object.create({});\r\n            let itemJP1000 = Object.create({});\r\n            let itemJP10000 = Object.create({});\r\n            if (this.id == 'TAIXIU') {\r\n                itemJP10000.number = gameJP[gameId][\"1\"][\"pt\"];\r\n                itemJP10000.x2 = false;\r\n\r\n                itemJP1000.number = gameJP[gameId][\"0\"][\"px\"];\r\n                itemJP1000.x2 = false;\r\n\r\n                itemJP100.number = 0;\r\n                itemJP100.x2 = false\r\n            } else {\r\n                itemJP100.number = gameJP[gameId][\"100\"][\"p\"];\r\n                itemJP100.x2 = gameJP[gameId][\"100\"][\"x2\"] == 1;\r\n\r\n                itemJP1000.number = gameJP[gameId][\"1000\"][\"p\"];\r\n                itemJP1000.x2 = gameJP[gameId][\"1000\"][\"x2\"] == 1;\r\n\r\n                itemJP10000.number = gameJP[gameId][\"10000\"][\"p\"];\r\n                itemJP10000.x2 = gameJP[gameId][\"10000\"][\"x2\"] == 1;\r\n            }\r\n            dataJP.push(itemJP100, itemJP1000, itemJP10000);\r\n            this.setJackpot(dataJP);\r\n            this.listLbJP[2].node.position = dataGame.hasOwnProperty('positionLbJP2') ? dataGame['positionLbJP2'] : cc.v2(8.2, -102);\r\n\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t   \r\n            this.listLbJP[1].node.position = dataGame.hasOwnProperty('positionLbJP1') ? dataGame['positionLbJP1'] : cc.v2(5.4, -133);\r\n        }\r\n        if (dataGame.hasOwnProperty('comingSoon')) {\r\n            this.animIcon.node.color = dataGame['comingSoon'] ? cc.Color.GRAY : cc.Color.WHITE;\r\n            this.commingSoon = dataGame['comingSoon'];\r\n        } else {\r\n            this.commingSoon = false;\r\n            this.animIcon.node.color = cc.Color.WHITE;\r\n        }\r\n    }\r\n    startEff() {\r\n        cc.Tween.stopAllByTarget(this.node);\r\n        if (Global.LobbyController.tabsListGame.isShowStartEff) {\r\n            cc.tween(this.node).set({ opacity: 0, scale: 0 }).to(0.1, { opacity: 255, scale: 1 }, { easing: cc.easing.sineOut }).start();\r\n        }\r\n        else {\r\n            this.node.scale = 1.0;\r\n            this.node.opacity = 255;\r\n        }\r\n    }\r\n   \r\n    reset() {\r\n        this.animHot.node.active = false;\r\n        this.animIcon.skeletonData = null;\r\n        this.listLbJP.forEach((item) => {\r\n            item.node.active = false;\r\n        })\r\n        this.node.getChildByName('tagLive').active = false;\r\n        this.node.getChildByName(\"x2\").active = false;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t  \r\n    }\r\n   \r\n\t\t   \r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t   \r\n\t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  \r\n   \r\n    setJackpot(data) {\r\n        for (let i = 0, l = data.length; i < l; i++) {\r\n            if (this.listLbJP.length > 0) {\r\n                Tween.numberTo(this.listLbJP[i], data[i].number, 3.0);\r\n            }\r\n            if (data[i]['x2'] != 0) {\r\n                this.node.getChildByName(\"x2\").active = true;\r\n            }\r\n        }\r\n    }\r\n   \r\n}\r\n","import GameIconJackpot from \"./GameIconJackpot\";\r\nimport ItemGame from \"./Lobby.ItemGame\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ItemSlotGame extends ItemGame {\r\n    @property(GameIconJackpot)\r\n    gameIconJackpot:GameIconJackpot = null;\r\n    @property([cc.Label])\r\n    lblJackpots: cc.Label[] = [];\r\n    @property\r\n    fakeJackpot: boolean = false;\r\n    @property(cc.Node)\r\n    nodeX2:cc.Node = null;\r\n    \r\n    private jackpot0 = 0;\r\n    private jackpotMax0 = 0;\r\n    private jackpot1 = 0;\r\n    private jackpotMax1 = 0;\r\n    private jackpot2 = 0;\r\n    private jackpotMax2 = 0;\r\n    private updateNext0 = 0;\r\n    private updateNext1 = 0;\r\n    private updateNext2 = 0;\r\n\r\n    start() {\r\n       \r\n    }\r\n\r\n  \r\n}\r\n","import Tween from \"./Script/common/Tween\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    labelName: cc.Label = null;\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n    @property(cc.Sprite)\r\n    icon: cc.Sprite = null;\r\n    @property([cc.SpriteFrame])\r\n    spriteFrames: cc.SpriteFrame[] = [];\r\n\r\n    @property(cc.Sprite)\r\n    iconX: cc.Sprite = null;\r\n    @property([cc.SpriteFrame])\r\n    spriteFramesX: cc.SpriteFrame[] = [];\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        //this.icon.spriteFrame=SpriteFrame;\r\n    }\r\n\r\n    start() {\r\n        this.icon.spriteFrame = this.spriteFrames[0];\r\n    }\r\n    public SetData(data: Tophudata) {\r\n        if (data.valueX == 1) {\r\n            this.iconX.node.active = true;\r\n        }\r\n        else {\r\n            this.iconX.node.active = false;\r\n        }\r\n        this.labelName.string = data.gamename;\r\n        this.ChangeIcon(data.gameid)\r\n        Tween.numberTo(this.label, data.value, 3.0);\r\n    }\r\n    private ChangeIcon(id: string) {\r\n        switch (id) {\r\n            case \"audition\":\r\n                this.icon.spriteFrame = this.spriteFrames[0];\r\n                break;\r\n            case \"captain\":\r\n                this.icon.spriteFrame = this.spriteFrames[1];\r\n                break;\r\n            case \"spartans\":\r\n                this.icon.spriteFrame = this.spriteFrames[2];\r\n                break;\r\n            case \"tamhung\":\r\n                this.icon.spriteFrame = this.spriteFrames[3];\r\n                break;\r\n            case \"aztec\":\r\n                this.icon.spriteFrame = this.spriteFrames[4];\r\n                break;\r\n            case \"zeus\":\r\n                this.icon.spriteFrame = this.spriteFrames[5];\r\n                break;\r\n            case \"gainhay\":\r\n                this.icon.spriteFrame = this.spriteFrames[6];\r\n                break;\r\n            case \"rollRoye\":\r\n                this.icon.spriteFrame = this.spriteFrames[7];\r\n                break;\r\n            case \"chiemtinh\":\r\n                this.icon.spriteFrame = this.spriteFrames[8];\r\n                break;\r\n            case \"bikini\":\r\n                this.icon.spriteFrame = this.spriteFrames[4];\r\n                break;\r\n            case \"gem\":\r\n                this.icon.spriteFrame = this.spriteFrames[1];\r\n                break;\r\n            default:\r\n                this.icon.spriteFrame = this.spriteFrames[0];\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\nexport class Tophudata {\r\n    gameid: string;\r\n    gamename: string;\r\n    value100: number = 0;\r\n    value1000: number = 0;\r\n    value10000: number = 0;\r\n    valueX100: number = 0;\r\n    valueX1000: number = 0;\r\n    valueX10000: number = 0;\r\n    constructor(gameid: string, gamename: string, value100: number, value1000: number, value10000: number=0, valueX100 = 0, valueX1000 = 0, valueX10000 = 0) {\r\n        this.gameid = gameid;\r\n        this.gamename = gamename;\r\n        this.value100 = value100;\r\n        this.value1000 = value1000;\r\n        this.value10000 = value10000;\r\n        this.valueX100 = valueX100;\r\n        this.valueX1000 = valueX1000;\r\n        this.valueX10000 = valueX10000;\r\n    }\r\n}\r\n","import Http from \"../../Loading/src/Http\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\n\r\nimport PopupGiftCode from \"./Lobby.PopupGiftCode\";\r\nimport cmd from \"./Lobby.Cmd\";\r\nimport TabsListGame from \"./Lobby.TabsListGame\";\r\nimport PopupUpdateNickname from \"./PopupUpdateNickname\";\r\nimport PopupTransaction from \"./Lobby.PopupTransaction\";\r\nimport GameLiveController from \"./GameLive/GameLiveController\";\r\nimport PopupSecurity from \"./Lobby.PopupSecurity\";\r\nimport PopupDiemDanh from \"./UIPopupDiemDanh\";\r\nimport PopupMail from \"./UIPopupMail\";\r\n\r\nimport VersionConfig from \"../../Loading/src/VersionConfig\";\r\nimport PopupDaiLy from \"./Lobby.PopupDaiLy\";\r\nimport Popupnaprut from \"./Lobby.Popupnaprut\";\r\nimport { Tophudata } from './Lobby.ItemTopHu';\r\nimport TopHu from \"./Lobby.TopHu\";\r\nimport BundleControl from \"../../Loading/src/BundleControl\";\r\nimport LogEvent from \"../../Loading/src/LogEvent/LogEvent\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport PopupRegister from \"./PopupRegister\";\r\nimport PopupForgetPassword from \"./Lobby.PopupForgetPassword\";\r\nimport PopupTaiApp from \"./Lobby.PopupTaiApp\";\r\nimport PopupProfile from \"./Lobby.PopupProfile\";\r\nimport LobbyShop from \"./Payment/LobbyShop\";\r\nimport PopupCashout from \"./Lobby.PopupCashout\";\r\nimport PopupLogin from \"./PopupLogin\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport AudioManager from \"./Script/common/Common.AudioManager\";\r\nimport SPUtils from \"./Script/common/SPUtils\";\r\nimport Tween from \"./Script/common/Tween\";\r\nimport Utils from \"./Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"./Script/networks/MiniGameNetworkClient\";\r\n//import MiniGameNetworkClient2 from \"./Script/networks/MiniGameNetworkClient2\";\r\nimport InPacket from \"./Script/networks/Network.InPacket\";\r\nimport SamNetworkClient from \"./Script/networks/SamNetworkClient\";\r\nimport MauBinhNetworkClient from \"../../MauBinh/MauBinhScript/MauBinh.NetworkClient\";\r\nimport SlotNetworkClient from \"./Script/networks/SlotNetworkClient\";\r\nimport TienLenNetworkClient from \"./Script/networks/TienLenNetworkClient\";\r\nimport facebookSdk from \"./Script/Service/FaceBook/Facebook\";\r\nimport TienLenConstant from \"./TienLenScript/TienLen.Room\";\r\nimport SamConstant from \"./SamScript/Sam.Room\";\r\nimport BannerList from \"./Lobby.BannerList\";\r\n//import ShootFishNetworkClient from \"./Script/networks/ShootFishNetworkClient\";\r\nimport NetworkClient from \"./Script/networks/Network.NetworkClient\";\r\nimport TaiXiuSTNetworkClient from \"./Script/networks/TaiXiuSieuToc.NetworkClient\";\r\nimport PopupEvent from \"./PopupEvent\";\r\nimport PopupEventTT from \"./PopupEventTT\";\r\nimport PopupTopHu from \"./Lobby.PopupTopHu\";\r\nimport { PopupRefund } from \"./Lobby.PopupRefund\";\r\nimport PopupDaily from \"./Lobby.PopupDiemDanh\";\r\nimport PopupDiemDanh1 from \"./Lobby.PopupDiemDanh\";\r\nimport BoxLixi from \"./Lobby.BoxLixi\";\r\nimport PopupKiemTien from \"./Lobby.PopupKiemTien\";\r\nconst { ccclass, property } = cc._decorator;\r\nvar _this = null;\r\n@ccclass(\"Lobby.LobbyController.PanelMenu\")\r\nexport class PanelMenu {\r\n    @property(cc.Node)\r\n    node: cc.Node = null;\r\n    @property(cc.Node)\r\n    bg: cc.Node = null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleMusic: cc.Toggle = null;\r\n    @property(cc.Toggle)\r\n    toggleSound: cc.Toggle = null;\r\n\r\n    private animate = false;\r\n    start() {\r\n        App.instance.isShowNotifyJackpot = true;\r\n        this.toggleMusic.node.on(\"toggle\", () => {\r\n            SPUtils.setMusicVolumn(this.toggleMusic.isChecked ? 1 : 0);\r\n            BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n        });\r\n        this.toggleSound.node.on(\"toggle\", () => {\r\n            SPUtils.setSoundVolumn(this.toggleSound.isChecked ? 1 : 0);\r\n            BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n        });\r\n\r\n        this.toggleMusic.isChecked = SPUtils.getMusicVolumn() > 0;\r\n        this.toggleSound.isChecked = SPUtils.getSoundVolumn() > 0;\r\n        this.node.active = false;\r\n        // App.instance.setUpNode();\r\n    }\r\n\r\n\r\n    show() {\r\n        if (this.animate) return;\r\n        this.animate = true;\r\n        this.node.stopAllActions();\r\n        this.node.active = true;\r\n        cc.tween(this.bg).set({ scale: 0.8, opacity: 150 }).to(0.3, { scale: 1.0, opacity: 255 }, { easing: cc.easing.backOut }).call(() => {\r\n            this.animate = false;\r\n        }).start();\r\n    }\r\n\r\n    hide() {\r\n        this.node.stopAllActions();\r\n        cc.tween(this.bg).to(0.3, { scale: 0.8, opacity: 150 }, { easing: cc.easing.backIn }).call(() => {\r\n            this.node.parent.active = false;\r\n            this.animate = false;\r\n        }).start();\r\n    }\r\n    dismiss() {\r\n        if (this.animate) return;\r\n        this.animate = true;\r\n        cc.tween(this.bg).to(0.3, { scale: 0.8, opacity: 150 }, { easing: cc.easing.backIn }).call(() => {\r\n            this.node.parent.active = false;\r\n            this.animate = false;\r\n        }).start();\r\n    }\r\n\r\n    toggle() {\r\n        if (this.node.active) {\r\n            this.dismiss();\r\n        } else {\r\n            this.show();\r\n        }\r\n    }\r\n}\r\n\r\nnamespace Lobby {\r\n    @ccclass\r\n    export class LobbyController extends cc.Component {\r\n        @property(cc.Node)\r\n        nodeTop: cc.Node = null;\r\n        @property(cc.Node)\r\n        nodeBot: cc.Node = null;\r\n        @property(cc.Node)\r\n        nodeCenter: cc.Node = null;\r\n        @property(cc.Label)\r\n        txtMail: cc.Label = null;\r\n        @property(cc.Label)\r\n        txtMailz: cc.Label = null;\r\n        @property(cc.Node)\r\n        panelNotLogin: cc.Node = null;\r\n        @property(cc.Node)\r\n        panelCSKH: cc.Node = null;\r\n        @property(cc.Node)\r\n        bottomBarLeft: cc.Node = null;\r\n        @property(cc.Node)\r\n        bottomBarRight: cc.Node = null;\r\n        @property(cc.Layout)\r\n        layoutBtnLeft: cc.Layout = null;\r\n        @property(cc.Layout)\r\n        layoutLbLeft: cc.Layout = null;\r\n        @property(cc.Layout)\r\n        layoutBtnRight: cc.Layout = null;\r\n        @property(cc.Layout)\r\n        layoutLbRight: cc.Layout = null;\r\n\r\n        @property(GameLiveController)\r\n        gameLiveController: GameLiveController = null;\r\n        @property(cc.Node)\r\n        panelLogined: cc.Node = null;\r\n        @property(PanelMenu)\r\n        panelMenu: PanelMenu = null;\r\n\r\n        @property(cc.Sprite)\r\n        sprAvatar: cc.Sprite = null;\r\n        @property(cc.Label)\r\n        lblNickname: cc.Label = null;\r\n        @property(cc.Label)\r\n        lblVipPoint: cc.Label = null;\r\n        @property(cc.Slider)\r\n        sliderVipPoint: cc.Slider = null;\r\n        @property(cc.Label)\r\n        lblVipPointName: cc.Label = null;\r\n        @property(cc.Sprite)\r\n        spriteProgressVipPoint: cc.Sprite = null;\r\n        @property(cc.Label)\r\n        lblCoin: cc.Label = null;\r\n\r\n        @property(cc.RichText)\r\n        txtNotifyMarquee: cc.RichText = null;\r\n        @property(cc.Node)\r\n        bgNotify: cc.Node = null;\r\n        @property(BoxLixi)\r\n        boxLixi: BoxLixi = null;\r\n\r\n        @property({ type: cc.AudioClip })\r\n        clickSfx: cc.AudioClip = null;\r\n        @property(TabsListGame)\r\n        tabsListGame: TabsListGame = null;\r\n        @property(BannerList)\r\n\r\n        bannerList: BannerList = null;\r\n        popupGiftCode: PopupGiftCode = null;\r\n        popupUpdateNickname: PopupUpdateNickname = null;\r\n        popupTransaction: PopupTransaction = null;\r\n        popupTopHu: PopupTopHu = null;\r\n        popupSecurity: PopupSecurity = null;\r\n        popupKiemTien: PopupKiemTien = null;\r\n        popupDiemDanh1: PopupDiemDanh1 = null;\r\n        popupRefund: PopupRefund = null;\r\n        popupEvent: PopupEvent = null;\r\n        popupEventTT: PopupEventTT = null;\r\n        popupMail: PopupMail = null;\r\n        popupDiemDanh: PopupDiemDanh = null;\r\n        popupDaily: PopupDaiLy = null;\r\n        Popupnaprut: Popupnaprut = null;\r\n        popupRegister: PopupRegister = null;\r\n        poupLogin: PopupLogin = null;\r\n        popupForgetPassword: PopupForgetPassword = null;\r\n        popupTaiApp: PopupTaiApp = null;\r\n        popupProfile: PopupProfile = null;\r\n        popupShop: LobbyShop = null;\r\n        popupCashout: PopupCashout = null;\r\n\r\n        @property({ type: cc.AudioClip })\r\n        clipBgm: cc.AudioClip = null;\r\n        listData100: Array<Tophudata> = new Array<Tophudata>();\r\n        listData1000: Array<Tophudata> = new Array<Tophudata>();\r\n        listData10000: Array<Tophudata> = new Array<Tophudata>();\r\n        private static notifyMarquee = \"\";\r\n        dataAlertMini: any = {}\r\n        fakeJPInv = null;\r\n\r\n        @property(cc.Label)\r\n        lblTai: cc.Label = null;\r\n        @property(cc.Label)\r\n        lblXiu: cc.Label = null;\r\n\r\n        onLoad() {\r\n            Global.LobbyController = this;\r\n            if (BundleControl.serverVersion.hasOwnProperty('FbConfig')) {\r\n                this.btnLoginFb.active = BundleControl.serverVersion['FbConfig'].isShowBtnFb;\r\n            }\r\n            this.nodeCenter.active = false;\r\n            this.nodeTop.y = cc.winSize.height / 2 + this.nodeTop.height / 2;\r\n            this.nodeBot.y = -cc.winSize.height / 2 - this.nodeBot.height;\r\n            if (this.isUseSDK()) {\r\n                // this.initPluginFirebase();\r\n                this.initPluginFacebook()\r\n            };\r\n\r\n\r\n\r\n            this.buttonjb.x = cc.winSize.width / 2 - 50;\r\n            this.buttonjb.on(cc.Node.EventType.TOUCH_START, (event: cc.Event.EventTouch) => {\r\n                this.buttonClicked = true;\r\n                this.buttonMoved = cc.Vec2.ZERO;\r\n            }, this);\r\n\r\n            this.buttonjb.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\r\n                this.buttonMoved = this.buttonMoved.add(event.getDelta());\r\n                if (this.buttonClicked) {\r\n                    if (Math.abs(this.buttonMoved.x) > 30 || Math.abs(this.buttonMoved.y) > 30) {\r\n                        let pos = this.buttonjb.position;\r\n                        pos.x += this.buttonMoved.x;\r\n                        pos.y += this.buttonMoved.y;\r\n                        this.buttonjb.position = pos;\r\n                        this.buttonClicked = false;\r\n                    }\r\n                } else {\r\n                    let pos = this.buttonjb.position;\r\n                    pos.x += event.getDeltaX();\r\n                    pos.y += event.getDeltaY();\r\n                    this.buttonjb.position = pos;\r\n\t\t\t\t\t\t\t\t\t\t\t   \r\n                }\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t \r\n            }, this);\r\n\r\n            this.buttonjb.on(cc.Node.EventType.TOUCH_END, (event: cc.Event.EventTouch) => {\r\n                if (this.buttonClicked) {\r\n                    this.actTopHu();\r\n                }\r\n                let posX = this.buttonjb.x > 0 ? cc.winSize.width / 2 - 60 : -cc.winSize.width / 2 + 60;\r\n                cc.tween(this.buttonjb).to(0.3, { x: posX }, { easing: cc.easing.sineOut }).start();\r\n            }, this);\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        start() {\r\n            _this = this;\r\n            let tileScreen = cc.winSize.width / 1280;\r\n            this.bottomBarLeft.width = this.bottomBarLeft.width * tileScreen\r\n            this.bottomBarRight.width = this.bottomBarRight.width * tileScreen\r\n            setTimeout(() => {\r\n                LogEvent.getInstance().sendEventOpenApp();\r\n            }, 1000);\r\n            this.lblCoin.node.parent.active = true;\r\n            if (cc.sys.isBrowser) {\r\n                if (window.localStorage.getItem('u') != null && window.localStorage.getItem('at') != null) {\r\n                    var data = {};\r\n                    data['u'] = window.localStorage.getItem('u');\r\n                    data['at'] = window.localStorage.getItem('at');\r\n                    App.instance.TYPE_LOGIN = \"NORMAL\";\r\n                    App.instance.USER_NAME = window.localStorage.getItem('un');\r\n                    App.instance.PASS_WORD = window.localStorage.getItem('pw');\r\n                    this.actLoginToken(data);\r\n                }\r\n                else if (window.localStorage.getItem('un') != null && window.localStorage.getItem('pw') != null) {\r\n                    //    this.atcPopupUpdateNickName(window.localStorage.getItem('un'), window.localStorage.getItem('pw'));\r\n                    App.instance.TYPE_LOGIN = \"NORMAL\";\r\n                    App.instance.USER_NAME = window.localStorage.getItem('un');\r\n                    App.instance.PASS_WORD = window.localStorage.getItem('pw');\r\n                }\r\n                else if (window.localStorage.getItem('at_fb')! + null) {\r\n                    Configs.Login.AccessTokenFB = window.localStorage.getItem('at_fb');\r\n                    Configs.Login.FacebookID = window.localStorage.getItem('fb_id');\r\n                    App.instance.TYPE_LOGIN = \"FACEBOOK\";\r\n                    App.instance.FB_ID = window.localStorage.getItem('fb_id');\r\n                    App.instance.AT_FB = window.localStorage.getItem('at_fb');\r\n                    this.loginFB();\r\n                }\r\n                else if (cc.sys.localStorage.getItem(\"user_name\") != \"null\" && cc.sys.localStorage.getItem(\"IsAutoLogin\") == 1) {\r\n                    //login\r\n\r\n                    if (Configs.Login.IsLogin == false) {\r\n                        this.actLogin(cc.sys.localStorage.getItem(\"user_name\"), cc.sys.localStorage.getItem(\"pass_word\"));\r\n                        App.instance.TYPE_LOGIN = \"NORMAL\";\r\n                        App.instance.USER_NAME = cc.sys.localStorage.getItem(\"user_name\");\r\n                        App.instance.PASS_WORD = cc.sys.localStorage.getItem(\"pass_word\");\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (cc.sys.localStorage.getItem(\"user_name\") != \"null\" && cc.sys.localStorage.getItem(\"IsAuto\") == 1) {\r\n                    //login\r\n                    if (Configs.Login.IsLogin == false) {\r\n                        this.actLogin(cc.sys.localStorage.getItem(\"user_name\"), cc.sys.localStorage.getItem(\"pass_word\"));\r\n                        App.instance.TYPE_LOGIN = \"NORMAL\";\r\n                        App.instance.USER_NAME = cc.sys.localStorage.getItem(\"user_name\");\r\n                        App.instance.PASS_WORD = cc.sys.localStorage.getItem(\"pass_word\");\r\n                    }\r\n                }\r\n            }\r\n            this.panelMenu.start();\r\n            BroadcastReceiver.register(BroadcastReceiver.UPDATE_NICKNAME_SUCCESS, (data) => {\r\n            }, this);\r\n\r\n            BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\r\n                Tween.numberTo(this.lblCoin, Configs.Login.Coin, 0.3);\r\n            }, this);\r\n            BroadcastReceiver.register(BroadcastReceiver.ON_UPDATE_MAIL, () => {\r\n                this.updateMail();\r\n            }, this);\r\n            BroadcastReceiver.register(BroadcastReceiver.USER_INFO_UPDATED, () => {\r\n                this.lblNickname.string = Configs.Login.Nickname;\r\n                this.sprAvatar.spriteFrame = App.instance.getAvatarSpriteFrame(Configs.Login.Avatar);\r\n                this.lblVipPoint.string = \"VP: \" + Utils.formatNumber(Configs.Login.VipPoint) + \"/\" + Utils.formatNumber(Configs.Login.getVipPointNextLevel());\r\n                this.sliderVipPoint.progress = Math.min(Configs.Login.VipPoint / Configs.Login.getVipPointNextLevel(), 1);\r\n                this.spriteProgressVipPoint.fillRange = this.sliderVipPoint.progress;\r\n                this.lblVipPointName.string = Configs.Login.getVipPointName();\r\n                this.panelNotLogin.active = false;\r\n                this.panelLogined.active = true;\r\n                this.updateMail();\r\n                MiniGameNetworkClient.getInstance().sendCheck(new cmd.ReqGetSecurityInfo());\r\n                //MiniGameNetworkClient2.getInstance().sendCheck(new cmd.ReqGetSecurityInfo());\r\n                Tween.numberTo(this.lblCoin, Configs.Login.Coin, 0.3);\r\n\r\n                MiniGameNetworkClient.getInstance().sendCheck(new cmd.SendScribe());\r\n            }, this);\r\n\r\n            BroadcastReceiver.register(BroadcastReceiver.USER_LOGOUT, (data) => {\r\n                Configs.Login.clear();\r\n                this.panelNotLogin.active = true;\r\n                this.panelLogined.active = false;\r\n                MiniGameNetworkClient.getInstance().close();\r\n                //MiniGameNetworkClient2.getInstance().close();\r\n                SlotNetworkClient.getInstance().close();\r\n                TienLenNetworkClient.getInstance().close();\r\n                //      ShootFishNetworkClient.getInstance().close();\r\n                // App.instance.buttonMiniGame.hidden();\r\n            }, this);\r\n            if (!Configs.Login.IsLogin) {\r\n                // if (SPUtils.getUserAccessTokenFB().length > 0) {\r\n                //     this.actLoginFB()\r\n                // }\r\n                // else if (this.edbUsername.string.length > 0 && this.edbPassword.string.length > 0) {\r\n                //     this.actLogin();\r\n                // }\r\n                this.panelNotLogin.active = true;\r\n                this.panelLogined.active = false;\r\n                App.instance.buttonMiniGame.hidden();\r\n\r\n                //fake jackpot\r\n                var j100 = Utils.randomRangeInt(5000, 7000) * 100;\r\n                var j1000 = Utils.randomRangeInt(5000, 7000) * 1000;\r\n                var j10000 = Utils.randomRangeInt(5000, 7000) * 10000;\r\n                // //\r\n                this.tabsListGame.updateItemJackpots(\"audition\", j100, false, j1000, false, j10000, false);//tay du\r\n                this.tabsListGame.updateItemJackpots(\"captain\", j100, false, j1000, false, j10000, false);\r\n                this.tabsListGame.updateItemJackpots(\"spartans\", j100, false, j1000, false, j10000, false);//than tai\r\n                this.tabsListGame.updateItemJackpots(\"tamhung\", j100, false, j1000, false, j10000, false);//chim dien\r\n                this.tabsListGame.updateItemJackpots(\"aztec\", j100, false, j1000, false, j10000, false);\r\n                this.tabsListGame.updateItemJackpots(\"zeus\", j100, false, j1000, false, j10000, false);\r\n                this.tabsListGame.updateItemJackpots(\"thethao\", j100, false, j1000, false, j10000, false);\r\n                this.tabsListGame.updateItemJackpots(\"shootfish\", j100, false, j1000, false, j10000, false);\r\n                this.tabsListGame.updateItemJackpots(\"chiemtinh\", j100, false, j1000, false, j10000, false);\r\n                this.tabsListGame.updateItemJackpots(\"galaxy\", j100, false, j1000, false, j10000, false);\r\n                this.tabsListGame.updateItemJackpots(\"minipoker\", j100, false, j1000, false, j10000, false);\r\n\r\n                this.createListdata(j100, j1000, j10000)\r\n                //    this.topHu.ShowData(this.listData100, this.listData1000, this.listData10000);\r\n            } else {\r\n                this.panelNotLogin.active = false;\r\n                this.panelLogined.active = true;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_INFO_UPDATED);\r\n                SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n                MiniGameNetworkClient.getInstance().sendCheck(new cmd.ReqGetMoneyUse());\r\n            }\r\n            console.log(\"start\")\r\n            Configs.App.getServerConfig();\r\n            MiniGameNetworkClient.getInstance().addOnClose(() => {\r\n                ////Utils.Log(\"on close minigame\");\r\n            }, this);\r\n            this.startEff();\r\n        }\r\n        startEff() {\r\n            \r\n            cc.tween(this.nodeTop)\r\n                .set({ y: cc.winSize.height / 2, opacity: 150 })\r\n                .to(0.3, { y: cc.winSize.height / 2 - this.nodeTop.height / 2, opacity: 255 }, { easing: cc.easing.sineIn })\r\n                .call(() => {\r\n                    this.nodeCenter.active = true;\r\n                    this.nodeTop.getComponent(cc.Widget).isAlignTop = true;\r\n                    this.setupListener();\r\n                    this.layoutBtnLeft.spacingX = 50 * (cc.winSize.width / 1280);\r\n                    this.layoutLbLeft.spacingX = 50 * (cc.winSize.width / 1280);\r\n\r\n                    this.layoutLbRight.spacingX = 50 * (cc.winSize.width / 1280);\r\n                    this.layoutBtnRight.spacingX = 50 * (cc.winSize.width / 1280);\r\n                })\r\n                .delay(0.25)\r\n                // .call(() => {\r\n                //     this.getConfigGame();\r\n                // })\r\n                .start();\r\n            cc.tween(this.nodeBot)\r\n                .set({ y: -cc.winSize.height / 2, opacity: 150 })\r\n                .to(0.3, { y: -cc.winSize.height / 2 + this.nodeBot.height / 2, opacity: 255 }, { easing: cc.easing.sineIn })\r\n                .call(() => {\r\n                    this.nodeBot.getComponent(cc.Widget).isAlignBottom = true;\r\n                })\r\n                .start();\r\n        }\r\n        setupListener() {\r\n            AudioManager.getInstance().playBackgroundMusic(this.clipBgm);\r\n            if (!Configs.Login.IsLogin) {\r\n                this.panelNotLogin.active = true;\r\n                this.panelLogined.active = false;\r\n                // App.instance.buttonMiniGame.hidden();\r\n                App.instance.fakeTopHuData = {\r\n                    DUAXE: {\r\n                        j100: Utils.randomRangeInt(5000, 7000) * 100,\r\n                        j1000: Utils.randomRangeInt(5000, 7000) * 1000,\r\n                        j10000: Utils.randomRangeInt(5000, 7000) * 10000\r\n                    },\r\n                    BITCOIN: {\r\n                        j100: Utils.randomRangeInt(5000, 7000) * 100,\r\n                        j1000: Utils.randomRangeInt(5000, 7000) * 1000,\r\n                        j10000: Utils.randomRangeInt(5000, 7000) * 10000\r\n                    },\r\n                    THANTAI: {\r\n                        j100: Utils.randomRangeInt(5000, 7000) * 100,\r\n                        j1000: Utils.randomRangeInt(5000, 7000) * 1000,\r\n                        j10000: Utils.randomRangeInt(5000, 7000) * 10000\r\n                    },\r\n                    CHIMDIEN: {\r\n                        j100: Utils.randomRangeInt(5000, 7000) * 100,\r\n                        j1000: Utils.randomRangeInt(5000, 7000) * 1000,\r\n                        j10000: Utils.randomRangeInt(5000, 7000) * 10000\r\n                    },\r\n                    BIKINI: {\r\n                        j100: Utils.randomRangeInt(5000, 7000) * 100,\r\n                        j1000: Utils.randomRangeInt(5000, 7000) * 1000,\r\n                        j10000: Utils.randomRangeInt(5000, 7000) * 10000\r\n                    },\r\n                    THETHAO: {\r\n                        j100: Utils.randomRangeInt(5000, 7000) * 100,\r\n                        j1000: Utils.randomRangeInt(5000, 7000) * 1000,\r\n                        j10000: Utils.randomRangeInt(5000, 7000) * 10000\r\n                    },\r\n                    CHIEMTINH: {\r\n                        j100: Utils.randomRangeInt(5000, 7000) * 100,\r\n                        j1000: Utils.randomRangeInt(5000, 7000) * 1000,\r\n                        j10000: Utils.randomRangeInt(5000, 7000) * 10000\r\n                    },\r\n                    THANBAI: {\r\n                        j100: Utils.randomRangeInt(5000, 7000) * 100,\r\n                        j1000: Utils.randomRangeInt(5000, 7000) * 1000,\r\n                        j10000: Utils.randomRangeInt(5000, 7000) * 10000\r\n                    },\r\n                }\r\n                this.initFakeJP();\r\n                setInterval(this.fakeJPInv = () => {\r\n                    if (!Configs.Login.IsLogin) {\r\n                        this.initFakeJP();\r\n                    } else {\r\n                        clearInterval(this.fakeJPInv);\r\n                    }\r\n                }, 5000);\r\n\r\n            } else {\r\n                this.panelNotLogin.active = false;\r\n                this.panelLogined.active = true;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_INFO_UPDATED);\r\n                SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n                MiniGameNetworkClient.getInstance().sendCheck(new cmd.ReqGetMoneyUse());\r\n            }\r\n            MiniGameNetworkClient.getInstance().addListener((data) => {\r\n                let inPacket = new InPacket(data);\r\n                switch (inPacket.getCmdId()) {\r\n                    case cmd.Code.GET_SECURITY_INFO:\r\n                        App.instance.showLoading(false);\r\n                        let res = new cmd.ResGetSecurityInfo(data);\r\n                        // res.usertype = \"2\";\r\n                        Configs.Login.UserType = res.usertype;\r\n                        if (Configs.Login.UserType == \"2\" && App.instance.RECONNECT_GAME == false) {\r\n                            App.instance.updateConfigGame();\r\n                            this.reConnectGame();\r\n                        }\r\n                        break;\r\n                    case cmd.Code.NOTIFY_MARQUEE: {\r\n                        let res = new cmd.ResNotifyMarquee(data);\r\n                        let resJson = JSON.parse(res.message);\r\n                        LobbyController.notifyMarquee = \"\";\r\n                        this.dataAlertMini = resJson;\r\n                        this.showAlertMiniGame();\r\n                        break;\r\n                    }\r\n                    case cmd.Code.UPDATE_JACKPOTS: {\r\n                        let res = new cmd.ResUpdateJackpots(data);\r\n                        break;\r\n                    }\r\n                    case cmd.Code.GET_MONEY_USE: {\r\n                        let res = new cmd.ResGetMoneyUse(data);\r\n                        Configs.Login.Coin = res.moneyUse;\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        break;\r\n                    }\r\n                    case cmd.Code.LOGOUT: {\r\n                        ////Utils.Log(\"Login from other places!\");\r\n                        Global.isLoginFromOtherPlaces = true;\r\n                        MiniGameNetworkClient.getInstance().isForceClose = true;\r\n                        App.instance.ShowAlertDialog(App.instance.getTextLang('txt_login_from_other'));\r\n                        this.panelMenu.node.parent.active = false;\r\n                        this.panelMenu.hide();\r\n\r\n                        if (cc.sys.isBrowser) {\r\n                            window.localStorage.removeItem('u');\r\n                            window.localStorage.removeItem('at');\r\n                            window.localStorage.removeItem('at_fb');\r\n                            window.localStorage.removeItem('un');\r\n                            window.localStorage.removeItem('pw');\r\n\r\n                        }\r\n                        SPUtils.setUserName(\"\");\r\n                        SPUtils.setUserPass(\"\");\r\n                        cc.sys.localStorage.setItem(\"IsAutoLogin\", 0);\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_LOGOUT);\r\n                        App.instance.updateConfigGame(App.DOMAIN);\r\n                        App.instance.RECONNECT_GAME = false;\r\n                        break;\r\n                    }\r\n                    case cmd.Code.LOGIN: {\r\n                        ////Utils.Log(\"Login Mini Game Success!\");\r\n                        let res = new cmd.ResLogin(data);\r\n                        break;\r\n                    }\r\n\r\n\r\n                    case cmd.Code.TX_GAME_INFO: {\r\n                        let res = new cmd.TXGameInfo(data);\r\n                        let chipEnd = res.potTai > res.potXiu ? res.potXiu : res.potTai;\r\n                        let potTai = !res.bettingState ? chipEnd : res.potTai;\r\n                        let potXiu = !res.bettingState ? chipEnd : res.potXiu;\r\n                        \r\n                        if (this.lblTai) Tween.numberTo(this.lblTai, potTai, 0.3);\r\n                        if (this.lblXiu) Tween.numberTo(this.lblXiu, potXiu, 0.3);\r\n                        break;\r\n                    }\r\n\r\n                    case cmd.Code.TX_UPDATE_INFO: {\r\n                        let res = new cmd.TXUpdateTime(data);\r\n                        \r\n                        let chipEnd = res.potTai > res.potXiu ? res.potXiu : res.potTai;\r\n                        let potTai = !res.bettingState ? chipEnd : res.potTai;\r\n                        let potXiu = !res.bettingState ? chipEnd : res.potXiu;\r\n                        if (this.lblTai) Tween.numberTo(this.lblTai, potTai, 0.3);\r\n                        if (this.lblXiu) Tween.numberTo(this.lblXiu, potXiu, 0.3);\r\n                        break;\r\n                    }\r\n                }\r\n            }, this);\r\n            SlotNetworkClient.getInstance().addListener((data) => {\r\n                let inPacket = new InPacket(data);\r\n                switch (inPacket.getCmdId()) {\r\n                    case cmd.Code.UPDATE_JACKPOT_SLOTS: {\r\n                        let res = new cmd.ResUpdateJackpotSlots(data);\r\n                        let resJson = JSON.parse(res.pots);\r\n                        App.instance.topHuData = resJson;\r\n                        // ////Utils.Log(\"JP:\", JSON.stringify(resJson));\r\n                        this.handleUpdateJP();\r\n                        break;\r\n                    }\r\n                }\r\n            }, this);\r\n            SlotNetworkClient.getInstance().addListener((data) => {\r\n                let inPacket = new InPacket(data);\r\n                switch (inPacket.getCmdId()) {\r\n\r\n                    case cmd.Code.UPDATE_JACKPOT_SLOTS: {\r\n\r\n                        let res = new cmd.ResUpdateJackpotSlots(data);\r\n                        let resJson = JSON.parse(res.pots);\r\n                        //console.log(\"UPDATE_JACKPOT_SLOTS:\"+JSON.stringify(resJson));\r\n                        App.instance.DataJackpots = resJson;\r\n                        // //console.log(\"Update_Jackpots:\"+JSON.stringify(resJson));\r\n\r\n                        let spartan = resJson[\"spartan\"];\r\n                        this.tabsListGame.updateItemJackpots(\"spartans\", spartan[\"100\"][\"p\"], spartan[\"100\"][\"x2\"] == 1, spartan[\"1000\"][\"p\"], spartan[\"1000\"][\"x2\"] == 1, spartan[\"10000\"][\"p\"], spartan[\"10000\"][\"x2\"] == 1);\r\n\r\n                        //audition\r\n                        let audition = resJson[\"audition\"];\r\n                        this.tabsListGame.updateItemJackpots(\"audition\", audition[\"100\"][\"p\"], audition[\"100\"][\"x2\"] == 1, audition[\"1000\"][\"p\"], audition[\"1000\"][\"x2\"] == 1, audition[\"10000\"][\"p\"], audition[\"10000\"][\"x2\"] == 1);\r\n                        //chiemtinh\r\n                        let chiemtinh = resJson[\"chiemtinh\"];\r\n                        this.tabsListGame.updateItemJackpots(\"chiemtinh\", chiemtinh[\"100\"][\"p\"], chiemtinh[\"100\"][\"x2\"] == 1, chiemtinh[\"1000\"][\"p\"], chiemtinh[\"1000\"][\"x2\"] == 1, chiemtinh[\"10000\"][\"p\"], chiemtinh[\"10000\"][\"x2\"] == 1);\r\n\r\n                        //maybach\r\n                        let maybach = resJson[\"maybach\"];\r\n                        this.tabsListGame.updateItemJackpots(\"maybach\", maybach[\"100\"][\"p\"], maybach[\"100\"][\"x2\"] == 1, maybach[\"1000\"][\"p\"], maybach[\"1000\"][\"x2\"] == 1, maybach[\"10000\"][\"p\"], maybach[\"10000\"][\"x2\"] == 1);\r\n\r\n                        //tamhung\r\n                        let tamhung = resJson[\"tamhung\"];\r\n                        this.tabsListGame.updateItemJackpots(\"tamhung\", tamhung[\"100\"][\"p\"], tamhung[\"100\"][\"x2\"] == 1, tamhung[\"1000\"][\"p\"], tamhung[\"1000\"][\"x2\"] == 1, tamhung[\"10000\"][\"p\"], tamhung[\"10000\"][\"x2\"] == 1);\r\n\r\n                        //range rover\r\n                        let rangeRover = resJson[\"rangeRover\"];\r\n                        this.tabsListGame.updateItemJackpots(\"aztec\", rangeRover[\"100\"][\"p\"], rangeRover[\"100\"][\"x2\"] == 1, rangeRover[\"1000\"][\"p\"], rangeRover[\"1000\"][\"x2\"] == 1, rangeRover[\"10000\"][\"p\"], rangeRover[\"10000\"][\"x2\"] == 1);\r\n\r\n                        //range rover\r\n                        let benley = resJson[\"benley\"];\r\n                        this.tabsListGame.updateItemJackpots(\"zeus\", benley[\"100\"][\"p\"], benley[\"100\"][\"x2\"] == 1, benley[\"1000\"][\"p\"],\r\n                            benley[\"1000\"][\"x2\"] == 1, benley[\"10000\"][\"p\"], benley[\"10000\"][\"x2\"] == 1);\r\n\r\n                        //range rover\r\n                        let bikini = resJson[\"bikini\"];\r\n                        this.tabsListGame.updateItemJackpots(\"bikini\", bikini[\"100\"][\"p\"], bikini[\"100\"][\"x2\"] == 1, bikini[\"1000\"][\"p\"],\r\n                            bikini[\"1000\"][\"x2\"] == 1, bikini[\"10000\"][\"p\"], bikini[\"10000\"][\"x2\"] == 1);\r\n\r\n                        let galaxy = resJson[\"galaxy\"];\r\n                        this.tabsListGame.updateItemJackpots(\"galaxy\", galaxy[\"100\"][\"p\"], galaxy[\"100\"][\"x2\"] == 1, galaxy[\"1000\"][\"p\"],\r\n                        galaxy[\"1000\"][\"x2\"] == 1, galaxy[\"10000\"][\"p\"], galaxy[\"10000\"][\"x2\"] == 1);\r\n\r\n                        //range rover\r\n                        let minipoker = resJson[\"minipoker\"];\r\n                        this.tabsListGame.updateItemJackpots(\"minipoker\", minipoker[\"100\"][\"p\"], minipoker[\"100\"][\"x2\"] == 1, minipoker[\"1000\"][\"p\"],\r\n                        minipoker[\"1000\"][\"x2\"] == 1, minipoker[\"10000\"][\"p\"], minipoker[\"10000\"][\"x2\"] == 1);\r\n\r\n                        //range rover\r\n                        let rollroye = resJson[\"rollRoye\"];\r\n                        this.tabsListGame.updateItemJackpots(\"gainhay\", rollroye[\"100\"][\"p\"], rollroye[\"100\"][\"x2\"] == 1, rollroye[\"1000\"][\"p\"],\r\n                            rollroye[\"1000\"][\"x2\"] == 1, rollroye[\"10000\"][\"p\"], rollroye[\"10000\"][\"x2\"] == 1);\r\n\r\n                        let caothap = resJson[\"caothap\"];\r\n                        this.tabsListGame.updateItemJackpots(\"caothap\", caothap[\"50000\"][\"p\"], caothap[\"50000\"][\"x2\"] == 1, caothap[\"100000\"][\"p\"],\r\n                        caothap[\"100000\"][\"x2\"] == 1, caothap[\"500000\"][\"p\"], caothap[\"500000\"][\"x2\"] == 1);\r\n\r\n                        let pokego = resJson[\"pokemon\"];\r\n                        this.tabsListGame.updateItemJackpots(\"pokemon\", pokego[\"100\"][\"p\"], pokego[\"100\"][\"x2\"] == 1, pokego[\"1000\"][\"p\"],\r\n                        pokego[\"1000\"][\"x2\"] == 1, pokego[\"10000\"][\"p\"], pokego[\"10000\"][\"x2\"] == 1);\r\n\r\n                        //    this.createListdata(j100, j1000, j10000);\r\n                        for (var i = 0; i < this.listData100.length; i++) {\r\n                            // // 100\r\n                            if (this.listData100[i].gameid == \"chiemtinh\") {\r\n                                this.listData100[i] = new Tophudata(\"chiemtinh\", \"Chiêm Tinh\", chiemtinh[\"100\"][\"p\"]);\r\n                            }\r\n                            if (this.listData100[i].gameid == \"spartans\") {\r\n                                this.listData100[i] = new Tophudata(\"spartans\", \"Thần Tài\", spartan[\"100\"][\"p\"]);\r\n                            }\r\n                            if (this.listData100[i].gameid == \"audition\") {\r\n                                this.listData100[i] = new Tophudata(\"audition\", \"Đua Xe\", audition[\"100\"][\"p\"]);\r\n                            }\r\n\r\n                            if (this.listData100[i].gameid == \"tamhung\") {\r\n                                this.listData100[i] = new Tophudata(\"tamhung\", \"Chim Điên\", tamhung[\"100\"][\"p\"]);\r\n                            }\r\n\r\n                            if (this.listData100[i].gameid == \"zeus\") {\r\n                                this.listData100[i] = new Tophudata(\"zeus\", \"Crypto\", benley[\"100\"][\"p\"]);\r\n                            }\r\n                            if (this.listData100[i].gameid == \"gainhay\") {\r\n                                this.listData100[i] = new Tophudata(\"gainhay\", \"Thể Thao\", rollroye[\"100\"][\"p\"]);\r\n                            }\r\n                            if (this.listData100[i].gameid == \"bikini\") {\r\n                                this.listData100[i] = new Tophudata(\"bikini\", \"Thể Thao\", bikini[\"100\"][\"p\"]);\r\n                            }\r\n                            if (this.listData100[i].gameid == \"maybach\") {\r\n                                this.listData100[i] = new Tophudata(\"maybach\", \"Thể Thao\", maybach[\"100\"][\"p\"]);\r\n                            }\r\n                            if (this.listData100[i].gameid == \"galaxy\") {\r\n                                this.listData100[i] = new Tophudata(\"galaxy\", \"Kim Cương\", galaxy[\"100\"][\"p\"]);\r\n                            }\r\n                            if (this.listData100[i].gameid == \"minipoker\") {\r\n                                this.listData100[i] = new Tophudata(\"minipoker\", \"Minipoker\", minipoker[\"100\"][\"p\"]);\r\n                            }\r\n                            if (this.listData100[i].gameid == \"caothap\") {\r\n                                this.listData100[i] = new Tophudata(\"caothap\", \"Cao Thấp\", caothap[\"50000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData100[i].gameid == \"pokemon\") {\r\n                                this.listData100[i] = new Tophudata(\"pokemon\", \"Dragon\", pokego[\"100\"][\"p\"]);\r\n                            }\r\n\r\n                            // // 1000\r\n                            if (this.listData1000[i].gameid == \"chiemtinh\") {\r\n                                this.listData1000[i] = new Tophudata(\"chiemtinh\", \"Chiêm Tinh\", chiemtinh[\"1000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData1000[i].gameid == \"spartans\") {\r\n                                this.listData1000[i] = new Tophudata(\"spartans\", \"Thần Tài\", spartan[\"1000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData1000[i].gameid == \"audition\") {\r\n                                this.listData1000[i] = new Tophudata(\"audition\", \"Đua Xe\", audition[\"1000\"][\"p\"]);\r\n                            }\r\n\r\n                            if (this.listData1000[i].gameid == \"tamhung\") {\r\n                                this.listData1000[i] = new Tophudata(\"tamhung\", \"Chim Điên\", tamhung[\"1000\"][\"p\"]);\r\n                            }\r\n\r\n                            if (this.listData1000[i].gameid == \"zeus\") {\r\n                                this.listData1000[i] = new Tophudata(\"zeus\", \"Crypto\", benley[\"1000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData1000[i].gameid == \"gainhay\") {\r\n                                this.listData1000[i] = new Tophudata(\"gainhay\", \"Thể Thao\", rollroye[\"1000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData1000[i].gameid == \"bikini\") {\r\n                                this.listData1000[i] = new Tophudata(\"bikini\", \"Thể Thao\", bikini[\"1000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData1000[i].gameid == \"maybach\") {\r\n                                this.listData1000[i] = new Tophudata(\"maybach\", \"Thể Thao\", maybach[\"1000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData1000[i].gameid == \"galaxy\") {\r\n                                this.listData1000[i] = new Tophudata(\"galaxy\", \"Kim Cương\", galaxy[\"1000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData1000[i].gameid == \"minipoker\") {\r\n                                this.listData1000[i] = new Tophudata(\"minipoker\", \"Minipoker\", minipoker[\"1000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData1000[i].gameid == \"caothap\") {\r\n                                this.listData1000[i] = new Tophudata(\"caothap\", \"Cao Thấp\", caothap[\"100000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData1000[i].gameid == \"pokemon\") {\r\n                                this.listData1000[i] = new Tophudata(\"pokemon\", \"Dragon\", pokego[\"1000\"][\"p\"]);\r\n                            }\r\n                            // // 10000\r\n                            if (this.listData10000[i].gameid == \"chiemtinh\") {\r\n                                this.listData10000[i] = new Tophudata(\"chiemtinh\", \"Chiêm Tinh\", chiemtinh[\"10000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData10000[i].gameid == \"spartans\") {\r\n                                this.listData10000[i] = new Tophudata(\"spartans\", \"Thần Tài\", spartan[\"10000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData10000[i].gameid == \"audition\") {\r\n                                this.listData10000[i] = new Tophudata(\"audition\", \"Đua Xe\", audition[\"10000\"][\"p\"]);\r\n                            }\r\n\r\n                            if (this.listData10000[i].gameid == \"tamhung\") {\r\n                                this.listData10000[i] = new Tophudata(\"tamhung\", \"Chim Điên\", tamhung[\"10000\"][\"p\"]);\r\n                            }\r\n\r\n                            if (this.listData10000[i].gameid == \"zeus\") {\r\n                                this.listData10000[i] = new Tophudata(\"zeus\", \"Crypto\", benley[\"10000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData10000[i].gameid == \"gainhay\") {\r\n                                this.listData10000[i] = new Tophudata(\"gainhay\", \"Thể Thao\", rollroye[\"10000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData10000[i].gameid == \"bikini\") {\r\n                                this.listData10000[i] = new Tophudata(\"bikini\", \"Thể Thao\", bikini[\"10000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData10000[i].gameid == \"maybach\") {\r\n                                this.listData10000[i] = new Tophudata(\"maybach\", \"Thể Thao\", maybach[\"10000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData10000[i].gameid == \"galaxy\") {\r\n                                this.listData10000[i] = new Tophudata(\"galaxy\", \"Kim Cương\", galaxy[\"10000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData10000[i].gameid == \"minipoker\") {\r\n                                this.listData10000[i] = new Tophudata(\"minipoker\", \"Minipoker\", minipoker[\"10000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData10000[i].gameid == \"caothap\") {\r\n                                this.listData10000[i] = new Tophudata(\"caothap\", \"Cao Thấp\", caothap[\"500000\"][\"p\"]);\r\n                            }\r\n                            if (this.listData10000[i].gameid == \"pokemon\") {\r\n                                this.listData10000[i] = new Tophudata(\"pokemon\", \"Dragon\", pokego[\"10000\"][\"p\"]);\r\n                            }\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                }\r\n            }, this);\r\n        }\r\n        handleUpdateJP() {\r\n            \r\n            if (this.popupTopHu != null && this.popupTopHu.node.active) {\r\n                this.popupTopHu.setInfo();\r\n            }\r\n            this.updateJackpot(\"THANTAI\", \"spartan\");\r\n            this.updateJackpot(\"DUAXE\", \"audition\");\r\n            this.updateJackpot(\"CHIEMTINH\", \"chiemtinh\");\r\n            this.updateJackpot(\"THETHAO\", \"maybach\");\r\n            this.updateJackpot(\"CHIMDIEN\", \"tamhung\");\r\n            this.updateJackpot(\"BITCOIN\", \"benley\");\r\n            this.updateJackpot(\"THANBAI\", \"rollRoye\");\r\n            this.updateJackpot(\"BIKINI\", \"bikini\");\r\n            this.updateJackpot(\"PIKACHU\", \"pokemon\");\r\n            this.updateJackpot(\"MINIPOKER\", \"minipoker\");\r\n            this.updateJackpot(\"KIMCUONG\", \"galaxy\");\r\n        }\r\n        updateJackpot(gameName, jackpotID) {\r\n            let data = App.instance.topHuData[jackpotID];\r\n            this.tabsListGame.updateItemJackpots(gameName, data[\"100\"][\"p\"], data[\"100\"][\"x2\"] == 1, data[\"1000\"][\"p\"],\r\n                data[\"1000\"][\"x2\"] == 1, data[\"10000\"][\"p\"], data[\"10000\"][\"x2\"] == 1)\r\n        }\r\n        initFakeJP() {\r\n            for (var key in App.instance.fakeTopHuData) {\r\n                App.instance.fakeTopHuData[key]['j100'] += Utils.randomRangeInt(5000, 20000);\r\n                App.instance.fakeTopHuData[key]['j1000'] += Utils.randomRangeInt(50000, 200000);\r\n                App.instance.fakeTopHuData[key]['j10000'] += Utils.randomRangeInt(50000, 2000000);\r\n                this.tabsListGame.updateItemJackpots(key, App.instance.fakeTopHuData[key]['j100'], false, App.instance.fakeTopHuData[key]['j1000'], false, App.instance.fakeTopHuData[key]['j10000'], false);//tay du\r\n            }\r\n        }\r\n        showAlertMiniGame() {\r\n             \r\n            // let parent = this.txtNotifyMarquee.node.parent;\r\n            let parent = this.txtNotifyMarquee.node.parent;\r\n            parent.active = true;\r\n            //<color=#00ff00>Rich</c><color=#0fffff>Text</color>\r\n            let txtFormat = \"(<color=#00ff00>%s</c>) \" + App.instance.getTextLang('txt_congratualtion') + \"<color=#FF7A00> %s </c>\" + App.instance.getTextLang('txt_win') + \"<color=#FFFF00> %s</c>        \";\r\n            for (let i = 0; i < this.dataAlertMini[\"entries\"].length; i++) {\r\n                let e = this.dataAlertMini[\"entries\"][i];\r\n                LobbyController.notifyMarquee += cc.js.formatStr(txtFormat, Configs.GameId.getGameName(e[\"g\"]), e[\"n\"], Utils.formatNumber(e[\"m\"]));\r\n\r\n            }\r\n            // this.txtNotifyMarquee.string = LobbyController.notifyMarquee;\r\n            this.txtNotifyMarquee.string = LobbyController.notifyMarquee;\r\n            this.txtNotifyMarquee.node.x = parent.width / 2\r\n            this.scheduleOnce(() => {\r\n                this.bgNotify.active = true;\r\n                let acMove = cc.tween().by(1.0, { x: -150 });\r\n                let acCheck = cc.tween().call(() => {\r\n                    if (this.txtNotifyMarquee.node.x < -this.txtNotifyMarquee.node.width / 2 - parent.width / 2) {\r\n                        cc.Tween.stopAllByTarget(this.txtNotifyMarquee.node);\r\n                        parent.active = false;\r\n                        this.bgNotify.active = false;\r\n                    }\r\n                });\r\n                cc.Tween.stopAllByTarget(this.txtNotifyMarquee.node);\r\n                cc.tween(this.txtNotifyMarquee.node).repeatForever(cc.tween().sequence(acMove, acCheck)).start();\r\n            }, 0.5);\r\n        }\r\n        reConnectGame() {\r\n            ////Utils.Log(\"reconnectLote88\");\r\n            ////Utils.Log(\"TYPE_LOGIN:\" + App.instance.TYPE_LOGIN);\r\n            ////Utils.Log(\"USER_NAME:\" + App.instance.USER_NAME);\r\n            ////Utils.Log(\"PASS_WORD:\" + App.instance.PASS_WORD);\r\n            ////Utils.Log(\"FB_ID:\" + App.instance.FB_ID);\r\n            ////Utils.Log(\"AT_FB:\" + App.instance.AT_FB);\r\n            MiniGameNetworkClient.getInstance().close();\r\n            SlotNetworkClient.getInstance().close();\r\n            //    ShootFishNetworkClient.getInstance().close();\r\n            if (App.instance.TYPE_LOGIN == \"NORMAL\") {\r\n                this.actLogin(App.instance.USER_NAME, App.instance.PASS_WORD);\r\n            }\r\n        }\r\n\r\n        initPluginFacebook() {\r\n            if ('undefined' == typeof sdkbox) {\r\n                ////Utils.Log('sdkbox is undefined');\r\n                return;\r\n            }\r\n\r\n            if ('undefined' == typeof sdkbox.PluginFacebook) {\r\n                ////Utils.Log('sdkbox.PluginFacebook is undefined');\r\n                return;\r\n            }\r\n\r\n            sdkbox.PluginFacebook.setListener({\r\n                onLogin: function (isLogin, msg) {\r\n                    if (isLogin) {\r\n                        Configs.Login.AccessTokenFB = sdkbox.PluginFacebook.getAccessToken();\r\n                        _this.loginFB();\r\n                    } else {\r\n                        App.instance.showLoading(false);\r\n\r\n                        App.instance.showErrLoading(\"Lỗi đăng nhập status: \" + msg);\r\n\r\n                        ////Utils.Log(\"login failed \" + msg);\r\n                    }\r\n                }\r\n            });\r\n            ////Utils.Log(\"initPluginFacebook success!\");\r\n            sdkbox.PluginFacebook.init();\r\n        }\r\n\r\n        onEnable() {\r\n            var self = this;\r\n            this.updateMail();\r\n        }\r\n\r\n        updateMail() {\r\n            if (Configs.Login.IsLogin) {\r\n                Http.get(Configs.App.API, { c: \"406\", nn: Configs.Login.Nickname }, (err, res) => {\r\n                    if (res[\"success\"]) {\r\n                        if (res[\"data\"] > 0) {\r\n                            this.txtMail.node.parent.active = true;\r\n                            this.txtMailz.node.parent.active = true;\r\n                            this.txtMail.string = res[\"data\"];\r\n                            if (!App.instance.checkMailUnread) {\r\n                                App.instance.checkMailUnread = true;\r\n                                //    App.instance.confirmDialog.show2(App.instance.getTextLang('txt_new_mail'), (isConfirm) => {\r\n                                //        if (isConfirm)\r\n                                //            this.actEvent();\r\n                                //    }); \r\n                            }\r\n                        }\r\n                        else {\r\n                            this.txtMail.node.parent.active = false;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        initPluginFirebase() {\r\n            if ('undefined' == typeof sdkbox) {\r\n                ////Utils.Log('sdkbox is undefined');\r\n                return;\r\n            }\r\n            if ('undefined' == typeof sdkbox.firebase) {\r\n                ////Utils.Log('sdkbox.firebase is undefined');\r\n                return;\r\n            }\r\n            ////Utils.Log(\"SDKBOX FIREBASE OK!\");\r\n            // sdkbox.firebase.Analytics.init();\r\n            sdkbox.firebase.Analytics.init();\r\n        }\r\n        onDestroy() {\r\n            SlotNetworkClient.getInstance().send(new cmd.ReqUnSubcribeHallSlot());\r\n        }\r\n        createListdata(j100: number, j1000: number, j10000: number) {\r\n            this.listData100 = new Array<Tophudata>();\r\n            this.listData1000 = new Array<Tophudata>();\r\n            this.listData10000 = new Array<Tophudata>();\r\n            this.listData100.push(\r\n                new Tophudata(\"chiemtinh\", \"Chiêm Tinh\", j100),\r\n                new Tophudata(\"spartans\", \"Thần Tài\", j100),\r\n                new Tophudata(\"audition\", \"Đua Xe\", j100),\r\n                new Tophudata(\"benley\", \"Bitcoin\", j100),\r\n                new Tophudata(\"bikini\", \"Bikini\", j100),\r\n                new Tophudata(\"tamhung\", \"Chim Điên\", j100),\r\n                new Tophudata(\"rollRoye\", \"Thần Bài\", j100),\r\n                new Tophudata(\"zeus\", \"Crypto\", j100),\r\n                new Tophudata(\"maybach\", \"Thể Thao\", j100),\r\n                // new Tophudata(\"shootfish\", \"Bắn Cá\", j100)\r\n            );\r\n            this.listData1000.push(\r\n                new Tophudata(\"chiemtinh\", \"Chiêm Tinh\", j1000),\r\n                new Tophudata(\"spartans\", \"Thần Tài\", j1000),\r\n                new Tophudata(\"audition\", \"Đua Xe\", j1000),\r\n                new Tophudata(\"benley\", \"Bitcoin\", j1000),\r\n                new Tophudata(\"bikini\", \"Bikini\", j1000),\r\n                new Tophudata(\"tamhung\", \"Chim Điên\", j1000),\r\n                new Tophudata(\"rollRoye\", \"Thần Bài\", j1000),\r\n                new Tophudata(\"zeus\", \"Crypto\", j1000),\r\n                new Tophudata(\"maybach\", \"Thể Thao\", j1000),\r\n                // new Tophudata(\"shootfish\", \"Bắn Cá\", j1000)\r\n            );\r\n            this.listData10000.push(\r\n                new Tophudata(\"chiemtinh\", \"Chiêm Tinh\", j10000),\r\n                new Tophudata(\"spartans\", \"Thần Tài\", j10000),\r\n                new Tophudata(\"audition\", \"Đua Xe\", j10000),\r\n                new Tophudata(\"benley\", \"Bitcoin\", j10000),\r\n                new Tophudata(\"bikini\", \"Bikini\", j10000),\r\n                new Tophudata(\"tamhung\", \"Chim Điên\", j10000),\r\n                new Tophudata(\"rollRoye\", \"Thần Bài\", j10000),\r\n                new Tophudata(\"zeus\", \"Crypto\", j10000),\r\n                new Tophudata(\"maybach\", \"Thể Thao\", j10000),\r\n                // new Tophudata(\"shootfish\", \"Bắn Cá\", j10000)\r\n            );\r\n        }\r\n        actLoginToken(data): void {\r\n            Configs.Login.AccessToken = data.at;\r\n            Configs.Login.AccessToken2 = data.at;\r\n            App.instance.showLoading(true);\r\n            Http.get(Configs.App.API, { c: 17, u: data.u, at: data.at }, (err, res) => {\r\n                App.instance.showLoading(false);\r\n\r\n                if (err != null) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_error'));\r\n                    return;\r\n                }\r\n                switch (parseInt(res[\"errorCode\"])) {\r\n                    case 0:\r\n\r\n                        Configs.Login.AccessToken = res[\"accessToken\"];\r\n                        if (cc.sys.isBrowser) {\r\n                            window.localStorage.setItem(\"at\", Configs.Login.AccessToken);\r\n                        }\r\n                        Configs.Login.SessionKey = res[\"sessionKey\"];\r\n                        Configs.Login.IsLogin = true;\r\n                        var userInfo = JSON.parse(base64.decode(Configs.Login.SessionKey));\r\n                        Configs.Login.Nickname = userInfo[\"nickname\"];\r\n                        Configs.Login.Avatar = userInfo[\"avatar\"];\r\n                        Configs.Login.Username = userInfo[\"username\"];\r\n                        let dataLogin: any = {};\r\n                        Configs.Login.Password = dataLogin.password = SPUtils.getUserPass();\r\n                        Configs.Login.Coin = userInfo[\"vinTotal\"];\r\n                        Configs.Login.IpAddress = userInfo[\"ipAddress\"];\r\n                        Configs.Login.CreateTime = userInfo[\"createTime\"];\r\n                        Configs.Login.Birthday = userInfo[\"birthday\"];\r\n                        Configs.Login.VipPoint = userInfo[\"vippoint\"];\r\n                        Configs.Login.VipPointSave = userInfo[\"vippointSave\"];\r\n                        // khoi tao 3 socket dong thoi gui goi tin len server\r\n                        MiniGameNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeJackpots());\r\n                        SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n                        if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\r\n                        }\r\n                        else {\r\n                            this.loginMiniGameSockJs();\r\n                        }\r\n                        //this.actShowBanner();\r\n                        this.checkDiemDanh();\r\n                        this.checkListBankRut();\r\n                        //    this.boxLixi.getInfo();\r\n                        //this.actGetEventMoon();\r\n\r\n                        this.panelNotLogin.active = false;\r\n                        this.panelLogined.active = true;\r\n                        if (Global.PopupRegister != null && Global.PopupRegister.node && Global.PopupRegister.node.active) {\r\n                            Global.PopupRegister.dismiss();\r\n                        }\r\n                        App.instance.buttonMiniGame.show();\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_INFO_UPDATED);\r\n                        break;\r\n                    case 1109:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_blocked'));\r\n                        break;\r\n                    case 1114:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_room_err6'));\r\n                        break;\r\n                    case 1014:\r\n                    case 1015:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_session_end'));\r\n                        break;\r\n                    case 1002:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_err_captcha'));\r\n                        break;\r\n                    case 1007:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_name_not_the_same'));\r\n                        break;\r\n                    case 1021: case 1008:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_incorrect_otp'));\r\n                        break;\r\n                    case 2001:\r\n                        App.instance.showLoading(false);\r\n                        // App.instance.alertDialog.showMsg(\"Tên nhân vật không được để trống.\");\r\n                        break;\r\n                    default:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_error'));\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n        checkDiemDanh() {\r\n            Http.get(Configs.App.API, { c: \"2031\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, ac: \"get\" }, (err, res) => {\r\n                if (res[\"success\"] != null && res['success'] == true) {\r\n                    this.actDiemDanh1();\r\n                } else {\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        loginMiniGameSockJs() {\r\n            let dataLogin: any = {};\r\n            dataLogin.username = SPUtils.getUserName();\r\n            dataLogin.password = SPUtils.getUserPass();\r\n            dataLogin.rememberMe = true;\r\n            ////Utils.Log(\"loginMiniGameSockJs:\", dataLogin);\r\n            Http.post(Configs.App.HOST_SOCKJS + \"api/login\", dataLogin, (err, res) => {\r\n                if (err) {\r\n                    ////Utils.Log(\"err Login Tx:\", err);\r\n                    return;\r\n                }\r\n                if (res != null && res.id_token != \"\") {\r\n                    ////Utils.Log(\"Login TXST Success:\" + JSON.stringify(res));\r\n                    cc.sys.localStorage.setItem(\"token_Sockjs\", res.id_token);\r\n                    Configs.Login.AccessTokenSockJs = res.id_token;\r\n                    TaiXiuSTNetworkClient.getInstance().isLogin = true;\r\n                    TaiXiuSTNetworkClient.getInstance().connect();\r\n                }\r\n            }, true);\r\n        }\r\n        actRule() {\r\n             \r\n            App.instance.actRule();\r\n            this.actMenu();\r\n\r\n        }\r\n        actComingSoon() {\r\n             \r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_reparing\"));\r\n        }\r\n\r\n        actLogin(uname = null, pass = null, callback = null): void {\r\n             \r\n            // this.edbUsername.string = \"devtest2\";\r\n            // this.edbPassword.string = \"123456\";\r\n\r\n            let username = \"\";\r\n            let password = \"\";\r\n            let remember = cc.sys.localStorage.getItem(\"IsRemember\");\r\n            if (uname != null && pass != null) {\r\n                username = uname;\r\n                password = pass\r\n            } else {\r\n\r\n            }\r\n            ////Utils.Log(\"actLogin:\" + username + \":\" + password + \":\" + remember);\r\n\r\n            if (username.length == 0) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_username_not_blank'));\r\n                return;\r\n            }\r\n\r\n            if (password.length == 0) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_password_not_blank'));\r\n                return;\r\n            }\r\n            if (remember != null && remember == 1) {\r\n                ////Utils.Log(\"save o day ne 1\");\r\n                cc.sys.localStorage.setItem(\"user_name\", username);\r\n                cc.sys.localStorage.setItem(\"pass_word\", password);\r\n\r\n            }\r\n            else {\r\n                ////Utils.Log(\"save o day ne\");\r\n                cc.sys.localStorage.setItem(\"user_name\", \"null\");\r\n                cc.sys.localStorage.setItem(\"pass_word\", \"null\");\r\n            }\r\n            App.instance.showLoading(true);\r\n            Http.get(Configs.App.API, { c: 3, un: username, pw: md5(password) }, (err, res) => {\r\n                switch (parseInt(res[\"errorCode\"])) {\r\n                    case 0:\r\n\t\t\t\t\t\tHttp.postz('https://apipayment.cr79.vin/login', { c: 17, username: username,password: password}, (err, resv2) => {\r\n\t\t\t\t\t\t\tConfigs.Login.Token = resv2[\"token\"];\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\r\n                        App.instance.showLoading(false);\r\n                        SPUtils.setUserName(username);\r\n                        SPUtils.setUserPass(password);\r\n                        Configs.Login.Username = username;\r\n                        Configs.Login.Password = password;\r\n                        LogEvent.getInstance().sendEventClickShop(\"vin\", 100000);\r\n                        LogEvent.getInstance().sendEventSdt(\"0123456789\");\r\n                        LogEvent.getInstance().sendEventPurchase(\"vin\", 100000);\r\n                        LogEvent.getInstance().sendEventSigupSuccess(\"normal\");\r\n                        LogEvent.getInstance().sendEventLogin(\"normal\")\r\n                        Configs.Login.AccessToken = res[\"accessToken\"];\r\n                        Configs.Login.SessionKey = res[\"sessionKey\"];\r\n                        var userInfo = JSON.parse(base64.decode(Configs.Login.SessionKey));\r\n                        var dataLogin = {};\r\n                        dataLogin[\"u\"] = userInfo[\"nickname\"];\r\n                        dataLogin[\"at\"] = res[\"accessToken\"];\r\n                        Configs.Login.Nickname = userInfo[\"nickname\"];\r\n                        Configs.Login.Avatar = userInfo[\"avatar\"];\r\n                        Configs.Login.Coin = userInfo[\"vinTotal\"];\r\n                        Configs.Login.IpAddress = userInfo[\"ipAddress\"];\r\n                        Configs.Login.CreateTime = userInfo[\"createTime\"];\r\n                        Configs.Login.Birthday = userInfo[\"birthday\"];\r\n                        Configs.Login.Birthday = userInfo[\"birthday\"];\r\n                        Configs.Login.VipPoint = userInfo[\"vippoint\"];\r\n                        Configs.Login.Address = userInfo[\"address\"];\r\n                        Configs.Login.VipPointSave = userInfo[\"vippointSave\"];\r\n                        //\tShootFishNetworkClient.getInstance().checkConnect(() => {\r\n                        //        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        //   });\r\n\r\n                        this.actLoginToken(dataLogin);\r\n\r\n                        if (callback != null) {\r\n                            callback();\r\n                        }\r\n                        break;\r\n                    case 1002:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_err_captcha'));\r\n                        break;\r\n                    case 1007:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_password_error'));\r\n                        break;\r\n                    case 1005:\r\n                    case 1114:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_not_exsist'));\r\n                        break;\r\n                    case 1109:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_blocked'));\r\n                        break;\r\n\r\n                    case 1114:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_not_get_info'));\r\n                        break;\r\n                    case 1021: case 1008:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_incorrect_otp'));\r\n                        break;\r\n                    case 2001:\r\n                        App.instance.showLoading(false);\r\n                        if (callback != null) {\r\n                            callback();\r\n                        }\r\n                        if (!App.instance.popupUpdateNickname) {\r\n                            let cb = (prefab) => {\r\n                                let popupDaily = cc.instantiate(prefab).getComponent(\"PopupUpdateNickname\");\r\n                                App.instance.canvas.addChild(popupDaily.node)\r\n                                App.instance.popupUpdateNickname = popupDaily;\r\n                                App.instance.popupUpdateNickname.show2(username, password);\r\n                            }\r\n                            BundleControl.loadPrefabPopup(\"PrefabPopup/PopupUpdateNickname\", cb);\r\n                        } else {\r\n                            App.instance.popupUpdateNickname.show2(username, password);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_error'));\r\n                        break;\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        isUseSDK() {\r\n            if (cc.sys.isNative) {\r\n                if (cc.sys.os == cc.sys.OS_ANDROID || cc.sys.os == cc.sys.OS_IOS) {\r\n                    return true;\r\n                }\r\n            }\r\n            // if (cc.sys.os == cc.sys.OS_ANDROID) return true;\r\n            // if (cc.sys.os == cc.sys.OS_IOS) return true;\r\n            return false;\r\n        };\r\n\r\n        fbRespone(response) {\r\n            if (response.status != \"200\") {\r\n                if (response.response != \"wait\") {\r\n                    ////Utils.Log(JSON.stringify(response));\r\n                    App.instance.showLoading(false);\r\n                    App.instance.showErrLoading(\"Lỗi đăng nhập status: \" + response.status);\r\n\r\n                }\r\n\r\n            } else {\r\n                ////Utils.Log(\"fbRespone:\" + JSON.stringify(response));\r\n                Configs.Login.AccessTokenFB = response.response.authResponse.accessToken;\r\n                Configs.Login.FacebookID = response.response.authResponse.userID;\r\n                _this.loginFB();\r\n            }\r\n        }\r\n\r\n        actLoginFB() {\r\n            ////Utils.Log(\"actLoginFB\");\r\n            App.instance.showLoading(true, -1);\r\n            if (_this.isUseSDK()) {\r\n                if (sdkbox.PluginFacebook.isLoggedIn()) {\r\n                    Configs.Login.AccessTokenFB = sdkbox.PluginFacebook.getAccessToken();\r\n                    _this.loginFB();\r\n                } else {\r\n                    ////Utils.Log(\"FB to Login\");\r\n                    sdkbox.PluginFacebook.login(['public_profile', 'email']);\r\n                }\r\n            }\r\n            else {\r\n                let Appid = \"758971848112749\";\r\n                let scope = 'email,public_profile';\r\n                if (_this.sdk != null) {\r\n                    ////Utils.Log(\"Login fb web\");\r\n                    try {\r\n                        FB.getLoginStatus((data) => {\r\n                            if (data.status === 'connected') {\r\n\r\n                                Configs.Login.AccessTokenFB = data.authResponse.accessToken;\r\n                                Configs.Login.FacebookID = data.authResponse.userID;\r\n                                ////Utils.Log(\"Configs.Login.AccessTokenFB auth:\" + JSON.stringify(data));\r\n                                _this.loginFB();\r\n\r\n                            } else if (data.status === 'not_authorized') {\r\n                                App.instance.showLoading(false);\r\n                                // App.instance.showErrLoading(\"Lỗi đăng nhập status: \" + data.status);\r\n                            } else {\r\n                                FB.login(_this.fbRespone, { scope: scope });\r\n                            }\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        App.instance.showLoading(false);\r\n                        // App.instance.showErrLoading(\"Lỗi đăng nhập status: \" + e.message);\r\n                    }\r\n                }\r\n                else {\r\n                    _this.sdk = new facebookSdk(Appid, scope, _this.fbRespone);\r\n                }\r\n\r\n\r\n            }\r\n\r\n        }\r\n        actShareFbLink(link) {\r\n            // sdkbox.FBShareInfo;\r\n            // sdkbox.PluginFacebook.share\r\n            FB.ui({\r\n                display: 'popup',\r\n                method: 'share',\r\n                href: link,\r\n                caption: 'Làm giàu cùng Bentley'\r\n            }, function (response) {\r\n                //   console.log(\"Respone FB:\" + JSON.stringify(response));\r\n\r\n            });\r\n        }\r\n        loginFB() {\r\n            Configs.Login.AccessToken = Configs.Login.AccessTokenFB;\r\n            let accessToken = Configs.Login.AccessTokenFB;\r\n            App.instance.showLoading(true);\r\n            ////Utils.Log(\"accessTokenFB:\" + accessToken);\r\n            Http.get(Configs.App.API, { c: 3, s: 'fb', at: accessToken }, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                ////Utils.Log(\"loginFB failed:\" + JSON.stringify(err) + \" => \" + JSON.stringify(res));\r\n                if (err != null) {\r\n\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_error'));\r\n                    return;\r\n                }\r\n                ////Utils.Log(\"login Fb result:\" + JSON.stringify(res));\r\n                switch (parseInt(res[\"errorCode\"])) {\r\n                    case 0:\r\n                        LogEvent.getInstance().sendEventLogin(\"facebook\");\r\n                        Configs.Login.AccessToken = res[\"accessToken\"];\r\n                        Configs.Login.SessionKey = res[\"sessionKey\"];\r\n\r\n                        Configs.Login.IsLogin = true;\r\n                        var userInfo = JSON.parse(base64.decode(Configs.Login.SessionKey));\r\n                        Configs.Login.Nickname = userInfo[\"nickname\"];\r\n                        Configs.Login.Avatar = userInfo[\"avatar\"];\r\n                        Configs.Login.Coin = userInfo[\"vinTotal\"];\r\n                        Configs.Login.IpAddress = userInfo[\"ipAddress\"];\r\n                        Configs.Login.CreateTime = userInfo[\"createTime\"];\r\n                        Configs.Login.Birthday = userInfo[\"birthday\"];\r\n                        Configs.Login.Birthday = userInfo[\"birthday\"];\r\n                        Configs.Login.VipPoint = userInfo[\"vippoint\"];\r\n                        Configs.Login.VipPointSave = userInfo[\"vippointSave\"];\r\n                        Configs.Login.Username = userInfo[\"username\"];\r\n                        ////Utils.Log(\"FacebookID=\" + Configs.Login.FacebookID);\r\n\r\n                        // khoi tao 3 socket dong thoi gui goi tin len server\r\n                        MiniGameNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeJackpots());\r\n                        SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n\r\n\r\n                        this.panelNotLogin.active = false;\r\n                        this.panelLogined.active = true;\r\n\r\n                        SPUtils.setUserName(Configs.Login.Username);\r\n                        SPUtils.setUserPass(Configs.Login.Password);\r\n\r\n                        App.instance.buttonMiniGame.show();\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_INFO_UPDATED);\r\n\r\n\r\n                        break;\r\n                    case 1109:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_blocked'));\r\n                        break;\r\n                    case 1114:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_not_exsist'));\r\n                        break;\r\n                    case 1114:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_login_account_not_get_info\"));\r\n                        break;\r\n                    case 1002:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_incorrect_otp'));\r\n                        break;\r\n                    case 1007:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang(\"\"));\r\n                        break;\r\n                    case 1021:\r\n                    case 1008:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_login_account_incorrect_otp\"));\r\n                        break;\r\n                    case 2001:\r\n                        App.instance.showLoading(false);\r\n                        if (!App.instance.popupUpdateNickname) {\r\n                            let cb = (prefab) => {\r\n                                let popupDaily = cc.instantiate(prefab).getComponent(\"PopupUpdateNickname\");\r\n                                App.instance.canvas.addChild(popupDaily.node)\r\n                                App.instance.popupUpdateNickname = popupDaily;\r\n                                App.instance.popupUpdateNickname.showFb(accessToken);\r\n                            }\r\n                            BundleControl.loadPrefabPopup(\"PrefabPopup/PopupUpdateNickname\", cb);\r\n                        } else {\r\n                            App.instance.popupUpdateNickname.showFb(accessToken);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_error'));\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n\r\n        actMenu() {\r\n             \r\n            if (this.panelMenu.node.parent.active == false) {\r\n                this.panelMenu.node.parent.active = true;\r\n            }\r\n            else {\r\n                // this.panelMenu.node.parent.active = false;\r\n                this.panelMenu.dismiss();\r\n            }\r\n            this.panelMenu.show();\r\n\r\n        }\r\n        atcPopupUpdateNickName(username, password) {\r\n             \r\n            ////Utils.Log(\"atcPopupUpdateNickName\");\r\n            let cb = (prefab) => {\r\n                let popupDaily = cc.instantiate(prefab).getComponent(\"PopupUpdateNickname\");\r\n                App.instance.canvas.addChild(popupDaily.node)\r\n                this.popupUpdateNickname = popupDaily;\r\n                this.popupUpdateNickname.show2(username, password);\r\n            }\r\n            BundleControl.loadPrefabPopup(\"PrefabPopup/PopupUpdateNickname\", cb);\r\n        }\r\n        actLoginRegister(even, data) {\r\n             \r\n            if (!this.popupRegister) {\r\n                let cb = (prefab) => {\r\n                    let popupRegister = cc.instantiate(prefab).getComponent(\"PopupRegister\");\r\n                    App.instance.canvas.addChild(popupRegister.node)\r\n                    this.popupRegister = popupRegister;\r\n                    this.popupRegister.show(null, data);\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupRegister\", cb);\r\n            } else {\r\n                this.popupRegister.show(null, data);\r\n            }\r\n        }\r\n        actLoginPopup(even, data) {\r\n             \r\n            if (!this.poupLogin) {\r\n                let cb = (prefab) => {\r\n                    let popupLogin = cc.instantiate(prefab).getComponent(\"PopupLogin\");\r\n                    App.instance.canvas.addChild(popupLogin.node)\r\n                    this.popupLogin = popupLogin;\r\n                    this.popupLogin.show(null, data);\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupLogin\", cb);\r\n            } else {\r\n                this.popupLogin.show(null, data);\r\n            }\r\n        }\r\n        actDaiLy() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            if (!this.popupDaily) {\r\n                let cb = (prefab) => {\r\n                    let popupDaily = cc.instantiate(prefab).getComponent(\"Lobby.PopupDaiLy\");\r\n                    App.instance.canvas.addChild(popupDaily.node)\r\n                    this.popupDaily = popupDaily;\r\n                    this.popupDaily.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupDaiLy\", cb);\r\n            } else {\r\n                this.popupDaily.show();\r\n            }\r\n\r\n        }\r\n        actTopHu() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            if (!this.popupTopHu) {\r\n                let cb = (prefab) => {\r\n                    let popupTopHu = cc.instantiate(prefab).getComponent(\"Lobby.PopupTopHu\");\r\n                    App.instance.canvas.addChild(popupTopHu.node)\r\n                    this.popupTopHu = popupTopHu;\r\n                    this.popupTopHu.show();\r\n                    this.popupTopHu.setInfo();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupTopHu\", cb);\r\n            } else {\r\n                this.popupTopHu.show();\r\n                this.popupTopHu.setInfo();\r\n            }\r\n        }\r\n        actTransaction() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            if (!this.popupTransaction) {\r\n                let cb = (prefab) => {\r\n                    let popupDaily = cc.instantiate(prefab).getComponent(\"Lobby.PopupTransaction\");\r\n                    App.instance.canvas.addChild(popupDaily.node)\r\n                    this.popupTransaction = popupDaily;\r\n                    this.popupTransaction.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupTransaction\", cb);\r\n            } else {\r\n                this.popupTransaction.show();\r\n            }\r\n        }\r\n        actForgetPassword() {\r\n             \r\n            if (!this.popupForgetPassword) {\r\n                let cb = (prefab) => {\r\n                    let popupForgetPassword = cc.instantiate(prefab).getComponent(\"Lobby.PopupForgetPassword\");\r\n                    App.instance.canvas.addChild(popupForgetPassword.node)\r\n                    this.popupForgetPassword = popupForgetPassword;\r\n                    this.popupForgetPassword.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupForgetPassword\", cb);\r\n            } else {\r\n                this.popupForgetPassword.show();\r\n            }\r\n        }\r\n        actTaiApp() {\r\n            if (!this.popupTaiApp) {\r\n                let cb = (prefab) => {\r\n                    let popupTaiApp = cc.instantiate(prefab).getComponent(\"Lobby.PopupTaiApp\");\r\n                    App.instance.canvas.addChild(popupTaiApp.node)\r\n                    this.popupTaiApp = popupTaiApp;\r\n                    this.popupTaiApp.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupTaiApp\", cb);\r\n            } else {\r\n                this.popupTaiApp.show();\r\n            }\r\n        }\r\n        actnaprut() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            if (!this.Popupnaprut) {\r\n                let cb = (prefab) => {\r\n                    let popupnaprut = cc.instantiate(prefab).getComponent(\"Lobby.Popupnaprut\");\r\n                    App.instance.canvas.addChild(popupnaprut.node)\r\n                    this.Popupnaprut = popupnaprut;\r\n                    this.Popupnaprut.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/Popupnap-rut-doi\", cb);\r\n            } else {\r\n                this.Popupnaprut.show();\r\n            }\r\n        }\r\n        actGiftCode() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            if (!this.popupGiftCode) {\r\n                let cb = (prefab) => {\r\n                    let popupGiftCode = cc.instantiate(prefab).getComponent(\"Lobby.PopupGiftCode\");\r\n                    popupGiftCode.node.parent = App.instance.node;\r\n                    // App.instance.canvas.addChild(popupGiftCode.node)\r\n                    ////Utils.Log(\"parent giftcode:\" + popupGiftCode.node.parent.name + \":\" + App.instance.node.name);\r\n                    this.popupGiftCode = popupGiftCode;\r\n                    this.popupGiftCode.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupGiftCode\", cb);\r\n            } else {\r\n                this.popupGiftCode.show();\r\n            }\r\n        }\r\n        actPromotion() {\r\n             \r\n            //cmd=2015&nn=brightc&at=dfasfrfsefs9f9sfsdfdsds\r\n            Http.get(Configs.App.API, { \"c\": 2015, \"nn\": Configs.Login.Nickname, \"at\": Configs.Login.AccessToken }, (err, res) => {\r\n                ////Utils.Log(\"Xác nhan khuyen mai data:\", res);\r\n                if (err) {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_error\"));\r\n                    return;\r\n                } else {\r\n                    let msg = res.message;\r\n                    App.instance.ShowAlertDialog(msg);\r\n                    if (res.success) {\r\n                        Configs.Login.Coin = parseInt(res.data);\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        actRefund() {\r\n             \r\n            if (!this.popupRefund) {\r\n                let cb = (prefab) => {\r\n                    let popupRefund = cc.instantiate(prefab).getComponent(\"Lobby.PopupRefund\");\r\n                    App.instance.canvas.addChild(popupRefund.node);\r\n                    this.popupRefund = popupRefund;\r\n                    this.popupRefund.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupRefund\", cb);\r\n            } else {\r\n                this.popupRefund.show();\r\n            }\r\n\r\n        }\r\n        actSecurity() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            if (!this.popupSecurity) {\r\n                let cb = (prefab) => {\r\n                    let popupSecurity = cc.instantiate(prefab).getComponent(\"Lobby.PopupSecurity\");\r\n                    App.instance.canvas.addChild(popupSecurity.node);\r\n                    this.popupSecurity = popupSecurity;\r\n                    this.popupSecurity.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupSecurity\", cb);\r\n            } else {\r\n                this.popupSecurity.show();\r\n            }\r\n\r\n        }\r\n\r\n        actDiemDanh1() {\r\n            if (!this.popupDiemDanh1) {\r\n                let cb = (prefab) => {\r\n                    let popupDiemDanh = cc.instantiate(prefab).getComponent(\"Lobby.PopupDiemDanh\");\r\n                    App.instance.canvas.addChild(popupDiemDanh.node);\r\n                    this.popupDiemDanh1 = popupDiemDanh;\r\n                    this.popupDiemDanh1.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupDiemDanh\", cb);\r\n            } else {\r\n                this.popupDiemDanh1.show();\r\n            }\r\n        }\r\n        actShowBanner() {\r\n            let cb = (prefab) => {\r\n                let popupBanner = cc.instantiate(prefab).getComponent(\"Dialog\");\r\n                App.instance.canvas.addChild(popupBanner.node);\r\n                popupBanner.show();\r\n                popupBanner.node.zIndex = cc.macro.MAX_ZINDEX;\r\n            }\r\n            BundleControl.loadPrefabPopup(\"PrefabPopup/PopupBanner\", cb);\r\n        }\r\n        actVQMM() {\r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n        }\r\n\r\n        actInstall() {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_function_in_development'));\r\n        }\r\n\r\n        actEvent() {\r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            if (!this.popupMail) {\r\n                ////Utils.Log(\"Chua có prefab popup Security\");\r\n                let cb = (prefab) => {\r\n                    let popupMail = cc.instantiate(prefab).getComponent(\"UIPopupMail\");\r\n                    App.instance.canvas.addChild(popupMail.node);\r\n                    this.popupMail = popupMail;\r\n                    this.popupMail.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/UIPopupMail\", cb);\r\n            } else {\r\n                this.popupMail.show();\r\n            }\r\n        }\r\n\r\n\r\n\r\n        actDownload() {\r\n             \r\n            cc.sys.openURL(Configs.App.LINK_DOWNLOAD);\r\n        }\r\n\r\n        actFanpage() {\r\n             \r\n            cc.sys.openURL(Configs.App.getLinkFanpage());\r\n        }\r\n        actGroup() {\r\n             \r\n            cc.sys.openURL(Configs.App.LINK_GROUP);\r\n        }\r\n\r\n        actTelegram() {\r\n             \r\n            App.instance.openTelegram(Configs.App.getLinkTelegramGroup());\r\n        }\r\n\r\n        actAppOTP() {\r\n             \r\n            App.instance.openTelegram();\r\n        }\r\n\r\n        private isShowCSKH = false;\r\n        actCSKH() {\r\n             \r\n            var self = this;\r\n            if (self.isShowCSKH == false) {\r\n                self.panelCSKH.scaleX = 0;\r\n                self.panelCSKH.opacity = 0;\r\n                self.panelCSKH.parent.active = true;\r\n                self.isShowCSKH = true;\r\n                cc.Tween.stopAllByTarget(self.panelCSKH);\r\n                cc.tween(self.panelCSKH)\r\n                    .to(0.3, { scaleX: 1, opacity: 255 }, { easing: \"backOut\" })\r\n                    .start();\r\n\r\n            }\r\n            else {\r\n                self.isShowCSKH = false;\r\n                cc.Tween.stopAllByTarget(self.panelCSKH);\r\n                cc.tween(self.panelCSKH)\r\n                    .to(0.3, { scaleX: 0, opacity: 0 }, { easing: \"backIn\" })\r\n                    .call(() => {\r\n                        self.panelCSKH.parent.active = false;\r\n                    })\r\n                    .start();\r\n            }\r\n        }\r\n\r\n\r\n        actKhuyenMai() {\r\n             \r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_function_in_development\"));\r\n        }\r\n\r\n        actDiemDanh() {\r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            if (!this.popupDiemDanh) {\r\n                let cb = (prefab) => {\r\n                    let popupDiemDanh = cc.instantiate(prefab).getComponent(\"UIPopupDiemDanh\");\r\n                    App.instance.canvas.addChild(popupDiemDanh.node);\r\n                    this.popupDiemDanh = popupDiemDanh;\r\n                    this.popupDiemDanh.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/UIPopupDiemDanh\", cb);\r\n            } else {\r\n                this.popupDiemDanh.show();\r\n            }\r\n        }\r\n        actOpenFB() {\r\n            cc.sys.openURL(Configs.App.getLinkFanpage());\r\n            // App.instance.openWebView(\"https://www.facebook.com/gaming/lote88com\");\r\n        }\r\n\r\n        actOpenMessager() {\r\n            cc.sys.openURL(\"/mess/\");\r\n            // App.instance.openWebView(\"https://www.facebook.com/lote88com/inbox/\");\r\n        }\r\n        actOpenZalo() {\r\n            cc.sys.openURL(\"/zalo/\");\r\n        }\r\n        actOpenLive() {\r\n            App.instance.openWebView(\"/chat/\");\r\n        }\r\n\r\n        actOpenHotLine() {\r\n            if (cc.sys.isNative) {\r\n                cc.sys.openURL(\"tel: 0933265966\");\r\n            }\r\n            else {\r\n                App.instance.alertDialog.showMsg(\"Hotline : 0933.265.966\");\r\n            }\r\n        }\r\n\r\n\r\n        actSupportOnline() {\r\n            // cc.sys.openURL(Configs.App.LINK_SUPPORT);\r\n            if (!cc.sys.isNative) {\r\n                var url = \"/chat/\";\r\n                cc.sys.openURL(url);\r\n                //Tawk_API.toggle();\r\n            }\r\n            else {\r\n                App.instance.openTelegram(Configs.App.getLinkTelegramGroup());\r\n            }\r\n            //App.instance.openTelegram();\r\n        }\r\n\r\n\r\n        actBack() {\r\n             \r\n            App.instance.confirmDialog.show3(App.instance.getTextLang(\"txt_ask_logout\"), \"ĐĂNG XUẤT\", (isConfirm) => {\r\n                if (isConfirm) {\r\n                    App.instance.checkMailUnread = false;\r\n                    this.panelMenu.node.parent.active = false;\r\n                    this.panelMenu.hide();\r\n\r\n                    if (cc.sys.isBrowser) {\r\n                        window.localStorage.removeItem('u');\r\n                        window.localStorage.removeItem('at');\r\n                        window.localStorage.removeItem('at_fb');\r\n                        window.localStorage.removeItem('un');\r\n                        window.localStorage.removeItem('pw');\r\n\r\n                    }\r\n                    SPUtils.setUserName(\"\");\r\n                    SPUtils.setUserPass(\"\");\r\n                    cc.sys.localStorage.setItem(\"IsAutoLogin\", 0);\r\n                    BroadcastReceiver.send(BroadcastReceiver.USER_LOGOUT);\r\n                    App.instance.updateConfigGame(App.DOMAIN);\r\n                    App.instance.RECONNECT_GAME = false;\r\n                }\r\n            });\r\n        }\r\n        public actSwitchCoin() {\r\n            if (this.lblCoin.node.parent.active) {\r\n                this.lblCoin.node.parent.active = false;\r\n            } else {\r\n                this.lblCoin.node.parent.active = true;\r\n            }\r\n        }\r\n\r\n        actGameTaiXiu() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            MiniGameNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openMiniGameTaiXiuDouble(\"TaiXiuDouble\", \"TaiXiuDouble\");\r\n            });\r\n\r\n        }\r\n        actGameTaiXiuSieuToc() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_coming_soon'));\r\n                return;\r\n            }\r\n            if (Configs.Login.AccessTokenSockJs == \"\" || cc.sys.localStorage.getItem(\"token_Sockjs\") == null) {\r\n                TaiXiuSTNetworkClient.getInstance().isOpenGame = true;\r\n                this.loginMiniGameSockJs();\r\n                return;\r\n            }\r\n            TaiXiuSTNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.openMiniGameTaiXiuSieuToc(\"TaiXiuSieuToc\", \"TaiXiuSieuToc\");\r\n            })\r\n\r\n        }\r\n        actGetEventMoon() {\r\n             \r\n            Http.get(Configs.App.API, { \"c\": 20, \"nn\": Configs.Login.Nickname, \"at\": Configs.Login.AccessToken }, (err, res) => {\r\n                //////Utils.Log(\"Check event Trung thu:\", res);\r\n                if (err) {\r\n                    return;\r\n                } else {\r\n                    if (res.success && res.lstMoonEvents.length > 0) {\r\n                        this.actShowPopupEventMoon(res);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        actShowPopupEventMoon(data) {\r\n             \r\n            if (!this.popupEventTT) {\r\n                let cb = (prefab) => {\r\n                    this.popupEventTT = cc.instantiate(prefab).getComponent(\"PopupEventTT\");\r\n                    this.popupEventTT.node.parent = App.instance.node;\r\n                    this.popupEventTT.showpPopup(data);\r\n                    ////Utils.Log(\"Parent Event:\" + this.popupEventTT.node.parent.name);\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupEventTT\", cb);\r\n            } else {\r\n                this.popupEventTT.showpPopup(data);\r\n            }\r\n        }\r\n        actGameBauCua() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            MiniGameNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openMiniGameBauCua(\"BauCua\", \"BauCua\");\r\n            });\r\n\r\n        }\r\n\r\n        actGameCaoThap() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            MiniGameNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openMiniGameCaoThap(\"CaoThap\", \"CaoThap\");\r\n            });\r\n        }\r\n\r\n        actGameSlot3x3() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            MiniGameNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openMiniGameSlot3x3(\"Slot3x3\", \"Slot3x3\");\r\n            });\r\n\r\n        }\r\n\r\n        actGameSlot3x3Gem() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            MiniGameNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openMiniGameSlot3x3Gem(\"Slot3x3Gem\", \"Slot3x3Gem\");\r\n            });\r\n\r\n        }\r\n\r\n        actGameMiniPoker() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            MiniGameNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openMiniGameMiniPoker(\"MiniPoker\", \"MiniPoker\");\r\n            });\r\n\r\n        }\r\n\r\n        actGameTaLa() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_coming_soon'));\r\n        }\r\n\r\n        actGoToSlot1() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot1\", \"Slot1\");\r\n            });\r\n        }\r\n\r\n        actGoToSlot2() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot2\", \"Slot2\");\r\n            });\r\n        }\r\n\r\n        actGoToSlot3() {\r\n             \r\n            ////Utils.Log(\"Go to slot3\");\r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot3\", \"Slot3\");\r\n            });\r\n        }\r\n\r\n        actGoToSlot4() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot4\", \"Slot4\");\r\n            });\r\n        }\r\n\r\n        actGoToSlot5() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot5\", \"Slot5\");\r\n            });\r\n        }\r\n\r\n\r\n        actGoToSlot6() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot6\", \"Slot6\");\r\n            });\r\n        }\r\n\r\n        actGoToSlot7() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot7\", \"Slot7\");\r\n            });\r\n        }\r\n\r\n        actGoToSlot8() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot8\", \"Slot8\");\r\n            });\r\n        }\r\n\r\n        actGoToSlot10() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            // cc.director.loadScene(\"TestScene\");\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot10\", \"Slot10\");\r\n            });\r\n        }\r\n        actGoToSlot11() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot11Bikini\", \"Slot11Bikini\");\r\n            });\r\n        }\r\n        actDev() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_coming_soon'));\r\n            return;\r\n        }\r\n        checkListBankRut() {\r\n             \r\n            if (Configs.Login.ListBankRut == null) {\r\n                App.instance.showLoading(true);\r\n                var data = {};\r\n                data[\"c\"] = 2008;\r\n                data[\"nn\"] = Configs.Login.Nickname;\r\n                data[\"pn\"] = 1;\r\n                data[\"l\"] = 10;\r\n                Http.get(Configs.App.API, data, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                    var list = JSON.parse(res.data).data;\r\n                    Configs.Login.ListBankRut = list;\r\n                });\r\n            }\r\n        }\r\n\r\n        actGoToShootFish() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.openGame(\"ShootFish\", \"ShootFish\");\r\n        }\r\n        actGoToOanTuTi() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.openGame(\"OanTuTi\", \"OanTuTi\");\r\n        }\r\n\r\n        actGotoLoto() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.removeAllWebView();\r\n            App.instance.openGame(\"Loto\", \"Loto\");\r\n            // App.instance.loadSceneInSubpackage(\"Loto\", \"Loto\");\r\n        }\r\n\r\n        actGoToXocDia() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.isShowNotifyJackpot = false;\r\n            App.instance.removeAllWebView();\r\n            // App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_coming_soon'));\r\n            // return;\r\n            App.instance.openGame(\"XocDia\", \"XocDia\");\r\n        }\r\n\r\n        actAddCoin() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            if (!this.popupShop) {\r\n                let cb = (prefab) => {\r\n                    let popupShop = cc.instantiate(prefab).getComponent(\"LobbyShop\");\r\n                    App.instance.canvas.addChild(popupShop.node)\r\n                    this.popupShop = popupShop;\r\n                    this.popupShop.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupShop\", cb);\r\n            } else {\r\n                this.popupShop.show();\r\n            }\r\n\r\n        }\r\n        actCashout() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n\r\n            if (Configs.Login.ListBankRut.length == 0) {\r\n                if (!this.popupProfile) {\r\n                    let cb = (prefab) => {\r\n                        let popupProfile = cc.instantiate(prefab).getComponent(\"Lobby.PopupProfile\");\r\n                        App.instance.canvas.addChild(popupProfile.node);\r\n                        this.popupProfile = popupProfile;\r\n                        this.popupProfile.showTabBank();\r\n                    }\r\n                    BundleControl.loadPrefabPopup(\"PrefabPopup/PopupProfile\", cb);\r\n                } else {\r\n                    this.popupProfile.showTabBank();\r\n                }\r\n\r\n            }\r\n            else {\r\n                if (!this.popupCashout) {\r\n                    let cb = (prefab) => {\r\n                        let popupCashout = cc.instantiate(prefab).getComponent(\"Lobby.PopupCashout\");\r\n                        App.instance.canvas.addChild(popupCashout.node)\r\n                        this.popupCashout = popupCashout;\r\n                        this.popupCashout.show();\r\n                    }\r\n                    BundleControl.loadPrefabPopup(\"PrefabPopup/PopupCashout\", cb);\r\n                } else {\r\n                    this.popupCashout.show();\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        onBtnShowProfile() {\r\n             \r\n            this.actProfile();\r\n        }\r\n        actProfile(tabIndex = 0) {\r\n             \r\n            if (!this.popupProfile) {\r\n                let cb = (prefab) => {\r\n                    let popupProfile = cc.instantiate(prefab).getComponent(\"Lobby.PopupProfile\");\r\n                    App.instance.canvas.addChild(popupProfile.node);\r\n                    this.popupProfile = popupProfile;\r\n\r\n                    this.popupProfile.show(tabIndex);\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupProfile\", cb);\r\n            } else {\r\n                this.popupProfile.show(tabIndex);\r\n            }\r\n        }\r\n        accExchange() {\r\n             \r\n            ////Utils.Log(\"act Add accExchange\");\r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            this.actAddCoin();\r\n        }\r\n\r\n        actGoToTLMN() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            // App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_coming_soon'));\r\n            // return;\r\n            App.instance.removeAllWebView();\r\n\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            TienLenNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                TienLenConstant.IS_SOLO = false;\r\n                App.instance.isShowNotifyJackpot = false;\r\n                App.instance.openGame(\"TienLen\", \"TienLen\");\r\n                // App.instance.loadSceneInSubpackage(\"TienLen\", \"TienLen\");\r\n            });\r\n        }\r\n\r\n        actGameTLMNSolo() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            // App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_coming_soon'));\r\n            // return;\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            TienLenNetworkClient.getInstance().checkConnect(() => {\r\n                TienLenConstant.IS_SOLO = true;\r\n                App.instance.showLoading(false);\r\n                App.instance.isShowNotifyJackpot = false;\r\n                App.instance.openGame(\"TienLen\", \"TienLen\");\r\n                // App.instance.loadSceneInSubpackage(\"TienLen\", \"TienLen\");\r\n            });\r\n        }\r\n\r\n        actGoToSam() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            // App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_coming_soon'));\r\n            // return;\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            SamNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.isShowNotifyJackpot = false;\r\n                App.instance.openGame(\"Sam\", \"Sam\");\r\n            });\r\n        }\r\n        actGoToMauBinh() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            // App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_coming_soon'));\r\n            // return;\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(App.instance.getTextLang('txt_loading'));\r\n            App.instance.openGame(\"MauBinh\", \"MauBinh\");\r\n        }\r\n\r\n        actGoToBaCay() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.removeAllWebView();\r\n            App.instance.isShowNotifyJackpot = false;\r\n            App.instance.openGame(\"BaCay\", \"BaCay\");\r\n        }\r\n        actGoToLieng() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            App.instance.removeAllWebView();\r\n            App.instance.isShowNotifyJackpot = false;\r\n            App.instance.openGame(\"Lieng\", \"Lieng\");\r\n        }\r\n\r\n        actGoToPoker() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            //   App.instance.removeAllWebView();\r\n            //   App.instance.isShowNotifyJackpot = false;\r\n            //   App.instance.isShowNotifyJackpot = false;\r\n            App.instance.openGame(\"Poker\", \"Poker\");\r\n        }\r\n\r\n        actGoToBaiCao() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            // App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_coming_soon'));\r\n            // return;\r\n            App.instance.openGame(\"BaiCao\", \"BaiCao\");\r\n        }\r\n        actKiemTien() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            if (!this.popupKiemTien) {\r\n                let cb = (prefab) => {\r\n                    let popupSecurity = cc.instantiate(prefab).getComponent(\"Lobby.PopupKiemTien\");\r\n                    App.instance.canvas.addChild(popupSecurity.node);\r\n                    this.popupKiemTien = popupSecurity;\r\n                    this.popupKiemTien.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/PopupKiemTien\", cb);\r\n            } else {\r\n                this.popupKiemTien.show();\r\n            }\r\n\r\n        }\r\n\r\n\r\n        actGoToGame3Rd() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n        }\r\n\r\n        actLoginCMD() {\r\n             \r\n            App.instance.actLoginCMD();\r\n        }\r\n\r\n        actLoginIBC() {\r\n             \r\n            App.instance.actLoginIBC();\r\n        }\r\n        actLoginSBO() {\r\n             \r\n            App.instance.actLoginSBO();\r\n        }\r\n\r\n        actLoginWM() {\r\n             \r\n            App.instance.actLoginWM();\r\n        }\r\n\r\n        actLoginAG() {\r\n             \r\n            App.instance.actLoginAG();\r\n        }\r\n        actLoginEbet() {\r\n             \r\n            App.instance.actLoginEbet();\r\n        }\r\n        actLoginShootFish() {\r\n             \r\n            App.instance.actLoginShootFish();\r\n        }\r\n\r\n        actGameTaiXiuMd5() {\r\n             \r\n            if (!Configs.Login.IsLogin) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n                return;\r\n            }\r\n            MiniGameNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openMiniGameTaiXiuMD5(\"TaiXiuMD5\", \"TaiXiuMD5\");\r\n            });\r\n\r\n        }\r\n\r\n        showGameLive() {\r\n             \r\n            if (!this.gameLiveController) {\r\n                let cb = (prefab) => {\r\n                    let gameLiveController = cc.instantiate(prefab).getComponent(\"GameLiveController\");\r\n                    App.instance.canvas.addChild(gameLiveController.node)\r\n                    this.gameLiveController = gameLiveController;\r\n                    this.gameLiveController.show();\r\n                }\r\n                BundleControl.loadPrefabPopup(\"PrefabPopup/GameLive\", cb);\r\n            } else {\r\n                this.gameLiveController.show();\r\n            }\r\n\r\n\r\n        }\r\n        updateSizeListGame(isHaveBanner) {\r\n             \r\n            this.bannerList.node.active = isHaveBanner;\r\n            this.tabsListGame.updateSize(isHaveBanner);\r\n        }\r\n        //    getConfigGame() {\r\n        //        Http.get(Configs.App.API, { c: \"2037\", nn: Configs.Login.Nickname, \"pl\": \"web\" }, (err, res) => {\r\n        //            if (res != null) {\r\n        //            //    cc.log(res);\r\n        //                if (res['success']) {\r\n        //                    this.tabsListGame.initListGameConfig(res);\r\n        //                    App.instance.VERSION_CONFIG = res['version'];\r\n        //                } else {\r\n        //               //     this.tabsListGame.loadListGame();\r\n        //                }\r\n        //                // this.checkAppVersion();\r\n        //            }\r\n        //        });\r\n        //    }\r\n        checkAppVersion() {\r\n             \r\n            if (typeof Configs.App.VERSION_APP != \"undefined\") {\r\n                let versionApp = parseInt(Configs.App.VERSION_APP.replace(/[.]/g, ''));\r\n                let versionConfig = parseInt(App.instance.VERSION_CONFIG.replace(/[.]/g, ''));\r\n                if (versionApp < versionConfig) {\r\n                    let url = \"https://cr79.vin/\"\r\n                    if (cc.sys.os == cc.sys.OS_ANDROID || cc.sys.os == cc.sys.OS_IOS) {\r\n                        App.instance.showConfirmDialog(\"Đã có phiển bản mới.\\nVui lòng cập nhật ứng dụng để có trải nghiệm tốt nhất!\", () => {\r\n                            cc.sys.openURL(url);\r\n                        }, false)\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\nexport default Lobby.LobbyController;\r\n\r\n","\r\nimport Http from \"../../Loading/src/Http\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupBoomTan extends Dialog {\r\n\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n    @property([cc.SpriteFrame])\r\n    sfRanks: cc.SpriteFrame[] = [];\r\n    @property([cc.SpriteFrame])\r\n    sfGifts: cc.SpriteFrame[] = [];\r\n\r\n    show() {\r\n        super.show();\r\n        for (let i = 0; i < this.itemTemplate.parent.childrenCount; i++) {\r\n            this.itemTemplate.parent.children[i].active = false;\r\n        }\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        for (let i = 0; i < this.itemTemplate.parent.childrenCount; i++) {\r\n            this.itemTemplate.parent.children[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n        this.loadData();\r\n    }\r\n\r\n    private getItem(): cc.Node {\r\n        let item = null;\r\n        for (let i = 0; i < this.itemTemplate.parent.childrenCount; i++) {\r\n            let node = this.itemTemplate.parent.children[i];\r\n            if (node != this.itemTemplate && !node.active) {\r\n                item = node;\r\n                break;\r\n            }\r\n        }\r\n        if (item == null) {\r\n            item = cc.instantiate(this.itemTemplate);\r\n            item.parent = this.itemTemplate.parent;\r\n        }\r\n        item.active = true;\r\n        return item;\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        let url = Configs.App.DOMAIN + \"boom_tan.json\";\r\n        Http.get(url, null, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            for (let i = 0; i < res.length; i++) {\r\n                let itemData = res[i];\r\n                let item = this.getItem();\r\n                let sfGift = this.getGiftSpriteFrame(itemData[\"gift\"]);\r\n                if (sfGift != null) {\r\n                    item.getChildByName(\"SprGift\").active = true;\r\n                    item.getChildByName(\"SprGift\").getComponent(cc.Sprite).spriteFrame = sfGift;\r\n                    item.getChildByName(\"Gift\").active = false;\r\n                } else {\r\n                    item.getChildByName(\"Gift\").active = true;\r\n                    item.getChildByName(\"Gift\").getComponent(cc.Label).string = itemData[\"gift\"];\r\n                    item.getChildByName(\"SprGift\").active = false;\r\n                }\r\n                if (i < this.sfRanks.length) {\r\n                    item.getChildByName(\"SprRank\").active = true;\r\n                    item.getChildByName(\"SprRank\").getComponent(cc.Sprite).spriteFrame = this.sfRanks[i];\r\n                    item.getChildByName(\"Rank\").active = false;\r\n                } else {\r\n                    item.getChildByName(\"Rank\").active = true;\r\n                    item.getChildByName(\"Rank\").getComponent(cc.Label).string = itemData[\"rank\"];\r\n                    item.getChildByName(\"SprRank\").active = false;\r\n                }\r\n                let lblNickname: cc.Label = item.getChildByName(\"Nickname\").getComponent(cc.Label);\r\n                let lblScore: cc.Label = item.getChildByName(\"Score\").getComponent(cc.Label);\r\n                lblNickname.string = itemData[\"nickname\"];\r\n                lblScore.string = itemData[\"score\"];\r\n                if (i == 0) {\r\n                    lblNickname.node.color = cc.Color.BLACK.fromHEX(\"#ff7e00\");\r\n                    lblScore.node.color = cc.Color.BLACK.fromHEX(\"#ff7e00\");\r\n                } else if (i == 1) {\r\n                    lblNickname.node.color = cc.Color.BLACK.fromHEX(\"#004eff\");\r\n                    lblScore.node.color = cc.Color.BLACK.fromHEX(\"#004eff\");\r\n                } else if (i == 2) {\r\n                    lblNickname.node.color = cc.Color.BLACK.fromHEX(\"#06ff00\");\r\n                    lblScore.node.color = cc.Color.BLACK.fromHEX(\"#06ff00\");\r\n                } else {\r\n                    lblNickname.node.color = cc.Color.BLACK.fromHEX(\"#feca85\");\r\n                    lblScore.node.color = cc.Color.BLACK.fromHEX(\"#feca85\");\r\n                }\r\n                item.getChildByName(\"Divider\").active = i < res.length - 1;\r\n            }\r\n        });\r\n    }\r\n\r\n    public actTheLe() {\r\n        let url = Configs.App.DOMAIN + \"the_le_boom_tan.html\";\r\n        cc.sys.openURL(url);\r\n    }\r\n\r\n    private getGiftSpriteFrame(name: string): cc.SpriteFrame {\r\n        for (let i = 0; i < this.sfGifts.length; i++) {\r\n            if (this.sfGifts[i].name == name) return this.sfGifts[i];\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\n\r\n\r\n\r\n@ccclass\r\nexport default class PopupCardInfo extends Dialog {\r\n\r\n    @property(cc.Node)\r\n    itemFactorTemplate: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    contentItem: cc.Node = null;\r\n\r\n    \r\n    private _nodeTemplate: cc.Node = null;\r\n\r\n    private tabSelectedIdx = 0;\r\n\r\n    start() {\r\n        \r\n    }\r\n    setListItem(listItem: string){\r\n        let itemArray = JSON.parse(listItem);\r\n        //let content = cc.instantiate(this.itemFactorTemplate).parent;\r\n        if(this._nodeTemplate == null){\r\n            this._nodeTemplate = cc.instantiate(this.itemFactorTemplate);\r\n            //this._nodeTemplate.parent =  this.itemFactorTemplate.parent\r\n        }\r\n        \r\n\r\n        this.contentItem.removeAllChildren();\r\n        for (let i = 0; i < itemArray.length; i++) {\r\n            let node = cc.instantiate(this._nodeTemplate);\r\n            node.parent = this.contentItem;\r\n            node.active = true;\r\n\r\n            \r\n            node.getChildByName(\"stt\").getComponent(cc.Label).string = (i + 1).toString();\r\n            node.getChildByName(\"telcoName\").getComponent(cc.Label).string = itemArray[i].Telco;\r\n            node.getChildByName(\"amount\").getComponent(cc.Label).string = Utils.formatNumber(Number(itemArray[i].Amount));\r\n            node.getChildByName(\"pincode\").getComponent(cc.Label).string = itemArray[i].PinCode;\r\n            node.getChildByName(\"serial\").getComponent(cc.Label).string = itemArray[i].Serial;\r\n        }\r\n        this.show();\r\n    }\r\n    \r\n\r\n    show() {\r\n        super.show();\r\n       \r\n       \r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    \r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport cmd from \"./Lobby.Cmd\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"./Script/networks/MiniGameNetworkClient\";\r\nimport InPacket from \"./Script/networks/Network.InPacket\";\r\n\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass(\"Lobby.PopupCashout.TabBank\")\r\nexport class TabBank {\r\n\r\n    @property(cc.Node)\r\n    boxRut: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lblCoin: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    dropdownBank: cc.Node = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbAmount: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbBankNumber: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbBankAccountName: cc.EditBox = null;\r\n\r\n    private _listBank = [];\r\n\r\n    private fee: number = 1;\r\n    private minCashout = 0;\r\n    private maxCashout = 0;\r\n    private isAllowCashout = false;\r\n\r\n    start() {\r\n        this.dropdownBank = this.dropdownBank.getComponent(\"DropDown\");\r\n        this.lblCoin.string = Utils.formatNumber(Configs.Login.Coin);\r\n\r\n    }\r\n\r\n    show() {\r\n        var self = this;\r\n        var data = {};\r\n        data[\"c\"] = 2008;\r\n        data[\"nn\"] = Configs.Login.Nickname;\r\n        data[\"pn\"] = 1;\r\n        data[\"l\"] = 10;\r\n        Http.get(Configs.App.API, data, (err, res) => {\r\n            var list = JSON.parse(res.data).data;\r\n            if (res == null || list.length == 0) {\r\n                self.boxRut.active = false;\r\n            }\r\n            else {\r\n                self.boxRut.active = true;\r\n\r\n                this._listBank = list;\r\n                var datas = new Array();\r\n                datas.push({ optionString: \"Chọn ngân hàng\" });\r\n                for (let i = 0; i < list.length; i++) {\r\n                    datas.push({ optionString: list[i].bankName });\r\n                }\r\n                this.dropdownBank.clearOptionDatas();\r\n                this.dropdownBank.addOptionDatas(datas);\r\n                this.dropdownBank.selectedIndex = 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    onChoseBank() {\r\n        var indexBank = this.dropdownBank.selectedIndex;\r\n        if (indexBank != 0) {\r\n            this.edbBankAccountName.string = this._listBank[indexBank - 1].customerName;\r\n            this.edbBankNumber.string = this._listBank[indexBank - 1].bankNumber;\r\n        }\r\n    }\r\n\r\n    onAddBank() {\r\n\r\n    }\r\n    submit() {\r\n        // if(!this.isAllowCashout){\r\n        //     App.instance.alertDialog.showMsg(\"Rút qua ngân hàng đang bảo trì, vui lòng thử lại sau!\");\r\n        //     return;\r\n        // }\r\n        let ddBank = this.dropdownBank.selectedIndex;\r\n        if (ddBank == 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_select_bank1'));\r\n            return;\r\n        }\r\n        let bankSelected = this._listBank[ddBank - 1].bankName;\r\n\r\n        let amount = Utils.formatEditBox(this.edbAmount.string);\r\n        if (amount < 100000) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_out_min\") + Utils.formatNumber(100000));\r\n            return;\r\n        }\r\n        if (amount > 300000000) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_cash_out_max') + Utils.formatNumber(300000000));\r\n            return;\r\n        }\r\n\r\n\r\n        if (amount > Configs.Login.Coin) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_not_enough'));\r\n\r\n            return;\r\n        }\r\n\r\n        let bankNumber = this.edbBankNumber.string.trim();\r\n        if (bankNumber == \"\") {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_note_transfer_4'));\r\n            return;\r\n        }\r\n        let bankActName = this.edbBankAccountName.string.trim();\r\n        if (bankActName == \"\") {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_note_transfer_4'));\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        App.instance.showLoading(true);\r\n        var data = {};\r\n        data[\"c\"] = 2010;\r\n        data[\"am\"] = amount;\r\n        data[\"bn\"] = bankNumber;\r\n        data[\"nn\"] = Configs.Login.Nickname;\r\n        Http.get(Configs.App.API, data, (err, res) => {\r\n            App.instance.showLoading(false);\r\n             ////Utils.Log(\"CashOut:\" + JSON.stringify(err) + \" => \" + JSON.stringify(res));\r\n            if (res.success) {\r\n                Configs.Login.Coin = res.data.currentMoney;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_note_transfer_5'));\r\n            }\r\n            else {\r\n                App.instance.alertDialog.showMsg(res.message);\r\n            }\r\n\r\n        });\r\n        // MiniGameNetworkClient.getInstance().send(new cmd.ReqCashoutBank(bankSelected, bankNumber,bankActName, amount ));\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n@ccclass(\"Lobby.PopupCashout.TabMomo\")\r\nexport class TabMomo {\r\n\r\n\r\n    @property(cc.Label)\r\n    lblCoin: cc.Label = null;\r\n\r\n\r\n    @property(cc.EditBox)\r\n    edbAmount: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    edbPhone: cc.EditBox = null;\r\n\r\n    private fee: number = 1;\r\n    private minCashout = 0;\r\n    private maxCashout = 0;\r\n    private isAllowCashout = false;\r\n    start() {\r\n\r\n        //get config from server \r\n        App.instance.showLoading(true);\r\n        this.lblCoin.string = Utils.formatNumber(Configs.Login.Coin);\r\n        Http.get(Configs.App.API, { \"c\": 130 }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            this.fee = res.ratio_cashout_momo;\r\n            this.minCashout = res.cashout_momo_min;\r\n            this.maxCashout = res.cashout_momo_max;\r\n            this.isAllowCashout = res.is_cashout_momo == 1 ? false : true;\r\n\r\n        });\r\n\r\n\r\n    }\r\n    amountChange() {\r\n        let amount = this.edbAmount.string.trim();\r\n        if (amount == \"\" || parseInt(amount) <= 0 || isNaN(Number(amount))) {\r\n            return;\r\n        }\r\n        let amountSend = Number(amount);\r\n        if (amountSend < this.minCashout || amountSend > this.maxCashout) {\r\n            return;\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    submit() {\r\n        // if(!this.isAllowCashout){\r\n        //     App.instance.alertDialog.showMsg(\"Rút Momo đang bảo trì, vui lòng thử lại sau!\");\r\n        //     return;\r\n        // }\r\n        let amount = this.edbAmount.string.trim();\r\n        // let phoneSend = this.edbPhone.string.trim();\r\n\r\n        if (amount == \"\" || parseInt(amount) <= 0 || isNaN(Number(amount))) {\r\n            App.instance.alertDialog.showMsg(\"Số tiền không hợp lệ\");\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n@ccclass\r\nexport default class PopupCashout extends Dialog {\r\n\r\n\r\n    @property(cc.Node)\r\n    tabContents: cc.Node = null;\r\n\r\n\r\n    @property([cc.Label])\r\n    lblContainsBotOTPs: cc.Label[] = [];\r\n\r\n\r\n    @property(TabBank)\r\n    tabBank: TabBank = null;\r\n\r\n\r\n\r\n    private tabSelectedIdx = 0;\r\n\r\n    start() {\r\n        for (let i = 0; i < this.lblContainsBotOTPs.length; i++) {\r\n            let lbl = this.lblContainsBotOTPs[i];\r\n            lbl.string = lbl.string.replace(\"$bot_otp\", \"@\" + Configs.App.getLinkTelegram());\r\n        }\r\n\r\n        this.onTabChanged();\r\n\r\n        MiniGameNetworkClient.getInstance().addListener((data) => {\r\n            let inpacket = new InPacket(data);\r\n             ////Utils.Log(inpacket.getCmdId());\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.CASHOUT_CARD: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResCashoutCard(data);\r\n                     ////Utils.Log(JSON.stringify(res));\r\n\r\n\r\n                }\r\n                case cmd.Code.CASHOUT_BANK: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResCashoutBank(data);\r\n                    if (res.error == 0) {\r\n                        Configs.Login.Coin = res.currentMoney;\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_note_transfer_6'));\r\n                    } else {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_note_transfer_7'));\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.CASHOUT_MOMO: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResCashoutMomo(data);\r\n                    if (res.error == 0) {\r\n                        Configs.Login.Coin = res.currentMoney;\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_note_transfer_6'));\r\n                    } else {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_note_transfer_7'));\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }, this);\r\n\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\r\n            if (!this.node.active) return;\r\n            // this.tabNapThe.lblBalance.string = Utils.formatNumber(Configs.Login.Coin);\r\n            this.tabBank.lblCoin.string = Utils.formatNumber(Configs.Login.Coin);\r\n            // this.tabMomo.lblCoin.string = Utils.formatNumber(Configs.Login.Coin);\r\n        }, this);\r\n\r\n        // this.tabNapThe.start();\r\n\r\n        this.tabBank.start();\r\n        // this.tabMomo.start();\r\n    }\r\n\r\n    private onBtnChoseBank() {\r\n        this.tabBank.onChoseBank();\r\n    }\r\n\r\n    private onBtnAddBank() {\r\n        // this.tabBank.onAddBank();\r\n        Global.LobbyController.actProfile(2);\r\n        this.dismiss();\r\n    }\r\n\r\n    private onTabChanged() {\r\n        for (let i = 0; i < this.tabContents.childrenCount; i++) {\r\n            this.tabContents.children[i].active = i == this.tabSelectedIdx;\r\n        }\r\n\r\n        switch (this.tabSelectedIdx) {\r\n            case 0:\r\n                this.tabBank.show();\r\n                break;\r\n\r\n            case 1:\r\n\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    private longToTime(l: number): string {\r\n        return (l / 60) + \" giờ \" + (l % 60) + \" phút\";\r\n    }\r\n\r\n    show() {\r\n        super.show();\r\n        this.tabSelectedIdx = 0;\r\n        this.onTabChanged();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    actGetOTP() {\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqGetOTP());\r\n    }\r\n\r\n    actSubmitNapNganHang() {\r\n        this.tabBank.submit();\r\n    }\r\n\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupChangeAvatar extends Dialog {\r\n    @property(cc.Node)\r\n    items: cc.Node = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    private selectedIdx = -1;\r\n\r\n    start() {\r\n        for (let i = 0; i < App.instance.sprFrameAvatars.length; i++) {\r\n            let item = cc.instantiate(this.itemTemplate);\r\n            item.parent = this.items;\r\n            item.getChildByName(\"sprite\").getComponent(cc.Sprite).spriteFrame = App.instance.sprFrameAvatars[i];\r\n            item.name = App.instance.sprFrameAvatars[i].name;\r\n\r\n            item.on(\"click\", () => {\r\n                this.selectedIdx = i;\r\n                this.actSubmit();\r\n            });\r\n            this.selectedIdx = i;\r\n        }\r\n        // this.itemTemplate.removeFromParent();\r\n        // this.itemTemplate = null;\r\n    }\r\n\r\n    show() {\r\n         ////Utils.Log(\"vao day ha aaaa:\" + this.name);\r\n        super.show();\r\n        this.selectedIdx = -1;\r\n        if (this.itemTemplate == null) {\r\n            for (let i = 0; i < this.items.childrenCount; i++) {\r\n                let item = this.items.children[i];\r\n                if (item.name == Configs.Login.Avatar) {\r\n                    this.selectedIdx = i;\r\n                    item.getChildByName(\"selected\").active = true;\r\n                } else {\r\n                    item.getChildByName(\"selected\").active = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    actSubmit() {\r\n        Http.get(Configs.App.API, { \"c\": 125, \"nn\": Configs.Login.Nickname, \"avatar\": App.instance.sprFrameAvatars[this.selectedIdx].name }, (err, res) => {\r\n            if (err != null) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error'));\r\n                return;\r\n            }\r\n            if (!res[\"success\"]) {\r\n                switch (res[\"errorCode\"]) {\r\n                    default:\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_unknown_error\") + \"\\n\" + res[\"errorCode\"]);\r\n                        break;\r\n                }\r\n                return;\r\n            }\r\n            this.dismiss();\r\n            Configs.Login.Avatar = App.instance.sprFrameAvatars[this.selectedIdx].name;\r\n            BroadcastReceiver.send(BroadcastReceiver.USER_INFO_UPDATED);\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_action_success'));\r\n        });\r\n    }\r\n}\r\n","\r\nimport cmd from \"./Lobby.Cmd\";\r\nimport App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"./Script/networks/MiniGameNetworkClient\";\r\nimport InPacket from \"./Script/networks/Network.InPacket\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupChangePassword extends Dialog {\r\n    @property(cc.Node)\r\n    info: cc.Node = null;\r\n    @property(cc.Node)\r\n    continue: cc.Node = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbOldPassword: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    edbNewPassword: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    edbReNewPassword: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbOTP: cc.EditBox = null;\r\n\r\n    start() {\r\n        MiniGameNetworkClient.getInstance().addListener((data) => {\r\n            if (!this.node.active) return;\r\n            let inpacket = new InPacket(data);\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.CHANGE_PASSWORD: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResChangePassword(data);\r\n                     ////Utils.Log(\"res changepass:\", res);\r\n                    switch (res.error) {\r\n                        case 1:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_room_err6'));\r\n                            break;\r\n                        case 3:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_old_password_incorrect'));\r\n                            break;\r\n                        case 4:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_change_password_success'));\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error') + \"\\n\" + res.error);\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.GET_OTP: {\r\n                    if (!this.node.active) return;\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResGetOTP(data);\r\n                    if (res.error == 0) {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_otp_send'));\r\n                    } else if (res.error == 30) {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_otp_delay_time'));\r\n                    } else {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_action_not_success'));\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.SEND_OTP: {\r\n                    let res = new cmd.ResSendOTP(data);\r\n                    App.instance.showLoading(false);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            break;\r\n                        case 1:\r\n                        case 2:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error_exchange'));\r\n                            break;\r\n                        case 77:\r\n                        case 3:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_incorrect_otp'));\r\n                            break;\r\n                        case 4:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_expired_otp'));\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error') + \"\\n\" + res.error);\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.RESULT_CHANGE_PASSWORD: {\r\n                    let res = new cmd.ResSendOTP(data);\r\n                    App.instance.showLoading(false);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_change_password_success'));\r\n                            this.dismiss();\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error') + \"\\n\" + res.error);\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    show() {\r\n        super.show();\r\n        this.info.active = true;\r\n        this.continue.active = false;\r\n        this.edbOldPassword.string = \"\";\r\n        this.edbNewPassword.string = \"\";\r\n        this.edbReNewPassword.string = \"\";\r\n        this.edbOTP.string = \"\";\r\n    }\r\n\r\n    actSubmit() {\r\n        let oldPassword = this.edbOldPassword.string.trim();\r\n        let newPassword = this.edbNewPassword.string.trim();\r\n        let reNewPassword = this.edbReNewPassword.string.trim();\r\n        if (oldPassword.length == 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_old_password_not_blank'));\r\n            return;\r\n        }\r\n        if (newPassword.length == 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_new_password_not_blank'));\r\n            return;\r\n        }\r\n        if (reNewPassword != newPassword) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_password_not_same'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqChangePassword(oldPassword, newPassword));\r\n    }\r\n\r\n    actGetOTP() {\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqGetOTP());\r\n    }\r\n\r\n    actContinue() {\r\n        let otp = this.edbOTP.string.trim();\r\n        if (otp.length == 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_otp_blank'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqSendOTP(otp, false ? 1 : 0));\r\n    }\r\n}\r\n","import Http from \"../../Loading/src/Http\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Utils from \"./Script/common/Utils\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport App from \"./Script/common/App\";\r\nimport MiniGameNetworkClient from \"./Script/networks/MiniGameNetworkClient\";\r\nimport InPacket from \"./Script/networks/Network.InPacket\";\r\nimport cmd from \"./Lobby.Cmd\"; \r\n\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass(\"PopupChangerCoin.TabCashIn\")\r\n\r\n\r\nexport class TabCashIn {\r\n    @property(cc.Label)\r\n    lblBalance: cc.Label = null;\r\n    @property(cc.EditBox)\r\n    edbCoin: cc.EditBox = null;\r\n    @property(cc.Node)\r\n    quickButtons: cc.Node = null;\r\n\t//private game = 0;\r\n    private popup: PopupChangerCoin = null;\r\n\r\n    private readonly values = [50000, 100000, 200000, 500000, 1000000, 2000000, 5000000, 10000000, 20000000];\r\n\r\n    public start(popup: PopupChangerCoin) {\r\n        this.popup = popup;\r\n        this.edbCoin.node.on(\"editing-did-ended\", () => {\r\n            let number = Utils.stringToInt(this.edbCoin.string);\r\n            this.edbCoin.string = Utils.formatNumber(number);\r\n        });\r\n        for (let i = 0; i < this.quickButtons.childrenCount; i++) {\r\n            var btn = this.quickButtons.children[i];\r\n            let value = this.values[i];\r\n            btn.getComponentInChildren(cc.Label).string = Utils.formatNumber(value);\r\n            btn.on(\"click\", () => {\r\n                this.edbCoin.string = Utils.formatNumber(value);\r\n            });\r\n        }\r\n    }\r\n\r\n    public submit() {\r\n        let coin = Utils.stringToInt(this.edbCoin.string);\r\n        if (coin <= 0) {\r\n\t\t\tApp.instance.confirmDialog.show(\"Số tiền đã nhập không hợp lệ.\");\t\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n\t\tHttp.postz('https://serverv8.J77.vin/CashIn', {game: Configs.Login.Game, 'token': Configs.Login.SessionKeyV8, 'amount': coin, 'type': 'CashIn'  }, (err, resv2) => {\r\n\t\tApp.instance.showLoading(false);\r\n\t\t \r\n\t\t    if (resv2[\"status\"] == 1) {\r\n\t\t\t\tApp.instance.ShowAlertDialog(resv2['msg']);\r\n                return;\r\n            }else{ \r\n\t\t    Configs.Login.CoinV8 = resv2[\"newCoin\"];\r\n\t\t\tConfigs.Login.Coin \t= resv2[\"newCash\"];\r\n            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n\t\t\tApp.instance.confirmDialog.show(\"Thao tác thành công.\");\t\r\n            this.reset();\t\r\n\t\t\tMiniGameNetworkClient.getInstance().send(new cmd.ReqGetMoneyUse());\r\n\t\t\t}\r\n\r\n\t\t})\t\r\n\t\t\r\n    }\r\n\r\n    public reset() {\r\n        this.edbCoin.string = \"\";\r\n        this.lblBalance.string = Utils.formatNumber(Configs.Login.Coin);\r\n    }\r\n}\r\n\r\n@ccclass(\"PopupChangerCoin.TabCashOut\")\r\nexport class TabCashOut {\r\n    @property(cc.Label)\r\n    lblBalance: cc.Label = null;\r\n    @property(cc.EditBox)\r\n    edbCoin: cc.EditBox = null;\r\n    @property(cc.Node)\r\n    quickButtons: cc.Node = null;\r\n\r\n    private popup: PopupChangerCoin = null;\r\n\r\n    private readonly values = [50000, 100000, 200000, 500000, 1000000, 2000000, 5000000, 10000000, 20000000];\r\n\r\n    public start(popup: PopupChangerCoin) {\r\n        this.popup = popup;\r\n        this.edbCoin.node.on(\"editing-did-ended\", () => {\r\n            let number = Utils.stringToInt(this.edbCoin.string);\r\n            this.edbCoin.string = Utils.formatNumber(number);\r\n        });\r\n        for (let i = 0; i < this.quickButtons.childrenCount; i++) {\r\n            var btn = this.quickButtons.children[i];\r\n            let value = this.values[i];\r\n            btn.getComponentInChildren(cc.Label).string = Utils.formatNumber(value);\r\n            btn.on(\"click\", () => {\r\n                this.edbCoin.string = Utils.formatNumber(value);\r\n            });\r\n        }\r\n    }\r\n\r\n    public submit() {\r\n        let coin = Utils.stringToInt(this.edbCoin.string);\r\n        if (coin <= 0) {\r\n\t\t\tApp.instance.confirmDialog.show(\"Số tiền đã nhập không hợp lệ.\");\t\r\n\r\n\r\n            return;\r\n        }\r\n\t\t\tApp.instance.showLoading(true);\r\n\t\t\tHttp.postz('https://serverv8.J77.vin/CashIn', {game: Configs.Login.Game, 'token': Configs.Login.SessionKeyV8, 'amount': coin, 'type': 'CashOut'  }, (err, resv2) => {\r\n\t\t\tApp.instance.showLoading(false);\t\t \r\n\t\t    if (resv2[\"status\"] == 1) {\r\n\t\t\tApp.instance.ShowAlertDialog(resv2['msg']);\r\n            return;\r\n            } else {\r\n\t\t    Configs.Login.CoinV8 = resv2[\"newCoin\"];\r\n\t\t\tConfigs.Login.Coin \t= resv2[\"newCash\"];\r\n            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n\t\t\tApp.instance.confirmDialog.show(\"Thao tác thành công.\");\t\r\n            this.reset();\t\r\n\t\t\tMiniGameNetworkClient.getInstance().send(new cmd.ReqGetMoneyUse());\r\n\t\t\t}\r\n\t\t})\t\r\n\t\t\r\n    }\r\n\r\n    public reset() {\r\n        this.edbCoin.string = \"\";\r\n        this.lblBalance.string = Utils.formatNumber(Configs.Login.CoinV8);\r\n    }\r\n}\r\n\r\n@ccclass\r\nexport default class PopupChangerCoin extends Dialog {\r\n    @property(cc.ToggleContainer)\r\n    tabs: cc.ToggleContainer = null;\r\n    @property(cc.Node)\r\n    tabContents: cc.Node = null;\r\n    @property(TabCashIn)\r\n    tabCashIn: TabCashIn = null;\r\n    @property(TabCashOut)\r\n    tabCashOut: TabCashOut = null;\r\n\r\n    private tabSelectedIdx = 0;\r\n\tprivate game = 0;\r\n    start() {\r\n        for (let i = 0; i < this.tabs.toggleItems.length; i++) {\r\n            this.tabs.toggleItems[i].node.on(\"toggle\", () => {\r\n                this.tabSelectedIdx = i;\r\n                this.onTabChanged();\r\n            });\r\n        }\r\n\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\r\n            this.tabCashIn.lblBalance.string = Utils.formatNumber(Configs.Login.Coin);\r\n            this.tabCashOut.lblBalance.string = Utils.formatNumber(Configs.Login.CoinV8);\r\n        }, this);\r\n\r\n        this.tabCashIn.start(this);\r\n        this.tabCashOut.start(this);\r\n    }\r\n\r\n    show(res,event) {\t\t\r\n\t\tif (!Configs.Login.IsLogin) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_need_login'));\r\n            return;\r\n        }\t\r\n        super.show();\r\n        this.tabSelectedIdx = 0;\r\n\t\tthis.game = event;\r\n\t\tConfigs.Login.Game = event;\r\n        this.tabs.toggleItems[this.tabSelectedIdx].isChecked = true;\r\n        this.onTabChanged();\r\n    }\r\n\r\n    private onTabChanged() {\r\n        for (let i = 0; i < this.tabContents.childrenCount; i++) {\r\n            this.tabContents.children[i].active = i == this.tabSelectedIdx;\r\n        }\r\n        for (let j = 0; j < this.tabs.toggleItems.length; j++) {\r\n            this.tabs.toggleItems[j].node.getComponentInChildren(cc.LabelOutline).color = j == this.tabSelectedIdx ? cc.Color.BLACK.fromHEX(\"#AA5F00\") : cc.Color.BLACK.fromHEX(\"#4677F3\");\r\n        }\r\n        switch (this.tabSelectedIdx) {\r\n            case 0:\r\n                this.tabCashIn.reset();\r\n                break;\r\n            case 1:\r\n                this.tabCashOut.reset();\r\n                break;\r\n        }\r\n    }\r\n\r\n    public actSubmitCashIn() {\r\n        this.tabCashIn.submit();\r\n    }\r\n\t\r\n\tpublic actSubmitCashOut() {\r\n        this.tabCashOut.submit();\r\n    }\r\n\r\n\r\n    public actSubmitGo(err, event) {\r\n\t\tApp.instance.showLoading(true);\t\t\r\n\t\tHttp.postz('https://serverv8.J77.vin/logingame', {'token': Configs.Login.SessionKeyV8, 'game': this.game}, (err, resv2) => {\r\n\t\t\tApp.instance.showLoading(false);\r\n\t\t    if (resv2[\"status\"] == 1) {\r\n\t\t\tApp.instance.confirmDialog.show(resv2['msg']);\t\t\t\r\n\t\t\treturn;\r\n           } else {\r\n\t\t\tvar url = resv2['url'];\r\n              cc.sys.openURL(url);\t\t\t\t\r\n\t\t\t}\r\n\t\t})\r\n\r\n    public actClearCashOut() {\r\n        this.tabCashOut.edbCoin.string = \"0\";\r\n    }\r\n}\r\n\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport PopupConfirmTransfer from \"./PopupConfirmTransfer\";\r\nimport App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport ScrollViewControl from \"./Script/common/ScrollViewControl\";\r\nimport Utils from \"./Script/common/Utils\";\r\nimport BundleControl from \"../../Loading/src/BundleControl\";\r\nvar TYPE_SEARCH = {\r\n    NICKNAME: 0,\r\n    SDT: 1,\r\n    REGION: 2\r\n}\r\nvar TAB = {\r\n    CASHIN: 0,\r\n    CASHOUT: 1,\r\n    HISTORY: 2\r\n}\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupDaiLy extends Dialog {\r\n\r\n    listAgency = [];\r\n    listBank = [];\r\n    listSearchAgency = [];\r\n    typeSearch = TYPE_SEARCH.REGION;\r\n    @property(ScrollViewControl)\r\n    scrAgency: ScrollViewControl = null;\r\n\r\n    @property(ScrollViewControl)\r\n    scrBankList: ScrollViewControl = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbSearch: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbMoney: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbTransID: cc.EditBox = null;\r\n\r\n    @property(cc.Label)\r\n    lbChipReceive: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n\r\n    @property(Dialog)\r\n    popupBankInfo: Dialog = null;\r\n\r\n    @property(PopupConfirmTransfer)\r\n    popupConfirm: PopupConfirmTransfer = null;\r\n\r\n    @property(cc.Node)\r\n    dropBankUser: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeBankUser: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeBankAgency: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    dropBankAgency: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeTransfer: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeHistory: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lbNameAgency: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbNickname: cc.Label = null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleDropBankUser: cc.Toggle = null;\r\n    @property(cc.Toggle)\r\n    toggleDropBankAgency: cc.Toggle = null;\r\n    @property(cc.Toggle)\r\n    toggleCashIn: cc.Toggle = null;\r\n    @property(cc.Toggle)\r\n    toggleCashOut: cc.Toggle = null;\r\n    @property(cc.Node)\r\n    itemHistoryContainer: cc.Node = null;\r\n\r\n    tab = 0;\r\n    currentDataDaily = null;\r\n    currentBankDaily = null;\r\n    currentDataUser = null;\r\n    page = 1;\r\n    maxPage = 1;\r\n    show() {\r\n        super.show();\r\n        if (typeof (this.tab) != \"number\") {\r\n            this.tab = 0;\r\n        }\r\n        if (this.tab == 0) {\r\n            this.toggleCashIn.isChecked = true;\r\n            this.toggleCashIn.check();\r\n            this.onChangeTab(null, this.tab)\r\n        } else if (this.tab == 1) {\r\n            this.toggleCashOut.isChecked = true;\r\n            this.toggleCashOut.check();\r\n            this.onChangeTab(null, this.tab)\r\n        }\r\n    }\r\n    dismiss() {\r\n        super.dismiss();\r\n\r\n    }\r\n    onBtnCopy(obj, data) {\r\n        Utils.copy(data);\r\n        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_content_copied') + data);\r\n    }\r\n    _onShowed() {\r\n        super._onShowed();\r\n    }\r\n    onEnable() {\r\n        this.loadData();\r\n        this.edbSearch.string = \"\";\r\n    }\r\n    loadData() {\r\n        //http://43.128.27.35:8081/api?c=2034&code=367457&key=&pg=1&mi=10&level=2\r\n        App.instance.showLoading(true);\r\n        this.listAgency = [];\r\n        Http.get(Configs.App.API2, { \"c\": 2034, \"nn\": Configs.Login.Nickname }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (res[\"success\"] && res['data'] != null) {\r\n                //  cc.log(res);\r\n                this.listAgency = res['data'];\r\n            }\r\n            this.scrAgency.setDataList(this.setDataItem, this.listAgency);\r\n            //  cc.log(\"list Agency=\", this.listAgency);\r\n        });\r\n        var data = {};\r\n        data[\"c\"] = 2008;\r\n        data[\"nn\"] = encodeURIComponent(Configs.Login.Nickname.trim());\r\n        data[\"pn\"] = 1;\r\n        data[\"l\"] = 10;\r\n        Http.get(Configs.App.API2, data, (err, res) => {\r\n            var list = JSON.parse(res.data).data;\r\n            this.setInfoDropBankUser(list);\r\n        });\r\n    }\r\n    setDataItem(item, data) {\r\n        item.opacity = data['rank'] >= 1 ? 255 : 150;\r\n        item.getChildByName('lbStt').getComponent(cc.Label).string = item['itemID'] + 1;\r\n        item.getChildByName('lbName').getComponent(cc.Label).string = data['nameagent'];\r\n        item.getChildByName('lbNickname').getComponent(cc.Label).string = data['nickname'];\r\n        item.getChildByName('lbRegion').getComponent(cc.Label).string = data['address'];\r\n        item.getChildByName('lbSdt').getComponent(cc.Label).string = data['phone'];\r\n        item.getChildByName('bg').active = data['index'] % 2 == 0;\r\n        item['data'] = data;\r\n        item.active = true;\r\n    }\r\n    setDataItemBank(item, data) {\r\n        item.getChildByName('lbStt').getComponent(cc.Label).string = item['itemID'] + 1;\r\n        item.getChildByName('lbAgencyCode').getComponent(cc.Label).string = data['agent_code'];\r\n        item.getChildByName('lbBankAccount').getComponent(cc.Label).string = data['bank_acount'];\r\n        item.getChildByName('lbBankName').getComponent(cc.Label).string = data['bank_name'];\r\n        if (data['bank_name'].length > 30) {\r\n            item.getChildByName('lbBankName').getComponent(cc.Label).string = data['bank_name'].slice(0, 27) + \"...\";\r\n        }\r\n        item.getChildByName('lbBranch').getComponent(cc.Label).string = data['bank_branch'];\r\n        item.getChildByName('lbBankNumber').getComponent(cc.Label).string = data['bank_number'];\r\n        item['data'] = data;\r\n        item.active = true;\r\n    }\r\n    onClickItemAgency(even) {\r\n        //api?c=2033&code=367457&key=&nn=a&at=2&pg=1&mi=10\",\r\n        if (even.target['data'].rank < 1) {\r\n            App.instance.showToast(App.instance.getTextLang('txt_agency_note1'));\r\n        } else {\r\n            let dataAgency = even.target['data'];\r\n            //  cc.log(\"dataAgency:\", dataAgency);\r\n            this.currentDataDaily = dataAgency;\r\n            this.lbNameAgency.string = dataAgency['nameagent'];\r\n            this.lbNickname.string = dataAgency['nickname'];\r\n            let listBankAgency = [];\r\n            this.currentBankDaily = null;\r\n            this.toggleDropBankAgency.isChecked = false;\r\n            this.toggleDropBankAgency.node.parent.getChildByName('lbCurrentBank').getComponent('MultiLanguage').updateText();\r\n            if (dataAgency['banks'] != null) {\r\n                listBankAgency = JSON.parse(dataAgency['banks']);\r\n            }\r\n            this.setInfoDropBankAgency(listBankAgency);\r\n        }\r\n\r\n    }\r\n    onClickItemDetail(even) {\r\n        let idAgency = even.target.parent['data']['code'];\r\n        this.listBank = [];\r\n        this.scrBankList.scrollView.content.children.forEach((item) => {\r\n            item.active = false;\r\n        })\r\n        Http.get(Configs.App.API2, { \"c\": 2033, \"code\": idAgency, \"nn\": Configs.Login.Nickname, \"at\": Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            //  cc.log(res);\r\n            if (err != null) return;\r\n            if (res[\"success\"] && res['data'] != null) {\r\n                this.listBank = res['data'];\r\n                this.scrBankList.setDataList(this.setDataItemBank, this.listBank);\r\n                this.popupBankInfo.show();\r\n            }\r\n        });\r\n    }\r\n    onClickSearch() {\r\n        let keySearch = this.edbSearch.string.trim().toLowerCase();;\r\n        if (keySearch == \"\") {\r\n            this.scrAgency.setDataList(this.setDataItem, this.listAgency);\r\n            return;\r\n        }\r\n        let paramsSearch = \"\";\r\n        this.listSearchAgency = [];\r\n        if (this.typeSearch == TYPE_SEARCH.REGION) {\r\n            paramsSearch = 'address';\r\n        } else if (this.typeSearch == TYPE_SEARCH.NICKNAME) {\r\n            paramsSearch = \"nickname\";\r\n        } else {\r\n            paramsSearch = \"phone\";\r\n        }\r\n        this.listAgency.forEach((item) => {\r\n            if (item[paramsSearch] != null) {\r\n                if (item[paramsSearch].toLowerCase().includes(keySearch))\r\n                    this.listSearchAgency.push(item);\r\n            }\r\n        })\r\n        this.scrAgency.setDataList(this.setDataItem, this.listSearchAgency);\r\n\r\n    }\r\n    onClickTypeSearch(even, data) {\r\n        this.typeSearch = parseInt(data);\r\n\r\n    }\r\n    onEdbChange() {\r\n        if (this.edbSearch.string.trim() == \"\") {\r\n            this.scrAgency.setDataList(this.setDataItem, this.listAgency);\r\n        }\r\n    }\r\n    onClickFacebook(even) {\r\n        let fbLink = even.target.parent['data']['facebook'];\r\n        cc.sys.openURL(fbLink);\r\n    }\r\n\tonClickTelegram(even) {\r\n        let tlLink = even.target.parent['data']['site'];\r\n        cc.sys.openURL(tlLink);\r\n    }\r\n    edbChanged() {\r\n        this.lbChipReceive.string = this.edbMoney.string + \" XU\";\r\n\r\n    }\r\n\t\r\n\t\r\n\tactBankUpdate() {\r\n            \r\n\r\n             \r\n                \r\n                    let cb = (prefab) => {\r\n                        let popupProfile = cc.instantiate(prefab).getComponent(\"Lobby.PopupProfile\");\r\n                        App.instance.node.addChild(popupProfile.node);\r\n                        this.popupProfile = popupProfile;\r\n                        this.popupProfile.showTabBank();\r\n                    }\r\n                    BundleControl.loadPrefabPopup(\"PrefabPopup/PopupProfile\", cb);\r\n                \r\n\r\n            \r\n\r\n        }\r\n\t\r\n\t\r\n\t\r\n    onClickConfirm() {\r\n        let agencyName = this.lbNameAgency.string.trim();\r\n        let nickname = this.lbNickname.string.trim();\r\n        let amount = Utils.ToInt(this.edbMoney.string.trim());\r\n        let transactionID = this.generateTransMsg();\r\n        if (this.tab == TAB.CASHIN) {\r\n            if (agencyName == \"\" || nickname == \"\" || amount == 0 || this.currentDataDaily == null || this.currentDataUser == null) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n                return;\r\n            }\r\n            let dataCashIn = Object.create({});\r\n            dataCashIn['nameagent'] = agencyName;\r\n            dataCashIn['nickname'] = nickname;\r\n            dataCashIn['amount'] = amount;\r\n            dataCashIn['cid'] = transactionID;\r\n            dataCashIn['usernamebank'] = this.currentDataUser['bankName'];\r\n            dataCashIn['agencynamebank'] = this.currentBankDaily['bank_name'];\r\n            dataCashIn['bank_number'] = this.currentBankDaily['bank_number'];\r\n            dataCashIn['agencyID'] = this.currentDataDaily['code'];\r\n            dataCashIn['userbanknumber'] = this.currentDataUser[\"bankNumber\"];\r\n            this.popupConfirm.setInfoCashIn(dataCashIn);\r\n            this.popupConfirm.show();\r\n        } else {\r\n            if (agencyName == \"\" || nickname == \"\" || amount == 0) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n                return;\r\n            }\r\n            let dataCashOut = Object.create({});\r\n            dataCashOut['nameagent'] = agencyName;\r\n            dataCashOut['nickname'] = nickname;\r\n            dataCashOut['amount'] = amount;\r\n            dataCashOut['agencyID'] = this.currentDataDaily['code'];\r\n            dataCashOut['userbankname'] = this.currentDataUser[\"bankName\"];\r\n            dataCashOut['useraccountname'] = this.currentDataUser[\"customerName\"];\r\n            dataCashOut['userbanknumber'] = this.currentDataUser[\"bankNumber\"];\r\n            this.popupConfirm.setInfoCashOut(dataCashOut);\r\n            this.popupConfirm.show();\r\n        }\r\n    }\r\n    setInfoDropBankUser(data) {\r\n        //  cc.log(\"setInfoDropBankUser:\", data);\r\n        this.dropBankUser.children.forEach((item) => {\r\n            item.active = false;\r\n        });\r\n        for (let i = 0; i < data.length; i++) {\r\n            let itemBank = this.dropBankUser.children[i];\r\n            if (!cc.isValid(itemBank)) {\r\n                itemBank = cc.instantiate(this.dropBankUser.children[0])\r\n                itemBank.parent = this.dropBankUser;\r\n            }\r\n            itemBank.active = true;\r\n            itemBank.getComponentInChildren(cc.Label).string = data[i]['bankName'];\r\n            itemBank['data'] = data[i];\r\n        }\r\n    }\r\n    setInfoDropBankAgency(data) {\r\n        if (data.length > 0) {\r\n            this.dropBankAgency.children.forEach((item) => {\r\n                item.active = false;\r\n            })\r\n            //  cc.log(\"data:\", data);\r\n            for (let i = 0; i < data.length; i++) {\r\n                let itemBank = this.dropBankAgency.children[i];\r\n                if (!cc.isValid(itemBank)) {\r\n                    itemBank = cc.instantiate(this.dropBankAgency.children[0])\r\n                    itemBank.parent = this.dropBankAgency;\r\n                }\r\n                itemBank.active = true;\r\n                itemBank.getComponentInChildren(cc.Label).string = data[i]['bank_name'];\r\n                if (itemBank.getComponentInChildren(cc.Label).string.length > 20) {\r\n                    itemBank.getComponentInChildren(cc.Label).string = itemBank.getComponentInChildren(cc.Label).string.slice(0, 20) + \"...\";\r\n                }\r\n                itemBank['data'] = data[i];\r\n            }\r\n        }\r\n    }\r\n    onClickItemBankUser(even, data) {\r\n        this.toggleDropBankUser.isChecked = false;\r\n        //  cc.log(\"onClickItemBankUser:\", even.target['data']);\r\n        if (even.target['data'] != null) {\r\n            this.toggleDropBankUser.node.parent.getChildByName('lbCurrentBank').getComponent(cc.Label).string = even.target['data']['bankName'];\r\n            this.currentDataUser = even.target['data'];\r\n        }\r\n    }\r\n    onClickItemBankAgency(even, data) {\r\n        this.toggleDropBankAgency.isChecked = false;\r\n        if (even.target['data'] != null) {\r\n            this.toggleDropBankAgency.node.parent.getChildByName('lbCurrentBank').getComponent(cc.Label).string = even.target['data']['bank_name'];\r\n            this.currentBankDaily = even.target['data'];\r\n        }\r\n    }\r\n    onChangeTab(even, data) {\r\n        //  cc.log(\"onchangetab\");\r\n        switch (parseInt(data)) {\r\n            case TAB.CASHIN:\r\n                this.tab = parseInt(data);\r\n                this.nodeTransfer.active = true;\r\n                this.nodeHistory.active = false;\r\n                this.edbTransID.node.active = false;\r\n                this.nodeBankUser.active = true;\r\n                this.nodeBankAgency.active = true;\r\n                this.maxPage = 1;\r\n                this.page = 1;\r\n                break;\r\n            case TAB.CASHOUT:\r\n                this.tab = parseInt(data);\r\n                this.nodeTransfer.active = true;\r\n                this.nodeHistory.active = false;\r\n                this.edbTransID.node.active = false;\r\n                this.nodeBankAgency.active = false;\r\n                this.maxPage = 1;\r\n                this.page = 1;\r\n                break;\r\n            case TAB.HISTORY:\r\n                this.nodeTransfer.active = false;\r\n                this.nodeHistory.active = true;\r\n                this.loadDataHistory();\r\n                break;\r\n        }\r\n    }\r\n    loadDataHistory() {\r\n        let params;\r\n        if (this.tab == 0) {//cashin\r\n            params = { \"c\": 2016, \"nn\": Configs.Login.Nickname, \"tt\": 0, \"p\": this.page, \"mi\": 5 };\r\n        } else {//cashout\r\n            params = { \"c\": 2016, \"nn\": Configs.Login.Nickname, \"tt\": 1, \"p\": this.page, \"mi\": 5 };\r\n        }\r\n        Http.get(Configs.App.API2, params, (err, res) => {\r\n            //  cc.log(res);\r\n            App.instance.showLoading(false);\r\n            if (err != null) {\r\n                return;\r\n            }\r\n            if (res['success']) {\r\n                if (res['totalRecords'] <= 5) {\r\n                    this.maxPage = 1;\r\n                } else {\r\n                    this.maxPage = res['totalRecords'] % 5 == 0 ? (res['totalRecords'] % 5) : Math.floor(res['totalRecords'] / 5) + 1;\r\n                }\r\n                this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n                this.setHistory(res['data']);\r\n            }\r\n        });\r\n    }\r\n    setHistory(data) {\r\n        this.itemHistoryContainer.children.forEach((item) => {\r\n            item.active = false;\r\n        })\r\n        for (let i = 0; i < data.length; i++) {\r\n            let item = this.itemHistoryContainer.children[i];\r\n            if (!cc.isValid(item)) {\r\n                item = cc.instantiate(this.itemHistoryContainer.children[0])\r\n                item.parent = this.itemHistoryContainer;\r\n            }\r\n            item.active = true;\r\n            item.getChildByName('lbTime').getComponent(cc.Label).string = data[i]['CreatedAt'].replace(\" \", \"\\n\");\r\n            item.getChildByName('lbBank').getComponent(cc.Label).string = data[i]['BankCode'];\r\n            item.getChildByName('lbAmount').getComponent(cc.Label).string = Utils.formatMoney(data[i]['Amount']);\r\n            switch (data[i]['Status']) {\r\n                case 0:\r\n                    item.getChildByName(\"lbStatus\").getComponent(cc.Label).string = App.instance.getTextLang('txt_pending');\r\n                    item.getChildByName(\"lbStatus\").color = cc.Color.YELLOW;\r\n                    break;\r\n                case 2:\r\n                    item.getChildByName(\"lbStatus\").getComponent(cc.Label).string = App.instance.getTextLang('txt_success');\r\n                    item.getChildByName(\"lbStatus\").color = cc.Color.GREEN;\r\n                    break;\r\n                case 3:\r\n                    item.getChildByName(\"lbStatus\").getComponent(cc.Label).string = App.instance.getTextLang('txt_failed');\r\n                    item.getChildByName(\"lbStatus\").color = cc.Color.RED;\r\n                    break;\r\n                case 4:\r\n                    item.getChildByName(\"lbStatus\").getComponent(cc.Label).string = App.instance.getTextLang('txt_completed');\r\n                    item.getChildByName(\"lbStatus\").color = cc.Color.GREEN;\r\n                    break;\r\n                case 12:\r\n                    item.getChildByName(\"lbStatus\").getComponent(cc.Label).string = App.instance.getTextLang('txt_request_cashout');\r\n                    item.getChildByName(\"lbStatus\").color = cc.Color.CYAN;\r\n                    break;\r\n                default:\r\n                    item.getChildByName(\"lbStatus\").getComponent(cc.Label).string = App.instance.getTextLang('txt_receive2');\r\n                    item.getChildByName(\"lbStatus\").color = cc.Color.WHITE;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadDataHistory();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadDataHistory();\r\n        }\r\n    }\r\n\tgenerateTransMsg() {\r\n        return (Configs.Login.Nickname + \"-Bentley\");\r\n    }\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nvar TW = cc.tween;\r\n@ccclass\r\nexport default class PopupDiemDanh1 extends Dialog {\r\n\r\n    @property(sp.Skeleton)\r\n    animBox: sp.Skeleton = null;\r\n    @property(sp.Skeleton)\r\n    animChip: sp.Skeleton = null;\r\n    @property([sp.Skeleton])\r\n    animGlow: sp.Skeleton[] = [];\r\n    @property([cc.Node])\r\n    listDot: cc.Node[] = [];\r\n    @property([cc.Node])\r\n    listBgConsecutive: cc.Node[] = [];\r\n    @property([cc.Label])\r\n    listLbBonus: cc.Label[] = [];\r\n\r\n    @property(sp.Skeleton)\r\n    animDice1: sp.Skeleton = null;\r\n\r\n    @property(sp.Skeleton)\r\n    animDice2: sp.Skeleton = null;\r\n\r\n    @property(sp.Skeleton)\r\n    animDice3: sp.Skeleton = null;\r\n\r\n    @property(cc.Sprite)\r\n    sprDice1: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    sprDice2: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    sprDice3: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    sprProgress: cc.Sprite = null;\r\n\r\n\r\n    @property(cc.Label)\r\n    lbRewardNormal: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lbBonusDiemDanh: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbBonusVip: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbTotal: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbResultDice: cc.Label = null;\r\n    @property(cc.Button)\r\n    btnSpin: cc.Button = null;\r\n\r\n    @property(Dialog)\r\n    PopupGuide: Dialog = null;\r\n\r\n    @property([cc.SpriteFrame])\r\n    listSprDice: cc.SpriteFrame[] = [];\r\n    // LIFE-CYCLE CALLBACKS:\r\n    // onLoad () {}\r\n    listFillRange = [0.1, 0.21, 0.365, 0.53, 0.68, 0.85, 1.0];\r\n    listPosChip = [-253, -164, -83, 0, 83, 164, 253];\r\n    currentProgress = 0;\r\n    start() {\r\n        this.animChip.setCompleteListener(() => {\r\n            this.animChip.node.active = false;\r\n        })\r\n    }\r\n    onEnable() {\r\n        this.setInfo();\r\n    }\r\n    loadData() {\r\n        //  cc.log(\"loadData\");\r\n        Http.get(Configs.App.API, { c: \"2031\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, ac: \"get\" }, (err, res) => {\r\n            //  cc.log(\"DIEMDANH:\", res);\r\n            if (res[\"success\"] == true) {\r\n                this.btnSpin.interactable = true;\r\n                this.btnSpin.node.children[0].color = cc.Color.WHITE;\r\n                this.container.getChildByName('resultContainer').active = true;\r\n                this.container.getChildByName('lbInfo').active = false;\r\n            }\r\n            else {\r\n                this.btnSpin.interactable = false;\r\n                this.btnSpin.node.children[0].color = cc.Color.GRAY;\r\n                this.container.getChildByName('resultContainer').active = false;\r\n                this.container.getChildByName('lbInfo').active = true;\r\n            }\r\n            if (res['data'] != null) {\r\n                this.currentProgress = parseInt(res['data']);\r\n                if (this.currentProgress == 0) {\r\n                    // this.sprChipToday.node.active = false;\r\n                    this.sprProgress.fillRange = 0;\r\n                } else {\r\n                    this.sprProgress.fillRange = this.listFillRange[this.currentProgress - 1];\r\n                    // this.sprChipToday.node.x = this.listPosChip[this.currentProgress - 1];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    setHistory() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { c: \"2031\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, ac: \"history\" }, (err, res) => {\r\n            // res = JSON.parse('{\"success\":true,\"errorCode\":\"0\",\"message\":null,\"statistic\":null,\"totalRecords\":0,\"data\":[{\"date\":\"2021-10-27\",\"ratioBonus\":0,\"consecutive\":0},{\"date\":\"2021-10-28\",\"ratioBonus\":0,\"consecutive\":1},{\"date\":\"2021-10-29\",\"ratioBonus\":10,\"consecutive\":2},{\"date\":\"2021-10-30\",\"ratioBonus\":0,\"consecutive\":0},{\"date\":\"2021-10-31\",\"ratioBonus\":0,\"consecutive\":1},{\"date\":\"2021-11-01\",\"ratioBonus\":10,\"consecutive\":2},{\"date\":\"2021-11-02\",\"ratioBonus\":20,\"consecutive\":3}]}');\r\n            App.instance.showLoading(false);\r\n            if (res[\"success\"] == true) {\r\n                let dataHis = res['data'];\r\n                //  cc.log(dataHis.length);\r\n                for (let i = 0; i < dataHis.length; i++) {\r\n                    if (dataHis[i]['consecutive'] != 0) {\r\n                        this.listDot[i].active = true;\r\n                        this.listLbBonus[i].node.active = true;\r\n                        this.listLbBonus[i].string = \"+\" + dataHis[i]['ratioBonus'] + \"%\";\r\n                        if (i < dataHis.length - 1 && dataHis[i + 1]['consecutive'] > 1) {\r\n                            this.listBgConsecutive[i].active = true;\r\n                        }\r\n                    } else {\r\n                        this.listDot[i].active = false;\r\n                        this.listLbBonus[i].node.active = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    setInfo() {\r\n        this.lbResultDice.node.active = false;\r\n        this.lbRewardNormal.node.active = false;\r\n        this.lbBonusDiemDanh.node.active = false;\r\n        this.lbBonusVip.node.active = false;\r\n        this.lbTotal.node.active = false;\r\n        this.animDice1.node.active = false;\r\n        this.animDice2.node.active = false;\r\n        this.animDice3.node.active = false;\r\n        this.animBox.setAnimation(0, 'normal', true);\r\n        this.lbBonusVip.node.active = this.lbBonusDiemDanh.node.active = this.lbResultDice.node.active = this.lbRewardNormal.node.active = this.lbTotal.node.active = false;\r\n        this.animChip.node.active = false;\r\n        this.loadData();\r\n        this.setHistory();\r\n        for (let i = 0; i < 7; i++) {\r\n            this.listLbBonus[i].node.active = false;\r\n            this.listDot[i].active = false;\r\n        }\r\n    }\r\n    onClickReceive() {\r\n        //\r\n\r\n        this.btnSpin.getComponentInChildren(sp.Skeleton).node.color = cc.Color.GRAY;\r\n        this.btnSpin.interactable = false;\r\n        // let res = JSON.parse('{\"success\":true,\"errorCode\":\"0\",\"message\":null,\"statistic\":null,\"totalRecords\":0,\"data\":{\"id\":0,\"attend_id\":1,\"nick_name\":\"ChiLynDay\",\"date_attend\":\"2021-09-23 12:25:26\",\"consecutive\":1,\"bonus_basic\":8400,\"bonus_consecutive\":840,\"bonus_vip\":0,\"spin\":\"2-2-3\",\"result\":\"2-2-3\"}}');\r\n        Http.get(Configs.App.API, { c: \"2031\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, ac: \"receive\" }, (err, res) => {\r\n            //  cc.log(\"Daily:\" + JSON.stringify(res));\r\n            if (res[\"success\"] && res['data'] != null) {\r\n                this.setResult(res['data']['result'].split(\"-\"));\r\n                this.lbRewardNormal.string = Utils.formatNumber(res['data']['bonus_basic']);\r\n                this.lbBonusDiemDanh.string = Utils.formatNumber(res['data']['bonus_consecutive']);\r\n                this.lbBonusVip.string = Utils.formatNumber(res['data']['bonus_vip']);\r\n                this.lbTotal.string = Utils.formatNumber(res['data']['bonus_vip'] + res['data']['bonus_basic'] + res['data']['bonus_consecutive']);\r\n                Configs.Login.Coin += (res['data']['bonus_vip'] + res['data']['bonus_basic'] + res['data']['bonus_consecutive']);\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                this.currentProgress++;\r\n                this.setHistory();\r\n            }\r\n            else {\r\n                App.instance.showToast(App.instance.getTextLang('txt_unknown_error1'));\r\n            }\r\n        });\r\n    }\r\n    setResult(listDice) {\r\n        this.animBox.setAnimation(0, \"ban\", true);\r\n        this.animDice1.node.active = true;\r\n        this.animDice2.node.active = true;\r\n        this.animDice3.node.active = true;\r\n        this.animDice1.setAnimation(0, \"1_\" + listDice[0], false);\r\n        this.animDice2.setAnimation(0, \"2_\" + listDice[1], false);\r\n        this.animDice3.setAnimation(0, \"3_\" + listDice[2], false);\r\n        this.animDice3.setCompleteListener(() => {\r\n            this.animBox.setAnimation(0, \"ban\", true);\r\n            this.animBox.paused = true;\r\n            this.sprDice1.node.getComponent(cc.Animation).stop();\r\n            this.sprDice2.node.getComponent(cc.Animation).stop();\r\n            this.sprDice3.node.getComponent(cc.Animation).stop();\r\n            this.sprDice1.spriteFrame = this.listSprDice[listDice[0] - 1];\r\n            this.sprDice2.spriteFrame = this.listSprDice[listDice[1] - 1];\r\n            this.sprDice3.spriteFrame = this.listSprDice[listDice[2] - 1];\r\n            this.lbResultDice.node.active = true;\r\n            this.lbResultDice.string = (parseInt(listDice[0]) + parseInt(listDice[1]) + parseInt(listDice[2])) + \"\";\r\n            this.effLabelResult();\r\n\r\n        })\r\n        this.sprDice1.node.getComponent(cc.Animation).play();\r\n        this.sprDice2.node.getComponent(cc.Animation).play();\r\n        this.sprDice3.node.getComponent(cc.Animation).play();\r\n    }\r\n\r\n    effLabelResult() {\r\n        let timeEff = 0.75;\r\n        let effLb = TW().set({ scale: 5.0, opacity: 0 })\r\n            .to(timeEff, { scale: 1.0, opacity: 255 }, { easing: cc.easing.sineIn });\r\n        TW(this.node)\r\n            .call(() => {\r\n                this.lbRewardNormal.node.active = true;\r\n                effLb.clone(this.lbRewardNormal.node).start();\r\n                this.animGlow[0].node.active = true;\r\n                this.animGlow[0].setAnimation(0, \"animation\", false);\r\n                this.animGlow[0].node.x = this.lbRewardNormal.node.x;\r\n                this.animGlow[0].setCompleteListener(() => {\r\n                    this.animGlow[0].node.active = false;\r\n                })\r\n\r\n            })\r\n            .delay(timeEff - 0.25)\r\n            .call(() => {\r\n                this.lbBonusDiemDanh.node.active = true;\r\n                effLb.clone(this.lbBonusDiemDanh.node).start();\r\n                this.animGlow[1].node.active = true;\r\n                this.animGlow[1].setAnimation(0, \"animation\", false);\r\n                this.animGlow[1].node.x = this.lbBonusDiemDanh.node.x;\r\n                this.animGlow[1].setCompleteListener(() => {\r\n                    this.animGlow[0].node.active = false;\r\n                })\r\n            })\r\n            .delay(timeEff - 0.25)\r\n            .call(() => {\r\n                this.lbBonusVip.node.active = true;\r\n                effLb.clone(this.lbBonusVip.node).start();\r\n                this.animGlow[2].node.active = true;\r\n                this.animGlow[2].setAnimation(0, \"animation\", false);\r\n                this.animGlow[2].node.x = this.lbBonusVip.node.x;\r\n                this.animGlow[2].setCompleteListener(() => {\r\n                    this.animGlow[2].node.active = false;\r\n                })\r\n            })\r\n            .delay(timeEff - 0.25)\r\n            .call(() => {\r\n                this.lbTotal.node.active = true;\r\n                effLb.clone(this.lbTotal.node).start();\r\n                this.animGlow[3].node.active = true;\r\n                this.animGlow[3].setAnimation(0, \"animation\", false);\r\n                this.animGlow[3].node.x = this.lbTotal.node.x;\r\n                this.animGlow[3].setCompleteListener(() => {\r\n                    this.animGlow[3].node.active = false;\r\n                })\r\n            })\r\n            .delay(timeEff)\r\n            .call(() => {\r\n                this.animChip.node.active = true;\r\n                this.animChip.setAnimation(0, \"animation\", false);\r\n            })\r\n            .start();\r\n    }\r\n    onClickGuide() {\r\n        this.PopupGuide.show();\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupEventLogin extends Dialog {\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    show() {\r\n        super.show();\r\n        // for (let i = 0; i < this.itemTemplate.parent.childrenCount; i++) {\r\n        //     this.itemTemplate.parent.children[i].active = false;\r\n        // }\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        // for (let i = 0; i < this.itemTemplate.parent.childrenCount; i++) {\r\n        //     this.itemTemplate.parent.children[i].active = false;\r\n        // }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n       // this.loadData();\r\n    }\r\n\r\n    private getItem(): cc.Node {\r\n        let item = null;\r\n        for (let i = 0; i < this.itemTemplate.parent.childrenCount; i++) {\r\n            let node = this.itemTemplate.parent.children[i];\r\n            if (node != this.itemTemplate && !node.active) {\r\n                item = node;\r\n                break;\r\n            }\r\n        }\r\n        if (item == null) {\r\n            item = cc.instantiate(this.itemTemplate);\r\n            item.parent = this.itemTemplate.parent;\r\n        }\r\n        item.active = true;\r\n        return item;\r\n    }\r\n\r\n    // sau sẽ load sựu kiện từ s\r\n    private loadData() {\r\n        // App.instance.showLoading(true);\r\n        // Http.get(Configs.App.API, { \"c\": 401 }, (err, res) => {\r\n        //     App.instance.showLoading(false);\r\n        //     if (err != null) return;\r\n        //     if (res[\"success\"]) {\r\n        //         for (let i = 0; i < res[\"transactions\"].length; i++) {\r\n        //             let itemData = res[\"transactions\"][i];\r\n        //             let nickname = itemData[\"nickName\"];\r\n        //             let item = this.getItem();\r\n        //             item.getChildByName(\"bg\").opacity = i % 2 == 0 ? 10 : 0;\r\n        //             item.getChildByName(\"No.\").getComponent(cc.Label).string = (i + 1).toString();\r\n        //             item.getChildByName(\"Fullname\").getComponent(cc.Label).string = itemData[\"fullName\"];\r\n        //             item.getChildByName(\"Nickname\").getComponent(cc.Label).string = nickname;\r\n        //             item.getChildByName(\"Phone\").getComponent(cc.Label).string = itemData[\"mobile\"];\r\n        //             item.getChildByName(\"Phone\").color = cc.Color.WHITE;\r\n        //             item.getChildByName(\"Phone\").off(\"click\");\r\n        //             if (itemData[\"mobile\"] && itemData[\"mobile\"].trim().length > 0 && itemData[\"mobile\"].trim()[0] != \"0\") {\r\n        //                 item.getChildByName(\"Phone\").color = cc.Color.CYAN;\r\n        //                 item.getChildByName(\"Phone\").on(\"click\", () => {\r\n        //                     App.instance.openTelegram(itemData[\"mobile\"]);\r\n        //                 });\r\n        //             }\r\n        //             item.getChildByName(\"Address\").getComponent(cc.Label).string = itemData[\"address\"];\r\n        //             item.getChildByName(\"BtnFacebook\").off(\"click\");\r\n        //             item.getChildByName(\"BtnFacebook\").on(\"click\", () => {\r\n        //                 cc.sys.openURL(itemData[\"facebook\"]);\r\n        //             });\r\n        //             item.getChildByName(\"BtnTransfer\").off(\"click\");\r\n        //             item.getChildByName(\"BtnTransfer\").on(\"click\", () => {\r\n        //                 //App.instance.ShowAlertDialog(\"Tính năng đang tạm khóa\");\r\n        //                 App.instance.popupShop.showAndOpenTransfer(nickname);\r\n        //             });\r\n        //         }\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    public actOpen() {\r\n        App.instance.openTelegram(Configs.App.getLinkTelegram());\r\n    }\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupForgetPassword extends Dialog {\r\n    @property(cc.Node)\r\n    info: cc.Node = null;\r\n    @property(cc.Node)\r\n    continue: cc.Node = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbUsername: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    edbCaptcha: cc.EditBox = null;\r\n    @property(cc.Sprite)\r\n    sprCaptcha: cc.Sprite = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbOTP: cc.EditBox = null;\r\n    @property(cc.Toggle)\r\n    toggleAppOTP: cc.Toggle = null;\r\n\r\n    private captchaId;\r\n\r\n    show() {\r\n        super.show();\r\n        this.info.active = true;\r\n        this.continue.active = false;\r\n        this.toggleAppOTP.isChecked = false;\r\n        this.edbCaptcha.string = \"\";\r\n        this.edbUsername.string = \"\";\r\n        this.edbOTP.string = \"\";\r\n        this.actRefreshCaptcha();\r\n    }\r\n\r\n    public actRefreshCaptcha() {\r\n        Http.get(Configs.App.API, { \"c\": 124 }, (err, res) => {\r\n            if (err != null) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error'));\r\n                return;\r\n            }\r\n            this.captchaId = res[\"id\"];\r\n            Utils.loadSpriteFrameFromBase64(res[\"img\"], (sprFrame) => {\r\n                this.sprCaptcha.spriteFrame = sprFrame;\r\n            });\r\n        });\r\n    }\r\n\r\n    actSubmit() {\r\n        let username = this.edbUsername.string.trim();\r\n        let captcha = this.edbCaptcha.string.trim();\r\n        if (username.length == 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_username_not_blank'));\r\n            return;\r\n        }\r\n        if (captcha.length == 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_otp_blank'));\r\n            return;\r\n        }\r\n        Http.get(Configs.App.API, { \"c\": 127, \"un\": username, \"cp\": captcha, \"cid\": this.captchaId }, (err, res) => {\r\n            if (err != null) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error1'));\r\n                return;\r\n            }\r\n            switch (res[\"errorCode\"]) {\r\n                case \"115\":\r\n                    this.edbCaptcha.string = \"\";\r\n                    this.actRefreshCaptcha();\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_incorrect_otp'));\r\n                    break;\r\n                case \"116\":\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_notify_fast_action'));\r\n                    this.edbCaptcha.string = \"\";\r\n                    this.actRefreshCaptcha();\r\n                    break;\r\n                case \"1001\":\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_check_connect'));\r\n                    this.actRefreshCaptcha();\r\n                    break;\r\n                case \"1005\":\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_not_exsist'));\r\n                    this.edbCaptcha.string = \"\";\r\n                    this.actRefreshCaptcha();\r\n                    break;\r\n                case \"2001\":\r\n                    App.instance.alertDialog.showMsg(\"Hệ thống không hỗ trợ các tài khoản chưa cập nhật Nickname!\");\r\n                    this.edbCaptcha.string = \"\";\r\n                    this.actRefreshCaptcha();\r\n                    break;\r\n                case \"1023\":\r\n                    this.info.active = false;\r\n                    this.continue.active = true;\r\n                    break;\r\n                default:\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error') + \"\\n\" + res[\"errorCode\"]);\r\n                    this.edbCaptcha.string = \"\";\r\n                    this.actRefreshCaptcha();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    actContinue() {\r\n        let username = this.edbUsername.string.trim();\r\n        let otp = this.edbOTP.string.trim();\r\n        if (otp.length == 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_otp_blank'));\r\n            return;\r\n        }\r\n        Http.get(Configs.App.API, { \"c\": 128, \"un\": username, \"otp\": otp, \"type\": (this.toggleAppOTP.isChecked ? 1 : 0) }, (err, res) => {\r\n            if (err != null) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error'));\r\n                return;\r\n            }\r\n            if (!res[\"success\"]) {\r\n                switch (res[\"errorCode\"]) {\r\n                    case \"1001\":\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_room_err6'));\r\n                        break;\r\n                    case \"1008\":\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_incorrect_otp'));\r\n                        break;\r\n                    case \"1021\":\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_expired_otp'));\r\n                        break;\r\n                    case \"1022\":\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_expired_otp'));\r\n                        break;\r\n                    case \"1114\":\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_room_err6'));\r\n                        break;\r\n                    default:\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error') + \"\\n\" + res[\"errorCode\"]);\r\n                        break;\r\n                }\r\n                return;\r\n            }\r\n            this.dismiss();\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_change_password_note'));\r\n        });\r\n    }\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupGameSBO extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    text: string = 'hello';\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.node.y = cc.winSize.height;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n    show() {\r\n        this.node.active = true;\r\n        cc.tween(this.node).to(0.3, { y: 0 }, { easing: cc.easing.sineIn }).call(() => {\r\n        }).start();\r\n    }\r\n    onClickGame(even, data) {\r\n        let gameName = data;\r\n        switch (data) {\r\n            case \"SportsBook\":\r\n                break;\r\n            case \"Casino\":\r\n                break;\r\n            case \"Games\":\r\n                break;\r\n            case \"VirtualSports\":\r\n                break;\r\n            case \"SeamlessGame\":\r\n                break;\r\n            case \"ThirdPartySportsBook\":\r\n                break;\r\n        }\r\n        Http.get(App.API_SBO, { t: \"Login\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, gc: gameName }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoSBO:\" + JSON.stringify(res));\r\n            App.instance.showLoading(false);\r\n            if (res[\"res\"] == 0) {\r\n                if (Configs.App.IS_PRO == true && Configs.Login.UserType != \"2\") {\r\n                    var url = \"https://mkt.l0030.ig128.com/deposit_processlogin.aspx?lang=vn&token=\" + res[\"data\"][\"data\"];\r\n                    if (cc.sys.isMobile == true) {\r\n                        url = \"https://ismart.l0030.ig128.com/deposit_processlogin.aspx?lang=vn&token=\" + res[\"data\"][\"data\"];\r\n                    }\r\n                    cc.sys.openURL(url);\r\n\r\n                }\r\n                else {\r\n                    var url = \"https:\" + res['data'] + \"&lang=vi-vn&oddstyle=MY&theme=sbo&device=\" + (cc.sys.isNative ? \"m\" : \"d\");\r\n                     ////Utils.Log(\"url=\" + url);\r\n                    cc.sys.openURL(url);\r\n                }\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res[\"message\"]);\r\n            }\r\n        });\r\n    }\r\n    onClickBack() {\r\n        cc.tween(this.node).to(0.3, { y: cc.winSize.height }, { easing: cc.easing.backIn }).call(() => {\r\n            this.node.active = false;\r\n        }).start();\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport BroadcastReceiver from \"../../Lobby/LobbyScript/Script/common/BroadcastReceiver\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass(\"PopupGameTransfer.TabCashIn\")\r\nexport class TabCashIn {\r\n    @property(cc.Label)\r\n    lblBalance: cc.Label = null;\r\n    @property(cc.EditBox)\r\n    edbCoin: cc.EditBox = null;\r\n    @property(cc.Node)\r\n    quickButtons: cc.Node = null;\r\n\r\n    private popup: PopupGameTransfer = null;\r\n\r\n    private readonly values = [50000, 100000, 200000, 500000, 1000000, 2000000, 5000000, 10000000, 20000000];\r\n\r\n    public start(popup: PopupGameTransfer) {\r\n        this.popup = popup;\r\n        this.edbCoin.node.on(\"editing-did-ended\", () => {\r\n            let number = Utils.stringToInt(this.edbCoin.string);\r\n            this.edbCoin.string = Utils.formatNumber(number);\r\n        });\r\n        for (let i = 0; i < this.quickButtons.childrenCount; i++) {\r\n            var btn = this.quickButtons.children[i];\r\n            let value = this.values[i];\r\n            btn.getComponentInChildren(cc.Label).string = Utils.formatNumber(value);\r\n            btn.on(\"click\", () => {\r\n                this.edbCoin.string = Utils.formatNumber(value);\r\n            });\r\n        }\r\n    }\r\n\r\n    public NapAG() {\r\n        var money = Utils.formatEditBox(this.edbCoin.string);\r\n        if (money > Configs.Login.Coin) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_not_enough'));\r\n            return;\r\n        }\r\n        if (this.edbCoin.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        Http.get(App.API_AG, { t: \"Deposit\", a: money / 1000, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (res[\"res\"] == 0) {\r\n                this.popup.updateInfoAG();\r\n                Configs.Login.Coin -= money;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_8'));\r\n                this.reset();\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    public NapIBC() {\r\n        var money = Utils.formatEditBox(this.edbCoin.string);\r\n        if (money > Configs.Login.Coin) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_not_enough'));\r\n            return;\r\n        }\r\n        if (this.edbCoin.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n        Http.get(App.API_IBC, { t: \"Transfer\", d: 1, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (res[\"code\"] == 0) {\r\n                this.popup.updateInfoIBC();\r\n                Configs.Login.Coin -= money;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_8'));\r\n                this.reset();\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res[\"message\"]);\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n    public NapSBO() {\r\n        var money = Utils.formatEditBox(this.edbCoin.string);\r\n        if (money > Configs.Login.Coin) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_not_enough'));\r\n            return;\r\n        }\r\n        if (this.edbCoin.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n        Http.get(App.API_SBO, { t: \"Transfer\", d: 1, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n             ////Utils.Log(\"DEPOSIT SBO:\", res);\r\n            if (res[\"res\"] == 0) {\r\n                this.popup.updateInfoSBO();\r\n                Configs.Login.Coin -= money;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_8'));\r\n                this.reset();\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res[\"message\"]);\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    public NapWM() {\r\n        var money = Utils.formatEditBox(this.edbCoin.string);\r\n        if (money > Configs.Login.Coin) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_not_enough'));\r\n            return;\r\n        }\r\n        if (this.edbCoin.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        Http.get(App.API_WM, { t: \"Transfer\", d: 1, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (res[\"res\"] == 0) {\r\n                this.popup.updateInfoWM();\r\n                Configs.Login.Coin -= money;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_8'));\r\n                this.reset();\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n            }\r\n        });\r\n    }\r\n\r\n    public NapEBET() {\r\n        var money = Utils.formatEditBox(this.edbCoin.string);\r\n        if (money > Configs.Login.Coin) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_not_enough'));\r\n            return;\r\n        }\r\n        if (this.edbCoin.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        Http.get(App.API_EBET, { t: \"Trans\", d: 1, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n             ////Utils.Log(\"Nap ebet err:\" + JSON.stringify(err));\r\n             ////Utils.Log(\"Nap ebet res:\" + JSON.stringify(res));\r\n            if (res[\"res\"] == 0) {\r\n                this.popup.updateInfoEBET();\r\n                Configs.Login.Coin -= money;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_8'));\r\n                this.reset();\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n    public napFish() {\r\n        var money = Utils.formatEditBox(this.edbCoin.string);\r\n        if (money > Configs.Login.Coin) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_not_enough'));\r\n            return;\r\n        }\r\n        if (this.edbCoin.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { c: 2022, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, mn: money }, (err, res) => { //check balance \r\n            App.instance.showLoading(false);\r\n             ////Utils.Log(\"Deposit ShootFish:\", res);\r\n            if (res[\"errorCode\"] == \"0\") {\r\n                 ////Utils.Log(\"Deposit ShootFish Succes\");\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_8') + \" \" + Utils.formatNumber(money));\r\n                Configs.Login.Coin -= money;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                this.reset();\r\n            } else {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_unknown_error1'));\r\n            }\r\n        });\r\n    }\r\n\r\n    public submit() {\r\n        let coin = Utils.stringToInt(this.edbCoin.string);\r\n        let minAmount = 1000;\r\n        if (this.popup.typeGame == \"FISH\") {\r\n            minAmount = 10000;\r\n        }\r\n        if (coin < minAmount) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_money_error') + \"\\n\" + App.instance.getTextLang('txt_money_error2') + Utils.formatNumber(minAmount) + \" VND\");\r\n            return;\r\n        }\r\n        if (this.popup.typeGame == \"AG\") {\r\n            this.NapAG();\r\n        }\r\n        else if (this.popup.typeGame == \"IBC\") {\r\n            this.NapIBC();\r\n        }\r\n        else if (this.popup.typeGame == \"SBO\") {\r\n            this.NapSBO();\r\n        }\r\n        else if (this.popup.typeGame == \"WM\") {\r\n            this.NapWM();\r\n        }\r\n        else if (this.popup.typeGame == \"EBET\") {\r\n            this.NapEBET();\r\n        }\r\n        else if (this.popup.typeGame == \"FISH\") {\r\n            this.napFish();\r\n        }\r\n\r\n    }\r\n\r\n    public reset() {\r\n        this.edbCoin.string = \"\";\r\n        this.lblBalance.string = Utils.formatNumber(Configs.Login.Coin);\r\n        for (let i = 0; i < this.quickButtons.childrenCount; i++) {\r\n            this.quickButtons.children[i].getComponent(cc.Toggle).isChecked = false;\r\n        }\r\n    }\r\n}\r\n\r\n@ccclass(\"PopupGameTransfer.TabCashOut\")\r\nexport class TabCashOut {\r\n    @property(cc.Label)\r\n    lblBalance: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblTitleBalance: cc.Label = null;\r\n    @property(cc.EditBox)\r\n    edbCoin: cc.EditBox = null;\r\n    @property(cc.Node)\r\n    quickButtons: cc.Node = null;\r\n\r\n    private popup: PopupGameTransfer = null;\r\n\r\n    private readonly values = [50000, 100000, 200000, 500000, 1000000, 2000000, 5000000, 10000000, 20000000];\r\n    currentBalance = 0;\r\n    public start(popup: PopupGameTransfer) {\r\n        this.popup = popup;\r\n        // this.lblTitleBalance.string = \"Số dư \" + this.popup.typeGame;\r\n        this.edbCoin.node.on(\"editing-did-ended\", () => {\r\n            let number = Utils.stringToInt(this.edbCoin.string);\r\n            this.edbCoin.string = Utils.formatNumber(number);\r\n        });\r\n        for (let i = 0; i < this.quickButtons.childrenCount; i++) {\r\n            var btn = this.quickButtons.children[i];\r\n            let value = this.values[i];\r\n            btn.getComponentInChildren(cc.Label).string = Utils.formatNumber(value);\r\n            btn.on(\"click\", () => {\r\n                this.edbCoin.string = Utils.formatNumber(value);\r\n            });\r\n        }\r\n    }\r\n\r\n    public RutAG() {\r\n        var money = Utils.formatEditBox(this.edbCoin.string) / 1000;\r\n        if (this.edbCoin.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n\r\n        if (money * 1000 > this.popup.balance) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        Http.get(App.API_AG, { t: \"Withdraw\", a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n\r\n            if (res[\"res\"] == 0) {\r\n                this.popup.updateInfoAG();\r\n                Configs.Login.Coin += money * 1000;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_5'));\r\n                this.reset();\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n            }\r\n        });\r\n    }\r\n\r\n    public RutIBC() {\r\n        var money = Utils.formatEditBox(this.edbCoin.string);\r\n        if (money > this.popup.balance) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n            return;\r\n        }\r\n        if (this.edbCoin.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n         ////Utils.Log(\"RutIBC:\" + money);\r\n        //ibc\r\n        App.instance.showLoading(true);\r\n        Http.get(App.API_IBC, { t: \"Transfer\", d: 0, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (res[\"code\"] == 0) {\r\n                this.popup.updateInfoIBC();\r\n                Configs.Login.Coin += money;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_5'));\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res[\"message\"]);\r\n            }\r\n        });\r\n    }\r\n    public RutSBO() {\r\n        var money = Utils.formatEditBox(this.edbCoin.string);\r\n        if (money > this.popup.balance) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n            return;\r\n        }\r\n        if (this.edbCoin.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n         ////Utils.Log(\"RutSBO:\" + money);\r\n        //sbo\r\n        App.instance.showLoading(true);\r\n        Http.get(App.API_SBO, { t: \"Transfer\", d: 0, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (res[\"res\"] == 0) {\r\n                this.popup.updateInfoSBO();\r\n                Configs.Login.Coin += money;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_5'));\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res[\"message\"]);\r\n            }\r\n        });\r\n    }\r\n\r\n    public RutWM() {\r\n        var money = Utils.formatEditBox(this.edbCoin.string);\r\n        if (money > this.popup.balance) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n            return;\r\n        }\r\n        if (this.edbCoin.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n\r\n        //ibc\r\n        App.instance.showLoading(true);\r\n        Http.get(App.API_WM, { t: \"Transfer\", d: 0, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n             ////Utils.Log(\"withDraw IBC:\" + JSON.stringify(res));\r\n            if (res[\"res\"] == 0) {\r\n                this.popup.updateInfoWM();\r\n                Configs.Login.Coin += money;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_5'));\r\n                this.reset();\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n            }\r\n        });\r\n    }\r\n\r\n    public RutEBET() {\r\n        var money = Utils.formatEditBox(this.edbCoin.string);\r\n        if (money > this.popup.balance) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n            return;\r\n        }\r\n        if (this.edbCoin.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n        if (money < 50000) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_min_transfer') + \"50.000\");\r\n            return;\r\n        }\r\n\r\n        App.instance.showLoading(true);\r\n        Http.get(App.API_EBET, { t: \"Trans\", d: 0, a: money, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n             ////Utils.Log(\"RutEBET:\", res);\r\n            if (res[\"res\"] == 0) {\r\n                this.popup.updateInfoEBET();\r\n                Configs.Login.Coin += money;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_5'));\r\n                this.reset();\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res[\"msg\"]);\r\n            }\r\n        });\r\n    }\r\n    public RutFish() {\r\n        var money = Utils.formatEditBox(this.edbCoin.string);\r\n        if (money > this.popup.balance) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_not_enough\"));\r\n            return;\r\n        }\r\n        if (this.edbCoin.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n        if (money < 50000) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_min_transfer') + \"50.000\");\r\n            return;\r\n        }\r\n        Http.get(Configs.App.API, { c: 2023, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, mn: money }, (err, res) => { //check balance \r\n            App.instance.showLoading(false);\r\n             ////Utils.Log(\"WithDraw ShootFish:\", res);\r\n            if (res[\"errorCode\"] == \"0\") {\r\n                 ////Utils.Log(\"Withdraw Succes\");\r\n                Configs.Login.Coin += money;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_note_transfer_9') + Utils.formatNumber(money) + \"\\n\" + App.instance.getTextLang('txt_note_transfer_10'));\r\n                this.popup.balance = res.data.Balance;\r\n                this.reset();\r\n            } else {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_unknown_error1'));\r\n            }\r\n        });\r\n    }\r\n    public submit() {\r\n        let coin = Utils.stringToInt(this.edbCoin.string);\r\n        if (coin <= 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_money_error'));\r\n            return;\r\n        }\r\n        if (this.popup.typeGame == \"AG\") {\r\n            this.RutAG();\r\n        }\r\n        else if (this.popup.typeGame == \"IBC\") {\r\n            this.RutIBC();\r\n        }\r\n        else if (this.popup.typeGame == \"SBO\") {\r\n            this.RutSBO();\r\n        }\r\n        else if (this.popup.typeGame == \"WM\") {\r\n            this.RutWM();\r\n        }\r\n        else if (this.popup.typeGame == \"EBET\") {\r\n            this.RutEBET();\r\n        }\r\n        else if (this.popup.typeGame == \"FISH\") {\r\n            this.RutFish();\r\n        }\r\n\r\n    }\r\n\r\n    public reset() {\r\n        this.edbCoin.string = \"\";\r\n        this.lblBalance.string = Utils.formatNumber(this.popup.balance);\r\n        for (let i = 0; i < this.quickButtons.childrenCount; i++) {\r\n            this.quickButtons.children[i].getComponent(cc.Toggle).isChecked = false;\r\n        }\r\n        if (this.popup.typeGame == \"FISH\") {\r\n            Http.get(Configs.App.API, { c: 2025, nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => { //check balance \r\n                App.instance.showLoading(false);\r\n                 ////Utils.Log(\"Res Balance ShootFish:\", res);\r\n                if (res[\"errorCode\"] == \"0\") {\r\n                     ////Utils.Log(\"Login Succes\");\r\n                    this.lblBalance.string = Utils.formatNumber(res.data);\r\n                    this.popup.balance = res.data;\r\n                } else {\r\n                    // App.instance.ShowAlertDialog(\"Chưa có thông tin số dư\\n Vui lòng vào game để tạo tài khoản!\");\r\n                    this.lblBalance.string = \"0\";\r\n                    this.popup.balance = 0;\r\n                }\r\n            })\r\n        } else {\r\n            this.lblBalance.string = Utils.formatNumber(this.popup.balance);\r\n        }\r\n    }\r\n}\r\n\r\n@ccclass\r\nexport default class PopupGameTransfer extends Dialog {\r\n    @property(cc.ToggleContainer)\r\n    tabs: cc.ToggleContainer = null;\r\n    @property(cc.Node)\r\n    tabContents: cc.Node = null;\r\n    @property(TabCashIn)\r\n    tabCashIn: TabCashIn = null;\r\n    @property(TabCashOut)\r\n    tabCashOut: TabCashOut = null;\r\n    @property(cc.Label)\r\n    txtTitle: cc.Label = null;\r\n    private tabSelectedIdx = 0;\r\n\r\n    start() {\r\n        for (let i = 0; i < this.tabs.toggleItems.length; i++) {\r\n            this.tabs.toggleItems[i].node.on(\"toggle\", () => {\r\n                this.tabSelectedIdx = i;\r\n                this.onTabChanged();\r\n            });\r\n        }\r\n\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\r\n            this.tabCashIn.lblBalance.string = Utils.formatNumber(Configs.Login.Coin);\r\n            this.tabCashOut.lblBalance.string = Utils.formatNumber(Configs.Login.CoinFish);\r\n        }, this);\r\n\r\n        this.tabCashIn.start(this);\r\n        this.tabCashOut.start(this);\r\n    }\r\n\r\n    public typeGame = \"\";\r\n    public balance = 0;\r\n    showGame(typeGame, balance) {\r\n        if (typeGame == \"FISH\") {\r\n            this.typeGame = typeGame;\r\n            super.show();\r\n            this.tabSelectedIdx = 0;\r\n            this.tabs.toggleItems[this.tabSelectedIdx].isChecked = true;\r\n            this.txtTitle.string = App.instance.getTextLang('txt_transfer_quy1') + \" BẮN CÁ\";\r\n            this.onTabChanged();\r\n        } else {\r\n            if (typeGame == \"AG\") {\r\n                this.txtTitle.string = App.instance.getTextLang('txt_transfer_quy1') + \" AG\";\r\n            }\r\n            else if (typeGame == \"IBC\") {\r\n                this.txtTitle.string = App.instance.getTextLang('txt_transfer_quy1') + \" IBC\";\r\n            }\r\n            else if (typeGame == \"SBO\") {\r\n                this.txtTitle.string = App.instance.getTextLang('txt_transfer_quy1') + \" SBO\";\r\n            }\r\n            else if (typeGame == \"WM\") {\r\n                this.txtTitle.string = App.instance.getTextLang('txt_transfer_quy1') + \" WM\";\r\n            }\r\n            else if (typeGame == \"EBET\") {\r\n                this.txtTitle.string = App.instance.getTextLang('txt_transfer_quy1') + \" EBET\";\r\n            }\r\n\r\n            this.typeGame = typeGame;\r\n            this.balance = balance;\r\n            super.show();\r\n            this.tabSelectedIdx = 0;\r\n            this.tabs.toggleItems[this.tabSelectedIdx].isChecked = true;\r\n            this.onTabChanged();\r\n        }\r\n        this.tabCashOut.lblTitleBalance.string = this.typeGame != \"FISH\" ? \"Số Dư \" + this.typeGame : \"Số Dư Bắn Cá\";\r\n    }\r\n\r\n    private onTabChanged() {\r\n        for (let i = 0; i < this.tabContents.childrenCount; i++) {\r\n            this.tabContents.children[i].active = i == this.tabSelectedIdx;\r\n        }\r\n        for (let j = 0; j < this.tabs.toggleItems.length; j++) {\r\n            this.tabs.toggleItems[j].node.getComponentInChildren(cc.LabelOutline).color = j == this.tabSelectedIdx ? cc.Color.BLACK.fromHEX(\"#AA5F00\") : cc.Color.BLACK.fromHEX(\"#4677F3\");\r\n        }\r\n        switch (this.tabSelectedIdx) {\r\n            case 0:\r\n                this.tabCashIn.reset();\r\n                break;\r\n            case 1:\r\n                this.tabCashOut.reset();\r\n                break;\r\n        }\r\n    }\r\n\r\n    public updateInfoAG(isUpdateTotal = false) {\r\n        Http.get(App.API_AG, { t: \"GetBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoAg:\" + JSON.stringify(res));\r\n            if (res[\"res\"] == 0) {\r\n                if (res[\"list\"][0][\"info\"] == \"error\") {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang('txt_reparing'));\r\n                }\r\n                else {\r\n                    this.balance = parseInt(res.list[0][\"info\"]) * 1000;\r\n                    this.tabCashOut.reset();\r\n                }\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_reparing'));\r\n            }\r\n        });\r\n    }\r\n\r\n    updateInfoIBC(isUpdateTotal = false) {\r\n        Http.get(App.API_IBC, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoICB:\" + JSON.stringify(res));\r\n            if (res[\"code\"] == 0) {\r\n                this.balance = parseInt(res[\"data\"][\"balance\"]) * 1000;\r\n                this.tabCashOut.reset();\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_reparing'));\r\n            }\r\n        });\r\n    }\r\n    updateInfoSBO(isUpdateTotal = false) {\r\n        Http.get(App.API_SBO, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoSBO:\" + JSON.stringify(res));\r\n            if (res[\"res\"] == 0) {\r\n                this.balance = parseInt(res[\"data\"][\"balance\"]) * 1000;\r\n                this.tabCashOut.reset();\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_reparing'));\r\n            }\r\n        });\r\n    }\r\n\r\n    updateInfoWM(isUpdateTotal = false) {\r\n        Http.get(App.API_WM, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoWM:\" + JSON.stringify(res));\r\n            if (res[\"list\"][0] == 0) {\r\n                this.balance = parseInt(res[\"list\"][1]) * 1000;\r\n                this.tabCashOut.reset();\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_reparing'));\r\n            }\r\n        });\r\n    }\r\n\r\n    updateInfoEBET(isUpdateTotal = false) {\r\n        Http.get(App.API_EBET, { t: \"CheckBalance\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken }, (err, res) => {\r\n             ////Utils.Log(\"updateInfoEBET:\" + JSON.stringify(res));\r\n            if (res[\"res\"] == 0) {\r\n                this.balance = res[\"data\"][\"money\"]*1000;\r\n                this.tabCashOut.reset();\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_reparing'));\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public actSubmitCashIn() {\r\n        this.tabCashIn.submit();\r\n    }\r\n\r\n    public actSubmitCashOut() {\r\n        this.tabCashOut.submit();\r\n    }\r\n\r\n    public actClearCashIn() {\r\n        this.tabCashIn.edbCoin.string = \"0\";\r\n    }\r\n\r\n    public actClearCashOut() {\r\n        this.tabCashOut.edbCoin.string = \"0\";\r\n    }\r\n\r\n    public actPlayNow() {\r\n        if (this.typeGame == \"AG\") {\r\n            App.instance.actLoginAG(true);\r\n        }\r\n        else if (this.typeGame == \"IBC\") {\r\n            App.instance.actLoginIBC(true);\r\n        }\r\n        else if (this.typeGame == \"SBO\") {\r\n            App.instance.actLoginSBO(true);\r\n        }\r\n        else if (this.typeGame == \"WM\") {\r\n            App.instance.actLoginWM(true);\r\n        }\r\n        else if (this.typeGame == \"EBET\") {\r\n            App.instance.actLoginEbet(true);\r\n        }\r\n        else if (this.typeGame == \"FISH\") {\r\n            App.instance.actLoginShootFish(true);\r\n        }\r\n    }\r\n}\r\n","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupGiftCode extends Dialog {\r\n\r\n    @property(cc.EditBox)\r\n    edbCode: cc.EditBox = null;\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    show() {\r\n        super.show();\r\n        this.edbCode.string = \"\";\r\n    }\r\n\r\n    actSubmit() {\r\n        let code = this.edbCode.string.trim();\r\n        if (code == \"\") {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_giftcode_blank'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { c: \"19\", un: Configs.Login.Nickname, giftcode: code }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            //Utils.Log(\"Giftcode:\" + JSON.stringify(res));\r\n            if (res.success == true) {\r\n                Configs.Login.Coin = res.currentMoney;\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_giftcode_success'));\r\n            }\r\n            else {\r\n                if (res.errorCode == 1) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_giftcode_expired'));\r\n                }\r\n                else if (res.errorCode == 2) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_giftcode_expired'));\r\n                }\r\n                else if (res.errorCode == 3) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_giftcode_not_suitable'));\r\n                }\r\n                else if (res.errorCode == 4) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_giftcode_used'));\r\n                }\r\n                else if (res.errorCode == 5) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_giftcode_used_event'));\r\n                }\r\n                else if (res.errorCode == 6) {\r\n                    App.instance.alertDialog.showMsgWithOnDismissed(App.instance.getTextLang('txt_giftcode_check_phone'), () => {\r\n                        Global.LobbyController.actSecurity();\r\n                    });\r\n                }\r\n                else if (res.errorCode == 100) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_giftcode_incorrect'));\r\n                }\r\n                else {\r\n                    App.instance.alertDialog.showMsg(res.message);\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport UtilsNative from \"../../Loading/src/UtilsNative\";\r\nimport App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nvar TAB_POPUP = {\r\n    INFO: 0,\r\n    LIST: 1,\r\n    HISTORY: 2,\r\n    POLICY: 3\r\n}\r\n@ccclass\r\nexport default class PopupKiemTien extends Dialog {\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n    @property(cc.Button)\r\n    btnConfirm: cc.Button = null;\r\n    @property(cc.EditBox)\r\n    edbInviteCode: cc.EditBox = null;\r\n    @property(cc.Label)\r\n    lbInviteCode: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbTotalUser1: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbTitleInvite: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbBonus1: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbUrlInvite: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbTotalPage_tabList: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbTotalPage_tabHistory: cc.Label = null;\r\n    @property(cc.Node)\r\n    NodeInfo: cc.Node = null;\r\n    @property(cc.Node)\r\n    NodeListUser: cc.Node = null;\r\n    @property(cc.Node)\r\n    NodeHistory: cc.Node = null;\r\n    @property(cc.Node)\r\n    NodePolicy: cc.Node = null;\r\n    @property(cc.Node)\r\n    btnReceive: cc.Node = null;\r\n    @property(cc.Toggle)\r\n    toggleInfo: cc.Toggle = null;\r\n    @property(cc.Node)\r\n    nodeTabContainer: cc.Node = null;\r\n    @property(cc.ScrollView)\r\n    scrListUser: cc.ScrollView = null;\r\n    @property(cc.ScrollView)\r\n    scrListHistory: cc.ScrollView = null;\r\n    page = 1;\r\n    totalPage = 1;\r\n    tab_popup = 0;\r\n    status_history = 0;\r\n    historyData = [];\r\n\r\n    start() {\r\n\r\n    }\r\n    show() {\r\n        super.show();\r\n        this.toggleInfo.uncheck();\r\n        this.toggleInfo.check();\r\n        this.lbUrlInvite.string = cc.js.formatStr(\"https://play.win789club.com/?aff=%s\", Configs.Login.Nickname);\r\n        this.lbInviteCode.string = Configs.Login.Nickname;\r\n        this.edbInviteCode.enabled = true;\r\n        this.edbInviteCode.string = \"\";\r\n        this.lbTitleInvite.string = \"Nhập mã giới thiệu:\";\r\n        this.btnConfirm.node.active = true;\r\n        Http.get(Configs.App.API, { c: \"2040\", nn: Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, \"ac\": \"get\" }, (err, res) => {\r\n            if (res != null) {\r\n                //  cc.log(res);\r\n                App.instance.showLoading(false);\r\n                if (res['success']) {\r\n                    if (res['data'] != \"\") {\r\n                        this.edbInviteCode.string = res['data'];\r\n                        this.edbInviteCode.enabled = false;\r\n                        this.lbTitleInvite.string = \"Bạn là thành viên của \";\r\n                        this.btnConfirm.node.active = false;\r\n                    }\r\n                } else {\r\n                    // App.instance.ShowAlertDialog(res['message']);\r\n                }\r\n            }\r\n        });\r\n        if (cc.sys.isBrowser) {\r\n            //  cc.log(\"URL Game==\" + window.location.href);\r\n            let url = window.location.href;\r\n            // let url = \"https://play.win789club.com/?aff=NhungNgao4\";\r\n            if (url.includes(\"aff=\")) {\r\n                let indexOfEqual = url.indexOf(\"=\");\r\n                let inviteCode = url.substring(indexOfEqual + 1, url.length);\r\n                this.edbInviteCode.string = inviteCode;\r\n                this.edbInviteCode.enabled = false;\r\n            }\r\n        }\r\n    }\r\n    getInfoAll() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { c: \"2039\", nn: Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, \"pg\": 1, \"mi\": 6, }, (err, res) => {\r\n            if (res != null) {\r\n                //  cc.log(res);\r\n                App.instance.showLoading(false);\r\n                if (res['success']) {\r\n                    this.lbBonus1.string = Utils.formatMoney(res['data']['totalBonus']);\r\n                    this.lbTotalUser1.string = res['totalRecords'];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    onChangeTab(even: cc.Toggle) {\r\n        if (even.node.name == \"tabInfo\") {\r\n            this.nodeTabContainer.children[0].getComponent(cc.Toggle).check();\r\n            this.tab_popup = TAB_POPUP.INFO;\r\n            this.getInfoAll();\r\n        }\r\n        else if (even.node.name == \"tabList\") {\r\n            this.nodeTabContainer.children[1].getComponent(cc.Toggle).check();\r\n            this.resetTab();\r\n            this.onGetListUser();\r\n            this.tab_popup = TAB_POPUP.LIST\r\n        }\r\n        else if (even.node.name == \"tabHistory\") {\r\n            this.nodeTabContainer.children[2].getComponent(cc.Toggle).check();\r\n            this.resetTab();\r\n            this.onGetHistory();\r\n            this.tab_popup = TAB_POPUP.HISTORY\r\n        }\r\n        else if (even.node.name == \"tabPolicy\") {\r\n            this.nodeTabContainer.children[3].getComponent(cc.Toggle).check();\r\n            this.tab_popup = TAB_POPUP.POLICY;\r\n        }\r\n    }\r\n    resetTab() {\r\n        this.page = 1;\r\n        this.totalPage = 1;\r\n    }\r\n    onToggleChangeTabSumary(even, data) {\r\n        let currentTime = new Date();\r\n        let day = currentTime.getDate();\r\n        let month = currentTime.getMonth() + 1\r\n        let year = currentTime.getFullYear();\r\n        let fromTime = \"\";\r\n        let endTime = \"\";\r\n        switch (data) {\r\n            case \"1\":\r\n                this.getInfoAll();\r\n                break;\r\n            case \"2\"://today\r\n                fromTime = year + \"-\" + month + \"-\" + day;\r\n                this.onGetSumary(fromTime, fromTime);\r\n                break;\r\n            case \"3\"://yesterday\r\n                day = day - 1;\r\n                if (day == 0) {\r\n                    if ([1, 3, 5, 7, 8, 10, 12].includes(month)) {\r\n                        day = 31\r\n                    } else {\r\n                        day = 30;\r\n                    }\r\n                    month = month - 1;\r\n                    if (month == 0) {\r\n                        month = 12;\r\n                    }\r\n                }\r\n                fromTime = year + \"-\" + month + \"-\" + day;\r\n                this.onGetSumary(fromTime, fromTime);\r\n                break;\r\n            case \"4\"://this month\r\n                fromTime = year + \"-\" + month + \"-\" + 1;\r\n                endTime = year + \"-\" + month + \"-\" + day;\r\n                this.onGetSumary(fromTime, endTime);\r\n                break;\r\n        }\r\n    }\r\n    onGetSumary(fromTime, endTime) {\r\n        App.instance.showLoading(true);\r\n        //http://localhost:8081/api?c=2038&nn=brightc&at=7898989&ft=2021-11-02&et=2021-11-30&st=0&pg=1&mi=10\r\n        Http.get(Configs.App.API, { c: \"2039\", nn: Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, \"pg\": 1, \"mi\": 10, \"ft\": fromTime, \"et\": endTime }, (err, res) => {\r\n            if (res != null) {\r\n                //  cc.log(res);\r\n                App.instance.showLoading(false);\r\n                if (res['success']) {\r\n                    this.lbBonus1.string = Utils.formatMoney(res['data']['totalBonus']);\r\n                    this.lbTotalUser1.string = res['totalRecords'];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    onGetListUser() {\r\n        App.instance.showLoading(true);\r\n        //http://localhost:8081/api?c=2039&nn=brightc&at=7898989&ft=2021-11-02&et=2021-11-30&pg=1&mi=10\",\r\n        Http.get(Configs.App.API, { c: \"2039\", nn: Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, \"pg\": this.page, \"mi\": 6, }, (err, res) => {\r\n            if (res != null) {\r\n                //  cc.log(\"List user:\\n\", res);\r\n                App.instance.showLoading(false);\r\n                if (res['success']) {\r\n                    let listUser = res['data']['userLevels'];\r\n                    for (let i = 0, l = listUser.length; i < l; i++) {\r\n                        let item = this.scrListUser.content.children[i];\r\n                        let dataUser = listUser[i];\r\n                        if (!cc.isValid(item)) {\r\n                            item = cc.instantiate(this.scrListUser.content.children[0]);\r\n                            item.parent = this.scrListUser.content;\r\n                        }\r\n                        item.active = true;\r\n                        item.getChildByName('lbNickname').getComponent(cc.Label).string = dataUser['nick_name'];\r\n                        item.getChildByName('lbDayCreated').getComponent(cc.Label).string = dataUser['created_at'].substring(0, 19).replace(\" \", \"\\n\");\r\n                        item.getChildByName('lbBonus').getComponent(cc.Label).string = Utils.formatNumber(dataUser['totalBonus']);\r\n                    }\r\n                    if (res['totalRecords'] <= 6) {\r\n                        this.totalPage = 1;\r\n                    } else {\r\n                        this.totalPage = res['totalRecords'] % 6 == 0 ? (res['totalRecords'] / 6) : Math.floor(res['totalRecords'] / 6) + 1;\r\n                    }\r\n                    this.lbTotalPage_tabList.string = this.page + \"/\" + this.totalPage;\r\n                    for (let i = listUser.length; i < this.scrListUser.content.childrenCount; i++) {\r\n                        this.scrListUser.content.children[i].active = false;\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n    async onGetHistory() {\r\n        await Http.get(Configs.App.API, { c: \"2038\", nn: Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, \"st\": this.status_history, \"pg\": this.page, \"mi\": 6 }, (err, res) => {\r\n            if (res != null) {\r\n                //  cc.log(\"history:\\n\", res);\r\n                App.instance.showLoading(false);\r\n                if (res['success']) {\r\n                    let listHistory = res['data']['userWages'];\r\n                    this.btnReceive.active = listHistory.length > 0 ? true : false;\r\n                    for (let i = 0, l = listHistory.length; i < l; i++) {\r\n                        let item = this.scrListHistory.content.children[i];\r\n                        let dataHistory = listHistory[i];\r\n                        if (!cc.isValid(item)) {\r\n                            item = cc.instantiate(this.scrListHistory.content.children[0]);\r\n                            item.parent = this.scrListHistory.content;\r\n                        }\r\n                        item.active = true;\r\n                        item.getChildByName('lbBonus').getComponent(cc.Label).string = Utils.formatNumber(dataHistory['bonus']);\r\n                        item.getChildByName('lbNickname').getComponent(cc.Label).string = dataHistory['nick_name'];\r\n                        item.getChildByName('btnReceive').active = dataHistory['status'] == 0;\r\n                        item.getChildByName('btnReceive').off(\"click\");\r\n                        item.getChildByName('btnReceive').on(\"click\", () => {\r\n                            //http://localhost:8081/api?c=2037&nn=brightc&at=7898989&id=1\r\n                            Http.get(Configs.App.API, { c: \"2037\", nn: Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, \"id\": dataHistory['id'] }, (err, res) => {\r\n                                if (res['success']) {\r\n                                    App.instance.showToast(\"Nhận hoa hồng thành công: +\" + Utils.formatMoney(dataHistory['bonus']));\r\n                                    this.onGetHistory();\r\n                                } else {\r\n                                    App.instance.showToast(\"Có lỗi xảy ra, Vui lòng thử lại sau!\");\r\n                                }\r\n                            })\r\n                        });\r\n                        item.getChildByName('lbTime').getComponent(cc.Label).string = dataHistory['created_at'].substring(0, 19).replace(\" \", \"\\n\");\r\n                        item['data'] = dataHistory;\r\n                    }\r\n                    if (res['totalRecords'] <= 6) {\r\n                        this.totalPage = 1;\r\n                    } else {\r\n                        this.totalPage = res['totalRecords'] % 6 == 0 ? (res['totalRecords'] / 6) : Math.floor(res['totalRecords'] / 6) + 1;\r\n                    }\r\n                    this.lbTotalPage_tabHistory.string = this.page + \"/\" + this.totalPage;\r\n                    for (let i = listHistory.length; i < this.scrListHistory.content.childrenCount; i++) {\r\n                        this.scrListHistory.content.children[i].active = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    onChangeStatusHistory() {\r\n        this.resetTab();\r\n        this.status_history = this.status_history == 0 ? 1 : 0;\r\n        this.btnReceive.active = this.status_history == 0;\r\n        this.onGetHistory();\r\n    }\r\n    onClickNext() {\r\n        if (this.page == this.totalPage) {\r\n            return;\r\n        }\r\n        this.page++;\r\n        if (this.tab_popup == TAB_POPUP.LIST) {\r\n            this.onGetListUser();\r\n        } else {\r\n            this.onGetHistory();\r\n        }\r\n    }\r\n    onClickPrevious() {\r\n        if (this.page == 1) {\r\n            return;\r\n        }\r\n        this.page--;\r\n        if (this.tab_popup == TAB_POPUP.LIST) {\r\n            this.onGetListUser();\r\n        } else {\r\n            this.onGetHistory();\r\n        }\r\n    }\r\n    onClickReceiveAll() {\r\n        //http://localhost:8081/api?c=2037&nn=brightc&at=7898989&id=1\",\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { c: \"2037\", nn: Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, \"ac\": \"all\" }, (err, res) => {\r\n            if (res != null) {\r\n                //  cc.log(res);\r\n                App.instance.showLoading(false);\r\n                if (res['success']) {\r\n                    this.onGetHistory();\r\n                } else {\r\n                    App.instance.ShowAlertDialog(res['message']);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    onClickCopyInviteLink() {\r\n        // if (navigator && navigator.clipboard) {\r\n        //     navigator.clipboard.writeText(this.lbUrlInvite.string);\r\n        // } else {\r\n        //     console.log(\"Khong Cos Navigator trên native đâu\");\r\n        // }\r\n        // Utils.copy(this.lbUrlInvite.string);\r\n        if (cc.sys.os == cc.sys.OS_ANDROID || cc.sys.os == cc.sys.OS_IOS) {\r\n            UtilsNative.copyClipboard(this.lbUrlInvite.string);\r\n        } else {\r\n            Utils.copy(this.lbUrlInvite.string);\r\n        }\r\n\r\n    }\r\n    onClickUpdateInviteCode() {\r\n        let inviteCode = this.edbInviteCode.string.trim();\r\n        if (inviteCode == \"\") {\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { c: \"2040\", nn: Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, \"ac\": \"update\", \"inv\": inviteCode }, (err, res) => {\r\n            if (res != null) {\r\n                //  cc.log(res);\r\n                App.instance.showLoading(false);\r\n                if (res['success']) {\r\n                    App.instance.ShowAlertDialog(\"Chúc mừng!\\nBạn đã cập nhật mã giới thiệu thành công!\");\r\n                    this.btnConfirm.node.active = false;\r\n                    this.edbInviteCode.enabled = false;\r\n                    this.lbTitleInvite.string = \"Bạn là thành viên của\";\r\n                } else {\r\n                    App.instance.ShowAlertDialog(res['message']);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport cmd from \"./Lobby.Cmd\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport MiniGameNetworkClient from \"./Script/networks/MiniGameNetworkClient\";\r\nimport InPacket from \"./Script/networks/Network.InPacket\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupLuckyWheel extends Dialog {\r\n    @property(cc.Node)\r\n    wheel1: cc.Node = null;\r\n    @property(cc.Node)\r\n    wheel3: cc.Node = null;\r\n    @property(cc.Label)\r\n    lblCount: cc.Label = null;\r\n    @property(cc.Button)\r\n    btnClose: cc.Button = null;\r\n    @property(cc.Button)\r\n    btnSpin: cc.Button = null;\r\n\r\n    private spinCount = 0;\r\n\r\n    start() {\r\n        MiniGameNetworkClient.getInstance().addListener((data) => {\r\n            if (!this.node.active) return;\r\n\r\n            let inPacket = new InPacket(data);\r\n            switch (inPacket.getCmdId()) {\r\n                case cmd.Code.SPIN_LUCKY_WHEEL: {\r\n                    let res = new cmd.ResSpinLuckyWheel(data);\r\n                    //  //Utils.Log(res);\r\n\r\n                    if (res.error != 0) {\r\n                        switch (res.error) {\r\n                            case 1:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_check_connect'));\r\n                                break;\r\n                            case 2:\r\n                                App.instance.alertDialog.showMsg(\"Bạn đã hết lượt quay.\");\r\n                                break;\r\n                            case 3:\r\n                                App.instance.alertDialog.showMsg(\"Mỗi ngày chỉ được quay tối đa 2 lần!\");\r\n                                break;\r\n                        }\r\n                        this.btnSpin.interactable = true;\r\n                        this.btnClose.interactable = true;\r\n                        break;\r\n                    }\r\n                    this.spinCount -= 1;\r\n                    this.lblCount.string = this.spinCount.toString();\r\n\r\n                    Configs.Login.LuckyWheel = res.remainCount;\r\n                    Configs.Login.Coin = res.currentMoneyVin;\r\n\r\n                    let msg = \"Chúc mừng bạn đã nhận được\\n\";\r\n                    let rotateToIdx1 = 3;\r\n                    switch (res.prizeSlot) {\r\n                        case \"KhoBau1\":\r\n                            rotateToIdx1 = 2;\r\n                            msg += \"1 lượt quay Range Rover\";\r\n                            break;\r\n                        case \"KhoBau2\":\r\n                            rotateToIdx1 = 6;\r\n                            msg += \"2 lượt quay Range Rover\";\r\n                            break;\r\n                        case \"KhoBau3\":\r\n                            rotateToIdx1 = 11;\r\n                            msg += \"3 lượt quay Range Rover\";\r\n                            break;\r\n                        case \"NuDiepVien1\":\r\n                            rotateToIdx1 = 0;\r\n                            msg += \"1 lượt quay MayBach\";\r\n                            break;\r\n                        case \"NuDiepVien2\":\r\n                            rotateToIdx1 = 10;\r\n                            msg += \"2 lượt quay MayBach\";\r\n                            break;\r\n                        case \"NuDiepVien3\":\r\n                            rotateToIdx1 = 4;\r\n                            msg += \"3 lượt quay MayBach\";\r\n                            break;\r\n                        case \"SieuAnhHung1\":\r\n                            rotateToIdx1 = 5;\r\n                            msg += \"1 lượt quay Bentley\";\r\n                            break;\r\n                        case \"SieuAnhHung2\":\r\n                            rotateToIdx1 = 1;\r\n                            msg += \"1 lượt quay Bentley\";\r\n                            break;\r\n                        case \"SieuAnhHung3\":\r\n                            rotateToIdx1 = 8;\r\n                            msg += \"1 lượt quay Bentley\";\r\n                            break;\r\n                        case \"more\":\r\n                            rotateToIdx1 = 9;\r\n                            msg += \"thêm 1 lượt quay\";\r\n                            break;\r\n                    }\r\n\r\n                    if (rotateToIdx1 != 3) msg += \"và \";\r\n\r\n                    let rotateToIdx3 = 1;\r\n                    switch (res.prizeVin) {\r\n                        case \"1000\":\r\n                            rotateToIdx3 = 7;\r\n                            msg += \"1.000 Xu\";\r\n                            break;\r\n                        case \"2000\":\r\n                            rotateToIdx3 = 5;\r\n                            msg += \"2.000 Xu\";\r\n                            break;\r\n                        case \"5000\":\r\n                            rotateToIdx3 = 3;\r\n                            msg += \"5.000 Xu\";\r\n                            break;\r\n                        case \"10000\":\r\n                            rotateToIdx3 = 6;\r\n                            msg += \"10.000 Xu\";\r\n                            break;\r\n                        case \"20000\":\r\n                            rotateToIdx3 = 2;\r\n                            msg += \"20.000 Xu\";\r\n                            break;\r\n                        case \"50000\":\r\n                            rotateToIdx3 = 4;\r\n                            msg += \"50.000 Xu\";\r\n                            break;\r\n                        case \"100000\":\r\n                            rotateToIdx3 = 0;\r\n                            msg += \"100.000 Xu\";\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    msg += \".\";\r\n                    if (rotateToIdx3 == 1 && rotateToIdx1 == 3) {\r\n                        msg = \"Chúc bạn may mắn lần sau.\";\r\n                    }\r\n\r\n                    this.wheel1.stopAllActions();\r\n                    this.wheel3.stopAllActions();\r\n                    this.wheel1.angle = 0;\r\n                    this.wheel3.angle = 0;\r\n                    this.wheel1.runAction(cc.rotateTo(3, -(360 * 4 + (360 - 360 / 12 * rotateToIdx1) - 360 / 12 / 2)).easing(cc.easeSineInOut()));\r\n                    this.wheel3.runAction(cc.sequence(\r\n                        cc.delayTime(0.25),\r\n                        cc.rotateTo(4, 360 * 4 + 360 / 8 * rotateToIdx3 + 360 / 8 / 2).easing(cc.easeSineInOut()),\r\n                        cc.callFunc(() => {\r\n                            this.btnSpin.interactable = true;\r\n                            this.btnClose.interactable = true;\r\n                            this.spinCount = Configs.Login.LuckyWheel;\r\n                            this.lblCount.string = this.spinCount.toString();\r\n                            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                            App.instance.alertDialog.showMsg(msg);\r\n                        })\r\n                    ));\r\n                    break;\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    show() {\r\n        super.show();\r\n        this.wheel1.angle = 0;\r\n        this.wheel3.angle = 0;\r\n        this.spinCount = Configs.Login.LuckyWheel;\r\n        this.lblCount.string = this.spinCount.toString();\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n    }\r\n\r\n    actSpin() {\r\n        this.btnSpin.interactable = false;\r\n        this.btnClose.interactable = false;\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqSpinLuckyWheel());\r\n    }\r\n}\r\n","\r\nimport DropDown from \"../../Loading/Add-on/DropDown/Script/DropDown\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport cmd from \"./Lobby.Cmd\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"./Script/networks/MiniGameNetworkClient\";\r\nimport InPacket from \"./Script/networks/Network.InPacket\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass(\"Lobby.PopupProfile.TabProfile\")\r\nexport class TabProfile {\r\n    @property(cc.Label)\r\n    lblNickname: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblChip: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblVipPoint: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblEmail: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblGender: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblBirthday: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblVipPointPercent: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblPhone: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblAddress: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblRefcode: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblVipName: cc.Label = null;\r\n    @property(cc.Slider)\r\n    sliderVipPoint: cc.Slider = null;\r\n    @property(cc.Sprite)\r\n    spriteProgressVipPoint: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    spriteAvatar: cc.Sprite = null;\r\n}\r\n\r\n@ccclass(\"Lobby.PopupProfile.PopupUpdateInfo\")\r\nexport class PopupUpdateInfo {\r\n    @property(cc.EditBox)\r\n    edbMail: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    edbAddress: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    edbBirthday: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    edbRefCode: cc.EditBox = null;\r\n    @property(cc.ToggleContainer)\r\n    toggleContainer: cc.ToggleContainer = null;\r\n    @property(cc.Node)\r\n    bg: cc.Node = null;\r\n    type = 1;//1-address,2-Email;\r\n    gender = 1;\r\n    refcode = \"\";\r\n\r\n    setInfo() {\r\n        this.edbBirthday.string = Configs.Login.Birthday;\r\n        this.edbAddress.string = Configs.Login.Address;\r\n        this.edbMail.string = Configs.Login.Mail;\r\n        this.edbRefCode.string = this.refcode;\r\n        if (Configs.Login.Gender) {\r\n            this.toggleContainer.node.children[0].getComponent(cc.Toggle).isChecked = true;\r\n        } else {\r\n            this.toggleContainer.node.children[2].getComponent(cc.Toggle).isChecked = true;\r\n        }\r\n    }\r\n    dismiss() {\r\n        cc.tween(this.bg).to(0.3, { scale: 0.8, opacity: 150 }, { easing: cc.easing.backIn }).call(() => {\r\n            this.bg.parent.active = false;\r\n        }).start();\r\n    }\r\n    show() {\r\n        this.bg.parent.active = true;\r\n        cc.tween(this.bg).set({ scale: 0.8, opacity: 150 }).to(0.3, { scale: 1, opacity: 255 }, { easing: cc.easing.backOut }).start();\r\n    }\r\n    onClickUpdate() {\r\n        // this.dismiss();\r\n        // if (this.edbBirthday.string == \"\" && this.edbAddress.string == \"\" && this.edbMail.string == \"\") {\r\n        //     App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_input_all\"));\r\n        //     return;\r\n        // }\r\n\r\n        let birthday = this.edbBirthday.string.trim();\r\n        let address = this.edbAddress.string.trim();\r\n        let mail = this.edbMail.string.trim();\r\n        let refCode = this.edbRefCode.string.trim();\r\n        let count = 0;\r\n        if (birthday.length > 0) {\r\n            for (let i = 0, l = birthday.length; i < l; i++) {\r\n                if (birthday[i] == \"-\")\r\n                    count++;\r\n            };\r\n            if (count < 2) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_error_birthday\"));\r\n                return;\r\n            }\r\n        }\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqUpdateUserInfo(mail, birthday, address, this.gender, refCode));\r\n    }\r\n    onClickGender(data) {\r\n        this.gender = parseInt(data);\r\n    }\r\n}\r\n@ccclass(\"Lobby.PopupProfile.TabVip\")\r\nexport class TabVip {\r\n    @property(cc.Label)\r\n    lblVipPointName: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblVipPoint: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblTotalVipPoint: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblVipPointNextLevel: cc.Label = null;\r\n    @property(cc.Sprite)\r\n    spriteProgressVipPoint: cc.Sprite = null;\r\n    @property(cc.Node)\r\n    items: cc.Node = null;\r\n\r\n\r\n    getVipPointInfo() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 126, \"nn\": Configs.Login.Nickname }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) {\r\n                return;\r\n            }\r\n            if (!res[\"success\"]) {\r\n                App.instance.alertDialog.showMsg(\"Lỗi kết nối, vui lòng thử lại.\");\r\n                return;\r\n            }\r\n            //Utils.Log(\"getVipPointInfo:\" + JSON.stringify(res));\r\n            Configs.Login.VipPoint = res[\"vippoint\"];\r\n            Configs.Login.VipPointSave = res[\"vippointSave\"];\r\n            for (let i = 0; i < this.items.childrenCount; i++) {\r\n                let item = this.items.children[i];\r\n                if (i < res[\"ratioList\"].length) {\r\n                    item.getChildByName(\"lblVipPoint\").getComponent(cc.Label).string = Utils.formatNumber(Configs.Login.VipPoints[i]);\r\n                    item.getChildByName(\"lblCoin\").getComponent(cc.Label).string = Utils.formatNumber(Configs.Login.VipPoint * res[\"ratioList\"][i]);\r\n                    item.getChildByName(\"btnReceive\").active = res[\"ratioList\"][i] > 0;\r\n                    item.getChildByName(\"btnReceive\").getComponent(cc.Button).interactable = i == Configs.Login.getVipPointIndex() && Configs.Login.VipPoint > 0;\r\n                    item.getChildByName(\"btnReceive\").getComponentInChildren(cc.Label).node.color = i == Configs.Login.getVipPointIndex() ? cc.Color.YELLOW : cc.Color.GRAY;\r\n                    item.getChildByName(\"btnReceive\").off(\"click\");\r\n                    item.getChildByName(\"btnReceive\").on(\"click\", () => {\r\n                        App.instance.confirmDialog.show2(\"Bạn có chắc chắn muốn nhận thưởng vippoint\\nTương ứng với cấp Vippoint hiện tại bạn nhận được :\\n\" + Utils.formatNumber(Configs.Login.VipPoint * res[\"ratioList\"][i]) + \" Xu\", (isConfirm) => {\r\n                            if (isConfirm) {\r\n                                App.instance.showLoading(true);\r\n                                MiniGameNetworkClient.getInstance().send(new cmd.ReqExchangeVipPoint());\r\n                            }\r\n                        });\r\n                    });\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n\r\n            this.lblVipPointName.string = Configs.Login.getVipPointName();\r\n            this.lblVipPoint.string = Utils.formatNumber(Configs.Login.VipPoint);\r\n            this.lblTotalVipPoint.string = Utils.formatNumber(Configs.Login.VipPointSave);\r\n            this.lblVipPointNextLevel.string = Utils.formatNumber(Configs.Login.getVipPointNextLevel());\r\n\r\n            // let VipPoints = [80, 800, 4500, 8600, 50000, 1000000];\r\n            let VipPoints = Configs.Login.VipPoints;\r\n            let vipPointIdx = 0;\r\n            for (let i = VipPoints.length - 1; i >= 0; i--) {\r\n                if (Configs.Login.VipPoint > VipPoints[i]) {\r\n                    vipPointIdx = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let vipPointNextLevel = VipPoints[0];\r\n            for (let i = VipPoints.length - 1; i >= 0; i--) {\r\n                if (Configs.Login.VipPoint > VipPoints[i]) {\r\n                    if (i == VipPoints.length - 1) {\r\n                        vipPointNextLevel = VipPoints[i];\r\n                        break;\r\n                    }\r\n                    vipPointNextLevel = VipPoints[i + 1];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let vipPointStartLevel = 0;\r\n            for (let i = VipPoints.length - 1; i >= 0; i--) {\r\n                if (Configs.Login.VipPoint > VipPoints[i]) {\r\n                    vipPointStartLevel = VipPoints[i];\r\n                    break;\r\n                }\r\n            }\r\n            let delta = (Configs.Login.VipPoint - vipPointStartLevel) / (vipPointNextLevel - vipPointStartLevel);\r\n            //Utils.Log(\"delta: \" + delta);\r\n            this.spriteProgressVipPoint.fillRange = (vipPointIdx + 1 / 6) + delta * (1 / 6);\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n@ccclass(\"Lobby.PopupProfile.TabBank\")\r\nexport class TabBank {\r\n    @property(cc.EditBox)\r\n    editBank: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    editName: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    editNumber: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    editBranch: cc.EditBox = null;\r\n    @property(cc.Node)\r\n    dropBank: cc.Node = null;\r\n    @property(cc.Node)\r\n    contentItem: cc.Node = null;\r\n    @property(cc.Node)\r\n    prefabItem: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lbNote1: cc.Label = null;\r\n\r\n\r\n    @property(cc.Node)\r\n    boxList: cc.Node = null;\r\n    @property(cc.Node)\r\n    boxListEmpty: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    boxUpdate: cc.Node = null;\r\n    @property(cc.EditBox)\r\n    editNameUpdate: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    editNumberUpdate: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    editBranchUpdate: cc.EditBox = null;\r\n    @property(cc.Node)\r\n    dropBankUpdate: cc.Node = null;\r\n    @property(cc.Node)\r\n    popupAddBank: cc.Node = null;\r\n\r\n    private idBankChosing = -1;\r\n    private listBank;\r\n    dropBankComp: DropDown = null;\r\n    dropBankUpdateComp: DropDown = null;\r\n    show() {\r\n        this.editBank.node.active = false;\r\n        // this.dropBank = this.dropBankComp.getComponent(\"DropDown\");\r\n        this.dropBank.on(\"touchend\", this.onClickBank, this);\r\n        this.dropBankComp = this.dropBank.getComponent(\"DropDown\");\r\n        this.dropBankUpdateComp = this.dropBankUpdate.getComponent(\"DropDown\");\r\n        this.editName.string = \"\";\r\n        this.editNumber.string = \"\";\r\n        this.editBranch.string = \"\";\r\n\r\n        this.loadBankList();\r\n        this.GetListBankProfile();\r\n\r\n\r\n    }\r\n\r\n    public onClickBank() {\r\n        //Utils.Log(\"onClickBank:\" + this.dropBankComp.isShow);\r\n        if (!this.dropBankComp.isShow) {\r\n            this.editBank.node.active = true;\r\n            this.editBank.focus();\r\n        } else {\r\n            this.editBank.node.active = false;\r\n        }\r\n    }\r\n\r\n    showPopupAddBank() {\r\n        this.popupAddBank.active = true;\r\n        cc.tween(this.popupAddBank).set({ scale: 0.8, opacity: 255 }).to(0.3, { scale: 1.0, opacity: 255 }, { easing: cc.easing.backOut }).start();\r\n    }\r\n    closeTabAddBank() {\r\n        cc.tween(this.popupAddBank).to(0.3, { scale: 0.8, opacity: 150 }, { easing: cc.easing.backIn }).call(() => {\r\n            this.popupAddBank.active = false;\r\n        }).start();\r\n    }\r\n    loadBankList() {\r\n        var data = {};\r\n        data[\"c\"] = 2011;\r\n        Http.get(Configs.App.API, data, (err, res) => {\r\n            //Utils.Log(\"loadBankList:\" + JSON.stringify(res));\r\n            this.listBank = res.bank.split(',');\r\n            var datas = new Array();\r\n            this.listBank.sort((a, b) => {\r\n                return a.charCodeAt(0) - b.charCodeAt(0);\r\n            })\r\n            for (var i = 0; i < this.listBank.length; i++) {\r\n                datas.push({ optionString: this.listBank[i] });\r\n            }\r\n            this.dropBankComp.clearOptionDatas();\r\n            this.dropBankComp.addOptionDatas(datas);\r\n            this.dropBankComp.selectedIndex = 0;\r\n        });\r\n\r\n    }\r\n\r\n    GetListBankProfile() {\r\n        this.contentItem.removeAllChildren();\r\n        var self = this;\r\n        var data = {};\r\n        data[\"c\"] = 2008;\r\n        data[\"nn\"] = encodeURIComponent(Configs.Login.Nickname.trim());\r\n        data[\"pn\"] = 1;\r\n        data[\"l\"] = 10;\r\n        Http.get(Configs.App.API, data, (err, res) => {\r\n            var list = JSON.parse(res.data).data;\r\n            Configs.Login.ListBankRut = list;\r\n            if (res == null || list.length == 0) {\r\n                self.boxList.active = false;\r\n                self.boxListEmpty.active = true;\r\n            }\r\n            else {\r\n                self.boxList.active = true;\r\n                self.boxListEmpty.active = false;\r\n                let txtNote1 = App.instance.getTextLang(\"txt_profile_note_bank1\");\r\n                this.lbNote1.string = txtNote1.replace(\"%s\", list.length);\r\n                for (var i = 0; i < list.length; i++) {\r\n                    var nodeItem = cc.instantiate(self.prefabItem);\r\n                    nodeItem.parent = self.contentItem;\r\n                    nodeItem.setPosition(cc.v2(0, 0));\r\n                    nodeItem.getComponent(\"ItemBankProfile\").init(list[i], self);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    CreateBank() {\r\n        if (this.editName.string == \"\" || this.editNumber.string == \"\" || this.editBranch.string == \"\") {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_input_all\"));\r\n            return;\r\n        }\r\n        if (this.editName.string.indexOf(' ') == -1) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_not_blank'));\r\n            return;\r\n        }\r\n        var self = this;\r\n        var data = {};\r\n        data[\"c\"] = 2007;\r\n        data[\"nn\"] = encodeURIComponent(Configs.Login.Nickname.trim());\r\n        data[\"bn\"] = encodeURIComponent(this.dropBankComp.labelCaption.string.trim());;\r\n        data[\"cn\"] = encodeURIComponent(this.editName.string.trim());\r\n        data[\"bnum\"] = this.editNumber.string;\r\n        data[\"br\"] = encodeURIComponent(this.editBranch.string.trim());;\r\n        data[\"t\"] = 0;\r\n        //Utils.Log(\"CreateBank:\" + JSON.stringify(data));\r\n        Http.get(Configs.App.API, data, (err, res) => {\r\n            //Utils.Log(\"response CreateBank:\" + JSON.stringify(err) + \" : \" + JSON.stringify(res));\r\n            this.closeTabAddBank();\r\n            if (res.success) {\r\n                self.GetListBankProfile();\r\n            }\r\n            else {\r\n                App.instance.alertDialog.showMsg(res.message);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    loadBankUpdateList() {\r\n        var datas = new Array();\r\n        for (var i = 0; i < this.listBank.length; i++) {\r\n            datas.push({ optionString: this.listBank[i] });\r\n        }\r\n        this.dropBankUpdateComp.clearOptionDatas();\r\n        this.dropBankUpdateComp.addOptionDatas(datas);\r\n        this.dropBankUpdateComp.selectedIndex = 0;\r\n    }\r\n\r\n    ShowBoxUpdate(dataItem) {\r\n        this.loadBankUpdateList();\r\n        this.boxUpdate.active = true;\r\n        var indexBank = 0;\r\n        for (var i = 0; i < this.listBank.length; i++) {\r\n            if (this.listBank[i] == dataItem.bankName) {\r\n                indexBank = i;\r\n            }\r\n        }\r\n        this.dropBankUpdateComp.selectedIndex = indexBank;\r\n        this.dropBankUpdateComp.labelCaption.string = dataItem.bankName;\r\n        this.editNameUpdate.string = dataItem.customerName;\r\n        this.editNumberUpdate.string = dataItem.bankNumber;\r\n        this.editBranchUpdate.string = dataItem.branch;\r\n        this.idBankChosing = dataItem.id;\r\n\r\n    }\r\n\r\n    onChangeEditBank() {\r\n        //  //Utils.Log(\"vao day ne:\" + this.editBank.string + \":\" + this.editBank.node.active);\r\n        var datas = new Array();\r\n        for (var i = 0; i < this.listBank.length; i++) {\r\n            //  //Utils.Log(\"filer:\" + i + \":\" + this.editBank.string + \":\" + this.listBank[i].toLowerCase());\r\n            if (this.listBank[i].toLowerCase().includes(this.editBank.string.toLowerCase())) {\r\n                //Utils.Log(\"match:\" + this.listBank[i]);\r\n                datas.push({ optionString: this.listBank[i] });\r\n            }\r\n        }\r\n        //Utils.Log(\"load:\" + JSON.stringify(datas));\r\n        this.dropBankComp.hide();\r\n        this.dropBankComp.clearOptionDatas();\r\n        this.dropBankComp.addOptionDatas(datas);\r\n        this.dropBankComp.selectedIndex = 0;\r\n        this.dropBankComp.show();\r\n    }\r\n\r\n    onBtnChoseItemBank() {\r\n        this.editBank.node.active = false;\r\n        this.dropBankComp.hide();\r\n    }\r\n\r\n    onChangeEditNumber() {\r\n        this.editNumber.string = Utils.formatNumberBank(this.editNumber.string).toUpperCase();\r\n\r\n    }\r\n\r\n    onChangeEditNumberUpdate() {\r\n        this.editNumberUpdate.string = Utils.formatNumberBank(this.editNumberUpdate.string).toUpperCase();\r\n\r\n    }\r\n\r\n    onChangeEditBranch() {\r\n        this.editBranch.string = Utils.formatNameBank(this.editBranch.string).toUpperCase();\r\n\r\n    }\r\n\r\n    onChangeEditBranchUpdate() {\r\n        this.editBranchUpdate.string = Utils.formatNameBank(this.editBranchUpdate.string).toUpperCase();\r\n\r\n    }\r\n\r\n    onChangeEditName() {\r\n        this.editName.string = Utils.formatNameBank(this.editName.string).toUpperCase();\r\n\r\n    }\r\n\r\n    onChangeEditNameUpdate() {\r\n        this.editNameUpdate.string = Utils.formatNameBank(this.editNameUpdate.string).toUpperCase();\r\n\r\n    }\r\n\r\n    HideBoxUpdate() {\r\n        this.boxUpdate.active = false;\r\n        this.idBankChosing = -1;\r\n    }\r\n\r\n    UpdateBank() {\r\n        //Utils.Log(\"UpdateBank:\" + this.editNameUpdate.string + \":\" + this.editNumberUpdate.string + \":\" + this.editBranchUpdate.string + \":\" + this.dropBankUpdate.selectedIndex + \":\" + this.idBankChosing);\r\n        if (this.editNameUpdate.string == \"\" || this.editNumberUpdate.string == \"\" || this.editBranchUpdate.string == \"\" || this.idBankChosing == -1) {\r\n            App.instance.alertDialog.showMsg(\"Vui lòng điền đầy đủ thông tin.\");\r\n            return;\r\n        }\r\n        if (this.editName.string.indexOf(' ') == -1) {\r\n            App.instance.alertDialog.showMsg(\"Chủ tài khoản bắt buộc phải có 1 khoảng trắng.\");\r\n            return;\r\n        }\r\n        var self = this;\r\n        var data = {};\r\n        data[\"c\"] = 2007;\r\n        data[\"nn\"] = Configs.Login.Nickname;\r\n        data[\"bn\"] = this.dropBankUpdateComp.labelCaption.string;\r\n        data[\"cn\"] = this.editNameUpdate.string;\r\n        data[\"bnum\"] = this.editNumberUpdate.string;\r\n        data[\"br\"] = this.editBranchUpdate.string;\r\n        data[\"t\"] = 1;\r\n        data[\"id\"] = this.idBankChosing;\r\n        Http.get(Configs.App.API, data, (err, res) => {\r\n            if (res.success) {\r\n                //Utils.Log(\"UpdateBank success:\", res);\r\n                self.GetListBankProfile();\r\n                self.HideBoxUpdate();\r\n            }\r\n            else {\r\n                App.instance.alertDialog.showMsg(res.message);\r\n            }\r\n        });\r\n    }\r\n}\r\n@ccclass\r\nexport default class PopupProfile extends Dialog {\r\n    @property(cc.ToggleContainer)\r\n    tabs: cc.ToggleContainer = null;\r\n    @property(cc.Node)\r\n    tabContents: cc.Node = null;\r\n\r\n    @property(TabProfile)\r\n    tabProfile: TabProfile = null;\r\n    @property(TabVip)\r\n    tabVip: TabVip = null;\r\n    @property(TabBank)\r\n    tabBank: TabBank = null;\r\n    @property(PopupUpdateInfo)\r\n    popupUpdateInfo: PopupUpdateInfo = null;\r\n\r\n    private tabSelectedIdx = 0;\r\n\r\n\r\n    start() {\r\n\r\n        for (let i = 0; i < this.tabs.toggleItems.length; i++) {\r\n            this.tabs.toggleItems[i].node.on(\"toggle\", () => {\r\n                if (this.tabSelectedIdx != i) {\r\n                    this.tabSelectedIdx = i;\r\n                    this.onTabChanged();\r\n                }\r\n            });\r\n        }\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_INFO_UPDATED, () => {\r\n            if (!this.node.active) return;\r\n            this.tabProfile.spriteAvatar.spriteFrame = App.instance.getAvatarSpriteFrame(Configs.Login.Avatar);\r\n        }, this);\r\n\r\n        MiniGameNetworkClient.getInstance().addListener((data) => {\r\n            if (!this.node.active) return;\r\n            let inpacket = new InPacket(data);\r\n            //  //Utils.Log(inpacket.getCmdId());\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.EXCHANGE_VIP_POINT: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResExchangeVipPoint(data);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            App.instance.alertDialog.showMsg(\"Vui lòng nhấn \\\"Lấy OTP\\\" hoặc nhận OTP qua APP OTP, và nhập để tiếp tục.\");\r\n                            break;\r\n                        case 1:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_room_err6\"));\r\n                            break;\r\n                        case 2:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_profile_note'));\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_unknown_error\"));\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.RESULT_EXCHANGE_VIP_POINT: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResResultExchangeVipPoint(data);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            Configs.Login.Coin = res.currentMoney;\r\n                            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_reward') + \"\\n\" + Utils.formatNumber(res.moneyAdd) + \" Xu\");\r\n                            break;\r\n                        case 1:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_room_err6\"));\r\n                            break;\r\n                        case 2:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_profile_note'));\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_unknown_error\"));\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.GET_OTP: {\r\n                    if (!this.node.active) return;\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResGetOTP(data);\r\n                    //  //Utils.Log(res);\r\n                    if (res.error == 0) {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_otp_send'));\r\n                    } else if (res.error == 30) {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_otp_delay_time'));\r\n                    } else {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_action_not_success'));\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.SEND_OTP: {\r\n                    let res = new cmd.ResSendOTP(data);\r\n                    //  //Utils.Log(res);\r\n                    App.instance.showLoading(false);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            break;\r\n                        case 1:\r\n                        case 2:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error_exchange'));\r\n                            break;\r\n                        case 77:\r\n                        case 3:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_incorrect_otp'));\r\n                            break;\r\n                        case 4:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_expired_otp'));\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error'));\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.CHANGE_EMAIL: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResChangeEmail(data);\r\n                    this.actCloseUpdateInfo();\r\n                    if (res.error == 0) {\r\n                        let lblEmail = this.tabProfile.lblEmail;\r\n                        lblEmail.enableItalic = false;\r\n                        lblEmail.enableUnderline = false;\r\n                        lblEmail.node.parent.getComponent(cc.Button).interactable = false;\r\n                        lblEmail.node.color = cc.Color.WHITE;\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_profile_info_change'));\r\n                        this.tabProfile.lblEmail.string = this.popupUpdateInfo.edbMail.string;\r\n                    } else {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error1'));\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_USER_INFO: {\r\n                    let res = new cmd.ResUpdateUserInfo(data);\r\n                    this.actCloseUpdateInfo();\r\n                    if (res.error == 0) {\r\n                        this.tabProfile.lblEmail.string = this.popupUpdateInfo.edbMail.string;\r\n                        this.tabProfile.lblAddress.string = this.popupUpdateInfo.edbAddress.string;\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_profile_info_change'));\r\n                        MiniGameNetworkClient.getInstance().send(new cmd.ReqGetSecurityInfo());\r\n                    } else {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error1'));\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.GET_SECURITY_INFO: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResGetSecurityInfo(data);\r\n                    //Utils.Log(\"GET_SECURITY_INFO=\", res);\r\n                    Configs.Login.Mail = res.email;\r\n                    Configs.Login.Address = res.address;\r\n                    Configs.Login.Gender = res.gender;\r\n                    let lblPhone = this.tabProfile.lblPhone;\r\n                    let lblEmail = this.tabProfile.lblEmail;\r\n                    let lblAddress = this.tabProfile.lblAddress;\r\n                    this.popupUpdateInfo.refcode = res.refferalCode;\r\n                    this.tabProfile.lblGender.string = Configs.Login.Gender == true ? App.instance.getTextLang(\"txt_gender_male\") : App.instance.getTextLang(\"txt_gender_female\");\r\n                    let msg = App.instance.getTextLang(\"txt_not_config\");\r\n                    let msg1 = App.instance.getTextLang(\"txt_not_update\");\r\n                    this.tabProfile.lblRefcode.string = res.refferalCode != \"\" ? res.refferalCode : msg1;\r\n                    lblPhone.string = res.mobile == \"\" ? msg : res.mobile.substring(0, res.mobile.length - 3) + \"***\";\r\n                    lblPhone.enableItalic = res.mobile == \"\" ? true : false;\r\n                    lblPhone.enableUnderline = res.mobile == \"\" ? true : false;\r\n                    lblPhone.node.color = res.mobile == \"\" ? cc.Color.GREEN : cc.Color.WHITE;\r\n                    lblEmail.string = res.email == \"\" ? msg1 : res.email;\r\n                    this.tabProfile.lblBirthday.string = res['birthday'] != \"\" ? res['birthday'].replace(/-/g, '/') : msg1;\r\n\r\n\r\n                    lblAddress.string = Configs.Login.Address != \"\" ? Configs.Login.Address : msg1;\r\n                    if (Configs.Login.Address == \"\") {\r\n                        lblAddress.string = Configs.Login.FacebookID != \"\" ? App.instance.getTextLang('txt_profile_click') : msg1;\r\n                    }\r\n                    lblAddress.enableItalic = Configs.Login.FacebookID != \"\" ? true : false;\r\n                    lblAddress.node.color = Configs.Login.FacebookID != \"\" ? cc.Color.GREEN : cc.Color.WHITE;\r\n                    lblAddress.node.parent.getComponent(cc.Button).interactable = Configs.Login.FacebookID != \"\" ? true : false;\r\n                    break;\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    actRule() {\r\n        App.instance.actRule();\r\n        this.dismiss();\r\n    }\r\n\r\n    onBtnChangePass() {\r\n        App.instance.actChangePass();\r\n    }\r\n    onBtnRefund() {\r\n        this.dismiss();\r\n        Global.LobbyController.actRefund();\r\n    }\r\n    onClickAddress() {\r\n        cc.sys.openURL(\"https://www.facebook.com/\" + Configs.Login.FacebookID);\r\n    }\r\n    actChangeAvatar() {\r\n        App.instance.actChangeAvatar();\r\n    }\r\n    actUpdateInfo() {\r\n        this.popupUpdateInfo.show();\r\n    }\r\n    actSendUpdateInfo() {\r\n        this.popupUpdateInfo.onClickUpdate();\r\n    }\r\n    actCloseUpdateInfo() {\r\n        this.popupUpdateInfo.dismiss();\r\n    }\r\n    actChangeUserInfo(even, data) {\r\n        //Utils.Log(\"Data==\" + data);\r\n        switch (data) {\r\n            case \"1\": {\r\n                Global.LobbyController.actSecurity();\r\n                this.dismiss();\r\n                break;\r\n            }\r\n            case \"2\":\r\n            case \"3\": {\r\n                this.popupUpdateInfo.show()\r\n                this.popupUpdateInfo.setInfo();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    actChooseGender(even, data) {\r\n        this.popupUpdateInfo.onClickGender(data);\r\n    }\r\n    show(tabIndex = 0) {\r\n        super.show();\r\n        this.tabSelectedIdx = tabIndex;\r\n        this.tabs.toggleItems[this.tabSelectedIdx].isChecked = true;\r\n        this.onTabChanged();\r\n    }\r\n\r\n    showTabBank() {\r\n        super.show();\r\n\r\n        this.tabSelectedIdx = 2;\r\n        this.tabs.toggleItems[this.tabSelectedIdx].isChecked = true;\r\n        this.onTabChanged();\r\n    }\r\n\r\n    actChoseItemBank() {\r\n        this.tabBank.onBtnChoseItemBank();\r\n    }\r\n\r\n    actEditBank() {\r\n        this.tabBank.onChangeEditBank();\r\n    }\r\n\r\n    actEditNumber() {\r\n        this.tabBank.onChangeEditNumber();\r\n    }\r\n\r\n    actEditNumberUpdate() {\r\n        this.tabBank.onChangeEditNumberUpdate();\r\n    }\r\n\r\n    actEditBranch() {\r\n        this.tabBank.onChangeEditBranch();\r\n    }\r\n\r\n    actEditBranchUpdate() {\r\n        this.tabBank.onChangeEditBranchUpdate();\r\n    }\r\n\r\n    actEditNameBank() {\r\n        this.tabBank.onChangeEditName();\r\n    }\r\n\r\n    actEditNameBankUpdate() {\r\n        this.tabBank.onChangeEditNameUpdate();\r\n    }\r\n\r\n    actHideUpdateBank() {\r\n        this.tabBank.HideBoxUpdate();\r\n    }\r\n    actHideAddBank() {\r\n        this.tabBank.closeTabAddBank();\r\n    }\r\n    actUpdateBank() {\r\n        this.tabBank.UpdateBank();\r\n    }\r\n\r\n    actCreateBank() {\r\n        this.tabBank.CreateBank();\r\n    }\r\n    actAddBankAccount() {\r\n        this.tabBank.showPopupAddBank();\r\n    }\r\n    actShowAddCoin() {\r\n        this.dismiss();\r\n        App.instance.popupShop.show();\r\n    }\r\n\r\n\r\n\r\n    actGetOTP() {\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqGetOTP());\r\n    }\r\n\r\n    private onTabChanged() {\r\n        for (let i = 0; i < this.tabContents.childrenCount; i++) {\r\n            this.tabContents.children[i].active = i == this.tabSelectedIdx;\r\n        }\r\n        // for (let j = 0; j < this.tabs.toggleItems.length; j++) {\r\n        //     this.tabs.toggleItems[j].node.getComponentInChildren(cc.Label).node.color = j == this.tabSelectedIdx ? cc.Color.YELLOW : cc.Color.WHITE;\r\n        // }\r\n        switch (this.tabSelectedIdx) {\r\n            case 0:\r\n                App.instance.showLoading(true);\r\n                MiniGameNetworkClient.getInstance().send(new cmd.ReqGetSecurityInfo());\r\n                this.tabProfile.lblNickname.string = Configs.Login.Nickname;\r\n                this.tabProfile.lblChip.string = Utils.formatNumber(Configs.Login.Coin);\r\n                this.tabProfile.lblVipPoint.string = \"VP: \" + Utils.formatNumber(Configs.Login.VipPoint) + \"/\" + Utils.formatNumber(Configs.Login.getVipPointNextLevel());\r\n                this.tabProfile.lblVipName.string = Configs.Login.getVipPointName();\r\n                this.tabProfile.sliderVipPoint.progress = Math.min(Configs.Login.VipPoint / Configs.Login.getVipPointNextLevel(), 1);\r\n                this.tabProfile.spriteProgressVipPoint.fillRange = this.tabProfile.sliderVipPoint.progress;\r\n                this.tabProfile.lblVipPointPercent.string = Math.floor(this.tabProfile.sliderVipPoint.progress * 100) + \"%\";\r\n                this.tabProfile.spriteAvatar.spriteFrame = App.instance.getAvatarSpriteFrame(Configs.Login.Avatar);\r\n                break;\r\n            case 1:\r\n                this.tabVip.getVipPointInfo();\r\n                break;\r\n            case 2:\r\n                this.tabBank.show();\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupRefund extends Dialog {\r\n    @property(cc.Label)\r\n    lblBalance: cc.Label = null;\r\n    @property(cc.EditBox)\r\n    edbCoin: cc.EditBox = null;\r\n    @property([cc.Node])\r\n    listItem: cc.Node[] = [];\r\n    @property([cc.Font])\r\n    fonts: cc.Font[] = [];\r\n    @property(Dialog)\r\n    popupConfirm: Dialog = null;\r\n\r\n    @property(cc.Label)\r\n    lbSport: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbCasino: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbGameLot: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbTotal: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbInfomation: cc.Label = null;\r\n    @property(cc.Button)\r\n    btnConfirm: cc.Button = null;\r\n\r\n    currentItemRefund = null;\r\n    onLoad() {\r\n      \r\n    }\r\n    onEnable(){\r\n        this.setInfo();\r\n    }\r\n    start() {\r\n       \r\n    }\r\n    setInfo() {\r\n        let today = new Date().getTime();\r\n         //Utils.Log(\"today==\" + today);\r\n        let firstDayRefund = today - 86400 * 1000 * 8;\r\n        let firstDay = new Date(firstDayRefund).getDate();\r\n        for (let i = 0; i < 7; i++) {\r\n            let item = this.listItem[i];\r\n            let dayRefund = new Date(today - (86400 * 1000 * (7 - i)));\r\n            let date = dayRefund.getDate();\r\n            let month = dayRefund.getMonth() + 1;\r\n            let year = dayRefund.getFullYear();\r\n            item.getChildByName('lbDay').getComponent(cc.Label).string = cc.js.formatStr(\"%s/%s/%s\", (date < 10 ? \"0\" + date : date), (month < 10 ? \"0\" + month : month), year);\r\n            item.getComponent(cc.Button).clickEvents[0].customEventData = cc.js.formatStr(\"%s-%s-%s\", year, (month < 10 ? \"0\" + month : month), (date < 10 ? \"0\" + date : date));\r\n            App.instance.showLoading(true);\r\n            Http.get(Configs.App.API, { c: \"2029\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, date: item.getComponent(cc.Button).clickEvents[0].customEventData }, (err, res) => {\r\n                 //Utils.Log(res);\r\n                App.instance.showLoading(false);\r\n                let lbChip = item.getChildByName('lbChip').getComponent(cc.Label);\r\n                if (res[\"success\"]) {\r\n                    let totalRefund = res['data']['sumCasino'] + res['data']['sumGame'] + res['data']['sumSport'];\r\n                    lbChip.string = \"\";\r\n                    lbChip.font = this.fonts[0];\r\n                    lbChip.string = Utils.formatNumber(totalRefund);\r\n                    lbChip.fontSize = 40;\r\n                    lbChip.node.y = -101.237;\r\n                    item.getComponentInChildren(cc.Sprite).node.color = cc.Color.WHITE;\r\n                    item.getComponent(cc.Button).interactable = true;\r\n                    item['data'] = res['data'];\r\n                    item['data']['total'] = totalRefund;\r\n                    item['data']['date'] = cc.js.formatStr(\"%s-%s-%s\", (date < 10 ? \"0\" + date : date), (month < 10 ? \"0\" + month : month), year);//cái này để show ra cho dễ nhìn\r\n                    item['data']['dateRefund'] = cc.js.formatStr(\"%s-%s-%s\", year, (month < 10 ? \"0\" + month : month), (date < 10 ? \"0\" + date : date)); //cái này để gưi lên cho server\r\n                }\r\n                else {\r\n                    lbChip.string = \"\";\r\n                    lbChip.font = this.fonts[1];\r\n                    lbChip.node.y = -94;\r\n                    lbChip.fontSize = 20;\r\n                    item.getComponentInChildren(cc.Sprite).node.color = cc.Color.GRAY;\r\n                    item.getComponent(cc.Button).interactable = false;\r\n                    if (res['errorCode'] == 1002) {\r\n                        lbChip.string = App.instance.getTextLang('txt_refund_receive');\r\n                    }\r\n                    else {\r\n                        lbChip.string = App.instance.getTextLang('txt_refund_error');\r\n                    }\r\n\r\n                }\r\n            }\r\n            );\r\n        }\r\n    }\r\n    onClickReceive(even, data) {\r\n        let dataItem = even.target['data'];\r\n        this.currentItemRefund = even.target;\r\n        this.popupConfirm.show();\r\n        this.lbCasino.string = Utils.formatNumber(dataItem['sumCasino']);\r\n        this.lbSport.string = Utils.formatNumber(dataItem['sumSport']);\r\n        this.lbGameLot.string = Utils.formatNumber(dataItem['sumGame']);\r\n        this.lbTotal.string = Utils.formatNumber(dataItem['total']);\r\n        this.lbInfomation.string = App.instance.getTextLang('txt_refund_confirm') + \"\\n\" + dataItem['date'];\r\n        this.btnConfirm.clickEvents[0].customEventData = dataItem['dateRefund'];\r\n    }\r\n    onClickConfirm(even, data) {\r\n        this.popupConfirm.dismiss();\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { c: \"2030\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, date: data }, (err, res) => {\r\n             //Utils.Log(res);\r\n            App.instance.showLoading(false);\r\n            if (res[\"success\"]) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang('txt_refund_success'));\r\n                Configs.Login.Coin += this.currentItemRefund['data']['total'];\r\n                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                let lbChip = this.currentItemRefund.getChildByName('lbChip').getComponent(cc.Label);\r\n                this.currentItemRefund.getComponent(cc.Button).interactable = false;\r\n                this.currentItemRefund.getComponentInChildren(cc.Sprite).node.color = cc.Color.GRAY;\r\n                lbChip.font = this.fonts[1];\r\n                lbChip.node.y = -94;\r\n                lbChip.fontSize = 20;\r\n                lbChip.string = App.instance.getTextLang('txt_refund_receive');\r\n\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res.data);\r\n            }\r\n        }\r\n        );\r\n    }\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport LogEvent from \"../../Loading/src/LogEvent/LogEvent\";\r\nimport UtilsNative from \"../../Loading/src/UtilsNative\";\r\nimport cmd from \"./Lobby.Cmd\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"./Script/networks/MiniGameNetworkClient\";\r\nimport InPacket from \"./Script/networks/Network.InPacket\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass(\"Lobby.PopupSecurity.PanelSmsPlus\")\r\nexport class PanelSmsPlus {\r\n    @property(cc.Node)\r\n    node: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    info: cc.Node = null;\r\n    @property(cc.Node)\r\n    update: cc.Node = null;\r\n    @property(cc.Node)\r\n    continue: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    infoLblUsername: cc.Label = null;\r\n    @property(cc.Label)\r\n    infoLblPhoneNumber: cc.Label = null;\r\n    @property(cc.Button)\r\n    infoBtnActive: cc.Button = null;\r\n    @property(cc.Button)\r\n    infoBtnChange: cc.Button = null;\r\n\r\n    @property(cc.Node)\r\n    updateBtnsActive: cc.Node = null;\r\n    @property(cc.Node)\r\n    updateBtnsNotActive: cc.Node = null;\r\n    @property(cc.EditBox)\r\n    updateEdbPhoneNumber: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    continueEdbOTP: cc.EditBox = null;\r\n    @property(cc.Button)\r\n    btnGetOTP: cc.Button = null;\r\n}\r\n\r\n@ccclass(\"Lobby.PopupSecurity.TabSafes\")\r\nexport class TabSafes {\r\n    @property(cc.Node)\r\n    node: cc.Node = null;\r\n\r\n    @property(cc.ToggleContainer)\r\n    tabs: cc.ToggleContainer = null;\r\n    @property(cc.Node)\r\n    tabContents: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lblBalance: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblBalanceSafes: cc.Label = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbCoinNap: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbCoinRut: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    edbOTP: cc.EditBox = null;\r\n    @property(cc.Toggle)\r\n    toggleAppOTP: cc.Toggle = null;\r\n\r\n    tabSelectedIdx = 0;\r\n\r\n    start() {\r\n        this.edbCoinRut.node.on(\"editing-did-ended\", () => {\r\n            let number = Utils.stringToInt(this.edbCoinRut.string);\r\n            this.edbCoinRut.string = Utils.formatNumber(number);\r\n        });\r\n        this.edbCoinNap.node.on(\"editing-did-ended\", () => {\r\n            let number = Utils.stringToInt(this.edbCoinNap.string);\r\n            this.edbCoinNap.string = Utils.formatNumber(number);\r\n        });\r\n        for (let i = 0; i < this.tabs.toggleItems.length; i++) {\r\n            this.tabs.toggleItems[i].node.on(\"toggle\", () => {\r\n                this.tabSelectedIdx = i;\r\n                this.onTabChanged();\r\n            });\r\n        }\r\n    }\r\n\r\n    onTabChanged() {\r\n        for (let i = 0; i < this.tabContents.childrenCount; i++) {\r\n            this.tabContents.children[i].active = i == this.tabSelectedIdx;\r\n        }\r\n        for (let j = 0; j < this.tabs.toggleItems.length; j++) {\r\n            this.tabs.toggleItems[j].node.getComponentInChildren(cc.Label).node.color = j == this.tabSelectedIdx ? cc.Color.YELLOW : cc.Color.WHITE;\r\n        }\r\n        switch (this.tabSelectedIdx) {\r\n            case 0:\r\n                this.edbCoinNap.string = \"\";\r\n                break;\r\n            case 1:\r\n                this.edbCoinRut.string = \"\";\r\n                this.edbOTP.string = \"\";\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n@ccclass\r\nexport default class PopupSecurity extends Dialog {\r\n    @property(cc.ToggleContainer)\r\n    tabs: cc.ToggleContainer = null;\r\n    @property(cc.Node)\r\n    tabContents: cc.Node = null;\r\n    @property(PanelSmsPlus)\r\n    panelSmsPlus: PanelSmsPlus = null;\r\n    @property(TabSafes)\r\n    tabSafes: TabSafes = null;\r\n    @property([cc.Label])\r\n    lblContainsBotOTPs: cc.Label[] = [];\r\n    @property(cc.Node)\r\n    tabTeleSafe: cc.Node = null;\r\n    @property(cc.EditBox)\r\n    edbTeleSafe: cc.EditBox = null;\r\n\r\n    private tabSelectedIdx = 0;\r\n    private phoneNumber = \"\";\r\n    public sessionInfo = \"\";\r\n    private captchaToken = \"\"\r\n    private isMobileSecure = false;\r\n    onLoad() {\r\n        Global.PopupSecurity = this;\r\n        this.panelSmsPlus.infoLblUsername.string = Configs.Login.Nickname;\r\n    }\r\n    start() {\r\n        for (let i = 0; i < this.lblContainsBotOTPs.length; i++) {\r\n            let lbl = this.lblContainsBotOTPs[i];\r\n            lbl.string = lbl.string.replace(\"$bot_otp\", \"@\" + Configs.App.getLinkTelegram());\r\n        }\r\n\r\n        this.tabSafes.start();\r\n\r\n        for (let i = 0; i < this.tabs.toggleItems.length; i++) {\r\n            this.tabs.toggleItems[i].node.on(\"toggle\", () => {\r\n                this.tabSelectedIdx = i;\r\n                this.onTabChanged();\r\n            });\r\n        }\r\n\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\r\n            this.tabSafes.lblBalance.string = Utils.formatNumber(Configs.Login.Coin);\r\n        }, this);\r\n\r\n        MiniGameNetworkClient.getInstance().addListener((data) => {\r\n            if (!this.node.active) return;\r\n            let inpacket = new InPacket(data);\r\n            //  //Utils.Log(inpacket.getCmdId());\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.GET_SECURITY_INFO: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResGetSecurityInfo(data);\r\n                     //Utils.Log(\"ResGetSecurityInfo:\", JSON.stringify(res));\r\n                    if (this.panelSmsPlus.node.active) {\r\n                        this.phoneNumber = res.mobile;\r\n                        this.isMobileSecure = res.mobileSecure == 1;\r\n                        // if (res.mobile.length > 0||res.isVerifyPhone) {\r\n                        if (res.isVerifyPhone) {\r\n                            this.panelSmsPlus.info.active = true;\r\n                            this.panelSmsPlus.update.active = false;\r\n                            this.panelSmsPlus.continue.active = false;\r\n                            this.panelSmsPlus.infoLblUsername.string = res.username;\r\n                            this.panelSmsPlus.infoLblPhoneNumber.string = \"*******\" + this.phoneNumber.substring(this.phoneNumber.length - 3);\r\n                            // this.panelSmsPlus.infoBtnActive.node.active = !this.isMobileSecure;\r\n                            this.panelSmsPlus.infoBtnActive.node.active = false;\r\n\r\n                        } else {\r\n                            this.panelSmsPlus.info.active = false;\r\n                            this.panelSmsPlus.update.active = true;\r\n                            this.panelSmsPlus.continue.active = false;\r\n                        }\r\n                        this.panelSmsPlus.updateBtnsActive.active = this.isMobileSecure;\r\n                        this.panelSmsPlus.updateBtnsNotActive.active = !this.isMobileSecure;\r\n                    }\r\n                    if (this.tabSafes.node.active) {\r\n                        this.tabSafes.lblBalanceSafes.string = Utils.formatNumber(res.safe);\r\n                        this.tabSafes.lblBalance.string = Utils.formatNumber(Configs.Login.Coin);\r\n                    }\r\n                    //  //Utils.Log(res);\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE_USER_INFO: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResUpdateUserInfo(data);\r\n                    if (res.error != 0) {\r\n                        switch (res.error) {\r\n                            case 1:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_check_connect'));\r\n                                break;\r\n                            case 4:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_phone_number_incorrect'));\r\n                                break;\r\n                            case 5:\r\n                            case 11:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_phone_number_incorrect1'));\r\n                                break;\r\n                            default:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error'));\r\n                                break;\r\n                        }\r\n                        return;\r\n                    }\r\n                    this.showSmsPlusContinue();\r\n                    this.actSmsPlusActivePhone();\r\n                    break;\r\n                }\r\n                case cmd.Code.CHANGE_PHONE_NUMBER: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResChangePhoneNumber(data);\r\n                    if (res.error != 0) {\r\n                        switch (res.error) {\r\n                            case 1:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_check_connect'));\r\n                                break;\r\n                            case 2:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_phone_number_incorrect'));\r\n                                break;\r\n                            case 3:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_phone_number_incorrect2'));\r\n                                break;\r\n                            case 4:\r\n                            case 5:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_phone_number_incorrect1'));\r\n                                break;\r\n                            default:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error'));\r\n                                break;\r\n                        }\r\n                        return;\r\n                    }\r\n                    this.showSmsPlusContinue();\r\n                    App.instance.alertDialog.showMsg(\"Vui lòng nhập mã OTP (Số điện thoại cũ) để tiếp tục thay đổi số điện thoại bảo mật!\");\r\n                    break;\r\n                }\r\n                case cmd.Code.GET_OTP: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResGetOTP(data);\r\n                     //Utils.Log(\"GET_OTP:\" + JSON.stringify(res));\r\n                    if (res.error == 0) {\r\n                        App.instance.alertDialog.showMsg(\"Mã OTP đã được gửi đi!\");\r\n                    } else if (res.error == 30) {\r\n                        App.instance.alertDialog.showMsg(\"Mỗi thao tác lấy SMS OTP phải cách nhau ít nhất 5 phút!\");\r\n                    } else {\r\n                        App.instance.alertDialog.showMsg(\"Thao tác không thành công vui lòng thử lại sau!\");\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.SEND_OTP: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResSendOTP(data);\r\n                    //  //Utils.Log(res);\r\n                    if (res.error != 0) {\r\n                        switch (res.error) {\r\n                            case 1:\r\n                            case 2:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error'));\r\n                                break;\r\n                            case 3:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_incorrect_otp'));\r\n                                break;\r\n                            case 4:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_expired_otp'));\r\n                                break;\r\n                            default:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error'));\r\n                                break;\r\n                        }\r\n                        return;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.ACTIVE_PHONE: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResActivePhone(data);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            this.showSmsPlusContinue();\r\n                            break;\r\n                        case 1:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_check_connect'));\r\n                            break;\r\n                        case 2:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_phone_number_incorrect1'));\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error'));\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.RESULT_ACTIVE_MOBILE: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResResultActiveMobie(data);\r\n                    if (res.error == 0) {\r\n                        LogEvent.getInstance().sendEventSdt(this.panelSmsPlus.updateEdbPhoneNumber.string.trim());\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_security_success'));\r\n                        this.onTabChanged();\r\n                    } else {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_security_error'));\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.RESULT_ACTIVE_NEW_MOBILE: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResResultActiveMobie(data);\r\n                    if (res.error == 0) {\r\n                        LogEvent.getInstance().sendEventSdt(this.panelSmsPlus.updateEdbPhoneNumber.string.trim());\r\n                        App.instance.alertDialog.showMsg(\"Thay đổi số điện thoại và kích hoạt bảo mật thành công!\");\r\n                        this.onTabChanged();\r\n                    } else {\r\n                        App.instance.alertDialog.showMsg(\"Thao tác không thành công, vui lòng thử lại sau!\");\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.RESULT_CHANGE_MOBILE_ACTIVED: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResResultActiveMobie(data);\r\n                    if (res.error == 0) {\r\n                        this.showSmsPlusContinue();\r\n                        App.instance.alertDialog.showMsg(\"Vui lòng nhập mã OTP (Số điện thoại mới) để hoàn tất thay đổi số điện thoại bảo mật!\");\r\n                    } else {\r\n                        App.instance.alertDialog.showMsg(\"Thao tác không thành công, vui lòng thử lại sau!\");\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.SAFES: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResSafes(data);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            if (this.tabSafes.tabSelectedIdx == 0) {\r\n                                //nap\r\n                            } else if (this.tabSafes.tabSelectedIdx == 1) {\r\n                                //rut\r\n                                App.instance.showLoading(true);\r\n                                MiniGameNetworkClient.getInstance().send(new cmd.ReqSendOTP(this.tabSafes.edbOTP.string.trim(), this.tabSafes.toggleAppOTP.isChecked ? 1 : 0));\r\n                            }\r\n                            break;\r\n                        case 1:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_check_connect'));\r\n                            break;\r\n                        case 2:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_not_enough'));\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error'));\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.RESULT_SAFES: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResResultSafes(data);\r\n                    //  //Utils.Log(res);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            if (this.tabSafes.tabSelectedIdx == 0) {\r\n                                //nap\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_action_success'));\r\n                                this.tabSafes.lblBalanceSafes.string = Utils.formatNumber(res.safe);\r\n                                this.tabSafes.edbCoinNap.string = \"\";\r\n                                Configs.Login.Coin = res.currentMoney;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                            } else if (this.tabSafes.tabSelectedIdx == 1) {\r\n                                //rut\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_action_success'));\r\n                                this.tabSafes.lblBalanceSafes.string = Utils.formatNumber(res.safe);\r\n                                this.tabSafes.edbCoinRut.string = \"\";\r\n                                this.tabSafes.edbOTP.string = \"\";\r\n                                Configs.Login.Coin = res.currentMoney;\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                            }\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_unknown_error'));\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    show() {\r\n        super.show();\r\n        this.tabSelectedIdx = 0;\r\n        this.tabs.toggleItems[this.tabSelectedIdx].isChecked = true;\r\n        this.onTabChanged();\r\n\r\n        // Global.PopupSecurity.recaptchaVerifier = firebase.auth.RecaptchaVerifier(\r\n        //     \"recaptcha-container\",\r\n        //     {\r\n        //       size: \"normal\",\r\n        //       callback: function(response) {\r\n        //         Global.PopupSecurity.submitPhoneNumberAuth();\r\n        //       }\r\n        //     }\r\n        //   );\r\n    }\r\n\r\n\r\n\r\n    actSmsPlusInfo() {\r\n        this.panelSmsPlus.info.active = true;\r\n        this.panelSmsPlus.update.active = false;\r\n        this.panelSmsPlus.continue.active = false;\r\n    }\r\n\r\n    actSmsPlusUpdate() {\r\n        this.panelSmsPlus.info.active = false;\r\n        this.panelSmsPlus.update.active = true;\r\n        this.panelSmsPlus.continue.active = false;\r\n        this.panelSmsPlus.updateEdbPhoneNumber.string = \"\";\r\n    }\r\n\r\n    private showSmsPlusContinue() {\r\n        this.panelSmsPlus.info.active = false;\r\n        this.panelSmsPlus.update.active = false;\r\n        this.panelSmsPlus.continue.active = true;\r\n        this.panelSmsPlus.continueEdbOTP.string = \"\";\r\n    }\r\n\r\n    actSmsPlusSubmitUpdateUserInfo() {\r\n        // let phoneNumber = this.panelSmsPlus.updateEdbPhoneNumber.string.trim();\r\n        // if (phoneNumber.length == 0) {\r\n        //     App.instance.alertDialog.showMsg(\"Số điện thoại không được bỏ trống.\");\r\n        //     return;\r\n        // }\r\n        // MiniGameNetworkClient.getInstance().send(new cmd.ReqUpdateUserInfo(phoneNumber));\r\n        this.actGetToken();\r\n    }\r\n    actTeleSafe() {\r\n        // let phoneNumber = this.edbTeleSafe.string.trim();\r\n        // if (phoneNumber.length < 10) {\r\n        //     App.instance.ShowAlertDialog(App.instance.getTextLang('txt_check_phone_number'));\r\n        // }\r\n        // if (phoneNumber[0] === \"0\") {\r\n        //     phoneNumber = phoneNumber.replace('0', '+84');\r\n        // }\r\n        // let url = Configs.App.API + \"?c=2028&nn=%s&at=%s&pn=%s\";\r\n        // url = cc.js.formatStr(url, Configs.Login.Nickname, Configs.Login.AccessToken, phoneNumber);\r\n        // var _this = this;\r\n        // this.httpGet(url, (err, res) => {\r\n        //     if (err != null) {\r\n        //         App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_error\"));\r\n        //         return;\r\n        //     }\r\n        //     App.instance.showLoading(false);\r\n        //     let dataRes = res;\r\n        //     if (dataRes.success == true) {\r\n        //         // _this.actSmsPlusInfo();\r\n        //         // App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_check_teleSafe\"));\r\n\r\n        //     } else {\r\n        //         if (dataRes.message != null && dataRes.message != \"\") {\r\n        //             App.instance.ShowAlertDialog(dataRes.message);\r\n        //         } else {\r\n        //             App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_error\"));\r\n        //         }\r\n        //     }\r\n\r\n        // });\r\n        App.instance.confirmDialog.show2(App.instance.getTextLang('txt_check_teleSafe'), () => {\r\n            cc.sys.openURL(\"https://www.telegram.me/Cuthethoi003_bot\"  + \"?start=\" + Configs.Login.AccessToken + \"-\" + Configs.Login.Nickname);\r\n        })\r\n    }\r\n    actSmsPlusSubmitUpdatePhoneNumber() {\r\n        let phoneNumber = this.panelSmsPlus.updateEdbPhoneNumber.string.trim();\r\n        if (phoneNumber.length == 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_phone_input1'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqChangePhoneNumber(phoneNumber));\r\n\r\n    }\r\n\r\n    actSmsPlusSubmitContinuePhoneNumber() {\r\n        if (Global.LobbyController.isUseSDK()) {\r\n            let codeOTP = this.panelSmsPlus.continueEdbOTP.string.trim();\r\n            if (codeOTP == \"\" || codeOTP.length < 6) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_otp_invalid\"));\r\n                return;\r\n            }\r\n            UtilsNative.verifyOTP(codeOTP);\r\n        } else {\r\n            this.actConfirmOtp();\r\n        }\r\n\r\n    }\r\n\r\n    actSmsPlusActivePhone() {\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqActivePhone());\r\n    }\r\n\r\n    actSubmitSafesNap() {\r\n        let coin = Utils.stringToInt(this.tabSafes.edbCoinNap.string);\r\n        if (coin <= 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_money_amount_invalid'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqSafes(coin, 1));\r\n    }\r\n\r\n    actSubmitSafesRut() {\r\n        let coin = Utils.stringToInt(this.tabSafes.edbCoinRut.string);\r\n        let otp = this.tabSafes.edbOTP.string;\r\n        if (coin <= 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_money_amount_invalid'));\r\n            return;\r\n        }\r\n        if (otp.length == 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_otp_blank'));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqSafes(coin, 0));\r\n    }\r\n\r\n    actGetOTP() {\r\n        // App.instance.showLoading(true);\r\n        // MiniGameNetworkClient.getInstance().send(new cmd.ReqGetOTP());\r\n        var phoneNumber = this.panelSmsPlus.updateEdbPhoneNumber.string.trim();\r\n        if (phoneNumber[0] === \"0\") {\r\n            phoneNumber = phoneNumber.replace('0', '+84');\r\n        }\r\n        this.submitPhoneNumberAuth(phoneNumber);\r\n        this.panelSmsPlus.btnGetOTP.node.active = false;\r\n    }\r\n\r\n    actTelegram() {\r\n        App.instance.openTelegram();\r\n    }\r\n\r\n    // This function runs when the 'confirm-code' button is clicked\r\n    // Takes the value from the 'code' input and submits the code to verify the phone number\r\n    // Return a user object if the authentication was successful, and auth is complete\r\n\r\n    actGetToken() {\r\n        var _this = this;\r\n        var phoneNumber = _this.panelSmsPlus.updateEdbPhoneNumber.string.trim();\r\n        if (phoneNumber[0] === \"0\") {\r\n            phoneNumber = phoneNumber.replace('0', '+84');\r\n        } else {\r\n            phoneNumber = \"+84\" + phoneNumber;\r\n        }\r\n         //Utils.Log(\"actGetToken:\" + phoneNumber);\r\n        if (!Global.LobbyController.isUseSDK()) {\r\n            this.showSmsPlusContinue();\r\n            this.submitPhoneNumberAuth(phoneNumber);\r\n        } else {\r\n            App.instance.showLoading(true);\r\n            UtilsNative.verifyPhone(phoneNumber);\r\n        }\r\n\r\n    }\r\n    actGetOtpServer(token) {\r\n        let phoneNumber = this.panelSmsPlus.updateEdbPhoneNumber.string.trim();\r\n        let url = Configs.App.API + \"?c=2012&nn=%s&pn=%s&cpt=%s&at=%s\";\r\n        if (phoneNumber[0] === \"0\") {\r\n            phoneNumber = phoneNumber.replace('0', '+84');\r\n        }\r\n        url = cc.js.formatStr(url, Configs.Login.Nickname, phoneNumber, token, Configs.Login.AccessToken2);\r\n        let data = Object.create({});\r\n        data.nn = Configs.Login.Nickname;\r\n        data.pn = phoneNumber;\r\n        data.cpt = token;\r\n        var _this = this;\r\n        if (!Global.LobbyController.isUseSDK()) {//tren web van dang dùng tạm qua thằng 2012\r\n            this.httpGet(url, (err, res) => {\r\n                if (err != null) {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_error\"));\r\n                    return;\r\n                }\r\n                App.instance.showLoading(false);\r\n                let data = res;\r\n                if (data != {} && data.hasOwnProperty(\"success\") && data.success == true) {\r\n                    _this.sessionInfo = data.data;\r\n                    _this.actGetVerifyCode();\r\n                } else {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_error\"));\r\n                }\r\n            });\r\n        } else {//tren native thi bỏ qua 2012 ,Lưu sessionid lại rồi sau khi nhâp otp call luôn 2013;\r\n            App.instance.showLoading(false)\r\n            this.sessionInfo = token;\r\n            this.showSmsPlusContinue();\r\n        }\r\n    }\r\n    actGetVerifyCode(isValidOpt = null) {//send otp lên server\r\n        if (Global.LobbyController.isUseSDK()) {\r\n            if (isValidOpt == \"Failed\") {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_error\"));\r\n                return;\r\n            }\r\n        }\r\n        if (this.sessionInfo == \"\" || this.panelSmsPlus.continueEdbOTP.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_otp_invalid\"));\r\n            return;\r\n        }\r\n        let codeOTP = this.panelSmsPlus.continueEdbOTP.string.trim();\r\n        let phoneNumber = this.panelSmsPlus.updateEdbPhoneNumber.string.trim();\r\n        if (codeOTP.length < 6) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_otp_invalid\"));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        let url = Configs.App.API + \"?c=2013&nn=%s&at=%s&pn=%s\";\r\n        url = cc.js.formatStr(url, Configs.Login.Nickname, Configs.Login.AccessToken, phoneNumber);\r\n        var _this = this;\r\n        this.httpGet(url, (err, res) => {\r\n            if (err != null) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_error\"));\r\n                return;\r\n            }\r\n            App.instance.showLoading(false);\r\n            let dataRes = res;\r\n            if (dataRes.success == true) {\r\n                _this.actSmsPlusInfo();\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_verify_phone_success\"));\r\n            } else {\r\n                if (dataRes.message != null && dataRes.message != \"\") {\r\n                    App.instance.ShowAlertDialog(dataRes.message);\r\n                } else {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_error\"));\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    actConfirmOtp() {//Dùng thằng firebase để xác thực mã otp gửi lên.Hàm này dùng cho web .Trong native đã có 1 hàm của sdk rồi.\r\n        if (this.panelSmsPlus.continueEdbOTP.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_otp_invalid\"));\r\n            return;\r\n        }\r\n        let codeOTP = this.panelSmsPlus.continueEdbOTP.string.trim();\r\n        if (codeOTP.length < 6) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_otp_invalid\"));\r\n            return;\r\n        }\r\n        var _this = this;\r\n        window.confirmationResult.confirm(codeOTP).then((result) => {\r\n            // User signed in successfully.\r\n             //Utils.Log(\"VERIFY OTP SUCCESS:\", result);\r\n            _this.actGetVerifyCode();\r\n            const user = result.user;\r\n        }).catch((error) => {\r\n             //Utils.Log(\"VERIFY OTP FAILED\");\r\n            App.instance.showLoading(false);\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_error\"));\r\n        });\r\n    }\r\n    setupRecaptcha() {\r\n         //Utils.Log(\"Setup Captchar\");\r\n        var _this = this;\r\n        if (window.recaptchaVerifier == null) {\r\n            window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n                \"recaptcha-container\",\r\n                {\r\n                    size: \"invisible\",\r\n                    callback: function (response) {\r\n                         //Utils.Log(\"setupRecaptcha:CB==\", response);\r\n                        _this.sessionInfo = response;\r\n                    }\r\n                }\r\n            );\r\n        }\r\n\r\n    }\r\n    submitPhoneNumberAuth(phoneNum) {\r\n        this.setupRecaptcha();\r\n        var appVerifier = window.recaptchaVerifier;\r\n        var _this = this;\r\n        firebase.auth().signInWithPhoneNumber(phoneNum, appVerifier).then(function (confirmationResult) {\r\n             //Utils.Log(\"SMS  Sended\");\r\n            window.confirmationResult = confirmationResult;\r\n            App.instance.showLoading(false);\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_sms_otp_sended\"));\r\n        }).catch(function (error) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_error\"));\r\n            _this.panelSmsPlus.btnGetOTP.node.active = true;\r\n            App.instance.showLoading(false);\r\n             //Utils.Log(\"SMS Not Send\", error);\r\n        });\r\n    }\r\n    httpGet(url: string, onFinished: (err: any, json: any) => void) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    var data = null;\r\n                    var e = null;\r\n                    try {\r\n                        data = JSON.parse(xhr.responseText);\r\n                    } catch (ex) {\r\n                        e = ex;\r\n                    }\r\n                    onFinished(e, data);\r\n                } else {\r\n                    onFinished(xhr.status, null);\r\n                }\r\n            }\r\n        };\r\n        xhr.open(\"GET\", url, true);\r\n        xhr.send();\r\n    }\r\n    private onTabChanged() {\r\n        for (let i = 0; i < this.tabContents.childrenCount; i++) {\r\n            this.tabContents.children[i].active = i == this.tabSelectedIdx;\r\n            if (i == this.tabSelectedIdx) {\r\n                 //Utils.Log(\"onTabChanged\");\r\n            }\r\n        }\r\n        for (let j = 0; j < this.tabs.toggleItems.length; j++) {\r\n            this.tabs.toggleItems[j].node.getComponentInChildren(cc.Label).node.color = j == this.tabSelectedIdx ? cc.Color.YELLOW : cc.Color.WHITE;\r\n        }\r\n         //Utils.Log(\"tab selectedidx=\" + this.tabSelectedIdx);\r\n        switch (this.tabSelectedIdx) {\r\n            case 0:\r\n                App.instance.showLoading(true);\r\n                MiniGameNetworkClient.getInstance().send(new cmd.ReqGetSecurityInfo());\r\n                break;\r\n            case 1:\r\n                break;\r\n            case 2:\r\n                App.instance.showLoading(true);\r\n                MiniGameNetworkClient.getInstance().send(new cmd.ReqGetSecurityInfo());\r\n                this.tabSafes.tabSelectedIdx = 0;\r\n                this.tabSafes.tabs.toggleItems[this.tabSafes.tabSelectedIdx].isChecked = true;\r\n                this.tabSafes.onTabChanged();\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport LanguageLanguageManager from \"./Script/common/Language.LanguageManager\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends Dialog {\r\n\r\n    @property(cc.Node)\r\n    dropDownBox: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lbCurrentLang: cc.Label = null;\r\n    languageCode = \"\"\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        if (LanguageLanguageManager.instance.languageCode == \"vn\") {\r\n            this.lbCurrentLang.string = \"Tiếng Việt\";\r\n        } else if (LanguageLanguageManager.instance.languageCode == \"en\") {\r\n            this.lbCurrentLang.string = \"English\";\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n    showDropDown(status) {\r\n        if (status) {\r\n            this.dropDownBox.scaleY = 0;\r\n            this.dropDownBox.active = true;\r\n            cc.Tween.stopAllByTarget(this.dropDownBox);\r\n            cc.tween(this.dropDownBox).to(0.1, { scaleY: 1 }).start();\r\n        } else {\r\n            cc.tween(this.dropDownBox).to(0.1, { scaleY: 0 }).call(() => {\r\n                this.dropDownBox.active = false;\r\n            }).start();\r\n        }\r\n    }\r\n    onClickChangeLanguage(even, data) {\r\n        this.languageCode = LanguageLanguageManager.instance.languageCode;\r\n        switch (data) {\r\n            case \"1\":\r\n                this.showDropDown(!this.dropDownBox.active);\r\n                break;\r\n            case \"2\"://vn\r\n                this.lbCurrentLang.string = \"Tiếng Việt\";\r\n                if (this.languageCode != \"vi\") {\r\n                    LanguageLanguageManager.instance.setLanguage(\"vi\");\r\n                    let msg = LanguageLanguageManager.instance.getString(\"txt_notify_change_language\");\r\n                    App.instance.ShowAlertDialog(msg);\r\n                }\r\n                this.showDropDown(false);\r\n                break;\r\n            case \"3\"://en\r\n                this.lbCurrentLang.string = \"English\";\r\n                if (this.languageCode != \"en\") {\r\n                    LanguageLanguageManager.instance.setLanguage(\"en\");\r\n                    let msg = LanguageLanguageManager.instance.getString(\"txt_notify_change_language\");\r\n                    App.instance.ShowAlertDialog(msg);\r\n                }\r\n                this.showDropDown(false);\r\n                break;\r\n        }\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import Dialog from \"../Script/common/Dialog\";\r\nimport cmd from \"../Lobby.Cmd\";\r\nimport InPacket from \"../Script/networks/Network.InPacket\";\r\nimport MiniGameNetworkClient from \"../Script/networks/MiniGameNetworkClient\";\r\n//import Dropdown from \"../Script/common/Dropdown\";\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\n//import Http from \"../Script/common/Http\";\r\nimport BroadcastReceiver from \"../Script/common/BroadcastReceiver\";\r\n//import VersionConfig from \"../Script/common/VersionConfig\";\r\n//import ShootFishNetworkClient from \"../../scripts/networks/ShootFishNetworkClient\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\n@ccclass(\"Lobby.PopupShop.TabTransfer\")\r\nexport class TabTransfer {\r\n    @property(cc.Node)\r\n    panelContent: cc.Node = null;\r\n    @property(cc.Node)\r\n    panelContinue: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lblBalance: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblFee: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblReceive: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblDaiLy: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblNote: cc.Label = null;\r\n    @property(cc.EditBox)\r\n    edbNickname: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    edbReNickname: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    edbCoinTransfer: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    edbNote: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbOTP: cc.EditBox = null;\r\n\r\n    ratioTransfer = Configs.App.SERVER_CONFIG.ratioTransfer;\r\n    \r\n    receiverAgent: boolean= false;\r\n\r\n    start() {\r\n        this.edbCoinTransfer.node.on(\"editing-did-ended\", () => {\r\n            let number = Utils.stringToInt(this.edbCoinTransfer.string);\r\n            this.edbCoinTransfer.string = Utils.formatNumber(number);\r\n            this.lblReceive.string = Utils.formatNumber(Math.round(this.ratioTransfer * number));\r\n        });\r\n        this.edbNickname.node.on(\"editing-did-ended\", () => {\r\n            let nickname = this.edbNickname.string.trim();\r\n            if (nickname != \"\") {\r\n               App.instance.showLoading(true);\r\n               MiniGameNetworkClient.getInstance().send(new cmd.ReqCheckNicknameTransfer(nickname));\r\n            }\r\n        });\r\n    }\r\n\r\n    reset() {\r\n        this.panelContent.active = true;\r\n     //   this.panelContinue.active = false;\r\n        this.lblDaiLy.node.active = false;\r\n        this.lblFee.string = \"0\";\r\n        this.lblBalance.string = Utils.formatNumber(Configs.Login.Coin);\r\n        this.lblReceive.string = \"0\";\r\n        this.edbNickname.string = \"\";\r\n        this.edbReNickname.string = \"\";\r\n        this.edbNote.string = \"\";\r\n        this.edbCoinTransfer.string = \"\";\r\n        this.lblNote.string = this.lblNote.string.replace(\"%s\", Math.round((1 - this.ratioTransfer) * 100) + \"%\");\r\n        this.lblFee.string = Math.round((1 - this.ratioTransfer) * 100) + \"%\";\r\n    }\r\n\r\n    continue() {\r\n        let nickname = this.edbNickname.string.trim();\r\n        let reNickname = this.edbReNickname.string.trim();\r\n        let coin = Utils.stringToInt(this.edbCoinTransfer.string);\r\n        let note = this.edbNote.string.trim();\r\n        if (nickname == \"\") {\r\n            App.instance.alertDialog.showMsg(\"Nickname không được để trống.\");\r\n            return;\r\n        }\r\n        if (nickname != reNickname) {\r\n            App.instance.alertDialog.showMsg(\"Hai nickname không giống nhau.\");\r\n            return;\r\n        }\r\n        if (note == \"\") {\r\n            App.instance.alertDialog.showMsg(\"Lý do chuyển khoản không được để trống.\");\r\n            return;\r\n        }\r\n        if (coin < 10000) {\r\n            App.instance.alertDialog.showMsg(\"Số tiền giao dịch tối thiểu bằng 200.000.\");\r\n            return;\r\n        }\r\n        if (coin > Configs.Login.Coin) {\r\n            App.instance.alertDialog.showMsg(\"Số dư không đủ.\");\r\n            return;\r\n        }\r\n\r\n        App.instance.confirmDialog.show2(\"Bạn có chắc chắn muốn chuyển cho\\nTài khoản: \\\"\" + nickname + \"\\\" (Không phải Đ.Lý)\\nSố tiền: \" + this.edbCoinTransfer.string + \"\\nLý do: \" + note, (isConfirm) => {\r\n            if (isConfirm) {\r\n                App.instance.showLoading(true);\r\n                MiniGameNetworkClient.getInstance().send(new cmd.ReqTransferCoin(nickname, coin, note));\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n@ccclass\r\nexport default class PopupShop extends Dialog {\r\n\r\n    @property(cc.ToggleContainer)\r\n    tabs: cc.ToggleContainer = null;\r\n    @property(cc.Node)\r\n    tabContents: cc.Node = null;\r\n\r\n    \r\n    @property(TabTransfer)\r\n    tabTransfer: TabTransfer = null;\r\n    \r\n    \r\n\r\n    @property([cc.Label])\r\n    lblContainsBotOTPs: cc.Label[] = [];\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    private tabSelectedIdx = 0;\r\n\r\n    start() {\r\n\t\tthis.tabTransfer.reset();\r\n        /* switch (VersionConfig.CPName) {\r\n            case VersionConfig.CP_NAME_F69:\r\n                this.tabs.toggleItems[2].node.active = false;//inactive momo tab\r\n                this.tabs.toggleItems[5].node.active = true;//active bitcoin tab\r\n                break;\r\n            default:\r\n                this.tabs.toggleItems[2].node.active = true;//active momo tab\r\n                this.tabs.toggleItems[5].node.active = false;//inactive bitcoin tab\r\n                break;\r\n        } */\r\n\r\n        for (let i = 0; i < this.lblContainsBotOTPs.length; i++) {\r\n            let lbl = this.lblContainsBotOTPs[i];\r\n            lbl.string = lbl.string.replace(\"$bot_otp\", \"@\" + Configs.App.getLinkTelegram());\r\n        }\r\n\r\n        for (let i = 0; i < this.tabs.toggleItems.length; i++) {\r\n            this.tabs.toggleItems[i].node.on(\"toggle\", () => {\r\n                this.tabSelectedIdx = i;\r\n                this.onTabChanged();\r\n            });\r\n        }\r\n\r\n        MiniGameNetworkClient.getInstance().addListener((data) => {\r\n            let inpacket = new InPacket(data);\r\n            console.log(inpacket.getCmdId());\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.DEPOSIT_CARD: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResDepositCard(data);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            App.instance.alertDialog.showMsg(\"Nạp thẻ thành công.\");\r\n                            Configs.Login.Coin = res.currentMoney;\r\n                            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                            break;\r\n                        case 30:\r\n                            this.tabNapThe.resetForm();\r\n                            App.instance.alertDialog.showMsg(\"Hệ thống đã ghi nhận giao dịch, vui lòng chờ hệ thống xử lý.\");\r\n                            break;\r\n                        case 31:\r\n                            App.instance.alertDialog.showMsg(\"Thẻ đã được sử dụng.\");\r\n                            break;\r\n                        case 32:\r\n                            App.instance.alertDialog.showMsg(\"Thẻ đã bị khóa.\");\r\n                            break;\r\n                        case 33:\r\n                            App.instance.alertDialog.showMsg(\"Thẻ chưa được kích hoạt.\");\r\n                            break;\r\n                        case 34:\r\n                            App.instance.alertDialog.showMsg(\"Thẻ đã hết hạn sử dụng.\");\r\n                            break;\r\n                        case 35:\r\n                            App.instance.alertDialog.showMsg(\"Mã thẻ không đúng.\");\r\n                            break;\r\n                        case 36:\r\n                            App.instance.alertDialog.showMsg(\"Số serial không đúng.\");\r\n                            break;\r\n                        case 8:\r\n                            App.instance.alertDialog.showMsg(\"Tài khoản đã bị khóa nạp thẻ do nạp sai quá nhiều lần! Thời gian khóa nạp thẻ còn lại: \" + this.longToTime(res.timeFail));\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(\"Lỗi \" + res.error + \". Không xác định.\");\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.CHECK_NICKNAME_TRANSFER: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResCheckNicknameTransfer(data);\r\n                    // console.log(res);\r\n                    if (res.error == 0) {\r\n                        this.tabTransfer.edbNickname.string = this.tabTransfer.edbReNickname.string = \"\";\r\n                        App.instance.alertDialog.showMsg(\"Tài khoản không tồn tại.\");\r\n                        break;\r\n                    }\r\n                    this.tabTransfer.receiverAgent=res.type == 1 || res.type == 2;\r\n                    if(!this.tabTransfer.receiverAgent)\r\n                //    {\r\n                //        this.tabTransfer.edbNickname.string =\"\";\r\n                //        App.instance.alertDialog.showMsg(\"Tài khoản \"+this.tabTransfer.edbNickname.string+\" Không phải là tài khoản đại lý.\");\r\n                //        break;\r\n                //    }\r\n                    this.tabTransfer.lblDaiLy.node.active = res.type == 1 || res.type == 2;\r\n                    this.tabTransfer.lblFee.string = res.fee + \"%\";\r\n                    this.tabTransfer.ratioTransfer = (100 - res.fee) / 100;\r\n                    break;\r\n                }\r\n                case cmd.Code.TRANSFER_COIN: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResTransferCoin(data);\r\n                     console.log(res);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            this.tabTransfer.panelContent.active = true;\r\n                         //   this.tabTransfer.panelContinue.active = true;\r\n                        //    this.tabTransfer.edbOTP.string = \"\";\r\n                            App.instance.alertDialog.showMsg(\"Chuyển khoản thành công\");\r\n                            break;\r\n                        case 2:\r\n                            App.instance.alertDialog.showMsg(\"Số tiền tối thiểu là 200.000.\");\r\n                            break;\r\n                        case 3:\r\n                            App.instance.alertDialog.showMsg(\"Chức năng chỉ dành cho những tài khoản đăng ký bảo mật SMS PLUS.\");\r\n                            break;\r\n                        case 4:\r\n                            App.instance.alertDialog.showMsg(\"Số dư không đủ.\");\r\n                            break;\r\n                        case 5:\r\n                            App.instance.alertDialog.showMsg(\"Tài khoản bị cấm chuyển tiền.\");\r\n                            break;\r\n                        case 6:\r\n                            App.instance.alertDialog.showMsg(\"Nickname nhận không tồn tại.\");\r\n                            break;\r\n                        case 10:\r\n                            App.instance.alertDialog.showMsg(\"Chức năng bảo mật sẽ tự động kích hoạt sau 24h kể từ thời điểm đăng ký thành công!\");\r\n                            break;\r\n                        case 11:\r\n                            App.instance.alertDialog.showMsg(\"Bạn chỉ được chuyển cho Đại lý tổng trong khoảng tiền quy định!\");\r\n                            break;\r\n                        case 22:\r\n                            App.instance.alertDialog.showMsg(\"Tài khoản chưa đủ điều kiện để chuyển tiền.\");\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(\"Lỗi \" + res.error + \". vui lòng thử lại sau.\");\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.GET_OTP: {\r\n                    if (!this.node.active) return;\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResGetOTP(data);\r\n                    // console.log(res);\r\n                    if (res.error == 0) {\r\n                        App.instance.alertDialog.showMsg(\"Mã OTP đã được gửi đi!\");\r\n                    } else if (res.error == 30) {\r\n                        App.instance.alertDialog.showMsg(\"Mỗi thao tác lấy SMS OTP phải cách nhau ít nhất 5 phút!\");\r\n                    } else {\r\n                        App.instance.alertDialog.showMsg(\"Thao tác không thành công vui lòng thử lại sau!\");\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.SEND_OTP: {\r\n                    let res = new cmd.ResSendOTP(data);\r\n                    // console.log(res);\r\n                    if (res.error != 0) {\r\n                        App.instance.showLoading(false);\r\n                        switch (res.error) {\r\n                            case 1:\r\n                            case 2:\r\n                                App.instance.alertDialog.showMsg(\"Giao dịch thất bại!\");\r\n                                break;\r\n                            case 3:\r\n                                App.instance.alertDialog.showMsg(\"Mã xác thực không chính xác, vui lòng thử lại!\");\r\n                                break;\r\n                            case 4:\r\n                                App.instance.alertDialog.showMsg(\"Mã OTP đã hết hạn!\");\r\n                                break;\r\n                            default:\r\n                                App.instance.alertDialog.showMsg(\"Lỗi \" + res.error + \". Không xác định.\");\r\n                                break;\r\n                        }\r\n                        return;\r\n                    }\r\n                    App.instance.showLoading(true);\r\n                    break;\r\n                }\r\n                case cmd.Code.RESULT_TRANSFER_COIN: {\r\n                    if (!this.node.active) return;\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResResultTransferCoin(data);\r\n                    // console.log(res);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            Configs.Login.Coin = res.currentMoney;\r\n                            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                            App.instance.alertDialog.showMsg(\"Giao dịch chuyển khoản thành công!\");\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(\"Lỗi \" + res.error + \". vui lòng thử lại sau.\");\r\n                            break;\r\n                    }\r\n                    this.tabTransfer.reset();\r\n                    break;\r\n                }\r\n                case cmd.Code.INSERT_GIFTCODE: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResInsertGiftcode(data);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            App.instance.alertDialog.showMsg(\"Mã thẻ không chính xác. Vui lòng kiểm tra lại!\");\r\n                            break;\r\n                        case 1:\r\n                            App.instance.alertDialog.showMsg(\"Mã thẻ đã được sử dụng.\");\r\n                            break;\r\n                        case 3:\r\n                            App.instance.alertDialog.showMsg(\"Để sử dụng tính năng này vui lòng đăng ký bảo mật.\");\r\n                            break;\r\n                        case 4:\r\n                        case 5:\r\n                        case 6:\r\n                            App.instance.alertDialog.showMsg(\"Mã thẻ đã nhập không hợp lệ.\");\r\n                            break;\r\n                        case 2:\r\n                            Configs.Login.Coin = res.currentMoneyVin;\r\n                            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                            App.instance.alertDialog.showMsg(\"Nạp thẻ thành công.\");\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.DEPOSIT_BANK: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResDepositBank(data);\r\n                    switch(res.error){\r\n                        case 0:\r\n                            App.instance.alertDialog.showMsg(\"Hệ thống đã ghi nhận giao dịch của bạn, vui lòng chờ trong giây lát để chúng tôi xử lý\");\r\n                            break;\r\n                        case 3:\r\n                            App.instance.alertDialog.showMsg(\"Bạn đang có giao dịch chờ xử lý, vui lòng chờ đến khi giao dịch được hoàn tất\");\r\n                            break;\r\n                        case 2:\r\n                        case 1:\r\n                            App.instance.alertDialog.showMsg(\"Dữ liệu lỗi, vui lòng thử lại!\");\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(\"Dữ liệu lỗi, vui lòng thử lại!\");\r\n                    }\r\n                    console.log(res.error);\r\n                    break;\r\n                }\r\n                case cmd.Code.DEPOSIT_MOMO: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResDepositMomo(data);\r\n                    switch(res.error){\r\n                        case 0:\r\n                            App.instance.alertDialog.showMsg(\"Hệ thống đã ghi nhận giao dịch của bạn, vui lòng chờ trong giây lát để chúng tôi xử lý\");\r\n                            break;\r\n                        case 3:\r\n                            App.instance.alertDialog.showMsg(\"Bạn đang có giao dịch chờ xử lý, vui lòng chờ đến khi giao dịch được hoàn tất\");\r\n                            break;\r\n                        case 2:\r\n                        case 1:\r\n                            App.instance.alertDialog.showMsg(\"Dữ liệu lỗi, vui lòng thử lại!\");\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(\"Dữ liệu lỗi, vui lòng thử lại!\");\r\n                    }\r\n                    console.log(res.error);\r\n                    break;\r\n                }\r\n            }\r\n        }, this);\r\n\r\n        \r\n        this.tabTransfer.start();\r\n        \r\n    }\r\n\r\n    private onTabChanged() {\r\n        for (let i = 0; i < this.tabContents.childrenCount; i++) {\r\n            this.tabContents.children[i].active = i == this.tabSelectedIdx;\r\n        }\r\n        for (let j = 0; j < this.tabs.toggleItems.length; j++) {\r\n            this.tabs.toggleItems[j].node.getComponentInChildren(cc.Label).node.color = j == this.tabSelectedIdx ? cc.Color.YELLOW : cc.Color.WHITE;\r\n        }\r\n        switch (this.tabSelectedIdx) {\r\n            case 0:\r\n                this.tabNapThe.reset();\r\n                break;\r\n            case 1:\r\n                this.tabTransfer.reset();\r\n                break;\r\n            case 2:\r\n                break;\r\n            case 3:\r\n                break;\r\n            case 4:\r\n                this.tabCard.reset();\r\n                break;\r\n            case 5:\r\n                this.tabBitCoin.start(this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private longToTime(l: number): string {\r\n        return (l / 60) + \" giờ \" + (l % 60) + \" phút\";\r\n    }\r\n\r\n    show() {\r\n        super.show();\r\n        this.tabSelectedIdx = 0;\r\n        this.tabs.toggleItems[this.tabSelectedIdx].isChecked = true;\r\n        this.onTabChanged();\r\n    }\r\n\r\n    showAndOpenTransfer(nickname: string = null) {\r\n        super.show();\r\n        this.tabSelectedIdx = 1;\r\n        this.tabs.toggleItems[this.tabSelectedIdx].isChecked = true;\r\n        this.onTabChanged();\r\n        if (nickname != null) {\r\n            this.tabTransfer.edbNickname.string = this.tabTransfer.edbReNickname.string = nickname;\r\n          //  App.instance.showLoading(true);\r\n          //  MiniGameNetworkClient.getInstance().send(new cmd.ReqCheckNicknameTransfer(nickname));\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    actContinueTransfer() {\r\n        \r\n        this.tabTransfer.continue();\r\n    }\r\n\r\n    actGetOTP() {\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqGetOTP());\r\n    }\r\n\r\n    actSubmitTransfer() {\r\n        let otp = this.tabTransfer.edbOTP.string.trim();\r\n        if (otp.length == 0) {\r\n            App.instance.alertDialog.showMsg(\"Mã xác thực không được bỏ trống.\");\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqSendOTP(otp, 0));\r\n    }\r\n\r\n    actSubmitNapMomo() {\r\n        this.tabMomo.submit();\r\n    }\r\n\r\n    actSubmitNapNganHang() {\r\n        this.tabBank.submit();\r\n    }\r\n\r\n    actSubmitCard() {\r\n        this.tabCard.submit();\r\n    }\r\n}\r\n","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupTaiApp extends Dialog {\r\n\r\n    @property(cc.Sprite)\r\n    qr_android:cc.Sprite = null;\r\n    @property(cc.Sprite)\r\n    qr_ios:cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    qr_android_lote88:cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    qr_ios_lote88:cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    qr_android_lot79:cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    qr_ios_lot79:cc.SpriteFrame = null;\r\n    start() {\r\n        \r\n    }\r\n\r\n    show() {\r\n        super.show();\r\n        \r\n        if(Configs.App.IS_PRO == false){\r\n            this.qr_android.spriteFrame = this.qr_android_lote88;\r\n            this.qr_ios.spriteFrame = this.qr_ios_lote88;\r\n        }\r\n        else{\r\n            this.qr_android.spriteFrame = this.qr_android_lot79;\r\n            this.qr_ios.spriteFrame = this.qr_ios_lot79;\r\n        }\r\n    }\r\n\r\n    actTaiApk() {\r\n        cc.sys.openURL(\"https://win789club.com/\");\r\n        // App.instance.alertDialog.showMsg(\"Tính năng đang phát triển.\");\r\n    }\r\n\r\n    actTaiIos(){\r\n        cc.sys.openURL(\"https://win789club.com/\");\r\n        // App.instance.alertDialog.showMsg(\"Tính năng đang phát triển.\");\r\n    }\r\n}\r\n","import Dialog from \"../Script/common/Dialog\";\r\nimport cmd from \"../Lobby.Cmd\";\r\nimport InPacket from \"../Script/networks/Network.InPacket\";\r\nimport MiniGameNetworkClient2 from \"../Script/networks/MiniGameNetworkClient2\";\r\nimport Dropdown from \"../Script/common/Dropdown\";\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport SPUtils from \"../Script/common/SPUtils\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport Clipboards from \"../Clipboards\";\r\nimport BroadcastReceiver from \"../Script/common/BroadcastReceiver\";\r\n\r\nimport BaseTabShop from \"./BaseTabShop\";\r\n\r\n\r\n//import VersionConfig from \"../Script/common/VersionConfig\";\r\n//import ShootFishNetworkClient from \"../Script/networks/ShootFishNetworkClient\";\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class TabBanks extends Dialog {\r\n    @property(cc.Node)\r\n    itemFactorTemplate: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lblBankNumber: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblBankAccountName: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lblTransNote: cc.Label = null;\r\n\t@property(cc.Button)\r\n    btnCopy: cc.Button = null;\r\n\t@property(cc.Button)\r\n    btnCopyND: cc.Button = null;\r\n    \r\n\r\n    @property(Dropdown)\r\n    dropdownBank: Dropdown = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbAmount: cc.EditBox = null;\r\n\r\n    @property(cc.Node)\r\n    nodethongtin: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodenap: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lblbanknganhang: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lblmoney: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblnganhangname2: cc.Label = null;\r\n\r\n\t@property(cc.Sprite)\r\n    qrCodeImage: cc.Sprite = null;\r\n\r\n\r\n    private _listBank = [];\r\n\r\n    start() {\r\n        this.nodethongtin.active = true;\r\n        this.nodenap.active = false;\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.Getbank, { \"c\": 130 }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err) {\r\n                console.error(\"Lỗi khi thực hiện yêu cầu HTTP:\", err);\r\n                return;\r\n            }\r\n            if (res.data && Array.isArray(res.data)) {\r\n                res.data.forEach((bank, index) => {\r\n                });\r\n            } else {\r\n                console.error(\"Dữ liệu không hợp lệ hoặc không có phần tử 'data'.\");\r\n            }\r\n\r\n            if (res.data === undefined || res.data.length == 0) {\r\n                console.warn(\"Không có ngân hàng nào trong phản hồi\");\r\n                return;\r\n            }\r\n    \r\n            let listBank = res.data;\r\n            this._listBank = listBank;\r\n            let bankName = [\"Chọn ngân hàng\"];\r\n            for (let i = 0; i < listBank.length; i++) {\r\n                bankName.push(listBank[i].name); \r\n            }\r\n            this.dropdownBank.setOptions(bankName);\r\n            this.dropdownBank.setOnValueChange((idx) => {\r\n                if (idx > 0) {\r\n                    const selectedBank = listBank[idx - 1];\r\n                    this.lblbanknganhang.string = selectedBank.code;\r\n                } else {\r\n                    this.lblBankAccountName.string = \"\";\r\n                    this.lblBankNumber.string = \"\";\r\n                }\r\n            });\r\n        });\r\n\r\n\t\tthis.btnCopy.node.on(\"click\", ()=> {\r\n            if (this.lblBankNumber.string.length > 0) {\r\n                \r\n            SPUtils.copyToClipboard(this.lblBankNumber.string);\r\n            App.instance.alertDialog.showMsg(\"Đã sao chép số tài khoản.\");\r\n        \r\n            } else {\r\n                App.instance.alertDialog.showMsg(\"Chưa có số tài khoản.\");  \r\n            }\r\n        });\r\n\t\tthis.btnCopyND.node.on(\"click\", ()=> {\r\n            if (this.lblTransNote.string.length > 0) {\r\n                SPUtils.copyToClipboard(this.lblTransNote.string);\r\n\t\t\t\t\tApp.instance.alertDialog.showMsg(\"Đã sao chép nội dung.\");\r\n                \r\n            } else {\r\n                App.instance.alertDialog.showMsg(\"Chưa có nội dung.\");  \r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    onClickCopyBankNumber() {\r\n        Clipboards.copy(this.lblBankNumber.string);\r\n        App.instance.ShowAlertDialog(\"Đã sao chép số tài khoản!\");\r\n    }\r\n\r\n    onClickCopyBankContent() {\r\n        Clipboards.copy(this.lblTransNote.string);\r\n        App.instance.ShowAlertDialog(\"Đã sao chép nội dung!\");\r\n    }\r\n\tupdateQRCode() {\r\n        const bankId = this.lblnganhangname2.string;\r\n        const accountNo = this.lblBankNumber.string;\r\n        const accountName = this.lblBankAccountName.string;\r\n        const amountStr = this.edbAmount.string.replace(/\\./g, '');\r\n        const amount = amountStr.trim() !== \"\" ? parseFloat(amountStr) : 0;\r\n        const description = this.lblTransNote.string;\r\n\r\n        if (!bankId || !accountNo || !accountName || !description) {\r\n            return;\r\n        }\r\n\r\n        const qrCodeUrl = `https://api.vietqr.io/${bankId}/${accountNo}/${amount}/${encodeURIComponent(description)}/qOr8JLa.jpg?accountName=${encodeURIComponent(accountName)}`;\r\n        cc.log(\"qrCodeUrl \" + qrCodeUrl);\r\n        cc.loader.load({ url: qrCodeUrl, type: 'jpg' }, (err, texture) => {\r\n            if (err) {\r\n                console.error(err);\r\n                return;\r\n            }\r\n            this.qrCodeImage.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n\r\n\r\n\tonBtnXacNhan() {\r\n\r\n        if (this.node.active) {\r\n\t        var money = Utils.formatEditBox(this.edbAmount.string);\r\n            if (money < 20000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\") + \" 20.000\");\r\n                return;\r\n            }\r\n            if (money > 300000000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\") + \" 300.000.000\");\r\n                return;\r\n            }\r\n            var self = this;\r\n            App.instance.showLoading(true, -1);\r\n            var request = {\r\n                \"c\": 2003,\r\n                \"fn\": encodeURIComponent(this.lblbanknganhang.string),\r\n                \"am\": money,\r\n                \"pt\": 1,\r\n                \"nn\": Configs.Login.Nickname,\r\n                \"at\": Configs.Login.AccessToken,\r\n                \"pn\": \"manualbank\",\r\n                \"bc\": encodeURIComponent(this.lblbanknganhang.string),\r\n                \"ds\": Configs.Login.Nickname,\r\n                \"bn\": money\r\n            };\r\n            Http.get(Configs.App.API, request, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                \r\n                if (res.success == true) {\r\n                    this.nodethongtin.active = false;\r\n                    this.nodenap.active = true;\r\n\r\n                  \r\n                    const dataObject = JSON.parse(res.data);\r\n                    cc.log(res.data);\r\n                    let timeToExpire = dataObject.timeToExpired;\r\n                    const phoneName1 = dataObject.account_name;\r\n                    const bankNumber = dataObject.account;\r\n                    const bankPorvider = dataObject.bank_code;\r\n                    const bankCode = dataObject.content;\r\n\r\n                     this.lblBankAccountName.string = phoneName1;\r\n                     this.lblBankNumber.string = bankNumber;\r\n                     this.lblTransNote.string = bankCode;\r\n                     this.lblmoney.string = Utils.formatMoney2(money) + \" VNĐ\";\r\n                     this.lblnganhangname2.string = bankPorvider;\r\n                    this.updateQRCode();\r\n\r\n                }\r\n                else {\r\n                    App.instance.ShowAlertDialog(res.message);\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    \r\n}\r\n\r\n ","import Dialog from \"../Script/common/Dialog\";\r\nimport cmd from \"../Lobby.Cmd\";\r\nimport InPacket from \"../Script/networks/Network.InPacket\";\r\nimport MiniGameNetworkClient2 from \"../Script/networks/MiniGameNetworkClient2\";\r\nimport Dropdown from \"../Script/common/Dropdown\";\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport Http from \"../Script/common/Http\";\r\nimport BroadcastReceiver from \"../Script/common/BroadcastReceiver\";\r\n//import VersionConfig from \"../Script/common/VersionConfig\";\r\n//import ShootFishNetworkClient from \"../Script/networks/ShootFishNetworkClient\";\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass(\"Lobby.PopupShop.TabNapThe\")\r\nexport class TabNapThe {\r\n    @property(Dropdown)\r\n    dropdownTelco: Dropdown = null;\r\n    @property(Dropdown)\r\n    dropdownAmount: Dropdown = null;\r\n    @property(cc.EditBox)\r\n    edbCode: cc.EditBox = null;\r\n    @property(cc.EditBox)\r\n    edbSerial: cc.EditBox = null;\r\n    @property(cc.Node)\r\n    itemFactorTemplate: cc.Node = null;\r\n\r\n    start() {\r\n        this.itemFactorTemplate.active = false;\r\n        for (let i = 0; i < Configs.App.SERVER_CONFIG.listMenhGiaNapThe.length; i++) {\r\n            let node = cc.instantiate(this.itemFactorTemplate);\r\n            node.parent = this.itemFactorTemplate.parent;\r\n            node.active = true;\r\n\r\n            let menhGia = Configs.App.SERVER_CONFIG.listMenhGiaNapThe[i];\r\n            let nhan = Math.ceil(menhGia * Configs.App.SERVER_CONFIG.ratioNapThe);\r\n            node.getChildByName(\"menhgia\").getComponent(cc.Label).string = Utils.formatNumber(menhGia);\r\n            node.getChildByName(\"khuyenmai\").getComponent(cc.Label).string = \"0%\";\r\n            node.getChildByName(\"nhan\").getComponent(cc.Label).string = Utils.formatNumber(nhan);\r\n        }\r\n    }\r\n    reset() {\r\n        this.dropdownTelco.setOptions([\"Chọn nhà mạng\"].concat(Configs.App.SERVER_CONFIG.listTenNhaMang));\r\n        let listMenhGia = [\"Chọn mệnh giá\"];\r\n        for (let i = 0; i < Configs.App.SERVER_CONFIG.listMenhGiaNapThe.length; i++) {\r\n            listMenhGia.push(Utils.formatNumber(Configs.App.SERVER_CONFIG.listMenhGiaNapThe[i]));\r\n        }\r\n        this.dropdownAmount.setOptions(listMenhGia);\r\n        this.resetForm();\r\n    }\r\n    resetForm() {\r\n        this.dropdownTelco.setValue(0);\r\n        this.dropdownAmount.setValue(0);\r\n        this.edbCode.string = \"\";\r\n        this.edbSerial.string = \"\";\r\n    }\r\n    submit() {\r\n        let ddTelcoValue = this.dropdownTelco.getValue();\r\n        let ddAmountValue = this.dropdownAmount.getValue();\r\n        let code = this.edbCode.string.trim();\r\n        let serial = this.edbSerial.string.trim();\r\n        if (ddTelcoValue == 0) {\r\n            App.instance.alertDialog.showMsg(\"Vui lòng chọn nhà mạng.\");\r\n            return;\r\n        }\r\n        if (ddAmountValue == 0) {\r\n            App.instance.alertDialog.showMsg(\"Vui lòng chọn mệnh giá.\");\r\n            return;\r\n        }\r\n        if (code == \"\" || parseInt(code) <= 0 || isNaN(parseInt(code))) {\r\n            App.instance.alertDialog.showMsg(\"Mã thẻ không hợp lệ.\");\r\n            return;\r\n        }\r\n        if (serial == \"\" || parseInt(serial) <= 0 || isNaN(parseInt(serial))) {\r\n            App.instance.alertDialog.showMsg(\"Mã serial không hợp lệ.\");\r\n            return;\r\n        }\r\n        let telcoId = Configs.App.SERVER_CONFIG.listIdNhaMang[ddTelcoValue - 1];\r\n        let amount = Configs.App.SERVER_CONFIG.listMenhGiaNapThe[ddAmountValue - 1].toString();\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient2.getInstance().send(new cmd.ReqDepositCard(telcoId, serial, code, amount));\r\n    }\r\n}\r\n@ccclass\r\nexport default class PopupShop extends Dialog {\r\n\r\n    @property(cc.ToggleContainer)\r\n    tabs: cc.ToggleContainer = null;\r\n    @property(cc.Node)\r\n    tabContents: cc.Node = null;\r\n\r\n    @property(TabNapThe)\r\n    tabNapThe: TabNapThe = null;\r\n    @property([cc.Label])\r\n    lblContainsBotOTPs: cc.Label[] = [];\r\n    private tabSelectedIdx = 0;\r\n    start() {\r\n\t\tthis.tabNapThe.reset();\r\n        for (let i = 0; i < this.lblContainsBotOTPs.length; i++) {\r\n            let lbl = this.lblContainsBotOTPs[i];\r\n            lbl.string = lbl.string.replace(\"$bot_otp\", \"@\" + Configs.App.getLinkTelegram());\r\n        }\r\n        for (let i = 0; i < this.tabs.toggleItems.length; i++) {\r\n            this.tabs.toggleItems[i].node.on(\"toggle\", () => {\r\n                this.tabSelectedIdx = i;\r\n                this.onTabChanged();\r\n            });\r\n        }\r\n        MiniGameNetworkClient2.getInstance().addListener((data) => {\r\n            let inpacket = new InPacket(data);\r\n            console.log(inpacket.getCmdId());\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.DEPOSIT_CARD: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResDepositCard(data);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            App.instance.alertDialog.showMsg(\"Nạp thẻ thành công.\");\r\n                            Configs.Login.Coin = res.currentMoney;\r\n                            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                            break;\r\n                        case 30:\r\n                            this.tabNapThe.resetForm();\r\n                            App.instance.alertDialog.showMsg(\"Hệ thống đã ghi nhận giao dịch, vui lòng chờ hệ thống xử lý.\");\r\n                            break;\r\n                        case 31:\r\n                            App.instance.alertDialog.showMsg(\"Thẻ đã được sử dụng.\");\r\n                            break;\r\n                        case 32:\r\n                            App.instance.alertDialog.showMsg(\"Thẻ đã bị khóa.\");\r\n                            break;\r\n                        case 33:\r\n                            App.instance.alertDialog.showMsg(\"Thẻ chưa được kích hoạt.\");\r\n                            break;\r\n                        case 34:\r\n                            App.instance.alertDialog.showMsg(\"Thẻ đã hết hạn sử dụng.\");\r\n                            break;\r\n                        case 35:\r\n                            App.instance.alertDialog.showMsg(\"Mã thẻ không đúng.\");\r\n                            break;\r\n                        case 36:\r\n                            App.instance.alertDialog.showMsg(\"Số serial không đúng.\");\r\n                            break;\r\n                        case 8:\r\n                            App.instance.alertDialog.showMsg(\"Tài khoản đã bị khóa nạp thẻ do nạp sai quá nhiều lần! Thời gian khóa nạp thẻ còn lại: \" + this.longToTime(res.timeFail));\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(\"Lỗi \" + res.error + \". Không xác định.\");\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.CHECK_NICKNAME_TRANSFER: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResCheckNicknameTransfer(data);\r\n                    // console.log(res);\r\n                    if (res.error == 0) {\r\n                        this.tabTransfer.edbNickname.string = this.tabTransfer.edbReNickname.string = \"\";\r\n                        App.instance.alertDialog.showMsg(\"Tài khoản không tồn tại.\");\r\n                        break;\r\n                    }\r\n                    this.tabTransfer.receiverAgent=res.type == 1 || res.type == 2;\r\n                    if(!this.tabTransfer.receiverAgent)\r\n                    {\r\n                        this.tabTransfer.edbNickname.string =\"\";\r\n                        App.instance.alertDialog.showMsg(\"Tài khoản \"+this.tabTransfer.edbNickname.string+\" Không phải là tài khoản đại lý.\");\r\n                        break;\r\n                    }\r\n                    this.tabTransfer.lblDaiLy.node.active = res.type == 1 || res.type == 2;\r\n                    this.tabTransfer.lblFee.string = res.fee + \"%\";\r\n                    this.tabTransfer.ratioTransfer = (100 - res.fee) / 100;\r\n                    break;\r\n                }\r\n                case cmd.Code.TRANSFER_COIN: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResTransferCoin(data);\r\n                    // console.log(res);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            this.tabTransfer.panelContent.active = false;\r\n                            this.tabTransfer.panelContinue.active = true;\r\n                            this.tabTransfer.edbOTP.string = \"\";\r\n                            App.instance.alertDialog.showMsg(\"Vui lòng nhấn \\\"Lấy OTP SMS\\\" hoặc lấy OTP từ Telegram và nhập mã OTP để tiếp tục!\");\r\n                            break;\r\n                        case 2:\r\n                            App.instance.alertDialog.showMsg(\"Số tiền tối thiểu là 200.000.\");\r\n                            break;\r\n                        case 3:\r\n                            App.instance.alertDialog.showMsg(\"Chức năng chỉ dành cho những tài khoản đăng ký bảo mật SMS PLUS.\");\r\n                            break;\r\n                        case 4:\r\n                            App.instance.alertDialog.showMsg(\"Số dư không đủ.\");\r\n                            break;\r\n                        case 5:\r\n                            App.instance.alertDialog.showMsg(\"Tài khoản bị cấm chuyển tiền.\");\r\n                            break;\r\n                        case 6:\r\n                            App.instance.alertDialog.showMsg(\"Nickname nhận không tồn tại.\");\r\n                            break;\r\n                        case 10:\r\n                            App.instance.alertDialog.showMsg(\"Chức năng bảo mật sẽ tự động kích hoạt sau 24h kể từ thời điểm đăng ký thành công!\");\r\n                            break;\r\n                        case 11:\r\n                            App.instance.alertDialog.showMsg(\"Bạn chỉ được chuyển cho Đại lý tổng trong khoảng tiền quy định!\");\r\n                            break;\r\n                        case 22:\r\n                            App.instance.alertDialog.showMsg(\"Tài khoản chưa đủ điều kiện để chuyển tiền.\");\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(\"Lỗi \" + res.error + \". vui lòng thử lại sau.\");\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.GET_OTP: {\r\n                    if (!this.node.active) return;\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResGetOTP(data);\r\n                    // console.log(res);\r\n                    if (res.error == 0) {\r\n                        App.instance.alertDialog.showMsg(\"Mã OTP đã được gửi đi!\");\r\n                    } else if (res.error == 30) {\r\n                        App.instance.alertDialog.showMsg(\"Mỗi thao tác lấy SMS OTP phải cách nhau ít nhất 5 phút!\");\r\n                    } else {\r\n                        App.instance.alertDialog.showMsg(\"Thao tác không thành công vui lòng thử lại sau!\");\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.SEND_OTP: {\r\n                    let res = new cmd.ResSendOTP(data);\r\n                    // console.log(res);\r\n                    if (res.error != 0) {\r\n                        App.instance.showLoading(false);\r\n                        switch (res.error) {\r\n                            case 1:\r\n                            case 2:\r\n                                App.instance.alertDialog.showMsg(\"Giao dịch thất bại!\");\r\n                                break;\r\n                            case 3:\r\n                                App.instance.alertDialog.showMsg(\"Mã xác thực không chính xác, vui lòng thử lại!\");\r\n                                break;\r\n                            case 4:\r\n                                App.instance.alertDialog.showMsg(\"Mã OTP đã hết hạn!\");\r\n                                break;\r\n                            default:\r\n                                App.instance.alertDialog.showMsg(\"Lỗi \" + res.error + \". Không xác định.\");\r\n                                break;\r\n                        }\r\n                        return;\r\n                    }\r\n                    App.instance.showLoading(true);\r\n                    break;\r\n                }\r\n                case cmd.Code.RESULT_TRANSFER_COIN: {\r\n                    if (!this.node.active) return;\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResResultTransferCoin(data);\r\n                    // console.log(res);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            Configs.Login.Coin = res.currentMoney;\r\n                            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                            App.instance.alertDialog.showMsg(\"Giao dịch chuyển khoản thành công!\");\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(\"Lỗi \" + res.error + \". vui lòng thử lại sau.\");\r\n                            break;\r\n                    }\r\n                    this.tabTransfer.reset();\r\n                    break;\r\n                }\r\n                case cmd.Code.INSERT_GIFTCODE: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResInsertGiftcode(data);\r\n                    switch (res.error) {\r\n                        case 0:\r\n                            App.instance.alertDialog.showMsg(\"Mã thẻ không chính xác. Vui lòng kiểm tra lại!\");\r\n                            break;\r\n                        case 1:\r\n                            App.instance.alertDialog.showMsg(\"Mã thẻ đã được sử dụng.\");\r\n                            break;\r\n                        case 3:\r\n                            App.instance.alertDialog.showMsg(\"Để sử dụng tính năng này vui lòng đăng ký bảo mật.\");\r\n                            break;\r\n                        case 4:\r\n                        case 5:\r\n                        case 6:\r\n                            App.instance.alertDialog.showMsg(\"Mã thẻ đã nhập không hợp lệ.\");\r\n                            break;\r\n                        case 2:\r\n                            Configs.Login.Coin = res.currentMoneyVin;\r\n                            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                            App.instance.alertDialog.showMsg(\"Nạp thẻ thành công.\");\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.DEPOSIT_BANK: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResDepositBank(data);\r\n                    switch(res.error){\r\n                        case 0:\r\n                            App.instance.alertDialog.showMsg(\"Hệ thống đã ghi nhận giao dịch của bạn, vui lòng chờ trong giây lát để chúng tôi xử lý\");\r\n                            break;\r\n                        case 3:\r\n                            App.instance.alertDialog.showMsg(\"Bạn đang có giao dịch chờ xử lý, vui lòng chờ đến khi giao dịch được hoàn tất\");\r\n                            break;\r\n                        case 2:\r\n                        case 1:\r\n                            App.instance.alertDialog.showMsg(\"Dữ liệu lỗi, vui lòng thử lại!\");\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(\"Dữ liệu lỗi, vui lòng thử lại!\");\r\n                    }\r\n                  //  console.log(res.error);\r\n                    break;\r\n                }\r\n                case cmd.Code.DEPOSIT_MOMO: {\r\n                    App.instance.showLoading(false);\r\n                    let res = new cmd.ResDepositMomo(data);\r\n                    switch(res.error){\r\n                        case 0:\r\n                            App.instance.alertDialog.showMsg(\"Hệ thống đã ghi nhận giao dịch của bạn, vui lòng chờ trong giây lát để chúng tôi xử lý\");\r\n                            break;\r\n                        case 3:\r\n                            App.instance.alertDialog.showMsg(\"Bạn đang có giao dịch chờ xử lý, vui lòng chờ đến khi giao dịch được hoàn tất\");\r\n                            break;\r\n                        case 2:\r\n                        case 1:\r\n                            App.instance.alertDialog.showMsg(\"Dữ liệu lỗi, vui lòng thử lại!\");\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(\"Dữ liệu lỗi, vui lòng thử lại!\");\r\n                    }\r\n                //    console.log(res.error);\r\n                    break;\r\n                }\r\n            }\r\n        }, this);\r\n\r\n        this.tabNapThe.start();\r\n       \r\n       \r\n        \r\n    }\r\n\r\n    private onTabChanged() {\r\n        for (let i = 0; i < this.tabContents.childrenCount; i++) {\r\n            this.tabContents.children[i].active = i == this.tabSelectedIdx;\r\n        }\r\n        for (let j = 0; j < this.tabs.toggleItems.length; j++) {\r\n            this.tabs.toggleItems[j].node.getComponentInChildren(cc.Label).node.color = j == this.tabSelectedIdx ? cc.Color.YELLOW : cc.Color.WHITE;\r\n        }\r\n        switch (this.tabSelectedIdx) {\r\n            case 0:\r\n                this.tabNapThe.reset();\r\n                break;\r\n            case 1:\r\n                this.tabNapThe.reset();\r\n                break;\r\n            case 2:\r\n                break;\r\n            case 3:\r\n                break;\r\n            case 4:\r\n                this.tabNapThe.reset();\r\n                break;\r\n            case 5:\r\n                this.tabNapThe.reset();\r\n                break;\r\n        }\r\n    }\r\n    private longToTime(l: number): string {\r\n        return (l / 60) + \" giờ \" + (l % 60) + \" phút\";\r\n    }\r\n    show() {\r\n        super.show();\r\n        this.tabSelectedIdx = 0;\r\n        this.tabs.toggleItems[this.tabSelectedIdx].isChecked = true;\r\n        this.onTabChanged();\r\n    }\r\n    showAndOpenTransfer(nickname: string = null) {\r\n        super.show();\r\n        this.tabSelectedIdx = 1;\r\n        this.tabs.toggleItems[this.tabSelectedIdx].isChecked = true;\r\n        this.onTabChanged();\r\n        if (nickname != null) {\r\n            this.tabTransfer.edbNickname.string = this.tabTransfer.edbReNickname.string = nickname;\r\n            App.instance.showLoading(true);\r\n            MiniGameNetworkClient2.getInstance().send(new cmd.ReqCheckNicknameTransfer(nickname));\r\n        }\r\n    }\r\n    actSubmitNapThe() {\r\n        this.tabNapThe.submit();\r\n    }\r\n    actContinueTransfer() {\r\n        if(!this.tabTransfer.receiverAgent)\r\n        {\r\n            App.instance.alertDialog.showMsg(\"Chỉ có thể chuyển tiền cho tài khoản đại lý\");\r\n            return;\r\n        }\r\n        this.tabTransfer.continue();\r\n    }\r\n    actGetOTP() {\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient2.getInstance().send(new cmd.ReqGetOTP());\r\n    }\r\n    actSubmitTransfer() {\r\n        let otp = this.tabTransfer.edbOTP.string.trim();\r\n        if (otp.length == 0) {\r\n            App.instance.alertDialog.showMsg(\"Mã xác thực không được bỏ trống.\");\r\n            return;\r\n        }\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient2.getInstance().send(new cmd.ReqSendOTP(otp, 0));\r\n    }\r\n    actSubmitCard() {\r\n        this.tabCard.submit();\r\n    }\r\n}\r\n ","import { Global } from \"../../Loading/src/Global\";\r\nimport { Tophudata } from \"./Lobby.ItemTopHu\";\r\nimport App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Tween from \"./Script/common/Tween\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupTopHu extends Dialog {\r\n\r\n    @property(cc.ScrollView)\r\n    scrList: cc.ScrollView = null;\r\n    @property([cc.SpriteFrame])\r\n    sprIconGame: cc.SpriteFrame[] = [];\r\n    @property([cc.SpriteFrame])\r\n    sprXHu: cc.SpriteFrame[] = [];\r\n\r\n\r\n    selectedJpValue = 100;\r\n    currentList = [];\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    dataHu = null;\r\n    index: number = 0;\r\n    listData100: Array<Tophudata> = new Array<Tophudata>();\r\n    listData1000: Array<Tophudata> = new Array<Tophudata>();\r\n    listData10000: Array<Tophudata> = new Array<Tophudata>();\r\n\r\n    setInfo() {\r\n        this.dataHu = App.instance.topHuData;\r\n        this.currentList = [];\r\n        for (var key in this.dataHu) {\r\n            if (key != \"caothap\") {\r\n                let dataHu = this.dataHu[key];\r\n                let gameName = App.instance.getGameName(key);\r\n                if (gameName != key) {\r\n                    if (key == \"TAI_XIU\") {\r\n                        let topHu100 = new Tophudata(key, gameName, dataHu[\"1\"][\"pt\"], dataHu[\"0\"][\"px\"]);\r\n                        this.currentList.push(topHu100);\r\n                    } else {\r\n                        let topHu100 = new Tophudata(key, gameName, dataHu[\"100\"][\"p\"], dataHu[\"1000\"][\"p\"], dataHu[\"10000\"][\"p\"], dataHu[\"100\"][\"x2\"], dataHu['1000']['x2'], dataHu['10000']['x2']);\r\n                        this.currentList.push(topHu100);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.selectedJpValue == 100) {\r\n            this.currentList = this.currentList.sort((x, y) => {\r\n                return x.value100 > y.value100 ? -1 : 1;\r\n            });\r\n        } else if (this.selectedJpValue == 1000) {\r\n            this.currentList = this.currentList.sort((x, y) => {\r\n                return x.value1000 > y.value1000 ? -1 : 1;\r\n            });\r\n        } else if (this.selectedJpValue == 10000) {\r\n            this.currentList = this.currentList.sort((x, y) => {\r\n                return x.value10000 > y.value10000 ? -1 : 1;\r\n            });\r\n        }\r\n        for (let i = 0; i < this.currentList.length; i++) {\r\n            let data = this.currentList[i];\r\n            let item = this.scrList.content.children[i];\r\n            if (!item) {\r\n                item = cc.instantiate(this.scrList.content.children[0]);\r\n                item.parent = this.scrList.content;\r\n            }\r\n            item['data'] = data;\r\n            item.active = true;\r\n            item.getChildByName('sprIcon').getComponent(cc.Sprite).spriteFrame = this.getSprIcon(data['gamename']);\r\n            item.getChildByName(\"lbGameName\").getComponent(cc.Label).string = data['gamename'];\r\n            item.getComponent(cc.Button).clickEvents[0].customEventData = data['gamename'];\r\n            Tween.numberTo(item.getChildByName('lbJp100').getComponent(cc.Label), data['value100'], 1.0);\r\n            Tween.numberTo(item.getChildByName('lbJp1K').getComponent(cc.Label), data['value1000'], 1.0);\r\n            Tween.numberTo(item.getChildByName('lbJp10K').getComponent(cc.Label), data['value10000'], 1.0);\r\n            item.getChildByName('sprX100').active = data['valueX100'] != 0 ? true : false;\r\n            item.getChildByName('sprX1K').active = data['valueX1000'] != 0 ? true : false;\r\n            item.getChildByName('sprX10K').active = data['valueX10000'] != 0 ? true : false;\r\n            item.getChildByName('sprTai').active = item.getChildByName('sprXiu').active = data['gamename'] == 'Tài Xỉu' ? true : false;\r\n\r\n        }\r\n    }\r\n    /*name game :\r\n  spartans-Thantai\r\n  BENLEY:bitcoin\r\n  audition:duaxe\r\n  maybach:thethao\r\n  tamhung:chimdien\r\n  chiemtinh:chiemtinh\r\n  RollRoye:Thần bài\r\n  \r\n  */\r\n    getSprIcon(gameName): cc.SpriteFrame {\r\n        let sprIcon: cc.SpriteFrame = null;\r\n        switch (gameName) {\r\n            case 'Đua Xe':\r\n                sprIcon = this.sprIconGame[0];\r\n                break;\r\n            case 'Thần Tài':\r\n                sprIcon = this.sprIconGame[1];\r\n                break;\r\n            case 'Xèng':\r\n                sprIcon = this.sprIconGame[2];\r\n                break;\r\n            case 'Bitcoin':\r\n                sprIcon = this.sprIconGame[3];\r\n                break;\r\n            case 'Thể Thao':\r\n                sprIcon = this.sprIconGame[4];\r\n                break;\r\n            case 'Chim Điên':\r\n                sprIcon = this.sprIconGame[5];\r\n                break;\r\n            case 'Chiêm Tinh':\r\n                sprIcon = this.sprIconGame[6];\r\n                break;\r\n            case 'Bikini':\r\n                sprIcon = this.sprIconGame[7];\r\n                break;\r\n            case 'Mini Poker':\r\n                sprIcon = this.sprIconGame[8];\r\n                break;\r\n            case 'Cao Thấp':\r\n                sprIcon = this.sprIconGame[9];\r\n                break;\r\n            case 'Thần Bài':\r\n                sprIcon = this.sprIconGame[10];\r\n                break;\r\n            case 'Gem':\r\n                sprIcon = this.sprIconGame[11];\r\n                break;\r\n            case 'Tài Xỉu':\r\n                sprIcon = this.sprIconGame[12];\r\n                break;\r\n        }\r\n        return sprIcon\r\n    }\r\n    actChangeAmount(event, data) {\r\n        this.selectedJpValue = parseInt(data);\r\n        this.setInfo();\r\n    }\r\n    actGoToGame(event, data) {\r\n        let TabMenuGame = cc.find('Center/Tabs', Global.LobbyController.node.parent).getComponent(\"TabMenuGame\");\r\n        switch (data) {\r\n            case 'Đua Xe':\r\n                Global.LobbyController.actGoToSlot1();\r\n                TabMenuGame.onBtnTabSlot();\r\n                break;\r\n            case 'Thần Tài':\r\n                Global.LobbyController.actGoToSlot3();\r\n                TabMenuGame.onBtnTabSlot();\r\n                break;\r\n            case 'Xèng':\r\n                Global.LobbyController.actGameSlot3x3();\r\n                TabMenuGame.onBtnTabMini();\r\n                break;\r\n            case 'Bitcoin':\r\n                Global.LobbyController.actGoToSlot7();\r\n                TabMenuGame.onBtnTabSlot();\r\n                break;\r\n            case 'Thể Thao':\r\n                Global.LobbyController.actGoToSlot10();\r\n                TabMenuGame.onBtnTabSlot();\r\n                break;\r\n            case 'Chim Điên':\r\n                Global.LobbyController.actGoToSlot4();\r\n                TabMenuGame.onBtnTabSlot();\r\n                break;\r\n            case 'Chiêm Tinh':\r\n                Global.LobbyController.actGoToSlot6();\r\n                TabMenuGame.onBtnTabSlot();\r\n                break;\r\n            case 'Bikini':\r\n                Global.LobbyController.actGoToSlot11();\r\n                TabMenuGame.onBtnTabSlot();\r\n                break;\r\n            case 'Mini Poker':\r\n                Global.LobbyController.actGameMiniPoker();\r\n                TabMenuGame.onBtnTabMini();\r\n                break;\r\n            case 'Cao Thấp':\r\n                Global.LobbyController.actGameCaoThap();\r\n                TabMenuGame.onBtnTabMini();\r\n                break;\r\n            case 'Thần Bài':\r\n                Global.LobbyController.actGoToSlot8();\r\n                TabMenuGame.onBtnTabSlot();\r\n                break;\r\n            case 'Gem':\r\n                Global.LobbyController.actGameSlot3x3Gem();\r\n                TabMenuGame.onBtnTabMini();\r\n                break;\r\n            case 'Tài Xỉu':\r\n                Global.LobbyController.actGameTaiXiu();\r\n                TabMenuGame.onBtnTabMini();\r\n                break;\r\n        }\r\n        this.dismiss();\r\n    }\r\n    // update (dt) {}\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupTransaction extends Dialog {\r\n    @property(cc.Node)\r\n    content: cc.Node = null;\r\n    @property(cc.Node)\r\n    contentNapRut: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    prefab: cc.Node = null;\r\n    @property(cc.Node)\r\n    itemNapRut: cc.Node = null;\r\n    @property(cc.ToggleContainer)\r\n    tabs: cc.ToggleContainer = null;\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    tabPlay: cc.Node = null;\r\n    @property(cc.Node)\r\n    tabNapRut: cc.Node = null;\r\n\r\n\r\n\r\n\r\n    @property([cc.BitmapFont])\r\n    fontNumber: cc.BitmapFont[] = [];\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n    private tabSelectedIdx = 0;\r\n    private data = null;\r\n    private dataPlay = [];\r\n    private dataCashout = [];\r\n    private dataExchange = [];\r\n    private currentData = [];\r\n    private totalPageLoaded = 0;\r\n    private GameName = {\r\n        110: \"Đua Xe\",\r\n        170: \"Crypto\",\r\n        2: \"Tài Xỉu\",\r\n        5: \"Xèng\",\r\n        11: \"Tiến Lên\",\r\n        160: \"Chim Điên\",\r\n        120: \"Thần Tài\",\r\n        150: \"Thể Thao\",\r\n        1: \"MiniPoker\",\r\n        3: \"Bầu Cua\",\r\n        9: \"Ba Cây\",\r\n        4: \"Cao Thấp\",\r\n        191: \"Chiêm Tinh\",\r\n        190: \"Tài Xỉu Siêu Tốc\",\r\n        12: \"Xóc Đĩa\",\r\n        180: \"Thần Bài\",\r\n        197: \"Bikini\",\r\n        198: \"Gem\",\r\n    }\r\n    onLoad() {\r\n        var scrollViewEventHandler = new cc.Component.EventHandler();\r\n        scrollViewEventHandler.target = this.node; // This node is the node to which your event handler code component belongs\r\n        scrollViewEventHandler.component = \"Lobby.PopupTransaction\";// This is the code file name\r\n        scrollViewEventHandler.handler = \"onScrollEvent\";\r\n    }\r\n    start() {\r\n\r\n        for (let i = 0; i < this.tabs.toggleItems.length; i++) {\r\n            this.tabs.toggleItems[i].node.on(\"toggle\", () => {\r\n                this.tabSelectedIdx = i;\r\n                this.updateTabsTitleColor();\r\n                this.page = 1;\r\n                this.resetDataLoaded();\r\n                this.loadData();\r\n                this.tabPlay.active = this.tabSelectedIdx == 0 ? true : false;\r\n                this.tabNapRut.active = this.tabSelectedIdx == 0 ? false : true;\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        this.tabSelectedIdx = 0;\r\n        this.updateTabsTitleColor();\r\n        this.tabs.toggleItems[0].isChecked = true;\r\n    }\r\n\r\n    private updateTabsTitleColor() {\r\n        for (let j = 0; j < this.tabs.toggleItems.length; j++) {\r\n            this.tabs.toggleItems[j].node.getComponentInChildren(cc.Label).node.color = j == this.tabSelectedIdx ? cc.Color.YELLOW : cc.Color.WHITE;\r\n        }\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    show() {\r\n        super.show();\r\n        this.resetDataLoaded();\r\n        this.currentData = [];\r\n        this.data\r\n        this.tabSelectedIdx = 0;\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n    resetDataLoaded() {\r\n        this.totalPageLoaded = 0;\r\n        this.currentData = [];\r\n        this.dataCashout = [];\r\n        this.dataPlay = [];\r\n        this.dataExchange = [];\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    parseDescriptionJson(item, itemData) {\r\n\r\n        var desJson = JSON.parse(itemData[\"description\"]);\r\n        item.getChildByName(\"Service\").getComponent(cc.Label).string = this.GameName[desJson[\"gameID\"]];\r\n        var gameID = desJson[\"gameID\"];\r\n        switch (gameID) {\r\n            case \"110\": case \"170\": case \"5\": case \"160\": case \"120\": case \"150\": case \"191\": case \"180\": case \"197\": case \"198\":\r\n                //slot\r\n                if (desJson[\"type\"] == 0) {\r\n                    //dat cuocf\r\n                    item.getChildByName(\"Desc\").getComponent(cc.RichText).string = \"<color=#e12e0b>Đặt cược : \" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                }\r\n                else if (desJson[\"type\"] == 1) {\r\n                    item.getChildByName(\"Desc\").getComponent(cc.RichText).string = \"Thưởng nhân hũ \" + this.GameName[desJson[\"gameID\"]];\r\n\r\n                }\r\n                else {\r\n                    switch (desJson[\"result\"]) {\r\n                        case 5: case 1:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \"</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 2:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Thắng lớn : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \"</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 3:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Nỗ hủ : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \"</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 4:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>X2 Nỗ hủ : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \"</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                    }\r\n\r\n\r\n                }\r\n                break;\r\n            case \"2\":\r\n                //tai xiu\r\n                if (desJson[\"type\"] == 6) {\r\n                    var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"referenceId\"] + \"\\n</color>\"\r\n                    msg += \"<color=e12e0b>\\nCược : \" + (desJson[\"betSide\"] == 0 ? \"Xỉu\" : \"Tài\") + \"</color>\";\r\n                    item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                }\r\n                else if (desJson[\"type\"] == 7) {\r\n                    if (desJson[\"action\"] == 0) {\r\n                        var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"referenceId\"] + \"\\n</color>\"\r\n                        msg += \"<color=#f0bf0b>Trả Cược : +\" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                        item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                    }\r\n                    else if (desJson[\"action\"] == 1) {\r\n                        var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"referenceId\"] + \"\\n</color>\"\r\n                        msg += \"<color=#f0bf0b>Trả Thưởng : +\" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                        item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                    }\r\n                    else if (desJson[\"action\"] == 2) {\r\n                        var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"referenceId\"] + \"\\n</color>\"\r\n                        msg += \"<color=#f0bf0b>Hoàn Tiền : +\" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                        item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                    }\r\n                    else if (desJson[\"action\"] == 3) {\r\n                        var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"referenceId\"] + \"\\n</color>\"\r\n                        msg += \"<color=#f0bf0b>Nổ Hũ : +\" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                        item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            case \"3\":\r\n                //bau cua\r\n                if (desJson[\"action\"] == 0) {\r\n                    var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"referenceId\"] + \"\\n</color>\"\r\n                    msg += \"<color=#e12e0b>Đặt Cược : \" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                    item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                }\r\n                else if (desJson[\"action\"] == 1) {\r\n                    var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"referenceId\"] + \"\\n</color>\"\r\n                    msg += \"<color=#f0bf0b>Trả Cược : +\" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                    item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                }\r\n                else if (desJson[\"action\"] == 2) {\r\n                    var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"referenceId\"] + \"\\n</color>\"\r\n                    msg += \"<color=#f0bf0b>Trả Thưởng : +\" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                    item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                }\r\n\r\n                break;\r\n            case \"4\":\r\n                //cao thap\r\n                if (desJson[\"action\"] == 0) {\r\n                    var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"referenceId\"] + \"  Số bước:\" + desJson[\"step\"] + \"\\n</color>\"\r\n                    msg += \"<color=#e12e0b>Đặt Cược : \" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                    item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                }\r\n                else if (desJson[\"action\"] == 1) {\r\n                    var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"referenceId\"] + \"  Số bước:\" + desJson[\"step\"] + \"\\n</color>\"\r\n                    msg += \"<color=#f0bf0b>Thắng Thường : +\" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                    item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                }\r\n                else if (desJson[\"action\"] == 2) {\r\n                    var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"referenceId\"] + \"  Số bước:\" + desJson[\"step\"] + \"\\n</color>\"\r\n                    msg += \"<color=#f0bf0b>Nỗ Hũ : +\" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                    item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                }\r\n\r\n                break;\r\n            case \"11\":\r\n                var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"matchID\"] + \"\\n</color>\"\r\n                msg += \"<color=#fbf2e1>Phòng : \" + desJson[\"roomID\"] + \"</color>\";\r\n                item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                break;\r\n            case \"15\":\r\n                var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"matchID\"] + \"\\n</color>\"\r\n                msg += \"<color=#fbf2e1>Phòng : \" + desJson[\"roomID\"] + \"</color>\";\r\n                msg += \"    <color=#e12e0b>\\nCược : \" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                item.getChildByName(\"Service\").getComponent(cc.Label).string = \"Xóc Đĩa\";\r\n                break;\r\n            case \"9\":\r\n                var msg = \"<color=#fbf2e1>Phiên : #\" + desJson[\"matchID\"] + \"\\n</color>\"\r\n                msg += \"<color=#fbf2e1>Phòng : \" + desJson[\"roomID\"] + \"</color>\";\r\n                item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                break;\r\n            case \"1\":\r\n                if (desJson[\"type\"] == 0) {\r\n                    //dat cuoc\r\n                    item.getChildByName(\"Desc\").getComponent(cc.RichText).string = \"<color=#e12e0b>Đặt cược : \" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                }\r\n                else if (desJson[\"type\"] == 1) {\r\n                    item.getChildByName(\"Desc\").getComponent(cc.RichText).string = \"Thưởng nhân hũ \" + this.GameName[desJson[\"gameID\"]];\r\n\r\n                }\r\n                else {\r\n                    switch (desJson[\"result\"]) {\r\n                        case 1:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \" - TPS Jackpot</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 2:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \" - Jackpot</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 3:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \" - Tứ Quý</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 4:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \" - Cù Lũ</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 5:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \" - Thùng</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 6:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \" - Sảnh</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 7:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \" - Sám Cô</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 8:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \" - Hai Đôi</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 9:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \" - Đôi J+</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 10:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \" - Đôi J-</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 11:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \" - Bài Cao</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                        case 12:\r\n                            var msg = \"<color=#e12e0b>Đặt cược : -\" + Utils.formatNumber(desJson[\"totalbet\"]) + \"\\n</color>\";\r\n                            msg += \"<color=#f0bf0b>Trả thưởng : +\" + Utils.formatNumber(desJson[\"totalPrizes\"]) + \" - X2 Jackpot</color>\";\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg;\r\n                            break;\r\n                    }\r\n\r\n                }\r\n                break;\r\n        }\r\n        var serviceName = itemData[\"serviceName\"];\r\n        switch (serviceName) {\r\n            case \"182\":\r\n                item.getChildByName(\"Service\").getComponent(cc.Label).string = \"Giftcode\";\r\n                var msg1 = \"Code : \" + desJson[\"giftCode\"] + \"\\n\";\r\n                msg1 += \"<color=#f0bf0b>Thưởng : +\" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg1;\r\n                break;\r\n            case \"186\":\r\n                item.getChildByName(\"Service\").getComponent(cc.Label).string = \"Hoàn trả\";\r\n                var msg1 = \"Ngày : \" + desJson[\"day\"] + \"\\n\";\r\n                msg1 += \"<color=#f0bf0b>Hoàn trả : +\" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg1;\r\n                break;\r\n            case \"199\":\r\n                item.getChildByName(\"Service\").getComponent(cc.Label).string = \"Điểm Danh\";\r\n                var msg1 = \"<color=#FFFFFF>Thưởng điểm danh hàng ngày</color>\";\r\n                item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg1;\r\n                break;\r\n        }\r\n\r\n        var type = desJson[\"type\"];\r\n        switch (type) {\r\n            case 12:\r\n                item.getChildByName(\"Service\").getComponent(cc.Label).string = \"Kích soạt SĐT\";\r\n                var msg1 = \"<color=#f0bf0b>Thưởng : +\" + Utils.formatNumber(itemData[\"moneyExchange\"]) + \"</color>\";\r\n                item.getChildByName(\"Desc\").getComponent(cc.RichText).string = msg1;\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    loadPage(res) {\r\n        //Utils.Log(\"trans:\", res);\r\n        this.content.removeAllChildren();\r\n        if (this.tabSelectedIdx == 0) {\r\n            for (let i = 0; i < 13; i++) {\r\n                var indexData = i;\r\n\r\n                if (indexData < res[\"transactions\"].length) {\r\n                    let item = cc.instantiate(this.prefab);\r\n                    item.parent = this.content;\r\n                    let itemData = res[\"transactions\"][indexData];\r\n                    var isJson = Utils.IsJsonString(itemData[\"description\"]);\r\n                    if (isJson) {\r\n                        item.getChildByName(\"Trans\").getComponent(cc.Label).string = itemData[\"transId\"];\r\n                        item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"transactionTime\"];\r\n                        item.getChildByName(\"Coin\").getComponent(cc.Label).string = (itemData[\"moneyExchange\"] > 0 ? \"+\" : \"\") + Utils.formatNumber(itemData[\"moneyExchange\"]);\r\n                        item.getChildByName(\"Balance\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"currentMoney\"]);\r\n\r\n                        if (itemData[\"actionName\"] === undefined || itemData[\"actionName\"] !== \"CashOutByCard\") {\r\n                            item.getChildByName(\"BtnView\").active = false;\r\n                        } else {\r\n                            item.getChildByName(\"BtnView\").active = true;\r\n                            item.getChildByName(\"BtnView\").off(\"click\");\r\n                            item.getChildByName(\"BtnView\").on(\"click\", () => {\r\n                                this.loadCard(itemData[\"transactionTime\"]);\r\n\r\n                            });\r\n                        }\r\n                        this.parseDescriptionJson(item, itemData);\r\n\r\n                    }\r\n                    else {\r\n                        item.getChildByName(\"Trans\").getComponent(cc.Label).string = itemData[\"transId\"];\r\n                        item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"transactionTime\"];\r\n                        item.getChildByName(\"Service\").getComponent(cc.Label).string = this.convertNameThirdParty(itemData[\"serviceName\"]);\r\n                        item.getChildByName(\"Coin\").getComponent(cc.Label).string = (itemData[\"moneyExchange\"] > 0 ? \"+\" : \"\") + Utils.formatNumber(itemData[\"moneyExchange\"]);\r\n                        item.getChildByName(\"Balance\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"currentMoney\"]);\r\n                        item.getChildByName(\"Desc\").getComponent(cc.RichText).string = itemData[\"description\"];\r\n                        if (itemData['serviceName'] == \"201\") {\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = \"Thưởng Sự Kiện\\nLì Xì Giờ Vàng\";\r\n                        }\r\n                        if (itemData['serviceName'] == \"202\") {\r\n                            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = \"Thưởng hoa hồng giới thiệu\";\r\n                        }\r\n                        if (itemData[\"actionName\"] === undefined || itemData[\"actionName\"] !== \"CashOutByCard\") {\r\n                            item.getChildByName(\"BtnView\").active = false;\r\n                        } else {\r\n                            item.getChildByName(\"BtnView\").active = true;\r\n                            item.getChildByName(\"BtnView\").off(\"click\");\r\n                            item.getChildByName(\"BtnView\").on(\"click\", () => {\r\n                                this.loadCard(itemData[\"transactionTime\"]);\r\n\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < 13; i++) {\r\n                let data = this.currentData[i];\r\n                if (data != null) {\r\n                    let item = this.contentNapRut.children[i];\r\n                    if (!cc.isValid(item)) {\r\n                        item = cc.instantiate(this.itemNapRut);\r\n                        item.parent = this.contentNapRut;\r\n                    }\r\n                    item.active = true;\r\n                    item.getChildByName('lbTime').getComponent(cc.Label).string = data['CreatedAt'].replace(\" \", \"\\n\");\r\n                    item.getChildByName(\"lbBank\").getComponent(cc.Label).string = data['BankCode'];\r\n                    item.getChildByName(\"lbAmount\").getComponent(cc.Label).string = Utils.formatNumber(data['Amount']);\r\n                    switch (data['Status']) {\r\n                        case 0:\r\n                            item.getChildByName(\"lbStatus\").getComponent(cc.Label).string = App.instance.getTextLang('txt_pending');\r\n                            item.getChildByName(\"lbStatus\").color = cc.Color.YELLOW;\r\n                            break;\r\n                        case 1:\r\n                            item.getChildByName(\"lbStatus\").getComponent(cc.Label).string = App.instance.getTextLang('txt_receive2');\r\n                            item.getChildByName(\"lbStatus\").color = cc.Color.YELLOW;\r\n                            break;\r\n                        case 4:\r\n                        case 2:\r\n                            item.getChildByName(\"lbStatus\").getComponent(cc.Label).string = App.instance.getTextLang('txt_success');\r\n                            item.getChildByName(\"lbStatus\").color = cc.Color.GREEN;\r\n                            break;\r\n                        case 3:\r\n                            item.getChildByName(\"lbStatus\").getComponent(cc.Label).string = App.instance.getTextLang('txt_failed');\r\n                            item.getChildByName(\"lbStatus\").color = cc.Color.RED;\r\n                            break;\r\n                        case 12:\r\n                            item.getChildByName(\"lbStatus\").getComponent(cc.Label).string = App.instance.getTextLang('txt_request_cashout');\r\n                            item.getChildByName(\"lbStatus\").color = cc.Color.CYAN;\r\n                            break;\r\n\r\n                        default:\r\n                            item.getChildByName(\"lbStatus\").getComponent(cc.Label).string = App.instance.getTextLang('txt_receive2');\r\n                            item.getChildByName(\"lbStatus\").color = cc.Color.WHITE;\r\n\r\n                    }\r\n                }\r\n            }\r\n            for (let i = this.currentData.length; i < this.contentNapRut.childrenCount; i++) {\r\n                this.contentNapRut.children[i].active = false;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private loadData(isReloadScr = true) {\r\n        App.instance.showLoading(true);\r\n        let params = null;\r\n        switch (this.tabSelectedIdx) {\r\n            case 0:\r\n                params = { \"c\": 302, \"nn\": Configs.Login.Nickname, \"mt\": Configs.App.MONEY_TYPE, \"p\": this.page };\r\n                break;\r\n            case 1:\r\n                // params = { \"c\": 302, \"nn\": Configs.Login.Nickname, \"mt\": 3, \"p\": this.page };\r\n                params = { \"c\": 2016, \"nn\": Configs.Login.Nickname, \"tt\": 0, \"p\": this.page, \"mi\": 5 };\r\n                break;\r\n            case 2:\r\n                params = { \"c\": 2016, \"nn\": Configs.Login.Nickname, \"tt\": 1, \"p\": this.page, \"mi\": 5 };\r\n                break;\r\n        }\r\n        Http.get(Configs.App.API, params, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) {\r\n                return;\r\n            }\r\n            if (res[\"success\"]) {\r\n                if (this.tabSelectedIdx == 0) {\r\n                    this.maxPage = res[\"totalPages\"];\r\n                } else {\r\n                    if (res['totalRecords'] <= 5) {\r\n                        this.maxPage = 1;\r\n                    } else {\r\n                        this.maxPage = res['totalRecords'] % 5 == 0 ? (res['totalRecords'] / 5) : Math.floor(res['totalRecords'] / 5) + 1;\r\n                    }\r\n                }\r\n                this.totalPageLoaded++;\r\n                this.data = res;\r\n                let transactionData = res['transactions'];\r\n                if (this.tabSelectedIdx == 0) {\r\n                    this.dataPlay.push(...transactionData);\r\n                    this.currentData = this.dataPlay;\r\n                } else {\r\n                    if (res['data'] != null)\r\n                        this.currentData = res['data'];\r\n                }\r\n                this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n                this.loadPage(res);\r\n\r\n            } else {\r\n                if (this.tabSelectedIdx == 0) {\r\n                    this.content.removeAllChildren();\r\n                } else {\r\n                    this.contentNapRut.children.forEach((item) => {\r\n                        item.active = false;\r\n                    })\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private loadCard(time: string) {\r\n        App.instance.showLoading(true);\r\n        let params = { \"c\": 2001, \"nickname\": Configs.Login.Nickname, \"token\": Configs.Login.AccessToken, \"transTime\": encodeURI(time) };\r\n        Http.get(Configs.App.API, params, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n\r\n            if (res == \"\") {\r\n                return;\r\n            }\r\n            App.instance.popupCardInfo.setListItem(JSON.stringify(res));\r\n        })\r\n    }\r\n    private setDataItem(item, itemData) {\r\n        var isJson = Utils.IsJsonString(itemData[\"description\"]);\r\n        if (isJson) {\r\n            item.getChildByName(\"Trans\").getComponent(cc.Label).string = itemData[\"transId\"];\r\n            item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"transactionTime\"];\r\n            item.getChildByName(\"Coin\").getComponent(cc.Label).string = (itemData[\"moneyExchange\"] > 0 ? \"+\" : \"\") + Utils.formatNumber(itemData[\"moneyExchange\"]);\r\n            item.getChildByName(\"Coin\").getComponent(cc.Label).font = itemData[\"moneyExchange\"] > 0 ? this.fontNumber[0] : this.fontNumber[1];\r\n            item.getChildByName(\"Coin\").getComponent(cc.Label).fontSize = itemData[\"moneyExchange\"] > 0 ? 8 : 7;\r\n            item.getChildByName(\"Balance\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"currentMoney\"]);\r\n            if (itemData[\"actionName\"] === undefined || itemData[\"actionName\"] !== \"CashOutByCard\") {\r\n                item.getChildByName(\"BtnView\").active = false;\r\n            } else {\r\n                item.getChildByName(\"BtnView\").active = true;\r\n                item.getChildByName(\"BtnView\").off(\"click\");\r\n                item.getChildByName(\"BtnView\").on(\"click\", () => {\r\n                    this.loadCard(itemData[\"transactionTime\"]);\r\n                });\r\n            }\r\n            this.parseDescriptionJson(item, itemData);\r\n        }\r\n        else {\r\n            item.getChildByName(\"Trans\").getComponent(cc.Label).string = itemData[\"transId\"];\r\n            item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"transactionTime\"];\r\n            item.getChildByName(\"Service\").getComponent(cc.Label).string = this.convertNameThirdParty(itemData[\"serviceName\"]);\r\n            item.getChildByName(\"Coin\").getComponent(cc.Label).string = (itemData[\"moneyExchange\"] > 0 ? \"+\" : \"\") + Utils.formatNumber(itemData[\"moneyExchange\"]);\r\n            item.getChildByName(\"Coin\").getComponent(cc.Label).font = itemData[\"moneyExchange\"] > 0 ? this.fontNumber[0] : this.fontNumber[1];\r\n            item.getChildByName(\"Coin\").getComponent(cc.Label).fontSize = itemData[\"moneyExchange\"] > 0 ? 8 : 7;\r\n            item.getChildByName(\"Balance\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"currentMoney\"]);\r\n            item.getChildByName(\"Desc\").getComponent(cc.RichText).string = itemData[\"description\"];\r\n            if (itemData[\"actionName\"] === undefined || itemData[\"actionName\"] !== \"CashOutByCard\") {\r\n                item.getChildByName(\"BtnView\").active = false;\r\n            } else {\r\n                item.getChildByName(\"BtnView\").active = true;\r\n                item.getChildByName(\"BtnView\").off(\"click\");\r\n                item.getChildByName(\"BtnView\").on(\"click\", () => {\r\n                    this.loadCard(itemData[\"transactionTime\"]);\r\n                });\r\n            }\r\n        }\r\n        item.active = true;\r\n    }\r\n    convertNameThirdParty(serviceName) {\r\n        switch (serviceName) {\r\n            case \"WM_DEPOSIT\":\r\n            case \"WM_WITHDRAW\":\r\n                return \"Live casino WM\";\r\n            case \"IBC2_DEPOSIT\":\r\n            case \"IBC2_WITHDRAW\":\r\n                return \"Thể Thao IBC\";\r\n            case \"SBO_DEPOSIT\":\r\n            case \"SBO_WITHDRAW\":\r\n                return \"Thể Thao SBO\";\r\n            case \"AG_DEPOSIT\":\r\n            case \"AG_WITHDRAW\":\r\n                return \"Live casino AG\";\r\n            case \"CMD_DEPOSIT\":\r\n            case \"CMD_WITHDRAW\":\r\n                return \"Thể thao CMD368\";\r\n            case \"FISH_DEPOSIT\":\r\n            case \"FISH_WITHDRAW\":\r\n                return \"Bắn Cá\";\r\n            case \"EBET_DEPOSIT\":\r\n            case \"EBET_WITHDRAW\":\r\n                return \"Live EBET\";\r\n            case \"Cashout\":\r\n                return \"Rút tiền\";\r\n            case \"190\":\r\n                return \"Tài Xỉu Siêu Tốc\";\r\n            case \"201\":\r\n                return \"Lì Xì Giờ Vàng\";\r\n            case \"202\":\r\n                return \"Giới Thiệu Bạn Bè\";\r\n            default:\r\n                return serviceName\r\n        }\r\n    }\r\n    onScrollEvent(scrollview, eventType, customEventData) {\r\n        if (eventType == cc.ScrollView.EventType.SCROLL_TO_BOTTOM) {\r\n            if (this.page < this.maxPage) {\r\n                this.page++;\r\n                this.loadData(false);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Popupnaprut extends Dialog {\r\n\r\n\r\n\r\n    show() {\r\n        super.show();\r\n        // for (let i = 0; i < this.itemTemplate.parent.childrenCount; i++) {\r\n        //     this.itemTemplate.parent.children[i].active = false;\r\n        // }\r\n            if(Configs.Login.ListBankRut == null){\r\n                App.instance.showLoading(true);\r\n                var data = {};\r\n                data[\"c\"] = 2008;\r\n                data[\"nn\"] = Configs.Login.Nickname;\r\n                data[\"pn\"] = 1;\r\n                data[\"l\"] = 10;\r\n                Http.get(Configs.App.API, data, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                    var list = JSON.parse(res.data).data;\r\n                    Configs.Login.ListBankRut = list;\r\n                });\r\n            }\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        // for (let i = 0; i < this.itemTemplate.parent.childrenCount; i++) {\r\n        //     this.itemTemplate.parent.children[i].active = false;\r\n        // }\r\n    }\r\n    onClickNap(){\r\n        Global.LobbyController.actAddCoin();\r\n        this.dismiss();\r\n    }\r\n    onClickRut(){\r\n        Global.LobbyController.actCashout();\r\n        this.dismiss();\r\n    }\r\n\r\n\r\n    // private getItem(): cc.Node {\r\n    //     let item = null;\r\n    //     for (let i = 0; i < this.itemTemplate.parent.childrenCount; i++) {\r\n    //         let node = this.itemTemplate.parent.children[i];\r\n    //         if (node != this.itemTemplate && !node.active) {\r\n    //             item = node;\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    //     if (item == null) {\r\n    //         item = cc.instantiate(this.itemTemplate);\r\n    //         item.parent = this.itemTemplate.parent;\r\n    //     }\r\n    //     item.active = true;\r\n    //     return item;\r\n    // }\r\n\r\n\r\n    //             }\r\n    //         }\r\n    //     });\r\n    // }\r\n}\r\n","//import Configs from \"../../Loading/src/Configs\";\r\n//import { Global } from \"../../Loading/src/Global\";\r\n//import ItemGame, { ItemGameType } from \"./Lobby.ItemGame\";\r\n//import App from \"./Script/common/App\";\r\n//import ScrollViewControl from \"./Script/common/ScrollViewControl\";\r\n//import Utils from \"./Script/common/Utils\";\r\n//\r\n//\r\n//const { ccclass, property } = cc._decorator;\r\n//\r\n//@ccclass(\"Lobby.TabsListGameTab\")\r\n//export class Tab {\r\n//    @property(cc.Button)\r\n//    button: cc.Button = null;\r\n//    @property(cc.SpriteFrame)\r\n//    sfNormal: cc.SpriteFrame = null;\r\n//    @property(cc.SpriteFrame)\r\n//    sfActive: cc.SpriteFrame = null;\r\n//\r\n//}\r\n//\r\n//@ccclass\r\n//export default class TabsListGame extends cc.Component {\r\n//\r\n//    @property([Tab])\r\n//    tabs: Tab[] = [];\r\n//\r\n//    @property([ItemGame])\r\n//    itemGames: ItemGame[] = [];\r\n//\r\n//    @property(cc.Node)\r\n//    contentIconGame: cc.Node = null;\r\n//    private seletectIdx = 0;\r\n//    @property(cc.ScrollView)\r\n//    scrListGame: cc.ScrollView = null;\r\n//\r\n//    @property(ScrollViewControl)\r\n//    scrGame: ScrollViewControl = null;\r\n//    isShowStartEff: boolean = true;\r\n//    currenListGame = [];\r\n//    listGameConfig = [\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'XOSO',\r\n//                    spinePath: 'lote79/spineIcon/XoSo/xoso',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: true,\r\n//                    isHot: true,\r\n//                    position: cc.v2(3, -249),\r\n//                    tabGame: 'gamefish',\r\n//                 //   positionLbJP2: cc.v2(35, -82),\r\n//                 //   positionLbJP1: cc.v2(-32, -129),\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gamefish\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: true\r\n//        },\r\n//\t\t{\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'TAIXIU',\r\n//                    spinePath: 'lote79/spineIcon/TAIXIU/Taixiu_icon',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: true,\r\n//                    isHot: false,\r\n//                    position: cc.v2(3, -244),\r\n//                    tabGame: 'gamemini',\r\n//                    positionLbJP2: cc.v2(35, -84),\r\n//                    positionLbJP1: cc.v2(-32, -133),\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gamemini\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: true\r\n//        },\r\n//\t\t//{\r\n//        //    listgame: [\r\n//        //        {\r\n//        //            gameName: 'MauBinh',\r\n//        //            spinePath: 'lote79/spineIcon/TAIXIU/Taixiu_icon',\r\n//        //            spineName: 'animation',\r\n//        //            isSizeBig: true,\r\n//        //            isHot: false,\r\n//        //            position: cc.v2(3, -242),\r\n//        //            tabGame: 'gamemini',\r\n//        //            positionLbJP2: cc.v2(35, -82),\r\n//        //            positionLbJP1: cc.v2(-32, -129),\r\n//        //            comingSoon: false\r\n//        //        }\r\n//        //    ],\r\n//        //    tabGame: \"gamemini\",\r\n//        //    isBreakTab: false,\r\n//        //    isSizeBig: true\r\n//        //},\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'FISH',\r\n//                    spinePath: 'lote79/spineIcon/BANCA/Banca',\r\n//                    spineName: 'animation vietnam',\r\n//                    isSizeBig: true,\r\n//                    isHot: true,\r\n//                    position: cc.v2(-3, -238),\r\n//                    tabGame: 'gamefish',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gamefish\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: true\r\n//        },\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'THANTAI',\r\n//                    spinePath: 'lote79/spineIcon/THANTAI/ThanTai',\r\n//                    spineName: 'animation vietnam',\r\n//                    isSizeBig: true,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-3.4, -254),\r\n//                    tabGame: 'gameslot',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gameslot\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: true\r\n//        },\r\n//\t\t{\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'BACAY',\r\n//                    spinePath: 'lote79/spineIcon/Bacay/bacay',\r\n//                    spineName: 'animation vietnam',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(0, -122),\r\n//                    tabGame: 'gamecard',\r\n//                    comingSoon: false\r\n//                },\r\n//                {\r\n//                    gameName: 'TLMN',\r\n//                    spinePath: 'lote79/spineIcon/TLMN/XocDia',\r\n//                    spineName: 'animation vietnam',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(1, -145),\r\n//                    tabGame: 'gamecard',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gamecard\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: false\r\n//        },\r\n//\t\t{\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'MauBinh',\r\n//                    spinePath: 'lote79/spineIcon/MauBinh/MauBinh',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(0, -124),\r\n//                    tabGame: 'gamecard',\r\n//                    comingSoon: false\r\n//                },\r\n//                {\r\n//                    gameName: 'Lieng',\r\n//                    spinePath: 'lote79/spineIcon/Lieng/Lieng',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: false,\r\n//                    isHot: false, \r\n//                    position: cc.v2(1, -142),\r\n//                    tabGame: 'gamecard',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gamecard\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: false\r\n//        },\r\n//\t\t{\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'BaiCao',\r\n//                    spinePath: 'lote79/spineIcon/BaiCao/BaiCao',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(0, -130),\r\n//                    tabGame: 'gamecard',\r\n//                    comingSoon: false\r\n//                },\r\n//                { \r\n//                    gameName: 'Poker',\r\n//                    spinePath: 'lote79/spineIcon/Poker/Poker',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: false,\r\n//                    isHot: false, \r\n//                    position: cc.v2(1, -142),\r\n//                    tabGame: 'gamecard',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gamecard\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: false\r\n//        },\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'BITCOIN',\r\n//                    spinePath: 'lote79/spineIcon/CRYPTO/crypto',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: true,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-7, -239),\r\n//                    tabGame: 'gameslot',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gameslot\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: true\r\n//        },\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'DUAXE',\r\n//                    spinePath: 'lote79/spineIcon/DuaXe/ic_sieuxe',\r\n//                    spineName: 'animation vietnam',\r\n//                    isSizeBig: true,\r\n//                    isHot: false,\r\n//                    position: cc.v2(0, -215),\r\n//                    tabGame: 'gameslot',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gameslot\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: true\r\n//        },\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'THETHAO',\r\n//                    spinePath: 'lote79/spineIcon/EURO/Euro',\r\n//                    spineName: 'animation vietnam',\r\n//                    isSizeBig: true,\r\n//                    isHot: false,\r\n//                    position: cc.v2(3.6, -237),\r\n//                    tabGame: 'gameslot',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gameslot\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: true\r\n//        },\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'BIKINI',\r\n//                    spinePath: 'lote79/spineIcon/Bikini/Bikini',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: true,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-8, -302),\r\n//                    tabGame: 'gameslot',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gameslot\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: true\r\n//        },\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'CHIEMTINH',\r\n//                    spinePath: 'lote79/spineIcon/ChiemTinh/ic_chiemtinh',\r\n//                    spineName: 'animation vietnam',\r\n//                    isSizeBig: true,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-2, -216),\r\n//                    tabGame: 'gameslot',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gameslot\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: true\r\n//        },\r\n//\t\t{\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'BAUCUA',\r\n//                    spinePath: 'lote79/spineIcon/BAUCUA/BauCua',\r\n//                    spineName: 'animation vietnam',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-3, -129),\r\n//                    tabGame: 'gamemini',\r\n//                    comingSoon: false\r\n//                },\r\n//                {\r\n//                    gameName: 'TAIXIUSIEUTOC',\r\n//                    spinePath: 'lote79/spineIcon/TXST/ic_tx',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-0.5, -7),\r\n//                    tabGame: 'gamemini',\r\n//\t\t\t\t\tcomingSoon: false\r\n//                 //   comingSoon: cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS\r\n//                }\r\n//            ],\r\n//            tabGame: \"gamemini\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: false\r\n//        },\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'XOCDIA',\r\n//                    spinePath: 'lote79/spineIcon/XocDiaMini/xocdia',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: true,\r\n//                    isHot: false,\r\n//                   // position: cc.v2(-0.5, -95),\r\n//\t\t\t\t\tposition: cc.v2(-4.6, -224),\r\n//                    tabGame: 'gamemini',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gamemini\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: true\r\n//        },\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'THANBAI',\r\n//                    spinePath: 'lote79/spineIcon/ThanBai/anim_thanbai',\r\n//                    spineName: 'animation vietnam',\r\n//                    isSizeBig: true,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-4.6, -216),\r\n//                    tabGame: 'gameslot',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gameslot\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: true\r\n//        },\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'CHIMDIEN',\r\n//                    spinePath: 'lote79/spineIcon/CHIMDIEN/Agrybird',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: true,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-3, -216),\r\n//                    tabGame: 'gameslot',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gameslot\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: true\r\n//        },\r\n//        \r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'GEM',\r\n//                    spinePath: 'lote79/spineIcon/Gem/gem_lobby',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-5, -93),\r\n//                    tabGame: 'gamemini',\r\n//                    comingSoon: false\r\n//                },\r\n//                {\r\n//                    gameName: 'PIKACHU',\r\n//                    spinePath: 'lote79/spineIcon/Xeng/Fruits',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-3, -107),\r\n//                    tabGame: 'gamemini',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gamemini\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: false\r\n//        },\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'MINIPOKER',\r\n//                    spinePath: 'lote79/spineIcon/Minipoker/MiniPoker',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-3, -134),\r\n//                    tabGame: 'gamemini',\r\n//                    comingSoon: false\r\n//                },\r\n//                {\r\n//                    gameName: 'CAOTHAP',\r\n//                    spinePath: 'lote79/spineIcon/CAOTHAP/CaoThap',\r\n//                    spineName: 'animation vietnam',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-4, -129),\r\n//                    tabGame: 'gamemini',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gamemini\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: false\r\n//        },\r\n//        \r\n//        \r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'TLMNSOLO',\r\n//                    spinePath: 'lote79/spineIcon/TLMNSOLO/TLMNsolo',\r\n//                    spineName: 'animation vietam',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-1, -148),\r\n//                    tabGame: 'gamecard',\r\n//                    comingSoon: false\r\n//                },\r\n//                {\r\n//                    gameName: 'SAM',\r\n//                    spinePath: 'lote79/spineIcon/SAM/SAMLOC',\r\n//                    spineName: 'animation vietnam',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-11, -123),\r\n//                    tabGame: 'gamecard',\r\n//                    comingSoon: false\r\n//                }\r\n//            ],\r\n//            tabGame: \"gamecard\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: false\r\n//        },\r\n//\t\t{\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'WM',\r\n//                    spinePath: 'lote79/spineIcon/XocDiaWM/XocDia',\r\n//                    spineName: 'animation3',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(2, -176),\r\n//                    tabGame: 'gamelive',\r\n//                    comingSoon: true\r\n//                },\r\n//                {\r\n//                    gameName: 'AG',\r\n//                    spinePath: 'lote79/spineIcon/LIVEAG/livecasino2',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(80, -531.838),\r\n//                    tabGame: 'gamelive',\r\n//                    comingSoon: true\r\n//                }\r\n//            ],\r\n//            tabGame: \"gamelive\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: false,\r\n//\t\t\tcomingSoon: true\r\n//        },\r\n//        {\r\n//            listgame: [\r\n//                {\r\n//                    gameName: 'EBET',\r\n//                    spinePath: 'lote79/spineIcon/EBET/Crypocopy6',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: false,\r\n//                    isHot: true,\r\n//                    position: cc.v2(-1, -89),\r\n//                    tabGame: 'gamelive',\r\n//                    comingSoon: true\r\n//                },\r\n//                {\r\n//                    gameName: 'PRAGMATIC',\r\n//                    spinePath: 'lote79/spineIcon/Pragmatic/skeleton',\r\n//                    spineName: 'animation',\r\n//                    isSizeBig: false,\r\n//                    isHot: false,\r\n//                    position: cc.v2(-6.3, -101),\r\n//                    tabGame: 'gamelive',\r\n//                    comingSoon: true,\r\n//                },\r\n//            ],\r\n//            tabGame: \"gamelive\",\r\n//            isBreakTab: false,\r\n//            isSizeBig: false\r\n//        }\r\n//\r\n//    ];\r\n//    onLoad() {\r\n//        this.scrListGame.getComponentInChildren(cc.Mask).enabled = true;\r\n//        this.currenListGame = this.listGameConfig.slice();\r\n//\r\n//    }\r\n//    start() {\r\n//\r\n//    }\r\n//    initListGameConfig(data) {\r\n//        for (let i = 0; i < this.listGameConfig.length; i++) {\r\n//            let objGameItem = this.listGameConfig[i]['listgame'];\r\n//            for (let j = 0; j < objGameItem.length; j++) {\r\n//                let dataGameConfig = data[objGameItem[j]['gameName']];\r\n//                objGameItem[j]['comingSoon'] = dataGameConfig['status'] == 0;\r\n//            }\r\n//        }\r\n//        this.loadListGame();\r\n//    }\r\n//    loadListGame() {\r\n//        this.scrGame.setDataList(this.setIconGameData.bind(this), this.currenListGame);\r\n//        setTimeout(() => {\r\n//            this.setJackpot();\r\n//        }, 100);\r\n//    }\r\n//    setIconGameData(item, data) {\r\n//        item.getChildByName(\"line_tab\").active = data['isBreakTab'];\r\n//        if (!data['isSizeBig']) {\r\n//            for (let i = 0; i < data.listgame.length; i++) {\r\n//                let dataGame = data.listgame[i];\r\n//                let icGame = item.getChildByName('iconGame' + (i + 1)).getComponent(ItemGame);\r\n//                icGame.setInfo(dataGame);\r\n//                icGame.node.active = true;\r\n//                if (!this.itemGames.includes(icGame))\r\n//                    this.itemGames.push(icGame);\r\n//            }\r\n//            item.getChildByName('iconGameBig').active = false;\r\n//        } else {\r\n//            let iconGameBig = item.getChildByName('iconGameBig').getComponent(ItemGame);\r\n//            if (!this.itemGames.includes(iconGameBig))\r\n//                this.itemGames.push(iconGameBig);\r\n//            iconGameBig.node.active = true;\r\n//            let dataGame = data.listgame[0];\r\n//            item.getChildByName('iconGame1').active = false;\r\n//            item.getChildByName('iconGame2').active = false;\r\n//            iconGameBig.setInfo(dataGame);\r\n//        }\r\n//    }\r\n//    onScrollEvent() {\r\n//        this.isShowStartEff = false;\r\n//    }\r\n//    updateSize(isHaveBanner) {\r\n//        if (!isHaveBanner) {\r\n//            this.scrListGame.node.width = 1250;\r\n//            this.scrListGame.node.x = 0;\r\n//            this.scrListGame.node.getChildByName(\"view\").getComponent(cc.Widget).updateAlignment();\r\n//        } else {\r\n//            this.scrListGame.node.width = 994;\r\n//            this.scrListGame.node.x = 140;\r\n//            this.scrListGame.node.getChildByName(\"view\").getComponent(cc.Widget).updateAlignment();\r\n//        }\r\n//    }\r\n//    public changeTabGame(tab) {\r\n//        this.isShowStartEff = true;\r\n//        this.currenListGame = [];\r\n//        if (tab == \"gamelive\") {\r\n//            this.currenListGame = this.listGameConfig.slice();\r\n//        } else {\r\n//            let tabGameChoosen = [];\r\n//            let tabGameLeft = [];\r\n//            this.listGameConfig.forEach((data) => {\r\n//                if (data['tabGame'] == tab) {\r\n//                    tabGameChoosen.push(data);\r\n//                } else {\r\n//                    tabGameLeft.push(data);\r\n//                }\r\n//            });\r\n//            this.currenListGame = tabGameChoosen.concat(tabGameLeft);\r\n//        }\r\n//        this.reset();\r\n//        this.loadListGame();\r\n//    }\r\n//    reset() {\r\n//        this.contentIconGame.children.forEach((item) => {\r\n//            item.getChildByName('line_tab').active = false;\r\n//        })\r\n//        this.scrListGame.stopAutoScroll();\r\n//        this.contentIconGame.x = -this.contentIconGame.parent.width / 2;\r\n//    }\r\n//\r\n//    public getItemGameWithId(id: string): ItemGame {\r\n//        for (let i = 0; i < this.itemGames.length; i++) {\r\n//            if (this.itemGames[i].id == id) {\r\n//                return this.itemGames[i];\r\n//            }\r\n//        }\r\n//        return null;\r\n//    }\r\n//    setJackpot() {//update lại jackpot khi load lại item game;\r\n//        if (Configs.Login.IsLogin && App.instance.topHuData != null) {\r\n//            Global.LobbyController.handleUpdateJP();\r\n//        } else {\r\n//            App.instance.topHuData = JSON.parse('{\"audition\":{\"100\":{\"p\":647800,\"x2\":0},\"1000\":{\"p\":6959900,\"x2\":0},\"10000\":{\"p\":98156097,\"x2\":0}},\"spartan\":{\"100\":{\"p\":990296,\"x2\":0},\"1000\":{\"p\":9262455,\"x2\":0},\"10000\":{\"p\":73706904,\"x2\":0}},\"pokemon\":{\"100\":{\"p\":941981,\"x2\":1},\"1000\":{\"p\":5422705,\"x2\":1},\"10000\":{\"p\":57632614,\"x2\":1}},\"TAI_XIU\":{\"0\":{\"px\":565528720},\"1\":{\"pt\":715173010}},\"benley\":{\"100\":{\"p\":847257,\"x2\":0},\"1000\":{\"p\":7578500,\"x2\":0},\"10000\":{\"p\":60157886,\"x2\":0}},\"maybach\":{\"100\":{\"p\":680396,\"x2\":0},\"1000\":{\"p\":8596872,\"x2\":0},\"10000\":{\"p\":102489756,\"x2\":0}},\"tamhung\":{\"100\":{\"p\":581493,\"x2\":0},\"1000\":{\"p\":7870119,\"x2\":0},\"10000\":{\"p\":58135430,\"x2\":0}},\"chiemtinh\":{\"100\":{\"p\":511617,\"x2\":0},\"1000\":{\"p\":10404550,\"x2\":0},\"10000\":{\"p\":98601297,\"x2\":0}},\"bikini\":{\"100\":{\"p\":624702,\"x2\":0},\"1000\":{\"p\":9707592,\"x2\":0},\"10000\":{\"p\":50503932,\"x2\":0}},\"minipoker\":{\"100\":{\"p\":173090,\"x2\":0},\"1000\":{\"p\":1052463,\"x2\":0},\"10000\":{\"p\":15795786,\"x2\":0}},\"caothap\":{\"1000\":{},\"10000\":{},\"50000\":{},\"100000\":{},\"500000\":{}},\"rollRoye\":{\"100\":{\"p\":862429,\"x2\":1},\"1000\":{\"p\":7136508,\"x2\":1},\"10000\":{\"p\":65412566,\"x2\":1}},\"galaxy\":{\"100\":{\"p\":829294,\"x2\":1},\"1000\":{\"p\":7155563,\"x2\":1},\"10000\":{\"p\":52915908,\"x2\":1}},\"rangeRover\":{\"100\":{\"p\":540443,\"x2\":0},\"1000\":{\"p\":8776494,\"x2\":0},\"10000\":{\"p\":53316396,\"x2\":0}}}');\r\n//            Global.LobbyController.handleUpdateJP();\r\n//        }\r\n//    }\r\n//    public updateItemJackpots(id: string, j100: number, x2J100: boolean, j1000: number, x2J1000: boolean, j10000: number, x2J10000: boolean) {\r\n//        let itemGame = this.getItemGameWithId(id);\r\n//        if (itemGame != null) {\r\n//            let listJP = [];\r\n//            let dataJP100 = Object.create({});\r\n//            dataJP100.number = j100;\r\n//            dataJP100.x2 = x2J100;\r\n//            listJP.push(dataJP100);\r\n//\r\n//            let dataJP1000 = Object.create({});\r\n//            dataJP1000.number = j1000;\r\n//            dataJP1000.x2 = x2J1000;\r\n//            listJP.push(dataJP1000);\r\n//\r\n//            let dataJP10000 = Object.create({});\r\n//            dataJP10000.number = j10000;\r\n//            dataJP10000.x2 = x2J10000;\r\n//            listJP.push(dataJP10000);\r\n//            itemGame.setJackpot(listJP);\r\n//        }\r\n//    }\r\n//    public onClickGame(even, data) {\r\n//        //Utils.Log(data);\r\n//        //Utils.Log('even.target.getComponent(\"Lobby.ItemGame\").commingSoon:' + even.target.getComponent(\"Lobby.ItemGame\").commingSoon);\r\n//        if (even.target.getComponent(\"Lobby.ItemGame\").commingSoon) {\r\n//            Global.LobbyController.actComingSoon();\r\n//            return;\r\n//        }\r\n//        switch (data) {\r\n//            case \"WM\":\r\n//                Global.LobbyController.actLoginWM();\r\n//                break;\r\n//            case \"AG\":\r\n//                Global.LobbyController.actLoginAG();\r\n//                break;\r\n//            case \"EBET\":\r\n//                Global.LobbyController.actLoginEbet();\r\n//                break;\r\n//            case \"FISH\":\r\n//                Global.LobbyController.actGoToShootFish();\r\n//                break;\r\n//            case \"IBC\":\r\n//                Global.LobbyController.actLoginIBC();\r\n//                break;\r\n//            case \"SBO\":\r\n//                Global.LobbyController.actLoginSBO();\r\n//                break;\r\n//            case \"CMD\":\r\n//                Global.LobbyController.actLoginCMD();\r\n//                break;\r\n//            case \"THANBAI\":\r\n//                Global.LobbyController.actGoToSlot8();\r\n//                break;\r\n//            case \"THANTAI\":\r\n//                Global.LobbyController.actGoToSlot3();\r\n//                break;\r\n//            case \"CHIEMTINH\":\r\n//                Global.LobbyController.actGoToSlot6();\r\n//                break;\r\n//            case \"BITCOIN\":\r\n//                Global.LobbyController.actGoToSlot7();\r\n//                break;\r\n//            case \"BIKINI\":\r\n//                Global.LobbyController.actGoToSlot11();\r\n//                break;\r\n//            case \"THETHAO\":\r\n//                Global.LobbyController.actGoToSlot10();\r\n//                break;\r\n//            case \"CHIMDIEN\":\r\n//                Global.LobbyController.actGoToSlot4();\r\n//                break;\r\n//            case \"DUAXE\":\r\n//                Global.LobbyController.actGoToSlot1();\r\n//                break;\r\n//            case \"TAIXIU\":\r\n//                Global.LobbyController.actGameTaiXiu();\r\n//                break;\r\n//            case \"MINIPOKER\":\r\n//                Global.LobbyController.actGameMiniPoker();\r\n//                break;\r\n//            case \"BAUCUA\":\r\n//                Global.LobbyController.actGameBauCua();\r\n//                break;\r\n//            case \"PIKACHU\":\r\n//                Global.LobbyController.actGameSlot3x3();\r\n//                break;\r\n//            case \"GEM\":\r\n//                Global.LobbyController.actGameSlot3x3Gem();\r\n//                break;\r\n//            case \"TAIXIUSIEUTOC\":\r\n//                Global.LobbyController.actGameTaiXiuSieuToc();\r\n//                break;\r\n//            case \"CAOTHAP\":\r\n//                Global.LobbyController.actGameCaoThap();\r\n//                break;\r\n//            case \"XOCDIA\":\r\n//                Global.LobbyController.actGoToXocDia();\r\n//                break;\r\n//            case \"BACAY\":\r\n//                Global.LobbyController.actGoToBaCay();\r\n//                break;\r\n//\t\t\tcase \"MauBinh\":\r\n//                Global.LobbyController.actGoToMauBinh();\r\n//                break;\r\n//\t\t\tcase \"Lieng\":\r\n//                Global.LobbyController.actGoToLieng();\r\n//                break;\r\n//\t\t\tcase \"Poker\":\r\n//                Global.LobbyController.actGoToPoker();\r\n//                break;\r\n//\t\t\tcase \"BaiCao\":\r\n//                Global.LobbyController.actGoToBaiCao();\r\n//                break;\r\n//            case \"TLMN\":\r\n//                Global.LobbyController.actGoToTLMN();\r\n//                break;\r\n//\t\t\tcase \"SAM\":\r\n//                Global.LobbyController.actGoToSam();\r\n//                break;\r\n//            case \"TLMNSOLO\":\r\n//                Global.LobbyController.actGameTLMNSolo();\r\n//                break;\r\n//\t\t\tcase \"XOSO\":\r\n//                Global.LobbyController.actGotoLoto();\r\n//                break;\r\n//        }\r\n//    }\r\n//\r\n//    // update (dt) {}\r\n//}\r\n\r\n\r\nimport ItemGame, { ItemGameType } from \"./Lobby.ItemGame\";\r\nimport ItemSlotGame from \"./Lobby.ItemSlotGame\";\r\nimport Tween from \"./Script/common/Tween\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass(\"Lobby.TabsListGameTab\")\r\nexport class Tab {\r\n    @property(cc.Button)\r\n    button: cc.Button = null;\r\n    @property(cc.SpriteFrame)\r\n    sfNormal: cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    sfActive: cc.SpriteFrame = null;\r\n\r\n\r\n}\r\n\r\n@ccclass\r\nexport default class TabsListGame extends cc.Component {\r\n\r\n    @property([Tab])\r\n    tabs: Tab[] = [];\r\n\r\n    @property([ItemGame])\r\n    itemGames: ItemGame[] = [];\r\n\r\n    @property(cc.Node)\r\n    contentIconGame: cc.Node = null;\r\n    private seletectIdx = 0;\r\n    @property(cc.ScrollView)\r\n    scrListGame: cc.ScrollView = null;\r\n\r\n    start() {\r\n\t/*\r\n        this.contentIconGame.children.forEach((item) => {\r\n            let posInWorld = this.contentIconGame.convertToWorldSpaceAR(item.getPosition());\r\n            let posInView = this.contentIconGame.parent.convertToNodeSpaceAR(posInWorld);\r\n            let deltaLeft = (-this.contentIconGame.parent.width / 2) - item.width / 2;\r\n            let deltaRight = (this.contentIconGame.parent.width / 2) + item.width / 2;\r\n            if (posInView.x < deltaLeft || posInView.x > deltaRight) {\r\n                item.opacity = 0\r\n            } else {\r\n                item.opacity = 255;\r\n            }\r\n        })\r\n\t\t*/\r\n\r\n    }\r\n    onEnable() {\r\n        var self = this;\r\n        setTimeout(function () {\r\n            cc.log(\" vao day\");\r\n            self.onScrollEvent();\r\n        }, 200);\r\n    }\r\n    onScrollEvent() {\r\n\t/*\r\n        this.contentIconGame.children.forEach((item) => {\r\n            let posInWorld = this.contentIconGame.convertToWorldSpaceAR(item.getPosition());\r\n            let posInView = this.contentIconGame.parent.convertToNodeSpaceAR(posInWorld);\r\n            let deltaLeft = (-this.contentIconGame.parent.width / 2) - item.width / 2;\r\n            let deltaRight = (this.contentIconGame.parent.width / 2) + item.width / 2;\r\n            if (posInView.x < deltaLeft || posInView.x > deltaRight) {\r\n                item.opacity = 0\r\n            } else {\r\n                item.opacity = 255;\r\n            }\r\n        })\r\n\t\t*/\r\n    }\r\n    updateSize(isHaveBanner) {\r\n        if (!isHaveBanner) {\r\n            this.scrListGame.node.width = 1250;\r\n            this.scrListGame.node.x = 0;\r\n            this.scrListGame.node.getChildByName(\"view\").getComponent(cc.Widget).updateAlignment();\r\n            cc.log(\"updateSize khong co banner\");\r\n        } else {\r\n            this.scrListGame.node.width = 994;\r\n            this.scrListGame.node.x = 140;\r\n            this.scrListGame.node.getChildByName(\"view\").getComponent(cc.Widget).updateAlignment();\r\n        }\r\n    }\r\n    private onTabChanged() {\r\n        switch (this.seletectIdx) {\r\n            case 0:\r\n                for (let i = 0; i < this.itemGames.length; i++) {\r\n                    if (this.itemGames[i] == null) continue;\r\n                    this.itemGames[i].node.active = true;\r\n                }\r\n                break;\r\n            case 1:\r\n                for (let i = 0; i < this.itemGames.length; i++) {\r\n                    if (this.itemGames[i] == null) continue;\r\n                    this.itemGames[i].node.active = this.itemGames[i].type == ItemGameType.SLOT;\r\n                }\r\n                break;\r\n            case 2:\r\n                for (let i = 0; i < this.itemGames.length; i++) {\r\n                    if (this.itemGames[i] == null) continue;\r\n                    this.itemGames[i].node.active = this.itemGames[i].type == ItemGameType.CARD;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    public changeTabGame() {\r\n        let scrWidth = this.scrListGame.node.width;\r\n\r\n        if (this.contentIconGame.width < scrWidth) {\r\n            this.contentIconGame.x = 0;\r\n        } else {\r\n            this.contentIconGame.x = (scrWidth / 2) + ((this.contentIconGame.width / 2) - scrWidth);\r\n        }\r\n    }\r\n\r\n    public getItemGameWithId(id: string): ItemSlotGame[] {\r\n        var arr = [];\r\n        for (let i = 0; i < this.itemGames.length; i++) {\r\n            if (this.itemGames[i] == null) continue;\r\n            if (this.itemGames[i].id == id) {\r\n                arr.push(this.itemGames[i] as ItemSlotGame);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    public updateItemJackpots(id: string, j100: number, x2J100: boolean, j1000: number, x2J1000: boolean, j10000: number, x2J10000: boolean) {\r\n        let itemGame = this.getItemGameWithId(id);\r\n        for (var i = 0; i < itemGame.length; i++) {\r\n\r\n            // itemGame[i].lblJackpots[0].string = Utils.formatNumber(j100);\r\n            // itemGame[i].lblJackpots[1].string = Utils.formatNumber(j1000);\r\n            // itemGame[i].lblJackpots[2].string = Utils.formatNumber(j10000);\r\n\r\n            Tween.numberTo(itemGame[i].lblJackpots[0], j100, 3)\r\n            Tween.numberTo(itemGame[i].lblJackpots[1], j1000, 3)\r\n            Tween.numberTo(itemGame[i].lblJackpots[2], j10000, 3)\r\n            // itemGame[i].lblJackpots[1].string = Utils.formatNumber(j1000);\r\n            // itemGame[i].lblJackpots[2].string = Utils.formatNumber(j10000);\r\n        }\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import ItemHu from \"./Lobby.ItemTopHu\";\r\nimport { Tophudata } from './Lobby.ItemTopHu';\r\nimport HandlerButton from \"./Script/common/HandlerButton\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Button)\r\n    btn100: cc.Button = null;\r\n    @property(cc.Button)\r\n    btn1000: cc.Button = null;\r\n    @property(cc.Button)\r\n    btn10000: cc.Button = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n    @property(cc.Node)\r\n    animTopHu: cc.Node = null;\r\n    @property(cc.Node)\r\n    nodeHu: cc.Node = null;\r\n    listItem: ItemHu[] = [];\r\n\r\n    index: number = 0;\r\n    listData100: Array<Tophudata> = new Array<Tophudata>();\r\n    listData1000: Array<Tophudata> = new Array<Tophudata>();\r\n    listData10000: Array<Tophudata> = new Array<Tophudata>();\r\n    isMove = false;\r\n    distance : number = 0;\r\n    onLoad() {\r\n        this.btn100.node.on('click', this.onBtn100Clicked, this);\r\n        this.btn1000.node.on('click', this.onBtn1000Clicked, this);\r\n        this.btn10000.node.on('click', this.onBtn10000Clicked, this);\r\n        this.index = 2;\r\n        this.animTopHu.on(cc.Node.EventType.TOUCH_START, (touch) => {\r\n            this.isMove = false;\r\n            this.distance = 0;\r\n           \r\n        });\r\n        this.animTopHu.on(cc.Node.EventType.TOUCH_MOVE, (touch) => {\r\n            this.animTopHu.setPosition(this.animTopHu.getPosition().add(touch.getDelta()));\r\n            this.distance += Math.abs(touch.getDelta().x) + Math.abs(touch.getDelta().y);\r\n            if(this.distance >= 70){\r\n                this.isMove = true;\r\n            }\r\n        });\r\n        this.animTopHu.on(cc.Node.EventType.TOUCH_END, (touch) => {\r\n            if (!this.isMove) {\r\n                this.onClickTopHu();\r\n            }\r\n            this.isMove = false;\r\n        });\r\n    }\r\n\r\n    onBtn100Clicked(event) {\r\n        this.btn100.node.getComponent(HandlerButton).SetActive(true);\r\n        this.btn1000.node.getComponent(HandlerButton).SetActive(false);\r\n        this.btn10000.node.getComponent(HandlerButton).SetActive(false);\r\n        this.Onshow(0);\r\n    }\r\n    onBtn1000Clicked(event) {\r\n        this.btn100.node.getComponent(HandlerButton).SetActive(false);\r\n        this.btn1000.node.getComponent(HandlerButton).SetActive(true);\r\n        this.btn10000.node.getComponent(HandlerButton).SetActive(false);\r\n        this.Onshow(1);\r\n    }\r\n    onBtn10000Clicked(event) {\r\n\r\n        this.btn100.node.getComponent(HandlerButton).SetActive(false);\r\n        this.btn1000.node.getComponent(HandlerButton).SetActive(false);\r\n        this.btn10000.node.getComponent(HandlerButton).SetActive(true);\r\n        this.Onshow(2);\r\n    }\r\n\r\n    start() {\r\n        this.btn100.node.getComponent(HandlerButton).SetActive(false);\r\n        this.btn1000.node.getComponent(HandlerButton).SetActive(false);\r\n        this.btn10000.node.getComponent(HandlerButton).SetActive(true);\r\n    }\r\n\r\n    public ShowData(listData100: Array<Tophudata>, listData1000: Array<Tophudata>, listData10000: Array<Tophudata>) {\r\n        //  //Utils.Log(\"ShowData:\"+listData100);\r\n        this.listData100 = listData100;\r\n        this.listData1000 = listData1000;\r\n        this.listData10000 = listData10000;\r\n        this.listData100.sort((a, b) => a.value > b.value ? -1 : 1);\r\n        this.listData1000.sort((a, b) => a.value > b.value ? -1 : 1);\r\n        this.listData10000.sort((a, b) => a.value > b.value ? -1 : 1);\r\n        this.Onshow(this.index)\r\n    }\r\n    private getItem(): cc.Node {\r\n        let item = null;\r\n        for (let i = 0; i < this.itemTemplate.parent.childrenCount; i++) {\r\n            let node = this.itemTemplate.parent.children[i];\r\n            if (node != this.itemTemplate && !node.active) {\r\n                item = node;\r\n                item.active = true;\r\n                break;\r\n            }\r\n        }\r\n        if (item == null) {\r\n            item = cc.instantiate(this.itemTemplate);\r\n            item.parent = this.itemTemplate.parent;\r\n        }\r\n        item.active = true;\r\n        return item;\r\n    }\r\n    private Onshow(index: number) {\r\n        var listdata = new Array<Tophudata>();\r\n        if (index == 0) {\r\n            listdata = this.listData100;\r\n        }\r\n        else if (index == 1) {\r\n            listdata = this.listData1000;\r\n        }\r\n        else {\r\n            listdata = this.listData10000;\r\n        }\r\n        // // init list\r\n        if (this.listItem.length <= 0) {\r\n            for (var i = 0; i < listdata.length; i++) {\r\n                let item = this.getItem();\r\n                let itemtophu = item.getComponent(ItemHu);\r\n                this.listItem.push(itemtophu);\r\n            }\r\n        }\r\n        for (var i = 0; i < listdata.length; i++) {\r\n            this.listItem[i].SetData(listdata[i]);\r\n        }\r\n        this.index = index;\r\n    }\r\n    onClickTopHu() {\r\n        this.nodeHu.active = !this.nodeHu.active;\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport App from \"../Script/common/App\";\r\nimport Dialog from \"../Script/common/Dialog\";\r\nimport Utils from \"../Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class LobbyChoseBank extends Dialog {\r\n\r\n    @property(cc.Node)\r\n    nodeContent: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    prefabItem: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeBox: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lbTitle: cc.Label = null;\r\n\r\n    init(tabWell, banks, callback, isWithDraw = false) {\r\n        this.node.active = true;\r\n        this.nodeContent.removeAllChildren();\r\n        this.lbTitle.string = App.instance.getTextLang('txt_select_bank').toUpperCase();\r\n        if (tabWell == \"clickpay\") {\r\n            for (var i = 0; i < banks.length; i++) {\r\n                if (banks[i].stat == 1) {\r\n                    var nodeItem = cc.instantiate(this.prefabItem);\r\n                    nodeItem.parent = this.nodeContent;\r\n                    nodeItem.getComponent(\"ItemChoseBank\").init(tabWell, banks[i], (dataBank) => {\r\n                        callback(dataBank);\r\n                        this.dismiss();\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < banks.length; i++) {\r\n                if (banks[i].status == 1) {\r\n                    var nodeItem = cc.instantiate(this.prefabItem);\r\n                    nodeItem.parent = this.nodeContent;\r\n                    nodeItem.getComponent(\"ItemChoseBank\").init(tabWell, banks[i], (dataBank) => {\r\n                        callback(dataBank);\r\n                        this.dismiss();\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (tabWell == \"payasec\") {\r\n            this.lbTitle.string = App.instance.getTextLang('txt_select_card').toUpperCase();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onBtnExit() {\r\n        this.dismiss();\r\n    }\r\n}\r\n","import Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport Dialog from \"../Script/common/Dialog\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport BaseTabShop from \"./BaseTabShop\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nconst NAME_TABS = { \"paywell\": 0, \"royalpay\": 1, \"princepay\": 2, \"bank\": 8, \"clickpay\": 4, \"payasec\": 5, \"chuyenkhoan\": 6, \"napthe\": 7, \"manualbank\": 3, \"gift\": 9};\r\n\r\n\r\n@ccclass\r\nexport default class LobbyShop extends Dialog {\r\n\r\n\r\n    @property([BaseTabShop])\r\n    tabs: BaseTabShop[] = [];\r\n    @property([cc.Node])\r\n    btnTabs: cc.Node[] = [];\r\n\r\n    private data = null;\r\n    private indexTabCurrent = 0;\r\n    show() {\r\n        super.show();\r\n        App.instance.showLoading(true);\r\n        if (Configs.Login.ListPayment == null) {\r\n            Http.get(Configs.App.API, { \"c\": 2002, \"nn\": Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, pt: 1 }, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                if (err != null) {\r\n                    return;\r\n                }\r\n                if (!res[\"success\"]) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_check_connect'));\r\n                    this.dismiss();\r\n                    return;\r\n                }\r\n                App.instance.showLoading(false);\r\n                Configs.Login.ListPayment = this.data = res.data;\r\n                //  cc.log(\"Paymen:\",res.data);\r\n\r\n                this.node.active = true;\r\n                this.showTabsAlive();\r\n            });\r\n        }\r\n        else {\r\n            App.instance.showLoading(false);\r\n            this.node.active = true;\r\n            this.showTabsAlive();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTabsAlive() {\r\n\r\n        for (var i = 0; i < this.btnTabs.length; i++) {\r\n            if (this.btnTabs[i] != null) {\r\n                this.btnTabs[i].active = false;\r\n                this.btnTabs[i].getComponent(cc.Toggle).isChecked = false;\r\n            }\r\n        }\r\n        //  cc.log(\"showTabsAlive:\" + JSON.stringify(Configs.Login.ListPayment));\r\n        var isFind = false;\r\n        for (var i = 0; i < Configs.Login.ListPayment.length; i++) {\r\n            if (Configs.Login.ListPayment[i].providerConfig.status == 1) {\r\n                if (NAME_TABS[Configs.Login.ListPayment[i].providerName] != null) {\r\n                    if (this.btnTabs[NAME_TABS[Configs.Login.ListPayment[i].providerName]]) {\r\n                        this.btnTabs[NAME_TABS[Configs.Login.ListPayment[i].providerName]].active = true;\r\n                        if (isFind == false) {\r\n                            this.onBtnChoseTab(null, Configs.Login.ListPayment[i].providerName);\r\n                            isFind = true;\r\n                        }\r\n                        else if (Configs.Login.ListPayment[i].providerName == \"princepay\") {\r\n                            this.onBtnChoseTab(null, Configs.Login.ListPayment[i].providerName);\r\n                            isFind = true;\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    baotri(){\r\n        App.instance.ShowAlertDialog(\"Ví điện tử đang bảo trì!\");\r\n    }\r\n\r\n\r\n    onBtnChoseTab(target, data) {\r\n        this.tabs[this.indexTabCurrent].hide();\r\n\r\n        var nameTab = data;\r\n        var dataTab = null;\r\n        this.indexTabCurrent = NAME_TABS[nameTab];\r\n        for (var i = 0; i < Configs.Login.ListPayment.length; i++) {\r\n            if (Configs.Login.ListPayment[i].providerName == nameTab) {\r\n                dataTab = Configs.Login.ListPayment[i];\r\n            }\r\n        }\r\n        this.tabs[this.indexTabCurrent].show(dataTab);\r\n        this.btnTabs[this.indexTabCurrent].getComponent(cc.Toggle).isChecked = true;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nnamespace lobby {\r\n    @ccclass\r\n    export class MiniGame extends cc.Component {\r\n\r\n        @property(cc.Node)\r\n        gamePlay: cc.Node = null;\r\n\r\n        onLoad() {\r\n            this.gamePlay.on(cc.Node.EventType.TOUCH_START, (event: cc.Event.EventTouch) => {\r\n                this.reOrder();\r\n            }, this);\r\n\r\n            this.gamePlay.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\r\n                var pos = this.gamePlay.position;\r\n                pos.x += event.getDeltaX();\r\n                pos.y += event.getDeltaY();\r\n                this.gamePlay.position = pos;\r\n            }, this);\r\n        }\r\n\r\n        reOrder() {\r\n            var zIndex = 0;\r\n            for (var i = 0; i < this.node.parent.childrenCount; i++) {\r\n                let node = this.node.parent.children[i];\r\n                if (node != this.node) {\r\n                    node.zIndex = zIndex++;\r\n                }\r\n            }\r\n            this.node.zIndex = zIndex++;\r\n        }\r\n\r\n        show() {\r\n            this.reOrder();\r\n            this.node.active = true;\r\n            this.gamePlay.stopAllActions();\r\n            this.gamePlay.scale = 0;\r\n            this.gamePlay.runAction(cc.sequence(\r\n                cc.scaleTo(0.3, 1),\r\n                cc.callFunc(() => {\r\n                    this._onShowed();\r\n                })\r\n            ));\r\n        }\r\n\r\n        _onShowed() {\r\n            // console.log(\"_onShowed\");\r\n        }\r\n\r\n        dismiss() {\r\n            this.gamePlay.stopAllActions();\r\n            this.gamePlay.runAction(cc.sequence(\r\n                cc.scaleTo(0.3, 0),\r\n                cc.callFunc(() => {\r\n                    this._onDismissed();\r\n                })\r\n            ));\r\n        }\r\n\r\n        _onDismissed() {\r\n            // console.log(\"_onDismissed\");\r\n            this.node.active = false;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default lobby.MiniGame;","import NetworkClient from \"./Network.NetworkClient\";\r\nimport OutPacket from \"./Network.OutPacket\";\r\nimport NetworkListener from \"./Network.NetworkListener\";\r\nimport InPacket from \"./Network.InPacket\";\r\nimport cmd from \"./Network.Cmd\";\r\nimport App from \"../common/App\";\r\nimport Configs from \"../../../../Loading/src/Configs\";\r\nimport Utils from \"../common/Utils\";\r\n\r\nexport default class MiniGameNetworkClient2 extends NetworkClient {\r\n    private static instance: MiniGameNetworkClient2;\r\n\r\n    private listeners: Array<NetworkListener> = new Array<NetworkListener>();\r\n    private isLogin = false;\r\n    private onLogined: () => void = null;\r\n\r\n    private intervalPing: number = -1;\r\n\r\n    public static getInstance(): MiniGameNetworkClient2 {\r\n        if (this.instance == null) {\r\n            this.instance = new MiniGameNetworkClient2();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.isUseWSS = Configs.App.USE_WSS;\r\n    }\r\n\r\n    public checkConnect(onLogined: () => void = null) {\r\n         //Utils.Log(\"checkConnect MiniGame\");\r\n        this.onLogined = onLogined;\r\n        if (this.ws != null && this.ws.readyState == WebSocket.CONNECTING) return;\r\n        if (!this.isConnected()) {\r\n            // App.instance.showErrLoading(\"Đang vào game...\");\r\n            this.connect();\r\n            return;\r\n        }\r\n        if (this.isLogin && this.onLogined != null) this.onLogined();\r\n    }\r\n\r\n    protected onError(ev: Event) {\r\n        App.instance.showLoading(false);\r\n         //Utils.Log(\"onError minigame:\" + JSON.stringify(ev));\r\n    }\r\n\r\n    connect() {\r\n        super.connect(Configs.App.HOST_MINIGAME2.host, Configs.App.HOST_MINIGAME2.port);\r\n         //Utils.Log(\"Port Mini Game:\"+ Configs.App.HOST_MINIGAME2.port);\r\n    }\r\n\r\n    protected onOpen(ev: Event) {\r\n        super.onOpen(ev);\r\n        this.send(new cmd.SendLogin(Configs.Login.Nickname, Configs.Login.AccessToken));\r\n         //Utils.Log(\"minigame connected:\"+Configs.Login.AccessToken);\r\n        App.instance.showLoading(false);\r\n        this.intervalPing = setInterval(() => this.ping(), 1);\r\n        this.ping();\r\n    }\r\n\r\n    protected onMessage(ev: MessageEvent) {\r\n        var data = new Uint8Array(ev.data);\r\n        for (var i = 0; i < this.listeners.length; i++) {\r\n            var listener = this.listeners[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback(data);\r\n            } else {\r\n                this.listeners.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n\r\n        let inpacket = new InPacket(data);\r\n        switch (inpacket.getCmdId()) {\r\n            case cmd.Code.LOGIN:\r\n                this.isLogin = true;\r\n                if (this.onLogined != null) {\r\n                     //Utils.Log(\"Logined\");\r\n                    this.onLogined();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    public addListener(callback: (data: Uint8Array) => void, target: cc.Component) {\r\n        this.listeners.push(new NetworkListener(target, callback));\r\n    }\r\n\r\n    protected onClose(ev: Event) {\r\n         //Utils.Log(\"onclose minigame\");\r\n        super.onClose(ev);\r\n    }\r\n\r\n    public send(packet: OutPacket) {\r\n        for (var b = new Int8Array(packet._length), c = 0; c < packet._length; c++)\r\n            b[c] = packet._data[c];\r\n        if (this.ws != null && this.isConnected())\r\n            this.ws.send(b.buffer);\r\n    }\r\n\r\n    public sendCheck(packet: OutPacket) {\r\n        this.checkConnect(() => {\r\n            this.send(packet);\r\n        });\r\n    }\r\n    public ping() {\r\n        if (this.ws != null && this.ws.readyState !== WebSocket.OPEN) {\r\n            //  //Utils.Log(\"WebSocket minigame instance wasn't ready...\");\r\n        };\r\n    }\r\n}\r\n","import NetworkClient from \"./Network.NetworkClient\";\r\nimport OutPacket from \"./Network.OutPacket\";\r\nimport NetworkListener from \"./Network.NetworkListener\";\r\nimport InPacket from \"./Network.InPacket\";\r\nimport cmd from \"./Network.Cmd\";\r\nimport App from \"../common/App\";\r\nimport Configs from \"../../../../Loading/src/Configs\";\r\nimport Utils from \"../common/Utils\";\r\n\r\nexport default class MiniGameNetworkClient extends NetworkClient {\r\n    private static instance: MiniGameNetworkClient;\r\n\r\n    private listeners: Array<NetworkListener> = new Array<NetworkListener>();\r\n    private isLogin = false;\r\n    private onLogined: () => void = null;\r\n\r\n    private intervalPing: number = -1;\r\n\r\n    public static getInstance(): MiniGameNetworkClient {\r\n        if (this.instance == null) {\r\n            this.instance = new MiniGameNetworkClient();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.isUseWSS = Configs.App.USE_WSS;\r\n    }\r\n\r\n    public checkConnect(onLogined: () => void = null) {\r\n         //Utils.Log(\"checkConnect MiniGame\");\r\n        this.onLogined = onLogined;\r\n        if (this.ws != null && this.ws.readyState == WebSocket.CONNECTING) return;\r\n        if (!this.isConnected()) {\r\n            // App.instance.showErrLoading(\"Đang vào game...\");\r\n            this.connect();\r\n            return;\r\n        }\r\n        if (this.isLogin && this.onLogined != null) this.onLogined();\r\n    }\r\n\r\n    protected onError(ev: Event) {\r\n        App.instance.showLoading(false);\r\n         //Utils.Log(\"onError minigame:\" + JSON.stringify(ev));\r\n    }\r\n\r\n    connect() {\r\n        super.connect(Configs.App.HOST_MINIGAME.host, Configs.App.HOST_MINIGAME.port);\r\n         //Utils.Log(\"Port Mini Game:\"+ Configs.App.HOST_MINIGAME.port);\r\n    }\r\n\r\n    protected onOpen(ev: Event) {\r\n        super.onOpen(ev);\r\n        this.send(new cmd.SendLogin(Configs.Login.Nickname, Configs.Login.AccessToken));\r\n         //Utils.Log(\"minigame connected:\"+Configs.Login.AccessToken);\r\n        App.instance.showLoading(false);\r\n        this.intervalPing = setInterval(() => this.ping(), 1);\r\n        this.ping();\r\n    }\r\n\r\n    protected onMessage(ev: MessageEvent) {\r\n        var data = new Uint8Array(ev.data);\r\n        for (var i = 0; i < this.listeners.length; i++) {\r\n            var listener = this.listeners[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback(data);\r\n            } else {\r\n                this.listeners.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n\r\n        let inpacket = new InPacket(data);\r\n        switch (inpacket.getCmdId()) {\r\n            case cmd.Code.LOGIN:\r\n                this.isLogin = true;\r\n                if (this.onLogined != null) {\r\n                     //Utils.Log(\"Logined\");\r\n                    this.onLogined();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    public addListener(callback: (data: Uint8Array) => void, target: cc.Component) {\r\n        this.listeners.push(new NetworkListener(target, callback));\r\n    }\r\n\r\n    protected onClose(ev: Event) {\r\n         //Utils.Log(\"onclose minigame\");\r\n        super.onClose(ev);\r\n    }\r\n\r\n    public send(packet: OutPacket) {\r\n        for (var b = new Int8Array(packet._length), c = 0; c < packet._length; c++)\r\n            b[c] = packet._data[c];\r\n        if (this.ws != null && this.isConnected())\r\n            this.ws.send(b.buffer);\r\n    }\r\n\r\n    public sendCheck(packet: OutPacket) {\r\n        this.checkConnect(() => {\r\n            this.send(packet);\r\n        });\r\n    }\r\n    public ping() {\r\n        if (this.ws != null && this.ws.readyState !== WebSocket.OPEN) {\r\n            //  //Utils.Log(\"WebSocket minigame instance wasn't ready...\");\r\n        };\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    text: string = 'hello';\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import App from \"./Script/common/App\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nnamespace lobby {\r\n    @ccclass\r\n    export class MiniGame extends cc.Component {\r\n\r\n        @property(cc.Node)\r\n        gamePlay: cc.Node = null;\r\n        @property\r\n        nameGame: string = \"\";\r\n        onLoad() {\r\n            this.gamePlay.on(cc.Node.EventType.TOUCH_START, (event: cc.Event.EventTouch) => {\r\n                App.instance.showBgMiniGame(this.nameGame);\r\n            }, this);\r\n\r\n            this.gamePlay.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\r\n                var pos = this.gamePlay.position;\r\n                pos.x += event.getDeltaX();\r\n                pos.y += event.getDeltaY();\r\n                this.gamePlay.position = pos;\r\n            }, this);\r\n        }\r\n\r\n        reOrder() {\r\n            // var zIndex = 0;\r\n            // for (var i = 0; i < this.node.parent.childrenCount; i++) {\r\n            //     let node = this.node.parent.children[i];\r\n            //     if (node != this.node) {\r\n            //         node.zIndex = zIndex++;\r\n            //     }\r\n            // }\r\n            // this.node.zIndex = zIndex++;\r\n            // App.instance.showBgMiniGame(this.nameGame);\r\n            this.node.setSiblingIndex(this.node.parent.childrenCount);\r\n        }\r\n\r\n        show() {\r\n            this.reOrder();\r\n            this.node.active = true;\r\n            this.gamePlay.stopAllActions();\r\n            this.gamePlay.scale = 0.8;\r\n            // this.gamePlay.runAction(cc.sequence(\r\n            //     cc.scaleTo(0.3, 1),\r\n            //     cc.callFunc(() => {\r\n            //         this._onShowed();\r\n            //     })\r\n            // ));\r\n            cc.tween(this.gamePlay).to(0.3, { scale: 1.0, opacity: 255 }, { easing: cc.easing.backOut }).call(() => {\r\n                this._onShowed();\r\n            }).start();\r\n        }\r\n\r\n        _onShowed() {\r\n            //  //Utils.Log(\"_onShowed\");\r\n        }\r\n\r\n        dismiss() {\r\n            this.gamePlay.stopAllActions();\r\n            // this.gamePlay.runAction(cc.sequence(\r\n            //     cc.scaleTo(0.3, 0),\r\n            //     cc.callFunc(() => {\r\n            //         this._onDismissed();\r\n            //     })\r\n            // ));\r\n            cc.tween(this.gamePlay).to(0.3, { scale: 0.8, opacity: 150 }, { easing: cc.easing.backIn }).call(() => {\r\n                this._onDismissed();\r\n            }).start();\r\n        }\r\n\r\n        _onDismissed() {\r\n            //  //Utils.Log(\"_onDismissed\");\r\n            this.node.active = false;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default lobby.MiniGame;","import LanguageLanguageManager from \"./Language.LanguageManager\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nexport enum TYPE_OBJECT {\r\n    LABEL,\r\n    SPRITE,\r\n    SKELETON\r\n}\r\n@ccclass\r\nexport default class MultiLanguage extends cc.Component {\r\n\r\n    @property({ type: cc.Enum(TYPE_OBJECT) })\r\n    TYPE: TYPE_OBJECT = TYPE_OBJECT.LABEL;\r\n    @property({\r\n        visible: function (this: MultiLanguage) { return this.TYPE == TYPE_OBJECT.LABEL }\r\n    })\r\n    id: string = '';\r\n    @property({\r\n        visible: function (this: MultiLanguage) { return this.TYPE == TYPE_OBJECT.LABEL }\r\n    })\r\n    isAddColon: boolean = false;\r\n\r\n    // @property({\r\n    //     visible: function (this: MultiLanguage) { return this.TYPE == TYPE_OBJECT.SKELETON }\r\n    // })\r\n    // BundleName: string = '';\r\n    @property({\r\n        visible: function (this: MultiLanguage) { return this.TYPE == TYPE_OBJECT.SKELETON }\r\n    })\r\n    BundleName: string = '';\r\n\r\n    @property({\r\n        visible: function (this: MultiLanguage) { return this.TYPE == TYPE_OBJECT.SKELETON },\r\n        type: sp.Skeleton\r\n    })\r\n    skeletonNode: sp.Skeleton = null\r\n    @property({\r\n        visible: function (this: MultiLanguage) { return this.TYPE == TYPE_OBJECT.SKELETON },\r\n        type: [cc.String]\r\n    })\r\n    animationName: string[] = [];\r\n\r\n    @property({\r\n        visible: function (this: MultiLanguage) { return this.TYPE == TYPE_OBJECT.SPRITE },\r\n        type: [cc.SpriteFrame]\r\n    })\r\n    spriteFrames: cc.SpriteFrame[] = [];\r\n\r\n    @property({\r\n        visible: function (this: MultiLanguage) { return this.TYPE == TYPE_OBJECT.SPRITE },\r\n        type: cc.Sprite\r\n    })\r\n    sprite: cc.Sprite = null;\r\n\r\n    @property({\r\n        visible: function (this: MultiLanguage) { return this.TYPE == TYPE_OBJECT.LABEL },\r\n    })\r\n    @property({\r\n        visible: function (this: MultiLanguage) { return this.TYPE == TYPE_OBJECT.LABEL }\r\n    })\r\n    isUpperCase: boolean = false;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n    }\r\n\r\n    start() {\r\n        LanguageLanguageManager.instance.addListener(() => {\r\n            this.updateLanguage();\r\n        }, this);\r\n\r\n    }\r\n    onEnable() {\r\n        this.updateLanguage();\r\n    }\r\n    updateLanguage() {\r\n        if (this.TYPE == TYPE_OBJECT.LABEL) {\r\n            this.updateText();\r\n        } else if (this.TYPE == TYPE_OBJECT.SPRITE) {\r\n            this.updateSprite();\r\n        } else if (this.TYPE == TYPE_OBJECT.SKELETON) {\r\n            this.updateSkeleton();\r\n        }\r\n    }\r\n    private updateText() {\r\n        let str = LanguageLanguageManager.instance.getString(this.id);\r\n        if (str != null && str.trim().length == 0) {\r\n            return;\r\n        }\r\n        if (this.isUpperCase) {\r\n            str = str.toUpperCase();\r\n        }\r\n        if (this.isAddColon)\r\n            str = str + \":\";\r\n        this.getComponent(cc.Label).string = str;\r\n    }\r\n    updateSprite() {\r\n        if (this.sprite == null) {\r\n            this.sprite = this.getComponent(cc.Sprite);\r\n        }\r\n        switch (LanguageLanguageManager.instance.languageCode) {\r\n            case \"vi\":\r\n                this.sprite.spriteFrame = this.spriteFrames[0];\r\n                break;\r\n            case \"en\":\r\n                this.sprite.spriteFrame = this.spriteFrames[1];\r\n                break;\r\n        }\r\n    }\r\n    updateSkeleton() {\r\n        switch (LanguageLanguageManager.instance.languageCode) {\r\n            case \"vi\":\r\n                this.skeletonNode.setAnimation(0, this.animationName[0], true);\r\n                break;\r\n            case \"en\":\r\n                this.skeletonNode.setAnimation(0, this.animationName[1], true);\r\n                break;\r\n        }\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import cmd from \"./Lobby.Cmd\";\r\nimport Tween from \"./Script/common/Tween\";\r\nimport InPacket from \"./Script/networks/Network.InPacket\";\r\nimport SlotNetworkClient from \"./Script/networks/SlotNetworkClient\";\r\n\r\nvar GAME_INDEX = {\r\n    ANGRY: 0,\r\n    BITCOIN: 1,\r\n    CHIEMTINH: 2,\r\n    THETHAO: 3,\r\n    THANTAI: 4,\r\n    DUAXE: 5\r\n}\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MutipleJackpot extends cc.Component {\r\n\r\n    @property([cc.Label])\r\n    lbJackpot: cc.Label[] = [];\r\n    @property([cc.SpriteFrame])\r\n    sprBg: cc.SpriteFrame[] = [];\r\n    @property(cc.Node)\r\n    Bg: cc.Node = null;\r\n\r\n    @property([cc.Vec2])\r\n    position_lb_ANGRY: cc.Vec2[] = [];\r\n    @property([cc.Vec2])\r\n    position_lb_BITCOIN: cc.Vec2[] = [];\r\n    @property([cc.Vec2])\r\n    position_lb_CHIEMTINH: cc.Vec2[] = [];\r\n    @property([cc.Vec2])\r\n    position_lb_EURO: cc.Vec2[] = [];\r\n    @property([cc.Vec2])\r\n    position_lb_THANTAI: cc.Vec2[] = [];\r\n    @property([cc.Vec2])\r\n    position_lb_DUAXE: cc.Vec2[] = [];\r\n    @property([cc.Vec2])\r\n    position_init: cc.Vec2[] = [];\r\n    listPosLb = [];\r\n    gameType = \"\";\r\n    dataJPGame = null;\r\n    // LIFE-CYCLE CALLBACKS:\r\n    /*name game :\r\n    spartans-Thantai\r\n    BENLEY:bitcoin\r\n    audition:duaxe\r\n    maybach:thethao\r\n    tamhung:chimdien\r\n    chiemtinh:chiemtinh\r\n    \r\n    */\r\n\r\n    onLoad() {\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, (touch: cc.Event.EventTouch) => {\r\n            this.node.setPosition(this.node.position.add(cc.v3(touch.getDeltaX(), touch.getDeltaY(), 0)));\r\n        })\r\n    }\r\n    setInfo(gametype) {\r\n        this.gameType = gametype;\r\n        switch (gametype) {\r\n            case \"ANGRY\":\r\n                this.listPosLb = this.position_lb_ANGRY;\r\n                this.Bg.getComponent(cc.Sprite).spriteFrame = this.sprBg[GAME_INDEX.ANGRY]\r\n                this.node.setPosition(this.position_init[GAME_INDEX.ANGRY])\r\n                break;\r\n            case \"BITCOIN\":\r\n                this.listPosLb = this.position_lb_BITCOIN;\r\n                this.Bg.getComponent(cc.Sprite).spriteFrame = this.sprBg[GAME_INDEX.BITCOIN]\r\n                this.node.setPosition(this.position_init[GAME_INDEX.BITCOIN])\r\n                break;\r\n            case \"CHIEMTINH\":\r\n                this.listPosLb = this.position_lb_CHIEMTINH;\r\n                this.Bg.getComponent(cc.Sprite).spriteFrame = this.sprBg[GAME_INDEX.CHIEMTINH]\r\n                this.node.setPosition(this.position_init[GAME_INDEX.CHIEMTINH])\r\n                break;\r\n            case \"THETHAO\":\r\n                this.listPosLb = this.position_lb_EURO;\r\n                this.Bg.getComponent(cc.Sprite).spriteFrame = this.sprBg[GAME_INDEX.THETHAO];\r\n                this.node.setPosition(this.position_init[GAME_INDEX.THETHAO])\r\n                break;\r\n            case \"THANTAI\":\r\n                this.listPosLb = this.position_lb_THANTAI;\r\n                this.Bg.getComponent(cc.Sprite).spriteFrame = this.sprBg[GAME_INDEX.THANTAI];\r\n                this.node.setPosition(this.position_init[GAME_INDEX.THANTAI]);\r\n                break;\r\n            case \"DUAXE\":\r\n                this.listPosLb = this.position_lb_DUAXE;\r\n                this.Bg.getComponent(cc.Sprite).spriteFrame = this.sprBg[GAME_INDEX.DUAXE]\r\n                this.node.setPosition(this.position_init[GAME_INDEX.DUAXE])\r\n                break;\r\n        }\r\n        for (let i = 0; i < this.listPosLb.length; i++) {\r\n            this.lbJackpot[i].node.setPosition(cc.v2(this.listPosLb[i].x-7, this.listPosLb[i].y + 10));\r\n        }\r\n        SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n\r\n        SlotNetworkClient.getInstance().addListener((data) => {\r\n            let inpacket = new InPacket(data);\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.UPDATE_JACKPOT_SLOTS:\r\n                    {\r\n                        let res = new cmd.ResUpdateJackpotSlots(data);\r\n                        let resJson = JSON.parse(res.pots);\r\n                        //  //Utils.Log(\"UPDATE_JACKPOT_SLOTS:\" + JSON.stringify(resJson['maybach']));\r\n                        //  //Utils.Log(\"gametype=\"+this.gameType);\r\n                        switch (this.gameType) {\r\n                            case \"ANGRY\":\r\n                                this.dataJPGame = resJson['tamhung'];\r\n                                break;\r\n                            case \"BITCOIN\":\r\n                                this.dataJPGame = resJson['benley'];\r\n                                break;\r\n                            case \"CHIEMTINH\":\r\n                                this.dataJPGame = resJson['chiemtinh'];\r\n                                break;\r\n                            case \"THETHAO\":\r\n                                this.dataJPGame = resJson['maybach'];\r\n                                break;\r\n                            case \"THANTAI\":\r\n                                this.dataJPGame = resJson['spartan'];\r\n                                break;\r\n                            case \"DUAXE\":\r\n                                this.dataJPGame = resJson['audition'];\r\n                                break;\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n            //  //Utils.Log(\"dataJP==\", this.dataJPGame);\r\n            if(this.dataJPGame!=null){\r\n                Tween.numberTo(this.lbJackpot[0], this.dataJPGame['100']['p'], 3.0);\r\n                Tween.numberTo(this.lbJackpot[1], this.dataJPGame['1000']['p'], 3.0);\r\n                Tween.numberTo(this.lbJackpot[2], this.dataJPGame['10000']['p'], 3.0);\r\n            }\r\n        }, this);\r\n    }\r\n    start() {\r\n\r\n    }\r\n    onDestroy() {\r\n        SlotNetworkClient.getInstance().send(new cmd.ReqUnSubcribeHallSlot());\r\n    }\r\n    // update (dt) {}\r\n}\r\n","import InPacket from \"./Network.InPacket\";\r\nimport OutPacket from \"./Network.OutPacket\";\r\n\r\n\r\nexport namespace cmd {\r\n    export class Code {\r\n        static LOGIN = 1;\r\n    }\r\n\r\n    export class Login extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.LOGIN);\r\n        }\r\n\r\n        putData(nickname: string, accessToken: string) {\r\n            this.packHeader();\r\n            this.putString(nickname);\r\n            this.putString(accessToken);\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class SendLogin extends OutPacket {\r\n        constructor(nickname: string, accessToken: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.LOGIN);\r\n            this.packHeader();\r\n            this.putString(nickname);\r\n            this.putString(accessToken);\r\n            this.updateSize();\r\n            this.getData();\r\n        }\r\n    }\r\n}\r\nexport default cmd;\r\n","export default class InPacket {\r\n    private _pos = 0;\r\n    private _data: Uint8Array = new Uint8Array(0);\r\n    private _length = 0;\r\n    private _controllerId = 0;\r\n    private _cmdId = 0;\r\n    private _error = 0;\r\n\r\n    constructor(data: Uint8Array) {\r\n        this.init(data);\r\n    }\r\n\r\n    init(data: Uint8Array) {\r\n        this._pos = 0;\r\n        this._data = data;\r\n        this._length = data.length;\r\n        this._controllerId = this.parseByte();\r\n        this._cmdId = this.getShort();\r\n        this._error = this.parseByte()\r\n    }\r\n    getCmdId() {\r\n        return this._cmdId\r\n    }\r\n\r\n    getControllerId() {\r\n        return this._controllerId\r\n    }\r\n\r\n    getError() {\r\n        return this._error\r\n    }\r\n\r\n    parseByte() {\r\n        // cc.error(this._pos < this._length, \"parseByte:IndexOutOfBoundsException\");\r\n        return this._data[this._pos++]\r\n    }\r\n\r\n    getByte() {\r\n        return this.parseByte()\r\n    }\r\n\r\n    getBool() {\r\n        // cc.error(this._pos < this._length, \"getByte:IndexOutOfBoundsException \", this._pos, \",\", this._length);\r\n        return 0 < this._data[this._pos++]\r\n    }\r\n\r\n    getBytes(a) {\r\n        // cc.error(this._pos + a <= this._length, \"getBytes:IndexOutOfBoundsException\");\r\n        for (var b = [], c = 0; c < a; c++) b.push(this.parseByte());\r\n        return b\r\n    }\r\n\r\n    getShort() {\r\n        // cc.error(this._pos + 2 <= this._length, \"getShort:IndexOutOfBoundsException\");\r\n        if (this._pos + 2 > this._length) return 0;\r\n        var a = (this.parseByte() << 8) + (this.parseByte() & 255);\r\n        return 32767 < a ? a - 65536 :\r\n            a\r\n    }\r\n\r\n    getUnsignedShort() {\r\n        // cc.error(this._pos + 2 <= this._length, \"getUnsignedShort:IndexOutOfBoundsException\");\r\n        var a = (this.parseByte() & 255) << 8,\r\n            b = (this.parseByte() & 255) << 0;\r\n        return a + b\r\n    }\r\n\r\n    getInt() {\r\n        // cc.error(this._pos + 4 <= this._length, \"getInt:IndexOutOfBoundsException\");\r\n        return ((this.parseByte() & 255) << 24) + ((this.parseByte() & 255) << 16) + ((this.parseByte() & 255) << 8) + ((this.parseByte() & 255) << 0)\r\n    }\r\n\r\n    byteArrayToLong(a: Array<number>) {\r\n        var b = true,\r\n            c = 0,\r\n            d = 0;\r\n        255 == a[0] && (b = false);\r\n        if (b)\r\n            for (d = 0; 8 > d; d++) c = 256 * c + a[d];\r\n        else {\r\n            for (d = c = 1; 7 >= d; d++) c = 256 * c - a[d];\r\n            c = -c;\r\n        }\r\n        return c;\r\n    }\r\n\r\n    getLong() {\r\n        // cc.error(this._pos + 8 <= this._length, \"getLong:IndexOutOfBoundsException\");\r\n        for (var a = [], b = 0; 8 > b; b++) a[b] = this.parseByte();\r\n        return this.byteArrayToLong(a);\r\n    }\r\n\r\n    getDouble() {\r\n        // cc.error(this._pos + 8 <= this._length, \"getDouble:IndexOutOfBoundsException\");\r\n        for (var a = new ArrayBuffer(8), b = new Uint8Array(a), c = 7; 0 <= c; c--) b[7 - c] = this.parseByte();\r\n        return (new DataView(a)).getFloat64(0)\r\n    }\r\n\r\n    getCharArray() {\r\n        var a = this.getUnsignedShort();\r\n        return this.getBytes(a)\r\n    }\r\n\r\n    getString() {\r\n        var a = this.getCharArray();\r\n        var b = new Uint8Array(a.length);\r\n        for (var c = 0; c < a.length; c++) {\r\n            b[c] = parseInt(a[c], 10);\r\n        }\r\n        var s: string = String.fromCharCode.apply(null, b);\r\n        return decodeURIComponent(escape(s));\r\n    }\r\n\r\n    clean() {\r\n\r\n    }\r\n}","import Utils from \"../common/Utils\";\r\nimport NetworkListener from \"./Network.NetworkListener\";\r\n\r\nexport default class NetworkClient {\r\n    ws: WebSocket = null;\r\n    host: string = \"\";\r\n    port: number = 0;\r\n    isForceClose = false;\r\n    isUseWSS: boolean = false;\r\n    isAutoReconnect: boolean = true;\r\n    retryCount = 0;\r\n\r\n    _onOpenes: Array<NetworkListener> = [];\r\n    _onCloses: Array<NetworkListener> = [];\r\n\r\n    connect(host: string, port: number) {\r\n        //  //Utils.Log(\"start connect: \" + host + \":\" + port + \" =>\" + cc.url.raw(\"resources/raw/cacert.pem\"));\r\n        this.isForceClose = false;\r\n        this.host = host;\r\n        this.port = port;\r\n        if (this.ws == null) {\r\n\r\n            if (cc.sys.isBrowser) {\r\n                this.ws = new WebSocket(\"wss://\" + host + \":\" + port + \"/websocket\");\r\n            } else {\r\n                if (cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID) {\r\n                    this.ws = new WebSocket(\"wss://\" + host + \":\" + port + \"/websocket\", [], cc.url.raw(\"resources/raw/cacert.pem\"));\r\n                    this.ws.binaryType = \"arraybuffer\";\r\n                } else {\r\n                    this.ws = new WebSocket(\"wss://\" + host + \":\" + port + \"/websocket\");\r\n                }\r\n            }\r\n            this.ws.binaryType = \"arraybuffer\";\r\n            this.ws.onopen = this.onOpen.bind(this);\r\n            this.ws.onmessage = this.onMessage.bind(this);\r\n            this.ws.onerror = this.onError.bind(this);\r\n            this.ws.onclose = this.onClose.bind(this);\r\n\r\n        } else {\r\n            if (this.ws.readyState !== WebSocket.OPEN) {\r\n                this.ws.close();\r\n                this.ws = null;\r\n                this.connect(host, port);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onOpen(ev: Event) {\r\n         //Utils.Log(\"onOpen\");\r\n        this.retryCount = 0;\r\n        for (var i = 0; i < this._onOpenes.length; i++) {\r\n            var listener = this._onOpenes[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback(null);\r\n            } else {\r\n                this._onOpenes.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onMessage(ev: MessageEvent) {\r\n        //  //Utils.Log(\"onmessage: \" + ev.data);\r\n    }\r\n\r\n    protected onError(ev: Event) {\r\n         //Utils.Log(\"onError\");\r\n    }\r\n\r\n    protected onClose(ev: Event) {\r\n         //Utils.Log(\"onClose\");\r\n        for (var i = 0; i < this._onCloses.length; i++) {\r\n            var listener = this._onCloses[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback(null);\r\n            } else {\r\n                this._onCloses.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n        if (this.isAutoReconnect && !this.isForceClose) {\r\n            setTimeout(() => {\r\n                if (!this.isForceClose) this.connect(this.host, this.port);\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    addOnOpen(callback: () => void, target: cc.Component) {\r\n        this._onOpenes.push(new NetworkListener(target, callback));\r\n    }\r\n\r\n    addOnClose(callback: () => void, target: cc.Component) {\r\n        this._onCloses.push(new NetworkListener(target, callback));\r\n    }\r\n\r\n    close() {\r\n        this.isForceClose = true;\r\n        if (this.ws) {\r\n            this.ws.close();\r\n            this.ws = null;\r\n        }\r\n    }\r\n\r\n    isConnected() {\r\n        if (this.ws) {\r\n            return this.ws.readyState == WebSocket.OPEN;\r\n        }\r\n        return false;\r\n    }\r\n}","export default class NetworkListener {\r\n    target: cc.Component;\r\n    callback: (data: Uint8Array) => void;\r\n\r\n    constructor(target: cc.Component, callback: (data: Uint8Array) => void) {\r\n        this.target = target;\r\n        this.callback = callback;\r\n    }\r\n}","import PacketHeaderAnalyze from \"./PacketHeaderAnalyze\";\r\n\r\nexport default class OutPacket {\r\n    static INDEX_SIZE_PACKET = 1;\r\n    _controllerId: number = 1;\r\n    _cmdId: number = 0;\r\n    _data: Array<number> = new Array<number>();\r\n    _capacity: Array<number> = new Array<number>();\r\n    _length: number = 0;\r\n    _pos: number = 0;\r\n    _isPackedHeader: boolean = false;\r\n\r\n    setCmdId(cmdId: number) {\r\n        this._cmdId = cmdId\r\n    }\r\n\r\n    setControllerId(controllerId: number) {\r\n        this._controllerId = controllerId;\r\n    }\r\n\r\n    initData(data) {\r\n        this._data = [data];\r\n        this._capacity = data\r\n    }\r\n\r\n    reset() {\r\n        this._length = this._pos = 0;\r\n        this._isPackedHeader = false;\r\n    }\r\n\r\n    packHeader() {\r\n        if (!this._isPackedHeader) {\r\n            this._isPackedHeader = !0;\r\n            var a = PacketHeaderAnalyze.genHeader(!1, !1);\r\n            this.putByte(a);\r\n            this.putUnsignedShort(this._length);\r\n            this.putByte(this._controllerId);\r\n            this.putShort(this._cmdId)\r\n        }\r\n    }\r\n\r\n    putByte(a) {\r\n        this._data[this._pos++] = a;\r\n        this._length = this._pos;\r\n        return this\r\n    }\r\n\r\n    putByteArray(a) {\r\n        this.putShort(a.length);\r\n        this.putBytes(a);\r\n        return this\r\n    }\r\n\r\n    putBytes(a) {\r\n        for (var b = 0; b < a.length; b++) this.putByte(a[b]);\r\n        return this\r\n    }\r\n\r\n    putShort(a) {\r\n        this.putByte(a >> 8 & 255);\r\n        this.putByte(a >> 0 & 255);\r\n        return this\r\n    }\r\n\r\n    putUnsignedShort(a) {\r\n        this.putByte(a >> 8);\r\n        this.putByte(a >> 0);\r\n        return this\r\n    }\r\n\r\n    putInt(a) {\r\n        this.putByte(a >> 24 & 255);\r\n        this.putByte(a >> 16 & 255);\r\n        this.putByte(a >> 8 & 255);\r\n        this.putByte(a >> 0 & 255);\r\n        return this\r\n    }\r\n\r\n    putLong(a) {\r\n        0 > a && console.log(\"Dev\");\r\n        for (var b = [], c = 0; 8 > c; c++) b[c] = a & 255, a = Math.floor(a / 256);\r\n        for (a = 7; 0 <= a; a--) this.putByte(b[a])\r\n    }\r\n\r\n    putDouble(a) {\r\n        this.putByte(a >> 24 & 255);\r\n        this.putByte(a >> 16 & 255);\r\n        this.putByte(a >> 8 & 255);\r\n        this.putByte(a >> 0 & 255);\r\n        this.putByte(a >> 24 & 255);\r\n        this.putByte(a >> 16 & 255);\r\n        this.putByte(a >> 8 & 255);\r\n        this.putByte(a >> 0 & 255);\r\n        return this\r\n    }\r\n    putString(a) {\r\n        this.putByteArray(this._stringConvertToByteArray(a));\r\n        return this\r\n    }\r\n\r\n    updateUnsignedShortAtPos(a, b) {\r\n        this._data[b] = a >> 8;\r\n        this._data[b + 1] = a >> 0\r\n    }\r\n\r\n    updateSize() {\r\n        this.updateUnsignedShortAtPos(this._length - 3, OutPacket.INDEX_SIZE_PACKET);\r\n    }\r\n\r\n    getData() {\r\n        return this._data.slice(0, this._length)\r\n    }\r\n\r\n    _stringConvertToByteArray(a) {\r\n        if (null == a) return null;\r\n        for (var b = new Uint8Array(a.length), c = 0; c < a.length; c++) b[c] = a.charCodeAt(c);\r\n        return b\r\n    }\r\n\r\n    clean() {\r\n\r\n    }\r\n}","\r\n\r\nimport Configs from '../../../../Loading/src/Configs';\r\nimport * as SockJS from '../../../../Loading/src/Sockjs.min';\r\n// import * as SockJS from '../../../../Loading/src/sockjs114';\r\nimport * as Stomp from '../../../../Loading/src/stomp2'\r\n\r\n\r\nimport NetworkListener from './Network.NetworkListener';\r\nimport App from '../common/App';\r\nimport Utils from '../common/Utils';\r\n\r\n\r\nexport default class SockJsClient {\r\n\r\n    ws: WebSocket = null;\r\n    stompClient: Stomp = null;\r\n    host: string = \"\";\r\n    apiSub = \"\";\r\n    port: number = 0;\r\n    isForceClose = false;\r\n    isConnected = false;\r\n    isLogin = false;\r\n    isUseWSS: boolean = false;\r\n    isAutoReconnect: boolean = true;\r\n    retryCount = 0;\r\n    retrySubCount = 0;\r\n    token = \"\";\r\n    _onOpenes: Array<NetworkListener> = [];\r\n    _onCloses: Array<NetworkListener> = [];\r\n    listSubChannel = [];\r\n\r\n    connect(host: string, apiSub) {\r\n        this.token = Configs.Login.AccessTokenSockJs;\r\n        this.isForceClose = false;\r\n        this.host = host;\r\n        this.apiSub = apiSub;\r\n        if (this.ws == null) {\r\n            if (cc.sys.isBrowser) {\r\n                 //Utils.Log(\"Start Connect Game SockJs:\" + host);\r\n                this.ws = new SockJS(host);\r\n            } else {\r\n                host = host.replace(\"https\", \"http\");\r\n                 //Utils.Log(\"Start Connect Game SockJs:\" + host);\r\n                this.ws = new SockJS(host);\r\n\r\n            }\r\n            this.stompClient = Stomp.Stomp.over(this.ws);\r\n            var headers = {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + Configs.Login.AccessTokenSockJs\r\n            };\r\n            var _this = this;\r\n            this.stompClient.connect(headers, () => {\r\n                 //Utils.Log(\"STOMP CONNECTED & SUBSCRIBE\");\r\n                _this.isConnected = true;\r\n                this.onConnected();\r\n                this.subscribe(apiSub);\r\n            });\r\n            this.ws.onCustomMessage = this.onCustomMessage.bind(this);\r\n        } else {\r\n            if (this.ws.readyState !== WebSocket.OPEN) {\r\n                this.ws.close();\r\n                this.ws = null;\r\n\r\n                this.isConnected = false;\r\n                this.connect(host, apiSub);\r\n            }\r\n        }\r\n    }\r\n    onConnected() {\r\n         //Utils.Log(\"onConnected Stomp!\");\r\n    }\r\n    reconnect() {\r\n        this.connect(this.host, this.apiSub);\r\n    }\r\n    subscribe(destination) {\r\n        if (this.isConnected) {\r\n            this.stompClient.subscribe(destination, (data) => {\r\n                this.onMessage(data)\r\n            });\r\n        }\r\n    }\r\n    unSubscribe(idSub) {\r\n        if (this.isConnected) {\r\n            this.stompClient.unsubscribe(idSub);\r\n        }\r\n    }\r\n    addOnOpen(callback: () => void, target: cc.Component) {\r\n        this._onOpenes.push(new NetworkListener(target, callback));\r\n    }\r\n    addOnClose(callback: () => void, target: cc.Component) {\r\n        this._onCloses.push(new NetworkListener(target, callback));\r\n    }\r\n    onCustomMessage(msg, data = null) {\r\n         //Utils.Log(\"onCustomMessage:\" + msg);\r\n    }\r\n    checkSubChannel(id) {\r\n        let isSub = false;\r\n        for (let i = 0; i < this.listSubChannel.length; i++) {\r\n            if (this.listSubChannel[i].id == id) {\r\n                isSub = true;\r\n                break;\r\n            }\r\n        }\r\n        return isSub;\r\n    }\r\n    protected onOpen(ev: Event) {\r\n        this.isConnected = true;\r\n         //Utils.Log(\"onOpen SOCKJS\");\r\n        for (var i = 0; i < this._onOpenes.length; i++) {\r\n            var listener = this._onOpenes[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback(null);\r\n            } else {\r\n                this._onOpenes.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n    protected onMessage(ev: MessageEvent) {\r\n         //Utils.Log(\"onmessage: \" + ev.data);\r\n    }\r\n\r\n    protected onError(ev: Event) {\r\n         //Utils.Log(\"onError SOCKJS:\", JSON.stringify(ev));\r\n    }\r\n\r\n    protected onClose(ev) {\r\n        this.isConnected = false;\r\n        App.instance.showToast(App.instance.getTextLang('txt_check_connect'));\r\n        for (var i = 0; i < this._onCloses.length; i++) {\r\n            var listener = this._onCloses[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback(null);\r\n            } else {\r\n                this._onCloses.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n         //Utils.Log(\"onClose SOCKJS\");\r\n\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NodeScaler extends cc.Component {\r\n\r\n    @property\r\n    designResolution: cc.Size = new cc.Size(1280, 720);\r\n    @property\r\n    fitX: boolean = false;\r\n    @property\r\n    fitY: boolean = false;\r\n\r\n    lastWitdh: number = 0;\r\n    lastHeight: number = 0;\r\n\r\n    canvas: cc.Canvas = null;\r\n\r\n    start() {\r\n        this.canvas = this.getCanvas();\r\n        this.updateSize();\r\n    }\r\n\r\n    update(dt: number) {\r\n        this.updateSize();\r\n    }\r\n\r\n    updateSize() {\r\n        var frameSize = cc.view.getFrameSize();\r\n        if (this.lastWitdh !== frameSize.width || this.lastHeight !== frameSize.height) {\r\n\r\n            this.lastWitdh = frameSize.width;\r\n            this.lastHeight = frameSize.height;\r\n\r\n            if (this.canvas != null && this.fitX && !this.fitY) {\r\n                this.node.scaleX = this.canvas.designResolution.width / this.designResolution.width;\r\n            } else if (this.canvas != null && this.fitY && !this.fitX) {\r\n                this.node.scaleY = this.canvas.designResolution.height / this.designResolution.height;\r\n            } else {\r\n                var frameScale = frameSize.width / frameSize.height;\r\n                var designScale = this.designResolution.width / this.designResolution.height;\r\n\r\n                if (this.designResolution.width / this.designResolution.height > frameSize.width / frameSize.height) {\r\n                    this.node.setScale(designScale / frameScale);\r\n                } else {\r\n                    this.node.setScale(frameScale / designScale);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getCanvas(node: cc.Node = null): cc.Canvas {\r\n        if (node == null) {\r\n            node = this.node;\r\n        }\r\n        if (node.parent != null) {\r\n            let canvas = node.parent.getComponent(cc.Canvas);\r\n            if (canvas != null) {\r\n                return canvas;\r\n            } else {\r\n                return this.getCanvas(node.parent);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NumberUpdater extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n    @property(cc.Integer)\r\n    public step = 0.01;\r\n    @property(cc.Integer)\r\n    private _currentNumber: number = 0;\r\n    public get currentNumber() {\r\n        return this._currentNumber;\r\n    }\r\n\r\n    public set currentNumber(value: number) {\r\n        this._currentNumber = value;\r\n        this.updateLabel();\r\n    }\r\n\r\n    public preprocessingMoney (money1:number | string) : string {\r\n        money1 = parseInt(money1 + '');\r\n        let money = Math.abs(money1) + '';\r\n        let string = this.preprocessingString(money);\r\n        if (money1 < 0) {\r\n            string = \"-\" + string;\r\n        }\r\n        return string;\r\n    }\r\n\r\n    public preprocessingString (money: string) {\r\n        if (money.length < 4) {\r\n            return money + \"\";\r\n        }\r\n        let string = \"\";\r\n        let count = 1;\r\n        for (let i = 0; i < money.length; i++) {\r\n            string = money[money.length - 1 - i] + string;\r\n            if (count % 3 === 0 && count !== money.length) {\r\n                string = \".\" + string;\r\n            }\r\n            count++;\r\n        }\r\n        return string;\r\n    }\r\n\r\n    /***\r\n     * @type function(str: string)=> string\r\n     */\r\n    private _formatFunc = this.preprocessingMoney;\r\n    set formatFunc(formatFunc: (str: string) => string) {\r\n        this._formatFunc = formatFunc;\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.formatFunc = this.preprocessingString;\r\n    }\r\n\r\n    protected start(): void {\r\n        if (!this.label) {\r\n            this.label = this.getComponent(cc.Label);\r\n        }\r\n        // this.setNumber(20, 0.25);\r\n    }\r\n\r\n    public setNumber(number: number, time: number, stepTime?: number) {\r\n        if (time) {\r\n            this.unscheduleAllCallbacks();\r\n            if (this.currentNumber === number) {\r\n                return;\r\n            }\r\n            if (stepTime) {\r\n                this.step = stepTime;\r\n            }\r\n            let interval = this.step;\r\n            let repeat = Math.floor(time / this.step);\r\n            if (this.currentNumber > number) {\r\n                this.currentNumber = 0;\r\n            }\r\n            let distNumber = Math.ceil((number - this.currentNumber) / repeat);\r\n            if (distNumber <= 0) {\r\n                distNumber = 1;\r\n            }\r\n            this.schedule(function () {\r\n                this.currentNumber += distNumber;\r\n                if (this.currentNumber > number) {\r\n                    this.currentNumber = number;\r\n                    this.unscheduleAllCallbacks();\r\n                }\r\n            }.bind(this), interval, repeat, 0);\r\n        } else {\r\n            this.currentNumber = number;\r\n        }\r\n    }\r\n\r\n    updateLabel() {\r\n        if (cc.isValid(this.label)) {\r\n            if (this._formatFunc) {\r\n                this.label.string = '' + this._formatFunc(this.currentNumber + '');\r\n            } else {\r\n                this.label.string = '' + this.currentNumber;\r\n            }\r\n        } else {\r\n        //    cc.warn('this.label is not valid or null or undefined');\r\n        }\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        this.unscheduleAllCallbacks();\r\n    }\r\n}\r\n","namespace Network {\r\n    export class PacketHeaderAnalyze {\r\n        static BIT_IS_BINARY_INDEX = 7;\r\n        static BIT_IS_ENCRYPT_INDEX = 6;\r\n        static BIT_IS_COMPRESS_INDEX = 5;\r\n        static BIT_IS_BLUE_BOXED_INDEX = 4;\r\n        static BIT_IS_BIG_SIZE_INDEX = 3;\r\n        static BYTE_PACKET_SIZE_INDEX = 1;\r\n        static BIG_HEADER_SIZE = 5;\r\n        static NORMAL_HEADER_SIZE = 3;\r\n\r\n        static getDataSize(a) {\r\n            return this.isBigSize(a) ? this.getIntAt(a, this.BYTE_PACKET_SIZE_INDEX) : this.getUnsignedShortAt(a, this.BYTE_PACKET_SIZE_INDEX);\r\n        }\r\n        static getCmdIdFromData(a) {\r\n            return this.getShortAt(a, 1);\r\n        }\r\n        static isBigSize(a) {\r\n            return this.getBit(a[0], this.BIT_IS_BIG_SIZE_INDEX);\r\n        }\r\n        static isCompress(a) {\r\n            return this.getBit(a[0], this.BIT_IS_COMPRESS_INDEX);\r\n        }\r\n        static getValidSize(a) {\r\n            var b = 0,\r\n                c = 0;\r\n            if (this.isBigSize(a)) {\r\n                if (length < this.BIG_HEADER_SIZE) return -1;\r\n                b = this.getIntAt(a,\r\n                    this.BYTE_PACKET_SIZE_INDEX);\r\n                c = this.BIG_HEADER_SIZE\r\n            } else {\r\n                if (length < this.NORMAL_HEADER_SIZE) return -1;\r\n                b = this.getUnsignedShortAt(a, this.BYTE_PACKET_SIZE_INDEX);\r\n                c = this.NORMAL_HEADER_SIZE;\r\n            }\r\n            return b + c\r\n        }\r\n        static getBit(a, b) {\r\n            return 0 != (a & 1 << b)\r\n        }\r\n        static genHeader(a, b) {\r\n            var c;\r\n            c = this.setBit(0, 7, !0);\r\n            c = this.setBit(c, 6, !1);\r\n            c = this.setBit(c, 5, b);\r\n            c = this.setBit(c, 4, !0);\r\n            return c = this.setBit(c, 3, a);\r\n        }\r\n        static setBit(a, b, c) {\r\n            return c ? a | 1 << b : a & ~(1 << b);\r\n        }\r\n        static getIntAt(a, b) {\r\n            return ((a[b] & 255) << 24) + ((a[b + 1] & 255) << 16) + ((a[b + 2] & 255) << 8) + ((a[b + 3] & 255) << 0);\r\n        }\r\n        static getUnsignedShortAt(a, b) {\r\n            return ((a[b] & 255) << 8) + ((a[b + 1] & 255) << 0);\r\n        }\r\n        static getShortAt(a, b) {\r\n            return (a[b] << 8) + (a[b + 1] & 255);\r\n        }\r\n    }\r\n}\r\nexport default Network.PacketHeaderAnalyze;","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nvar TYPE = {\r\n    CASHIN: 0,\r\n    CASHOUT: 1\r\n}\r\n@ccclass\r\nexport default class PopupConfirmTransfer extends Dialog {\r\n\r\n    @property(cc.Label)\r\n    lbNameAgency: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbNickname: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbUserBankName: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbAgencyBankName: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbUserAccountName: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbBankNumber: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbAmount: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbContent: cc.Label = null;\r\n    @property(cc.Node)\r\n    titleContainer: cc.Node = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    type = 0;\r\n    private dataCashIn: any = null;\r\n    private dataCashOut: any = null;\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n    setInfoCashIn(data) {\r\n        //  cc.log(\"setInfoCashIn:\", data);\r\n        this.lbUserBankName.node.active = true;\r\n        this.lbContent.node.active = true;\r\n        this.lbAgencyBankName.node.active = true;\r\n\r\n        this.type = TYPE.CASHIN;\r\n        this.dataCashIn = data;\r\n        this.lbNameAgency.string = data['nameagent'];\r\n        this.lbNickname.string = data['nickname'];\r\n        this.lbUserBankName.string = data['usernamebank'];\r\n        this.lbAgencyBankName.string = data['agencynamebank'];\r\n        if (this.lbAgencyBankName.string.length > 20) {\r\n            this.lbAgencyBankName.string = this.lbAgencyBankName.string.slice(0, 20) + \"...\";\r\n        }\r\n        this.lbBankNumber.string = data['bank_number'];\r\n        this.lbAmount.string = Utils.formatNumber(data['amount']);\r\n        this.lbContent.string = data['cid'];\r\n\r\n        this.titleContainer.getChildByName('lbUserAccountName').active = false;\r\n        this.titleContainer.getChildByName('lbAgencyBankName').active = true;\r\n        this.titleContainer.getChildByName('lbBankNumber').active = true;\r\n        this.titleContainer.getChildByName('Content').active = true;\r\n        this.lbBankNumber.node.active = true;\r\n    }\r\n    setInfoCashOut(data) {\r\n        this.type = TYPE.CASHOUT;\r\n        this.dataCashOut = data;\r\n        //  cc.log(\"setInfoCashOut:\", data);\r\n        this.titleContainer.getChildByName('lbUserAccountName').active = true;\r\n        this.lbUserAccountName.node.active = true;\r\n\r\n        this.lbNameAgency.string = data['nameagent'];\r\n        this.lbNickname.string = data['nickname'];\r\n        this.lbAmount.string = Utils.formatNumber(data['amount']);\r\n        this.lbUserAccountName.string = data['useraccountname'];\r\n        this.lbUserBankName.string = data['userbankname'];\r\n\r\n        this.lbContent.node.active = false;\r\n        this.lbAgencyBankName.node.active = false;\r\n        this.titleContainer.getChildByName('lbAgencyBankName').active = false;\r\n        this.titleContainer.getChildByName('lbBankNumber').active = false;\r\n        this.titleContainer.getChildByName('Content').active = false;\r\n        this.lbBankNumber.node.active = false;\r\n\r\n\r\n    }\r\n    onClickConfirm() {\r\n        cc.log(\"TYPE TAB:\" + this.type);\r\n        if (this.type == TYPE.CASHIN) {\r\n            cc.log(\"DataCassh IN=\", this.dataCashIn);\r\n            //api?c=2003&am=100000&code=367457&abn=2222&bc=TPB&cid=1122334455&nn=BigBird&at=123123&bn=1234\",\r\n            App.instance.showLoading(true);\r\n            Http.get(Configs.App.API2, {\r\n                \"c\": 2003,\r\n                \"am\": this.dataCashIn['amount'],\r\n                \"nn\": Configs.Login.Nickname,\r\n                \"at\": Configs.Login.AccessToken,\r\n                \"code\": this.dataCashIn['agencyID'],\r\n                \"cid\": this.dataCashIn['cid'],\r\n                \"abn\": this.dataCashIn['bank_number'],\r\n                \"bn\": this.dataCashIn['userbanknumber'],\r\n            }, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                cc.log(res);\r\n                if (res['success']) {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang('txt_request_cashin_success'));\r\n                    this.dismiss();\r\n                } else {\r\n                    App.instance.ShowAlertDialog(res['message']);\r\n                    this.dismiss();\r\n                }\r\n            });\r\n        } else {\r\n            cc.log(\"DataCassh=\", this.dataCashOut);\r\n            //api?c=2010&am=100000&code=367457&bc=TPB&nn=BigBird&at=123123&bn=1234\",\r\n            App.instance.showLoading(true);\r\n            Http.get(Configs.App.API2, {\r\n                \"c\": 2010,\r\n                \"am\": this.dataCashOut['amount'],\r\n                \"nn\": Configs.Login.Nickname,\r\n                \"at\": Configs.Login.AccessToken,\r\n                \"code\": this.dataCashOut['agencyID'],\r\n                \"bn\": this.dataCashOut['userbanknumber'],\r\n            }, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                cc.log(res);\r\n                if (res['success']) {\r\n                    App.instance.ShowAlertDialog(App.instance.getTextLang('txt_request_cashin_success'));\r\n                    this.dismiss();\r\n                } else {\r\n                    App.instance.ShowAlertDialog(res['message']);\r\n                    this.dismiss();\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupEventTT extends Dialog {\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    @property([cc.Button])\r\n    listBtn: cc.Button[] = [];\r\n    // onLoad () {}\r\n    dataEvent: any = null;\r\n    listPackage = [];\r\n    start() {\r\n        this.node.zIndex = cc.macro.MAX_ZINDEX;\r\n    }\r\n    showpPopup(data) {\r\n        super.show();\r\n        this.listPackage = [];\r\n        this.dataEvent = data;\r\n        for (let i = 0; i < this.dataEvent['lstMoonEvents'].length; i++) {\r\n            this.listPackage.push(this.dataEvent['lstMoonEvents'][i]);\r\n            if (this.listBtn[i]) {\r\n                this.listBtn[i].clickEvents[0].customEventData = this.dataEvent['lstMoonEvents'][i]['idEvent'];\r\n            }\r\n        }\r\n    }\r\n    onClick(even, data) {\r\n        data = JSON.parse(data)\r\n        let nameCake = \"\";\r\n        if (data == 11) {\r\n            nameCake = \"Bạch Kim\";\r\n        } else if (data == 12) {\r\n            nameCake = \"Hoàng Kim\";\r\n        }\r\n        else if (data == 13) {\r\n            nameCake = \"Kim Cương\";\r\n        }\r\n        this.node.zIndex = 0;\r\n        App.instance.confirmDialog.show2(\"Bạn chắc chắn muốn mua\\ngói quà \" + nameCake + \" chứ?\", (isConfirm) => {\r\n            if (isConfirm) {\r\n                App.instance.showLoading(true);\r\n                Http.get(Configs.App.API, { \"c\": 21, \"nn\": Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, \"id\": data }, (err, res) => {\r\n                   //  //Utils.Log(\"On Buy Moon:\", res);\r\n                    App.instance.showLoading(false);\r\n                    if (err) {\r\n                        App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_unknown_error1\"));\r\n                        return;\r\n                    } else {\r\n                        // //Utils.Log(\"succes ko dkm:\", res.success);\r\n\r\n                        if (res.success) {\r\n                            switch (res.errorCode) {\r\n                                case \"0\":\r\n                                    App.instance.ShowAlertDialog(\"Chúc mừng bạn đã mua thành công gói quà:\" + nameCake);\r\n                                    Configs.Login.Coin = res.money;\r\n                                    BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                                    this.dismiss();\r\n                                    break;\r\n                                case \"1\":\r\n                                    App.instance.ShowAlertDialog(\"Bạn đã mua gói quà này,\\nVui lòng chọn gói quà khác nhé!\");\r\n                                    break;\r\n                                case \"2\":\r\n                                    App.instance.ShowAlertDialog(\"Bạn không đủ tiền để mua gói quà này!\\nVui lòng liên hệ CSKH để được hướng dẫn.\");\r\n                                    break;\r\n                                default:\r\n                                    App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_unknown_error1\" + res.errorCode));\r\n                                    break;\r\n                            }\r\n                        } else {\r\n                            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_unknown_error1\"));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupEvent extends Dialog {\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    @property(sp.Skeleton)\r\n    animLixi: sp.Skeleton = null\r\n    dataEvent: any = null;\r\n    @property([cc.Node])\r\n    listItem: cc.Node[] = [];\r\n    @property(cc.Node)\r\n    nodeResult: cc.Node = null\r\n    @property(cc.Node)\r\n    nodeRule: cc.Node = null\r\n    @property(cc.Node)\r\n    nodeItemContainer: cc.Node = null\r\n    @property(cc.Label)\r\n    lbMoney: cc.Label = null\r\n    @property(sp.Skeleton)\r\n    animResult: sp.Skeleton = null\r\n\r\n    type: number = 0;\r\n\r\n    start() {\r\n        this.node.zIndex = cc.macro.MAX_ZINDEX;\r\n        this.bg.on(cc.Node.EventType.TOUCH_END, () => {\r\n            this.onClick();\r\n        })\r\n    }\r\n    showpPopup() {\r\n        //  cc.log('type=' + this.type)\r\n        super.show();\r\n        this.animLixi.node.active = false;\r\n        this.animLixi.node.opacity = 255;\r\n        this.nodeResult.active = false;\r\n        this.container.active = false;\r\n        this.nodeRule.active = false;\r\n        if (this.type == 0) {\r\n            this.container.active = true;\r\n            this.nodeItemContainer.active = false;\r\n            this.nodeRule.active = true;\r\n        } else {\r\n            this.container.active = false;\r\n            this.animLixi.node.active = true;\r\n        }\r\n    }\r\n    onClick() {\r\n        App.instance.showLoading(true);\r\n        cc.tween(this.animLixi.node).to(2.0, { opacity: 0 }).call(() => {\r\n            this.animLixi.node.active = false;\r\n        }).start();\r\n        this.bg.off(cc.Node.EventType.TOUCH_END);\r\n        //http://43.128.27.35:8081/api?c=2036&nn=BigBird&at=9350306a24c780af46509750ba4b50ab&ac=get\r\n        Http.get(Configs.App.API, { \"c\": 2036, \"nn\": Configs.Login.Nickname, \"at\": Configs.Login.AccessToken, \"ac\": \"receive\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_unknown_error1\"));\r\n                this.dismiss();\r\n                return;\r\n            } else {\r\n                if (res.success) {\r\n                    this.container.active = true;\r\n                    this.nodeItemContainer.active = true;\r\n                    this.nodeRule.active = false;\r\n                    this.setInfo(res);\r\n                } else {\r\n                    this.animLixi.node.active = false;\r\n                    App.instance.ShowAlertDialog(res['message']);\r\n                    this.dismiss();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    setInfo(data) {\r\n        let indexItem = Utils.randomRangeInt(0, 3);\r\n        let itemReceive = this.listItem[indexItem];\r\n        for (let i = 0; i < 3; i++) {\r\n            let item = this.listItem[i];\r\n            if (item != itemReceive) {\r\n                item.getChildByName(\"bgTien\").active = false;\r\n                item.getChildByName(\"icon\").color = cc.Color.GRAY;\r\n                item.getChildByName(\"btn_received\").active = false;\r\n                item.color = cc.Color.GRAY;\r\n            }\r\n        }\r\n        itemReceive.getChildByName(\"bgTien\").getComponentInChildren(cc.Label).string = Utils.formatNumber(data['data']);\r\n        itemReceive.getChildByName(\"bgTien\").active = false\r\n        itemReceive.getChildByName(\"btn_received\").on('click', () => {\r\n            this.lbMoney.string = Utils.formatNumber(data['data']);\r\n            Configs.Login.Coin += data['data'];\r\n            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n            this.nodeResult.active = true;\r\n            this.animResult.setAnimation(0, \"start\", false);\r\n            this.animResult.setCompleteListener(() => {\r\n                this.animResult.setAnimation(0, \"idle\", true);\r\n            })\r\n            this.container.active = false;\r\n            this.scheduleOnce(() => {\r\n                this.dismiss();\r\n            }, 3.0);\r\n        })\r\n    }\r\n\r\n\r\n    // update (dt) {}\r\n}\r\n","\r\nimport { cmd } from \"./Lobby.Cmd\";\r\nimport BundleControl from \"../../Loading/src/BundleControl\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport SPUtils from \"./Script/common/SPUtils\";\r\nimport SlotNetworkClient from \"./Script/networks/SlotNetworkClient\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nnamespace Lobby {\r\n\r\n    @ccclass\r\n    export class PopupRegister extends Dialog {\r\n\r\n        @property(cc.EditBox)\r\n        edbUsername: cc.EditBox = null;\r\n        @property(cc.EditBox)\r\n        edbPassword: cc.EditBox = null;\r\n\r\n\r\n\r\n        @property(cc.Node)\r\n        nodeRemember: cc.Node = null;\r\n        @property(cc.Toggle)\r\n        toggleRemember: cc.Toggle = null;\r\n\r\n        start() {\r\n        }\r\n        show(even = null, data = null) {\r\n\r\n            super.show();\r\n            this.edbUsername.tabIndex = 0;\r\n            this.edbPassword.tabIndex = 0;\r\n            this.toggleRemember.isChecked = cc.sys.localStorage.getItem(\"IsRemember\") == 1 ? true : false;\r\n            if (this.toggleRemember.isChecked) {\r\n                this.edbUsername.string = SPUtils.getUserName();\r\n                this.edbPassword.string = SPUtils.getUserPass();\r\n            }\r\n        }\r\n\r\n\r\n\r\n        atcPopupUpdateNickName(username, password) {\r\n            let cb = (prefab) => {\r\n                let popupDaily = cc.instantiate(prefab).getComponent(\"PopupUpdateNickname\");\r\n                App.instance.canvas.addChild(popupDaily.node)\r\n                App.instance.popupUpdateNickname = popupDaily;\r\n                App.instance.popupUpdateNickname.show2(username, password);\r\n            }\r\n            BundleControl.loadPrefabPopup(\"PrefabPopup/PopupUpdateNickname\", cb);\r\n        }\r\n\r\n\r\n\r\n        public actLogin() {\r\n            let username = this.edbUsername.string.trim();\r\n            let password = this.edbPassword.string;\r\n             //Utils.Log(\"actLogin:\" + username + \":\" + password);\r\n            cc.sys.localStorage.setItem(\"IsRemember\", this.toggleRemember.isChecked ? 1 : 0);\r\n            cc.sys.localStorage.setItem(\"IsAutoLogin\", this.toggleRemember.isChecked ? 1 : 0);\r\n            Global.LobbyController.actLogin(username, password, () => {\r\n                App.instance.TYPE_LOGIN = \"NORMAL\";\r\n                App.instance.USER_NAME = username;\r\n                App.instance.PASS_WORD = password;\r\n                SPUtils.setUserName(username);\r\n                SPUtils.setUserPass(password);\r\n                this.dismiss();\r\n            });\r\n\r\n        }\r\n        actLoginToken(data): void {\r\n            Configs.Login.AccessToken = data.at;\r\n            Configs.Login.AccessToken2 = data.at;\r\n            App.instance.showLoading(true);\r\n            Http.get(Configs.App.API, { c: 17, u: data.u, at: data.at }, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                 //Utils.Log(res);\r\n                switch (parseInt(res[\"errorCode\"])) {\r\n                    case 0:\r\n                        //  //Utils.Log(\"Đăng nhập thành công.\");\r\n\r\n                        Configs.Login.AccessToken = res[\"accessToken\"];\r\n                        if (cc.sys.isBrowser) {\r\n                            window.localStorage.setItem(\"at\", Configs.Login.AccessToken);\r\n                        }\r\n                        Configs.Login.SessionKey = res[\"sessionKey\"];\r\n                        Configs.Login.IsLogin = true;\r\n                        var userInfo = JSON.parse(base64.decode(Configs.Login.SessionKey));\r\n                        Configs.Login.Nickname = userInfo[\"nickname\"];\r\n                        Configs.Login.Avatar = userInfo[\"avatar\"];\r\n                        Configs.Login.Coin = userInfo[\"vinTotal\"];\r\n                        Configs.Login.LuckyWheel = userInfo[\"luckyRotate\"];\r\n                        Configs.Login.IpAddress = userInfo[\"ipAddress\"];\r\n                        Configs.Login.CreateTime = userInfo[\"createTime\"];\r\n                        Configs.Login.Birthday = userInfo[\"birthday\"];\r\n                        Configs.Login.VipPoint = userInfo[\"vippoint\"];\r\n                        Configs.Login.VipPointSave = userInfo[\"vippointSave\"];\r\n\r\n                        // khoi tao 3 socket dong thoi gui goi tin len server\r\n                        // MiniGameNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeJackpots());\r\n                        SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n\r\n                        App.instance.buttonMiniGame.show();\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_INFO_UPDATED);\r\n\r\n                        /* switch (VersionConfig.CPName) {\r\n                            default:\r\n                                this.popupBoomTan.show();\r\n                                break;\r\n                        } */\r\n                        this.dismiss();\r\n                        Global.LobbyController.panelNotLogin.active = false;\r\n                        Global.LobbyController.panelLogined.active = true;\r\n                        break;\r\n                    case 1005:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_login_username_error\"));\r\n                        break;\r\n                    case 1109:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_blocked'));\r\n                        break;\r\n\r\n                    case 1114:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_password_error'));\r\n                        break;\r\n                    case 1002:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_incorrect_otp'));\r\n                        break;\r\n                    case 1007:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_name_not_the_same'));\r\n                        break;\r\n                    case 1021: case 1008:\r\n                        App.instance.showLoading(false);\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_incorrect_otp'));\r\n                        break;\r\n                    case 2001:\r\n                        App.instance.showLoading(false);\r\n                        // App.instance.alertDialog.showMsg(\"Tên nhân vật không được để trống.\");\r\n                        break;\r\n\r\n                    default:\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_error'));\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n}\r\nexport default Lobby.PopupRegister;\r\n","\r\nimport BundleControl from \"../../Loading/src/BundleControl\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport LogEvent from \"../../Loading/src/LogEvent/LogEvent\";\r\nimport App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nnamespace Lobby {\r\n\r\n    @ccclass\r\n    export class PopupRegister extends Dialog {\r\n\r\n        @property(cc.EditBox)\r\n        edbUsername: cc.EditBox = null;\r\n        @property(cc.EditBox)\r\n        edbCodeDaiLi: cc.EditBox = null;\r\n        @property(cc.EditBox)\r\n        edbPassword: cc.EditBox = null;\r\n        @property(cc.EditBox)\r\n        edbRePassword: cc.EditBox = null;\r\n        @property(cc.EditBox)\r\n        edbCaptcha: cc.EditBox = null;\r\n        @property(cc.Sprite)\r\n        sprCaptcha: cc.Sprite = null;\r\n        @property(cc.RichText)\r\n        txtCodeCheck: cc.RichText = null;\r\n        @property(cc.Button)\r\n        btnRegister: cc.Button = null;\r\n\r\n\r\n        @property(cc.Button)\r\n        btn_refresh: cc.Button = null;\r\n\r\n\r\n        private captchaId: string = \"\";\r\n        start() {\r\n            Global.PopupRegister = this;\r\n        }\r\n        show(even = null, data = null) {\r\n            this.txtCodeCheck.string = \"\";\r\n\r\n            super.show();\r\n            this.edbUsername.tabIndex = 0;\r\n            this.edbPassword.tabIndex = 0;\r\n            this.edbRePassword.tabIndex = -1;\r\n            this.edbCaptcha.tabIndex = -1;\r\n            this.edbCodeDaiLi.tabIndex = -1;\r\n            this.refreshCaptcha();\r\n            if (Configs.App.AGENCY_CODE != \"\") {\r\n                this.edbCodeDaiLi.string = Configs.App.AGENCY_CODE;\r\n                this.edbCodeDaiLi.node.getComponent(cc.EditBox).enabled = false;\r\n            }\r\n\r\n        }\r\n\r\n        actCheckCodeDaiLi() {\r\n            if (this.edbCodeDaiLi.string) {\r\n                var repParams = {};\r\n                repParams[\"c\"] = 18;\r\n                repParams[\"code\"] = this.edbCodeDaiLi.string;\r\n                Http.get(Configs.App.API, repParams, (err, res) => {\r\n                     //Utils.Log(\"actCheckCodeDaiLi:\" + JSON.stringify(res));\r\n                    if (res.success == false) {\r\n                        this.txtCodeCheck.string = \"<color=#FF2C23>Không hợp lệ</color>\";\r\n                    }\r\n                    else {\r\n                        this.txtCodeCheck.string = \"<color=#23FF23>Hợp lệ</color>\";\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        public actRegister() {\r\n            let _this = this;\r\n            let username = this.edbUsername.string.trim();\r\n            let password = this.edbPassword.string;\r\n            let rePassword = this.edbRePassword.string;\r\n            let captcha = this.edbCaptcha.string;\r\n            if (username.length == 0) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_login_username_not_blank\"));\r\n                return;\r\n            }\r\n\r\n            if (password.length == 0) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_login_password_not_blank\"));\r\n                return;\r\n            }\r\n\r\n            if (password != rePassword) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_password_incorrect3'));\r\n                return;\r\n            }\r\n\r\n        //    if (captcha.length == 0) {\r\n        //        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_otp_blank'));\r\n        //        return;\r\n        //    }\r\n\r\n            App.instance.showLoading(true);\r\n            let reqParams = { \"c\": 1, \"un\": username, \"pw\": md5(password), \"cp\": captcha, \"cid\": this.captchaId, \"ac\": this.edbCodeDaiLi.string };\r\n            if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\r\n                reqParams[\"utm_source\"] = \"IOS\";\r\n                reqParams[\"utm_medium\"] = \"IOS\";\r\n                reqParams[\"utm_term\"] = \"IOS\";\r\n                reqParams[\"utm_content\"] = \"IOS\";\r\n                reqParams[\"utm_campaign\"] = \"IOS\";\r\n            } else if (cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID) {\r\n                reqParams[\"utm_source\"] = \"ANDROID\";\r\n                reqParams[\"utm_medium\"] = \"ANDROID\";\r\n                reqParams[\"utm_term\"] = \"ANDROID\";\r\n                reqParams[\"utm_content\"] = \"ANDROID\";\r\n                reqParams[\"utm_campaign\"] = \"ANDROID\";\r\n            }\r\n            Http.get(Configs.App.API, reqParams, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                if (err != null) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error'));\r\n                    return;\r\n                }\r\n                 //Utils.Log(res);\r\n                if (!res[\"success\"]) {\r\n                    switch (parseInt(res[\"errorCode\"])) {\r\n                        case 1001:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_check_connect'));\r\n                            _this.refreshCaptcha();\r\n                            break;\r\n                        case 101:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_username_error'));\r\n                            _this.refreshCaptcha();\r\n                            break;\r\n                        case 1006:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_exsisted'));\r\n                            _this.refreshCaptcha();\r\n                            break;\r\n                        case 102:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_password_error'));\r\n                            _this.refreshCaptcha();\r\n                            break;\r\n                        case 108:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_name_not_the_same1'));\r\n                            _this.refreshCaptcha();\r\n                            break;\r\n                        case 115:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_incorrect_otp'));\r\n                            break;\r\n                        case 1114:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_room_err6'));\r\n                            _this.refreshCaptcha();\r\n                            break;\r\n                        default:\r\n                            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error'));\r\n                            break;\r\n                    }\r\n                    return;\r\n                }\r\n                //  //Utils.Log(\"Dang ky thanh cong ne!\");\r\n                LogEvent.getInstance().sendEventSigupSuccess(\"normal\");\r\n                _this.dismiss();\r\n                _this.atcPopupUpdateNickName(username, password);\r\n            });\r\n        }\r\n\r\n        public refreshCaptcha() {\r\n            var _this = this;\r\n\r\n            let url = Configs.App.API;\r\n            Http.get(url, { \"c\": 124 }, (err, res) => {\r\n                if (err != null) {\r\n                    App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error'));\r\n                    return;\r\n                }\r\n                _this.captchaId = res[\"id\"];\r\n                 //Utils.Log(\"captcha:\" + JSON.stringify(res[\"img\"]));\r\n                Utils.loadSpriteFrameFromBase64(res[\"img\"], (sprFrame) => {\r\n                    _this.sprCaptcha.spriteFrame = sprFrame;\r\n                });\r\n            });\r\n        }\r\n        atcPopupUpdateNickName(username, password) {\r\n            let cb = (prefab) => {\r\n                let popupDaily = cc.instantiate(prefab).getComponent(\"PopupUpdateNickname\");\r\n                App.instance.canvas.addChild(popupDaily.node)\r\n                App.instance.popupUpdateNickname = popupDaily;\r\n                App.instance.popupUpdateNickname.show2(username, password);\r\n            }\r\n            BundleControl.loadPrefabPopup(\"PrefabPopup/PopupUpdateNickname\", cb);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\nexport default Lobby.PopupRegister;\r\n","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport LogEvent from \"../../Loading/src/LogEvent/LogEvent\";\r\nimport cmd from \"./Lobby.Cmd\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport SPUtils from \"./Script/common/SPUtils\";\r\nimport Utils from \"./Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"./Script/networks/MiniGameNetworkClient\";\r\nimport SlotNetworkClient from \"./Script/networks/SlotNetworkClient\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nnamespace Lobby {\r\n    @ccclass\r\n    export class PopupUpdateNickname extends Dialog {\r\n\r\n        @property(cc.EditBox)\r\n        edbNickname: cc.EditBox = null;\r\n        @property(cc.EditBox)\r\n        edbInviteCode: cc.EditBox = null;\r\n        @property(cc.Node)\r\n        nodeNotiTele: cc.Node = null;\r\n        @property(cc.Node)\r\n        nodeChangeNickName: cc.Node = null;\r\n        @property(cc.Button)\r\n        btnConfirm: cc.Button = null;\r\n        @property(cc.Label)\r\n        lbTitle: cc.Label = null;\r\n\r\n\r\n        private username: string = \"\";\r\n        private password: string = \"\";\r\n        private at: string = \"\";\r\n        show() {\r\n            super.show();\r\n            this.edbNickname.string = \"\";\r\n            this.nodeNotiTele.active = false;\r\n            this.nodeChangeNickName.active = true;\r\n            this.edbInviteCode.string = \"\";\r\n            if (cc.sys.isBrowser) {\r\n                //  cc.log(\"URL Game==\" + window.location.href);\r\n                let url = window.location.href;\r\n                // let url = \"https://play.win789club.com/?aff=NhungNgao4\";\r\n                if (url.includes(\"aff=\")) {\r\n                    let indexOfEqual = url.indexOf(\"=\");\r\n                    let inviteCode = url.substring(indexOfEqual + 1, url.length);\r\n                    this.edbInviteCode.string = inviteCode;\r\n                    this.edbInviteCode.enabled = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        public show2(username: string, password: string) {\r\n\r\n            this.show();\r\n            this.username = username;\r\n            this.password = password;\r\n            this.at = \"\";\r\n\r\n        }\r\n\r\n        public showFb(at) {\r\n            this.show();\r\n            this.at = at;\r\n            this.username = \"\";\r\n            this.password = \"\";\r\n        }\r\n\r\n        public dismiss() {\r\n            this.node.destroy();\r\n        }\r\n\r\n        public actUpdate() {\r\n            let _this = this;\r\n            let nickname = this.edbNickname.string.trim();\r\n            let inviteCode = this.edbInviteCode.string.trim();\r\n            if (nickname.length == 0) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_nickname_not_blank'));\r\n                return;\r\n            }\r\n            if (this.at == \"\") {\r\n                //normal\r\n                App.instance.showLoading(true);\r\n                Http.get(Configs.App.API, { \"c\": 5, \"un\": _this.username, \"pw\": md5(_this.password), \"nn\": nickname, \"inv\": inviteCode }, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                    if (err != null) {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error'));\r\n                        return;\r\n                    }\r\n                    //Utils.Log(\"Update NickName:\" + JSON.stringify(err) + \" => \" + JSON.stringify(res));\r\n                    if (!res[\"success\"]) {\r\n                        switch (parseInt(res[\"errorCode\"])) {\r\n                            case 1001:\r\n                                App.instance.alertDialog.showMsg(\"Mất kết nối đến Server!\");\r\n                                break;\r\n                            case 1005:\r\n                                App.instance.alertDialog.showMsg(\"Tài khoản không tồn tại.\");\r\n                                break;\r\n                            case 1007:\r\n                                App.instance.alertDialog.showMsg(\"Mật khẩu không chính xác.\");\r\n                                break;\r\n                            case 1109:\r\n                                App.instance.alertDialog.showMsg(\"Tài khoản đã bị khóa.\");\r\n                                break;\r\n                            case 106:\r\n                                App.instance.alertDialog.showMsg(\"Tên hiển thị không hợp lệ.\");\r\n                                break;\r\n                            case 1010:\r\n                            case 1013:\r\n                                App.instance.alertDialog.showMsg(\"Tên hiển thị đã tồn tại.\");\r\n                                break;\r\n                            case 1011:\r\n                                App.instance.alertDialog.showMsg(\"Tên hiển thị khôn được trùng với tên đăng nhập.\");\r\n                                break;\r\n                            case 116:\r\n                                App.instance.alertDialog.showMsg(\"Không chọn tên hiển thị nhạy cảm.\");\r\n                                break;\r\n                            case 1114:\r\n                                App.instance.alertDialog.showMsg(\"Hệ thống đang bảo trì. Vui lòng quay trở lại sau!\");\r\n                                break;\r\n                            default:\r\n                                App.instance.alertDialog.showMsg(\"Xảy ra lỗi, vui lòng thử lại sau!\");\r\n                                break;\r\n                        }\r\n                        return;\r\n                    }\r\n                    else {\r\n                        switch (parseInt(res[\"errorCode\"])) {\r\n                            case 0:\r\n                                App.instance.showLoading(false);\r\n\t\t\t\t\t\t\t//\tApp.instance.showLoading(true);\r\n                \r\n                                //  //Utils.Log(\"Đăng nhập thành công.\");\r\n                                Configs.Login.IsLogin = true;\r\n\t\t\t\t\t\t\t\tConfigs.Login.Username = this.username;\r\n                        Configs.Login.Password = this.password;\r\n                                SPUtils.setUserName(_this.username);\r\n                                SPUtils.setUserPass(_this.password);\r\n                                LogEvent.getInstance().sendEventClickShop(\"vin\", 100000);\r\n                                LogEvent.getInstance().sendEventSdt(\"0123456789\");\r\n                                LogEvent.getInstance().sendEventPurchase(\"vin\", 100000);\r\n                                LogEvent.getInstance().sendEventSigupSuccess(\"normal\");\r\n                                LogEvent.getInstance().sendEventLogin(\"normal\")\r\n                                Configs.Login.AccessToken = res[\"accessToken\"];\r\n                                Configs.Login.SessionKey = res[\"sessionKey\"];\r\n                                var userInfo = JSON.parse(base64.decode(Configs.Login.SessionKey));\r\n                                var dataLogin = {};\r\n                                dataLogin[\"u\"] = userInfo[\"nickname\"];\r\n                                dataLogin[\"at\"] = res[\"accessToken\"];\r\n                                Configs.Login.Nickname = userInfo[\"nickname\"];\r\n                                Configs.Login.Avatar = userInfo[\"avatar\"];\r\n                                Configs.Login.Coin = userInfo[\"vinTotal\"];\r\n                                Configs.Login.IpAddress = userInfo[\"ipAddress\"];\r\n                                Configs.Login.CreateTime = userInfo[\"createTime\"];\r\n                                Configs.Login.Birthday = userInfo[\"birthday\"];\r\n                                Configs.Login.Birthday = userInfo[\"birthday\"];\r\n                                Configs.Login.VipPoint = userInfo[\"vippoint\"];\r\n                                Configs.Login.VipPointSave = userInfo[\"vippointSave\"];\r\n\t\t\t\t\t\t\t\tvar data = {};\r\n                data[\"c\"] = 2008;\r\n                data[\"nn\"] = Configs.Login.Nickname;\r\n                data[\"pn\"] = 1;\r\n                data[\"l\"] = 10;\r\n                Http.get(Configs.App.API, data, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                    var list = JSON.parse(res.data).data;\r\n                    Configs.Login.ListBankRut = list;\r\n                });\r\n                                // MiniGameNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeJackpots());\r\n                                SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_INFO_UPDATED);\r\n                                break;\r\n                        }\r\n                    }\r\n                    // _this.dismiss();\r\n                    this.nodeChangeNickName.active = false;\r\n                    this.nodeNotiTele.active = true;\r\n                    let eventHandler = new cc.Component.EventHandler();\r\n                    eventHandler.target = this.node;\r\n                    eventHandler.component = \"PopupUpdateNickname\";\r\n                    eventHandler.handler = \"onClickConfirm\";\r\n                    this.btnConfirm.clickEvents[0] = eventHandler;\r\n                    this.btnConfirm.node.getComponentInChildren(cc.Label).string = App.instance.getTextLang(\"txt_confirm\").toUpperCase();\r\n                    this.lbTitle.string = App.instance.getTextLang(\"txt_notify\").toUpperCase();\r\n                    BroadcastReceiver.send(BroadcastReceiver.UPDATE_NICKNAME_SUCCESS, { \"username\": _this.username, \"password\": _this.password });\r\n                });\r\n            }\r\n            else {\r\n                App.instance.showLoading(true);\r\n                Http.get(Configs.App.API, { \"c\": 5, \"s\": \"fb\", \"at\": this.at, \"nn\": nickname, \"inv\": inviteCode }, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                    if (err != null) {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error'));\r\n                        return;\r\n                    }\r\n                    //Utils.Log(\"Update NickName:\" + JSON.stringify(err) + \" => \" + JSON.stringify(res));\r\n                    if (!res[\"success\"]) {\r\n                        switch (parseInt(res[\"errorCode\"])) {\r\n                            case 1001:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_check_connect'));\r\n                                break;\r\n                            case 1005:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_not_exsist'));\r\n                                break;\r\n                            case 1007:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_password_error'));\r\n                                break;\r\n                            case 1109:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_account_blocked'));\r\n                                break;\r\n                            case 106:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_nickname_error'));\r\n                                break;\r\n                            case 1010:\r\n                            case 1013:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_nickname_exist'));\r\n                                break;\r\n                            case 1011:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_nickname_error1'));\r\n                                break;\r\n                            case 116:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_login_nickname_error2'));\r\n                                break;\r\n                            case 1114:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_room_err6'));\r\n                                break;\r\n                            default:\r\n                                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_error'));\r\n                                break;\r\n                        }\r\n                        return;\r\n                    }\r\n                    else {\r\n                        switch (parseInt(res[\"errorCode\"])) {\r\n                            case 0:\r\n                                App.instance.showLoading(false);\r\n                                //  //Utils.Log(\"Đăng nhập thành công.\");\r\n                                Configs.Login.IsLogin = true;\r\n                                LogEvent.getInstance().sendEventClickShop(\"vin\", 100000);\r\n                                LogEvent.getInstance().sendEventSdt(\"0123456789\");\r\n                                LogEvent.getInstance().sendEventPurchase(\"vin\", 100000);\r\n                                LogEvent.getInstance().sendEventSigupSuccess(\"normal\");\r\n                                LogEvent.getInstance().sendEventLogin(\"normal\")\r\n                                Configs.Login.AccessToken = res[\"accessToken\"];\r\n                                Configs.Login.SessionKey = res[\"sessionKey\"];\r\n                                var userInfo = JSON.parse(base64.decode(Configs.Login.SessionKey));\r\n                                var dataLogin = {};\r\n                                dataLogin[\"u\"] = userInfo[\"nickname\"];\r\n                                dataLogin[\"at\"] = res[\"accessToken\"];\r\n                                Configs.Login.Nickname = userInfo[\"nickname\"];\r\n                                Configs.Login.Avatar = userInfo[\"avatar\"];\r\n                                Configs.Login.Coin = userInfo[\"vinTotal\"];\r\n                                Configs.Login.IpAddress = userInfo[\"ipAddress\"];\r\n                                Configs.Login.CreateTime = userInfo[\"createTime\"];\r\n                                Configs.Login.Birthday = userInfo[\"birthday\"];\r\n                                Configs.Login.Birthday = userInfo[\"birthday\"];\r\n                                Configs.Login.VipPoint = userInfo[\"vippoint\"];\r\n                                Configs.Login.VipPointSave = userInfo[\"vippointSave\"];\r\n                                MiniGameNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeJackpots());\r\n                                SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n                                BroadcastReceiver.send(BroadcastReceiver.USER_INFO_UPDATED);\r\n\r\n                                break;\r\n                        }\r\n                    }\r\n                    // _this.dismiss();\r\n                    this.nodeChangeNickName.active = false;\r\n                    this.nodeNotiTele.active = true;\r\n                    let eventHandler = new cc.Component.EventHandler();\r\n                    eventHandler.target = this.node;\r\n                    eventHandler.component = \"PopupUpdateNickname\";\r\n                    eventHandler.handler = \"onClickConfirm\";\r\n                    this.btnConfirm.clickEvents[0] = eventHandler;\r\n                    this.btnConfirm.node.getComponentInChildren(cc.Label).string = App.instance.getTextLang(\"txt_confirm\");\r\n                    this.lbTitle.string = App.instance.getTextLang(\"txt_notify\");\r\n                });\r\n            }\r\n\r\n        }\r\n        onClickConfirm() {\r\n            this.dismiss();\r\n        }\r\n        showPopupNotiTele() {\r\n\r\n        }\r\n    }\r\n\r\n}\r\nexport default Lobby.PopupUpdateNickname;\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Tween from \"./Script/common/Tween\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport SPUtils from \"./Script/common/SPUtils\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupWebView extends cc.Component {\r\n\r\n    @property(cc.WebView)\r\n    webView: cc.WebView = null;\r\n\r\n    @property(cc.Node)\r\n    boxNode:cc.Node = null;\r\n    private url = \"\";\r\n    private cache = \"\";\r\n    show(url,cache = \"\"){\r\n        this.cache = cache;\r\n        this.url = url;\r\n        \r\n        if(this.cache == \"AG\"){\r\n            console.log(\"popupWebView:\"+Configs.Login.CACHE_AG);\r\n            SPUtils.setMusicVolumn(0);\r\n            BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n            // cc.audioEngine.pauseAll();\r\n            if(Configs.Login.CACHE_AG == false){\r\n                \r\n                this.webView.url = url;\r\n            }\r\n            Configs.Login.CACHE_AG = true;\r\n        }\r\n        else if(this.cache == \"IBC\"){\r\n            SPUtils.setMusicVolumn(0);\r\n            BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n            if(Configs.Login.CACHE_IBC == false){\r\n                \r\n                this.webView.url = url;\r\n            }\r\n            Configs.Login.CACHE_IBC = true;\r\n        }\r\n        else if(this.cache == \"WM\"){\r\n            SPUtils.setMusicVolumn(0);\r\n            BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n            if(Configs.Login.CACHE_WM == false){\r\n                \r\n                this.webView.url = url;\r\n            }\r\n            Configs.Login.CACHE_WM = true;\r\n        }\r\n        else{\r\n            this.webView.url = url;\r\n\r\n        }\r\n        \r\n        this.boxNode.parent.active = true;\r\n        // Tween.showPopup(this.boxNode,this.boxNode.parent);\r\n    }\r\n\r\n    hide(){\r\n        if(this.cache == \"AG\"){\r\n            SPUtils.setMusicVolumn(1);\r\n            BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n            Configs.Login.CACHE_AG = false;\r\n            App.instance.buttonMiniGame.buttonAG.active = false;\r\n        }\r\n        else if(this.cache == \"IBC\"){\r\n            cc.audioEngine.setMusicVolume(1);\r\n            BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n            Configs.Login.CACHE_IBC = false;\r\n            App.instance.buttonMiniGame.buttonIBC.active = false;\r\n        }\r\n        else if(this.cache == \"WM\"){\r\n            cc.audioEngine.setMusicVolume(1);\r\n            BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n            Configs.Login.CACHE_WM = false;\r\n            App.instance.buttonMiniGame.buttonWM.active = false;\r\n        }\r\n        this.node.destroy();\r\n        //Tween.hidePopup(this.boxNode,this.boxNode.parent,false);\r\n    }\r\n\r\n    onBtnThuNho(){\r\n        if(this.cache == \"AG\"){\r\n            SPUtils.setMusicVolumn(1);\r\n            BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n            App.instance.buttonMiniGame.buttonAG.active = true;\r\n        }\r\n        else if(this.cache == \"IBC\"){\r\n            cc.audioEngine.setMusicVolume(1);\r\n            BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n            App.instance.buttonMiniGame.buttonIBC.active = true;\r\n        }\r\n        else if(this.cache == \"WM\"){\r\n            cc.audioEngine.setMusicVolume(1);\r\n            BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n            App.instance.buttonMiniGame.buttonWM.active = true;\r\n        }\r\n        this.boxNode.parent.position = cc.v3(-5000,0,0);\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Random {\r\n    static range(min: number, max: number): number {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n    static rangeInt(min: number, max: number): number {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n}\r\n","    // var UserModel = require(\"UserModel\");\r\n    var RestApi = {\r\n\r\n        CallGet: function (api, data, callbackSuccess) {\r\n            var url = api; //LINK_API + api;\r\n            console.log(\"CallGet:\"+url);\r\n            let xhr = cc.loader.getXMLHttpRequest();//new XMLHttpRequest();\r\n            xhr.open(\"GET\", url, true);\r\n            // xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n            // xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n            // xhr.setRequestHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n            // xhr.setRequestHeader(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT\");\r\n            // xhr.setRequestHeader(\"Access-Control-Allow-Headers\", \"Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers\");\r\n            // if (UserModel.token != \"\")\r\n            // {\r\n            //     xhr.setRequestHeader(\"Authorization\", \"Bearer \" + UserModel.token);\r\n            // }\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\r\n                    callbackSuccess(xhr.responseText);\r\n                }\r\n            };\r\n            \r\n            xhr.send();\r\n        },\r\n\r\n        CallPost: function (api, data, callbackSuccess, token = \"\") {\r\n            // var url = LINK_API + api;\r\n            var url =  api;\r\n            console.log(\"CallPost:\" + url + \":\" + JSON.stringify(data));\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open(\"POST\", url, true);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n            if (token != \"\")\r\n            {\r\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n            }\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\r\n                    console.log(\"Response Success:\" + api + \":\" + xhr.responseText);\r\n                    callbackSuccess(xhr.responseText);\r\n                }\r\n            };\r\n        \r\n            xhr.send(JSON.stringify(data));\r\n        }\r\n    };\r\n\r\n    module.exports = RestApi;","namespace common {\r\n    export class SPUtils {\r\n        private static encode(s: string, k: number): string {\r\n            var enc = \"\";\r\n            var str = \"\";\r\n            // make sure that input is string\r\n            str = s.toString();\r\n            for (var i = 0; i < s.length; i++) {\r\n                // create block\r\n                var a = s.charCodeAt(i);\r\n                // bitwise XOR\r\n                var b = a ^ k;\r\n                enc = enc + String.fromCharCode(b);\r\n            }\r\n            return enc;\r\n        }\r\n\r\n        static get(key: string, defaultValue: string = \"\"): string {\r\n            var keyEncrypted = this.encode(key, 3265812).toString();\r\n            if (typeof defaultValue === \"undefined\") defaultValue || null;\r\n            var r = cc.sys.localStorage.getItem(keyEncrypted);\r\n            if(cc.sys.isBrowser){\r\n                r = window.localStorage.getItem(keyEncrypted);\r\n            }\r\n            if (r) {\r\n                r = this.encode(r, 3265812).toString();\r\n                return r;\r\n            }\r\n            return defaultValue;\r\n        }\r\n\r\n        static set(key: string, value: string) {\r\n            value = value.toString();\r\n            var keyEncrypted = \"\" + this.encode(key, 3265812);\r\n            var valueEncrypted = \"\" + this.encode(value, 3265812);\r\n            if(cc.sys.isBrowser){\r\n                window.localStorage.setItem(keyEncrypted, valueEncrypted);\r\n            }\r\n            else{\r\n                cc.sys.localStorage.setItem(keyEncrypted, valueEncrypted);\r\n            }\r\n        }\r\n\r\n        static setAccessTokenFB(value: string) {\r\n            this.set(\"at_fb\", value);\r\n        }\r\n\r\n        static getAccessTokenFB(): string {\r\n            return this.get(\"at_fb\");\r\n        }\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tstatic copyToClipboard(content) {\r\n            if (cc.sys.isNative) {\r\n                if (jsb) {\r\n                    jsb.copyTextToClipboard(content);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                var input = document.createElement('input');\r\n                input.value = content;\r\n                input.id = 'inputID';\r\n                document.body.appendChild(input);\r\n                input.select();\r\n                document.execCommand('copy');\r\n                document.body.removeChild(input);\r\n                return true;\r\n            }\r\n        };\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\r\n        static setAccessToken(value: string) {\r\n            this.set(\"at\", value);\r\n        }\r\n\r\n        static setUserName(value: string) {\r\n            this.set(\"username\", value);\r\n        }\r\n\r\n        static setNN(value: string) {\r\n            this.set(\"u\", value);\r\n        }\r\n\r\n        static getNN(): string {\r\n            return this.get(\"u\");\r\n        }\r\n\r\n        static getUserName(): string {\r\n            return this.get(\"username\");\r\n        }\r\n\r\n        static getAccessToken(): string {\r\n            return this.get(\"at\");\r\n        }\r\n\r\n        static setUserPass(value: string) {\r\n            this.set(\"userpass\", value);\r\n        }\r\n\r\n        static getUserPass(): string {\r\n            return this.get(\"userpass\");\r\n        }\r\n\r\n        static setUserAccessTokenFB(value: string) {\r\n            this.set(\"fbAccessToken\", value);\r\n        }\r\n\r\n        static getUserAccessTokenFB(): string {\r\n            return this.get(\"fbAccessToken\");\r\n        }\r\n\r\n        static getMusicVolumn(): number {\r\n            return Number(this.get(\"music_volumn\", \"1\"));\r\n        }\r\n\r\n        static setMusicVolumn(volumn: number) {\r\n            this.set(\"music_volumn\", volumn.toString());\r\n        }\r\n\r\n        static getSoundVolumn(): number {\r\n            return Number(this.get(\"sound_volumn\", \"1\"));\r\n        }\r\n\r\n        static setSoundVolumn(volumn: number) {\r\n            this.set(\"sound_volumn\", volumn.toString());\r\n        }\r\n    }\r\n}\r\nexport default common.SPUtils;","import OutPacket from \"../Script/networks/Network.OutPacket\";\r\nimport InPacket from \"../Script/networks/Network.InPacket\";\r\nimport SamConstant from \"./Sam.Constant\";\r\nimport Utils from \"../Script/common/Utils\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\nexport namespace SamCmd {\r\n    export class Code {\r\n        static LOGIN = 1;\r\n        static NOTIFY_DISCONNECT = 37;\r\n        static PING_PONG = 50;\r\n        static JOIN_ROOM = 3001;\r\n        static RECONNECT_GAME_ROOM: 3002;\r\n        static QUICK_ROOM_SUCCEED = 3006;\r\n        static CHAT_ROOM = 3008;\r\n        static QUYET_DINH_SAM = 3100;\r\n        static DANH_BAI = 3101;\r\n        static START_GAME = 3102;\r\n        static END_GAME = 3103;\r\n        static CHIA_BAI = 3105;\r\n        static BO_LUOT = 3106;\r\n        static AUTO_START = 3107;\r\n        static FIRST_TURN = 3108;\r\n        static BAO_SAM = 3109;\r\n        static UPDATE_GAME_INFO = 3110;\r\n        static REQUEST_LEAVE_ROOM = 3111;\r\n        static CHANGE_TURN = 3112;\r\n        static CHAT_CHONG = 3113;\r\n        static HUY_BAO_SAM = 3114;\r\n        static HOLD = 3116;\r\n        static JOIN_ROOM_SUCCESS = 3118;\r\n        static USER_LEAVE_ROOM = 3119;\r\n        static NOTIFY_KICK_OFF = 3120;\r\n        static USER_JOIN_ROOM = 3121;\r\n        static UPDATE_MATCH = 3123;\r\n        static WAIT_4_DOI_THONG = 3124\r\n    }\r\n\r\n    export class SendTest extends OutPacket {\r\n        constructor(a: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(0)\r\n            this.packHeader();\r\n            this.putString(a);\r\n            this.putInt(111);\r\n            this.putLong(2147483647);\r\n            this.putLong(325);\r\n            this.putLong(8686);\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class SendLogin extends OutPacket {\r\n        constructor(a: string, b: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.LOGIN)\r\n            this.packHeader();\r\n            this.putString(a);\r\n            this.putString(b);\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class SendReconnectRoom extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.RECONNECT_GAME_ROOM);\r\n            this.packHeader();\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class SendReadyAutoStart extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(3124);\r\n            this.packHeader();\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class SendStartGame extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.START_GAME);\r\n            this.packHeader();\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class SendPing extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(0);\r\n            this.setCmdId(Code.PING_PONG);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendDanhBai extends OutPacket {\r\n        constructor(a: boolean, b) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.DANH_BAI);\r\n            this.packHeader();\r\n            this.putByte(a);\r\n            if (!a) {\r\n                this.putShort(b.length);\r\n                for (let c = 0; c < b.length; c++) this.putByte(b[c]);\r\n            }\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class SendBoLuot extends OutPacket {\r\n        constructor(a: boolean) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.DANH_BAI);\r\n            this.packHeader();\r\n            this.putByte(a);\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class SendRequestLeaveGame extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.REQUEST_LEAVE_ROOM);\r\n            this.packHeader();\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class SendBaoSam extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.BAO_SAM);\r\n            this.packHeader();\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class SendHuyBaoSam extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.HUY_BAO_SAM);\r\n            this.packHeader();\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class ReceivedJoinRoomSuccess extends InPacket {\r\n        myChair = 0;\r\n        moneyBet = 0;\r\n        roomOwner = 0;\r\n        roomId = 0;\r\n        gameId = 0;\r\n        moneyType = 0;\r\n        playerSize = 0;\r\n        playerStatus = [];\r\n        playerInfos = [];\r\n        gameAction = 0;\r\n        handCardSizeSize = 0;\r\n        handCardSize = [];\r\n        currentChair = 0;\r\n        countDownTime = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.myChair = this.getByte();\r\n            this.moneyBet = this.getLong();\r\n            this.roomOwner = this.getByte();\r\n            this.roomId = this.getInt();\r\n            this.gameId = this.getInt();\r\n            this.moneyType = this.getByte();\r\n            this.playerSize = this.getShort();\r\n            this.playerStatus = [];\r\n            for (var a = 0; a < this.playerSize; a++) this.playerStatus.push(this.getByte());\r\n            this.playerSize = this.getShort();\r\n            this.playerInfos = [];\r\n            for (var a = 0; a < this.playerSize; a++) {\r\n                var b = {\r\n                    avatar: this.getString(),\r\n                    nickName: this.getString(),\r\n                    money: this.getLong()\r\n                };\r\n                this.playerInfos.push(b)\r\n            }\r\n            this.gameAction = this.getByte();\r\n            this.handCardSizeSize = this.getShort();\r\n            this.handCardSize = [];\r\n            for (var a = 0; a < this.handCardSizeSize; a++) this.handCardSize.push(this.getByte());\r\n            this.currentChair = this.getByte();\r\n            this.countDownTime = this.getByte()\r\n        }\r\n    }\r\n\r\n    export class ReceivedDisconnect extends InPacket {\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ReceivedUpdateGameInfo extends InPacket {\r\n        maxPlayer: number;\r\n        myChair: number;\r\n        cards: any[];\r\n        baoSam: boolean;\r\n        boLuot: boolean;\r\n        toiTrang: number;\r\n        newRound: boolean;\r\n        gameServerState: number;\r\n        gameAction: number;\r\n        activeTimeRemain: number;\r\n        currentChair: number;\r\n        recentCards: any[];\r\n        moneyType: number;\r\n        moneyBet: number;\r\n        gameId: number;\r\n        roomId: number;\r\n        playerStatus: any[];\r\n        hasInfoList: any[];\r\n        playerInfos: any[];\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            var a = 0;\r\n            this.maxPlayer = this.getByte();\r\n            this.myChair = this.getByte();\r\n            var b = this.getShort();\r\n            this.cards = [];\r\n            for (a = 0; a < b; a++) this.cards.push(this.getByte());\r\n            this.baoSam = this.getBool();\r\n            this.boLuot = this.getBool();\r\n            this.toiTrang = this.getInt();\r\n            this.newRound = this.getBool();\r\n            this.gameServerState = this.getByte();\r\n            this.gameAction = this.getByte();\r\n            this.activeTimeRemain = this.getByte();\r\n            this.currentChair = this.getByte();\r\n            b = this.getShort();\r\n            this.recentCards = [];\r\n            for (a = 0; a < b; a++) this.recentCards.push(this.getByte());\r\n            this.moneyType = this.getByte();\r\n            this.moneyBet = this.getLong();\r\n            this.gameId = this.getInt();\r\n            this.roomId = this.getInt();\r\n            b = this.getShort();\r\n            this.playerStatus = [];\r\n            this.hasInfoList = [];\r\n            this.playerInfos = [];\r\n            for (a = 0; a < b; a++) this.hasInfoList.push(this.getBool());\r\n            var info = {};\r\n            for (a = 0; a < 5; a++) info = {}, this.hasInfoList[a] ? (info[\"cards\"] = this.getByte(), info[\"baosam\"] = this.getBool(), info[\"huybaosam\"] = this.getBool(), this.playerStatus.push(this.getByte()),\r\n                info[\"avatar\"] = this.getString(), info[\"uID\"] = this.getInt(), info[\"nickName\"] = this.getString(), info[\"money\"] = this.getLong()) : this.playerStatus.push(0), this.playerInfos.push(info)\r\n        }\r\n    }\r\n\r\n    export class ReceivedAutoStart extends InPacket {\r\n        isAutoStart = false;\r\n        autoStartTime = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.isAutoStart = this.getBool();\r\n            this.autoStartTime = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ReceivedChiaBai extends InPacket {\r\n        cardSize = 0;\r\n        cards = [];\r\n        toiTrang = 0;\r\n        timeBaoSam = 0;\r\n        gameId = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            var a = 0;\r\n            this.cardSize = this.getShort();\r\n            this.cards = [];\r\n            for (a = 0; a < this.cardSize; a++) this.cards.push(this.getByte());\r\n            this.toiTrang = this.getByte();\r\n            this.timeBaoSam = this.getByte();\r\n            this.gameId = this.getInt()\r\n        }\r\n    }\r\n\r\n    export class ReceivedDanhBai extends InPacket {\r\n        chair = 0;\r\n        cards = [];\r\n        numberCard = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte();\r\n            var b = this.getShort();\r\n            this.cards = [];\r\n            for (var a = 0; a < b; a++) this.cards.push(this.getByte());\r\n            this.numberCard = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ReceivedBoluot extends InPacket {\r\n        chair = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte()\r\n        }\r\n    }\r\n\r\n    export class ReceivedChangeTurn extends InPacket {\r\n        newRound = false;\r\n        chair = 0;\r\n        chairLastTurn = 0;\r\n        time = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.newRound = this.getBool();\r\n            this.chair = this.getByte();\r\n            this.chairLastTurn = this.getByte();\r\n            //  cc.log(\"chairLastTurn: \" + this.chairLastTurn);\r\n            this.time = this.getByte()\r\n        }\r\n    }\r\n\r\n    export class ReceivedWaitBonDoiThong extends InPacket {\r\n        chair = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte()\r\n        }\r\n    }\r\n\r\n    export class ReceivedEndGame extends InPacket {\r\n        winTypes = [];\r\n        ketQuaTinhTienList = [];\r\n        cards = [];\r\n        sizeWinType = 0;\r\n        kqTinhTienSize = 0;\r\n        currentMoney = [];\r\n        countDown = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.winTypes = [];\r\n            this.ketQuaTinhTienList = [];\r\n            this.cards = [];\r\n            this.sizeWinType = this.getShort();\r\n            //  cc.log(\"sizeWinType: \" + this.sizeWinType);\r\n            for (var a = 0; a < this.sizeWinType; a++) this.winTypes.push(this.getByte());\r\n            this.kqTinhTienSize = this.getShort();\r\n            for (a = 0; a < this.kqTinhTienSize; a++) this.ketQuaTinhTienList.push(this.getLong());\r\n            var b = this.getShort();\r\n            this.currentMoney = [];\r\n            for (var a = 0; a < b; a++) this.currentMoney.push(this.getLong());\r\n            for (var a = 0; a < SamConstant.Config.MAX_PLAYER; a++) {\r\n                for (var b = this.getShort(), c = [], d = 0; d < b; d++) c.push(this.getByte());\r\n                this.cards.push(c)\r\n            }\r\n            this.countDown = this.getByte()\r\n        }\r\n    }\r\n\r\n    export class ReceivedFirstTurnDecision extends InPacket {\r\n        isRandom = false;\r\n        chair = 0;\r\n        cardSize = 0;\r\n        cards = [];\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.isRandom = this.getBool();\r\n            this.chair = this.getByte();\r\n            this.cardSize = this.getShort();\r\n            this.cards = [];\r\n            for (var a = 0; a < this.cardSize; a++) {\r\n                var b = this.getByte();\r\n                this.cards.push(b);\r\n                //  cc.log(\"cardFirstTurn: \" + a + \" \" + b)\r\n            }\r\n        }\r\n    }\r\n\r\n    export class ReceivedChatChong extends InPacket {\r\n        winChair = 0;\r\n        lostChair = 0;\r\n        winMoney = 0;\r\n        lostMoney = 0;\r\n        winCurrentMoney = 0;\r\n        lostCurrentMoney = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.winChair = this.getByte();\r\n            this.lostChair = this.getByte();\r\n            this.winMoney = this.getLong();\r\n            this.lostMoney = this.getLong();\r\n            this.winCurrentMoney = this.getLong();\r\n            this.lostCurrentMoney = this.getLong()\r\n        }\r\n    }\r\n\r\n    export class ReceivedPingPong2 extends InPacket {\r\n        id = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.id = this.getLong()\r\n        }\r\n    }\r\n\r\n    export class UserLeaveRoom extends InPacket {\r\n        chair = 0;\r\n        nickName = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte();\r\n            this.nickName = this.getString()\r\n        }\r\n    }\r\n\r\n    export class ReceiveUserJoinRoom extends InPacket {\r\n        info = {};\r\n        uChair = 0;;\r\n        uStatus = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.info = {\r\n                nickName: this.getString(),\r\n                avatar: this.getString(),\r\n                money: this.getLong()\r\n            };\r\n            this.uChair = this.getByte();\r\n            this.uStatus = this.getByte()\r\n        }\r\n    }\r\n\r\n    export class ReceivedUpdateMatch extends InPacket {\r\n        myChair = 0;\r\n        hasInfo = [];\r\n        infos = [];\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.myChair = this.getByte();\r\n            var a = this.getShort();\r\n            this.hasInfo = [];\r\n            for (var b = 0; b < a; b++) this.hasInfo.push(this.getBool());\r\n            this.infos = [];\r\n            for (b = 0; b < a; b++) {\r\n                var c = {\r\n                    money: this.getLong(),\r\n                    status: this.getInt()\r\n                };\r\n                this.hasInfo[b] && (c.money, c.status);\r\n                this.infos.push(c)\r\n            }\r\n        }\r\n    }\r\n\r\n    export class ReceiveSamConfig extends InPacket {\r\n        listSize = 0;\r\n        list = [];\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.listSize = this.getShort();\r\n            this.list = [];\r\n            for (var a = 0; a < this.listSize; a++) {\r\n                var b = {\r\n                    maxUserPerRoom: this.getByte(),\r\n                    moneyType: this.getByte(),\r\n                    moneyBet: this.getLong(),\r\n                    moneyRequire: this.getLong(),\r\n                    nPersion: this.getInt()\r\n                };\r\n                this.list.push(b)\r\n            }\r\n        }\r\n    }\r\n\r\n    export class ReceivedNotifyRegOutRoom extends InPacket {\r\n        outChair = 0;\r\n        isOutRoom = false;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.outChair = this.getByte();\r\n            this.isOutRoom = this.getBool()\r\n        }\r\n    }\r\n\r\n    export class ReceivedKickOff extends InPacket {\r\n        reason = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.reason = this.getByte()\r\n        }\r\n    }\r\n\r\n    export class ReceivePingPong extends InPacket {\r\n        test = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.test = this.getLong()\r\n        }\r\n    }\r\n\r\n    export class ReceiveBaoSam extends InPacket {\r\n        chair = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte()\r\n        }\r\n    }\r\n\r\n    export class ReceiveHuyBaoSam extends InPacket {\r\n        chair = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte()\r\n        }\r\n    }\r\n\r\n    export class ReceivedQuyetDinhSam extends InPacket {\r\n        chair = 0;\r\n        isSam = false;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte();\r\n            this.isSam = this.getBool();\r\n        }\r\n    };\r\n\r\n    export class ReceivedChatRoom extends InPacket {\r\n        chair: number;\r\n        isIcon: boolean;\r\n        content: string;\r\n        nickname: string;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte();\r\n            this.isIcon = this.getBool();\r\n            this.content = decodeURI(this.getString());\r\n            this.nickname = this.getString()\r\n        }\r\n    }\r\n\r\n    export class SendChatRoom extends OutPacket {\r\n        constructor(a: number, b: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHAT_ROOM);\r\n            this.packHeader();\r\n            this.putByte(a ? 1 : 0);\r\n            this.putString(encodeURI(b));\r\n            this.updateSize();\r\n        }\r\n    }\r\n}\r\nexport default SamCmd;","export namespace SamConstant {\r\n    export class GameState {\r\n        static NONE = -1;\r\n        static AUTOSTART = 0;\r\n        static JOINROOM = 4;\r\n        static FIRSTTURN = 1;\r\n        static CHIABAI = 2;\r\n        static CHANGETURN = 3;\r\n        static USERJOIN = 5;\r\n        static DANHBAI = 6;\r\n        static BOLUOT = 7;\r\n        static QUIT = 8;\r\n        static USERLEAVE = 12;\r\n        static ENDGAME = 13;\r\n        static UPDATEMATH = 14;\r\n        static UPDATEOWNERROOM = 15;\r\n        static PLAYCONTINUE = 16;\r\n        static CHATCHONG = 17;\r\n        static JACKPOT = 18;\r\n        static REASONQUIT = 19;\r\n        static NOTIFYOUTROOM = 20;\r\n        static WAITBONDOITHONG = 21;\r\n    }\r\n\r\n    export class Config {\r\n        static MAX_PLAYER = 5;\r\n        static MAX_CARDS = 13;\r\n    }\r\n\r\n    export class SortType {\r\n        static kSortTangDan = 0;\r\n        static kSortGroup = 1;\r\n        static kSortUnkown = 2;\r\n    }\r\n\r\n    export class PlayerType {\r\n        static MY = 0;\r\n        static ENEMY = 1;\r\n        static STATENONE = 0;\r\n        static STATEVIEWING = 1;\r\n        static STATEBAOSAM = 2;\r\n    }\r\n}\r\nexport default SamConstant;","import SamPlayer from \"./Sam.Player\"\r\nimport SamNetworkClient from \"../Script/networks/SamNetworkClient\";\r\nimport SamCmd from \"./Sam.Cmd\";\r\nimport Room from \"./Sam.Room\";\r\nimport InGame from \"../TienLenScript/TienLenz.InGame\"\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SamInGame extends InGame {\r\n\r\n    public static instance: SamInGame = null;\r\n\r\n    @property({\r\n        type: SamPlayer,\r\n        override: true\r\n    })\r\n    players: SamPlayer[] = [];\r\n\r\n    onLoad() {\r\n        SamInGame.instance = this;\r\n        this.initRes();\r\n    }\r\n\r\n    actLeaveRoom() {\r\n        SamNetworkClient.getInstance().send(new SamCmd.SendRequestLeaveGame());\r\n    }\r\n\r\n    userLeaveRoom(data) {\r\n        var chair = this.convertChair(data.chair);\r\n        this.players[chair].setLeaveRoom();\r\n        if (chair == 0) {\r\n            this.show(false);\r\n            Room.instance.show(true);\r\n            Room.instance.refreshRoom();\r\n        }\r\n    }\r\n\r\n    chiaBai(data) {\r\n        super.chiaBai(data);\r\n        this.setActiveButtons([\"bt_sam\", \"bt_huy_sam\"], [true, true]);\r\n        this.players.forEach(p => {\r\n            if (p.active)\r\n                p.setTimeRemain(data.timeBaoSam);\r\n        });\r\n    }\r\n\r\n    sendSubmitTurn(cardSelected) {\r\n        SamNetworkClient.getInstance().send(new SamCmd.SendDanhBai(!1, cardSelected));\r\n    }\r\n\r\n    sendPassTurn() {\r\n        SamNetworkClient.getInstance().send(new SamCmd.SendBoLuot(!0));\r\n    }\r\n\r\n    actBaoSam() {\r\n        SamNetworkClient.getInstance().send(new SamCmd.SendBaoSam());\r\n    }\r\n\r\n    actHuyBaoSam() {\r\n        SamNetworkClient.getInstance().send(new SamCmd.SendHuyBaoSam());\r\n    }\r\n\r\n    onBaoSam(data) {\r\n        var chair = this.convertChair(data.chair);\r\n        var p = this.players[chair];\r\n        p.setTimeRemain(0);\r\n        p.setStatus(\"BÁO SÂM\");\r\n        if (data.chair == this.myChair)\r\n            this.setActiveButtons([\"bt_sam\", \"bt_huy_sam\"], [false, false]);\r\n    }\r\n\r\n    onHuyBaoSam(data) {\r\n        var chair = this.convertChair(data.chair);\r\n        var p = this.players[chair];\r\n        p.setTimeRemain(0);\r\n        p.setStatus(\"HUỶ SÂM\");\r\n        if (data.chair == this.myChair)\r\n            this.setActiveButtons([\"bt_sam\", \"bt_huy_sam\"], [false, false]);\r\n    }\r\n\r\n    onQuyetDinhSam(data) {\r\n        this.setActiveButtons([\"bt_sam\", \"bt_huy_sam\"], [false, false]);\r\n        if (data.isSam) {\r\n            var chair = this.convertChair(data.chair);\r\n            var p = this.players[chair];\r\n            if (p.active)\r\n                this.showToast(p.info.nickName + \" được quyền báo sâm\");\r\n        }\r\n    }\r\n\r\n    notifyUserRegOutRoom(res) {\r\n        let outChair = res[\"outChair\"];\r\n        let isOutRoom = res[\"isOutRoom\"];\r\n        let chair = this.convertChair(outChair);\r\n        if (chair == 0) {\r\n            if (isOutRoom) {\r\n                this.players[chair].setNotify(\"Sắp rời bàn !\");\r\n            } else {\r\n                this.players[chair].setNotify(\"Khô Máu !\");\r\n            }\r\n        }\r\n    }\r\n\r\n    playerChat(res) {\r\n        let chair = res[\"chair\"];\r\n        let isIcon = res[\"isIcon\"];\r\n        let content = res[\"content\"];\r\n\r\n        let seatId = this.convertChair(chair);\r\n        if (isIcon) {\r\n            // Chat Icon\r\n            this.players[seatId].showChatEmotion(content);\r\n        } else {\r\n            // Chat Msg\r\n            this.players[seatId].showChatMsg(content);\r\n        }\r\n    }\r\n\r\n\r\n    playerChatChong(res) {\r\n        let winChair = res[\"winChair\"];\r\n        let lostChair = res[\"lostChair\"];\r\n        let winMoney = res[\"winMoney\"];\r\n        let lostMoney = res[\"lostMoney\"];\r\n        let winCurrentMoney = res[\"winCurrentMoney\"];\r\n        let lostCurrentMoney = res[\"lostCurrentMoney\"];\r\n\r\n        setTimeout(() => {\r\n            let seatIdWin = this.convertChair(winChair);\r\n            let seatIdLost = this.convertChair(lostChair);\r\n            this.players[seatIdWin].setCoinChange(winMoney);\r\n            this.players[seatIdLost].setCoinChange(lostMoney);\r\n            this.players[seatIdWin].setCoin(winCurrentMoney);\r\n            this.players[seatIdLost].setCoin(lostCurrentMoney);\r\n            setTimeout(() => {\r\n                this.players[seatIdWin].setStatus(\"\");\r\n                this.players[seatIdLost].setStatus(\"\");\r\n            }, 2000);\r\n        }, 1000);\r\n    }\r\n\r\n    showPopupGuide() {\r\n        this.popupGuide.active = true;\r\n    }\r\n\r\n    closePopupGuide() {\r\n        this.popupGuide.active = false;\r\n    }\r\n\r\n    // Chat\r\n    showUIChat() {\r\n        this.UI_Chat.active = true;\r\n        this.UI_Chat.runAction(\r\n            cc.moveTo(0.5, 420, 0)\r\n        );\r\n    }\r\n\r\n    closeUIChat() {\r\n        this.UI_Chat.runAction(\r\n            cc.moveTo(0.5, 1000, 0)\r\n        );\r\n    }\r\n\r\n    chatEmotion(event, id) {\r\n        //  cc.log(\"BaCay chatEmotion id : \", id);\r\n        SamNetworkClient.getInstance().send(new SamCmd.SendChatRoom(1, id));\r\n        this.closeUIChat();\r\n    }\r\n\r\n    chatMsg() {\r\n        if (this.edtChatInput.string.trim().length > 0) {\r\n            SamNetworkClient.getInstance().send(new SamCmd.SendChatRoom(0, this.edtChatInput.string));\r\n            this.edtChatInput.string = \"\";\r\n            this.closeUIChat();\r\n        }\r\n    }\r\n}\r\n","import Player from \"../TienLenScript/TienLen.Playerz\"\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SamPlayer extends Player {\r\n\r\n    setCardRemain(cardSize) {\r\n        super.setCardRemain(cardSize);\r\n        if (cardSize == 1)\r\n            this.setStatus(\"BÁO\");\r\n    }\r\n}\r\n\r\n\r\n","import BundleControl from \"../../../Loading/src/BundleControl\";\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport App from \"../Script/common/App\";\r\nimport BroadcastReceiver from \"../Script/common/BroadcastReceiver\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport CardGameCmd from \"../Script/networks/CardGame.Cmd\";\r\nimport InPacket from \"../Script/networks/Network.InPacket\";\r\nimport TienLenNetworkClient from \"../Script/networks/TienLenNetworkClient\";\r\nimport SamNetworkClient from \"../Script/networks/SamNetworkClient\";\r\nimport SamCmd from \"./Sam.Cmd\";\r\nimport Tween from \"../Script/common/Tween\";\r\nimport InGame from \"./Sam.InGame\";\r\nimport Res from \"../TienLenScript/TienLen.Resz\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Room extends cc.Component {\r\n\r\n    public static instance: Room = null;\r\n\r\n    @property(cc.Node)\r\n    roomContent: cc.Node = null;\r\n    @property(cc.Prefab)\r\n    roomItem: cc.Node = null;\r\n    @property(cc.Node)\r\n    ingameNode: cc.Node = null;\r\n    @property(cc.Label)\r\n    lbCoin: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblNickname: cc.Label = null;\r\n\r\n    private ingame: InGame = null;\r\n    private listRoom = [];\r\n\r\n    onLoad() {\r\n        Room.instance = this;\r\n        Res.getInstance();\r\n        this.ingame = this.ingameNode.getComponent(InGame);\r\n        this.ingameNode.active = false;\r\n\r\n        this.lbCoin.string = Utils.formatNumber(Configs.Login.Coin);\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\r\n            this.lbCoin.string = Utils.formatNumber(Configs.Login.Coin);\r\n        }, this);\r\n\r\n        SamNetworkClient.getInstance().addOnClose(() => {\r\n            this.actBack();\r\n        }, this);\r\n\r\n        this.lblNickname.string = Configs.Login.Nickname;\r\n\r\n    }\r\n\r\n    start() {\r\n        SamNetworkClient.getInstance().addListener((data) => {\r\n            let inpacket = new InPacket(data);\r\n            let cmdId = inpacket.getCmdId();\r\n            //  cc.log(\"Sam cmd: \", cmdId);\r\n            switch (cmdId) {\r\n                case CardGameCmd.Code.LOGIN:\r\n                    SamNetworkClient.getInstance().send(new SamCmd.SendReconnectRoom());\r\n                    break;\r\n                case CardGameCmd.Code.MONEY_BET_CONFIG: {\r\n                    let res = new CardGameCmd.ResMoneyBetConfig(data);\r\n                    //  cc.log(res);\r\n                    this.listRoom = res.list;\r\n                    this.initRooms(res.list);\r\n                    break;\r\n                }\r\n                case CardGameCmd.Code.JOIN_ROOM_FAIL: {\r\n                    let res = new CardGameCmd.ReceivedJoinRoomFail(data);\r\n                    var e = \"\";\r\n                    switch (res.error) {\r\n                        case 1:\r\n                            e = \"L\\u1ed7i ki\\u1ec3m tra th\\u00f4ng tin!\";\r\n                            break;\r\n                        case 2:\r\n                            e = \"Kh\\u00f4ng t\\u00ecm \\u0111\\u01b0\\u1ee3c ph\\u00f2ng th\\u00edch h\\u1ee3p. Vui l\\u00f2ng th\\u1eed l\\u1ea1i sau!\";\r\n                            break;\r\n                        case 3:\r\n                            e = \"B\\u1ea1n kh\\u00f4ng \\u0111\\u1ee7 ti\\u1ec1n v\\u00e0o ph\\u00f2ng ch\\u01a1i n\\u00e0y!\";\r\n                            break;\r\n                        case 4:\r\n                            e = \"Kh\\u00f4ng t\\u00ecm \\u0111\\u01b0\\u1ee3c ph\\u00f2ng th\\u00edch h\\u1ee3p. Vui l\\u00f2ng th\\u1eed l\\u1ea1i sau!\";\r\n                            break;\r\n                        case 5:\r\n                            e = \"M\\u1ed7i l\\u1ea7n v\\u00e0o ph\\u00f2ng ph\\u1ea3i c\\u00e1ch nhau 10 gi\\u00e2y!\";\r\n                            break;\r\n                        case 6:\r\n                            e = \"H\\u1ec7 th\\u1ed1ng b\\u1ea3o tr\\u00ec!\";\r\n                            break;\r\n                        case 7:\r\n                            e = \"Kh\\u00f4ng t\\u00ecm th\\u1ea5y ph\\u00f2ng ch\\u01a1i!\";\r\n                            break;\r\n                        case 8:\r\n                            e = \"M\\u1eadt kh\\u1ea9u ph\\u00f2ng ch\\u01a1i kh\\u00f4ng \\u0111\\u00fang!\";\r\n                            break;\r\n                        case 9:\r\n                            e = \"Ph\\u00f2ng ch\\u01a1i \\u0111\\u00e3 \\u0111\\u1ee7 ng\\u01b0\\u1eddi!\";\r\n                            break;\r\n                        case 10:\r\n                            e = \"B\\u1ea1n b\\u1ecb ch\\u1ee7 ph\\u00f2ng kh\\u00f4ng cho v\\u00e0o b\\u00e0n!\"\r\n                    }\r\n                    App.instance.alertDialog.showMsg(e);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.JOIN_ROOM_SUCCESS: {\r\n                    let res = new SamCmd.ReceivedJoinRoomSuccess(data);\r\n                    //  cc.log(res);\r\n                    this.show(false);\r\n                    this.ingame.show(true, res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.UPDATE_GAME_INFO: {\r\n                    let res = new SamCmd.ReceivedUpdateGameInfo(data);\r\n                    //  cc.log(\"Sam UPDATE_GAME_INFO res : \", res);\r\n                    this.show(false);\r\n                    this.ingame.updateGameInfo(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.AUTO_START: {\r\n                    let res = new SamCmd.ReceivedAutoStart(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.autoStart(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.USER_JOIN_ROOM: {\r\n                    let res = new SamCmd.ReceiveUserJoinRoom(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.onUserJoinRoom(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.FIRST_TURN: {\r\n                    let res = new SamCmd.ReceivedFirstTurnDecision(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.firstTurn(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.CHIA_BAI: {\r\n                    let res = new SamCmd.ReceivedChiaBai(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.chiaBai(res)\r\n                    break;\r\n                }\r\n                case SamCmd.Code.CHANGE_TURN: {\r\n                    let res = new SamCmd.ReceivedChangeTurn(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.changeTurn(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.DANH_BAI: {\r\n                    let res = new SamCmd.ReceivedDanhBai(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.submitTurn(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.BO_LUOT: {\r\n                    let res = new SamCmd.ReceivedBoluot(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.passTurn(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.END_GAME: {\r\n                    let res = new SamCmd.ReceivedEndGame(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.endGame(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.UPDATE_MATCH: {\r\n                    let res = new SamCmd.ReceivedUpdateMatch(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.updateMatch(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.USER_LEAVE_ROOM: {\r\n                    let res = new SamCmd.UserLeaveRoom(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.userLeaveRoom(res);\r\n                    break;\r\n                }\r\n                // case SamCmd.Code.RECONNECT_GAME_ROOM: {\r\n                //     let res = new SamCmd.UserLeaveRoom(data);\r\n                //     //  cc.log(res);\r\n                //     this.ingame.userLeaveRoom(res);\r\n                //     break;\r\n                // }\r\n                case SamCmd.Code.BAO_SAM: {\r\n                    let res = new SamCmd.ReceiveBaoSam(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.onBaoSam(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.HUY_BAO_SAM: {\r\n                    let res = new SamCmd.ReceiveHuyBaoSam(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.onHuyBaoSam(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.QUYET_DINH_SAM: {\r\n                    let res = new SamCmd.ReceivedQuyetDinhSam(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.onQuyetDinhSam(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.REQUEST_LEAVE_ROOM: {\r\n                    let res = new SamCmd.ReceivedNotifyRegOutRoom(data);\r\n                    //  cc.log(res);\r\n                    this.ingame.notifyUserRegOutRoom(res);\r\n                    break;\r\n                }\r\n                case SamCmd.Code.CHAT_ROOM:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new SamCmd.ReceivedChatRoom(data);\r\n                        //  cc.log(\"Sam CHAT_ROOM res : \", JSON.stringify(res));\r\n                        this.ingame.playerChat(res);\r\n                    }\r\n                    break;\r\n                case SamCmd.Code.CHAT_CHONG:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new SamCmd.ReceivedChatChong(data);\r\n                        //  cc.log(\"SAM CHAT_CHONG res : \", JSON.stringify(res));\r\n                        this.ingame.playerChatChong(res);\r\n                    }\r\n                    break;\r\n            }\r\n        }, this);\r\n\r\n        //get list room\r\n        this.refreshRoom();\r\n        SamNetworkClient.getInstance().send(new SamCmd.SendReconnectRoom());\r\n    }\r\n\r\n    initRooms(rooms) {\r\n        this.roomContent.removeAllChildren();\r\n        let names = [\"San bằng tất cả\", \"Nhiều tiền thì vào\", \"Dân chơi\", \"Bàn cho đại gia\", \"Tứ quý\", \"Bốn đôi thông\", \"Tới trắng\", \"Chặt heo\"];\r\n        for (let i = 0; i < rooms.length; i++) {\r\n            let room = rooms[i];\r\n            var item = cc.instantiate(this.roomItem);\r\n            item.getChildByName(\"lblId\").getComponent(cc.Label).string = (i + 1).toString();\r\n            item.getChildByName(\"lblName\").getComponent(cc.Label).string = names[Utils.randomRangeInt(0, names.length)];\r\n            var txts = item.getComponentsInChildren(cc.Label);\r\n            Tween.numberTo(txts[2], room.moneyRequire, 0.3);\r\n            Tween.numberTo(txts[3], room.moneyBet, 0.3);\r\n            txts[4].string = room.nPersion + \"/\" + room.maxUserPerRoom;\r\n            var progress = item.getChildByName(\"playersProgress\").getComponent(cc.Sprite);\r\n            progress.fillRange = room.nPersion / room.maxUserPerRoom;\r\n            var btnJoin = item.getComponentInChildren(cc.Button);\r\n            btnJoin.node.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n                SamNetworkClient.getInstance().send(new CardGameCmd.SendJoinRoom(Configs.App.MONEY_TYPE, room.maxUserPerRoom, room.moneyBet, 0));\r\n            });\r\n            item.parent = this.roomContent;\r\n        };\r\n    }\r\n\r\n    actBack() {\r\n        SamNetworkClient.getInstance().close();\r\n        App.instance.loadScene(\"Lobby\");\r\n    }\r\n\r\n    public show(isShow: boolean) {\r\n        this.node.active = isShow;\r\n        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n    }\r\n\r\n    refreshRoom() {\r\n        SamNetworkClient.getInstance().send(new CardGameCmd.SendMoneyBetConfig());\r\n    }\r\n\r\n    public actQuickPlay() {\r\n        if (this.listRoom == null) {\r\n            App.instance.alertDialog.showMsg(\"Không tìm thấy bàn nào phù hợp với bạn.\");\r\n            return;\r\n        }\r\n        //find all room bet < coin\r\n        let listRoom = [];\r\n        for (let i = 0; i < this.listRoom.length; i++) {\r\n            if (this.listRoom[i].moneyRequire <= Configs.Login.Coin) {\r\n                listRoom.push(this.listRoom[i]);\r\n            }\r\n        }\r\n        if (listRoom.length <= 0) {\r\n            App.instance.alertDialog.showMsg(\"Không tìm thấy bàn nào phù hợp với bạn.\");\r\n            return;\r\n        }\r\n        let randomIdx = Utils.randomRangeInt(0, listRoom.length);\r\n        let room = listRoom[randomIdx];\r\n        SamNetworkClient.getInstance().send(new CardGameCmd.SendJoinRoom(Configs.App.MONEY_TYPE, room.maxUserPerRoom, room.moneyBet, 0));\r\n    }\r\n}","import Configs from \"../../../../Loading/src/Configs\";\r\nimport Utils from \"../common/Utils\";\r\nimport CardGameNetworkClient from \"./CardGameNetworkClient\";\r\n\r\nexport default class SamNetworkClient extends CardGameNetworkClient {\r\n    \r\n    public static getInstance(): SamNetworkClient {\r\n        if (this.instance == null) {\r\n            this.instance = new SamNetworkClient();\r\n        }\r\n        return this.instance as SamNetworkClient;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    _connect() {\r\n        super.connect(Configs.App.HOST_SAM.host, Configs.App.HOST_SAM.port);\r\n    }\r\n\r\n    onOpen(ev: Event) {\r\n        super.onOpen(ev);\r\n         //Utils.Log(\"sam connected\");\r\n    }\r\n}","\r\nconst { ccclass, property } = cc._decorator;\r\nvar DIRECTION = cc.Enum({\r\n    HORIZONTAL: 1,\r\n    VERTICAL: 2,\r\n});\r\n@ccclass\r\n\r\nexport default class ScrollViewControl extends cc.Component {\r\n    @property({ type: DIRECTION })\r\n    direction = DIRECTION.VERTICAL;\r\n    @property(cc.Prefab)\r\n    itemTemplate: cc.Prefab = null\r\n\r\n    @property(cc.Node)\r\n    itemNodeTemplate: cc.Node = null\r\n\r\n    @property(cc.ScrollView)\r\n    scrollView: cc.ScrollView = null\r\n    @property\r\n    itemHeight = 80;\r\n    @property\r\n    itemWidth = 80;\r\n    @property\r\n    spacing = 5 // space between each item\r\n\r\n    totalCount = 0 // how many items we need for the whole list\r\n    @property\r\n    initCount = 20;\r\n    @property\r\n    bufferZone = 500 // when item is away from bufferZone, we relocate it\r\n\r\n    @property\r\n    isLazyInit: boolean = false;\r\n\r\n    items = []\r\n    updateTimer = 0\r\n    updateInterval = 0.05\r\n    lastContentPosY = 0\r\n    lastContentPosX = 0\r\n    initHeight = 0;\r\n\r\n    listItemRemove = []\r\n    idKeys = []\r\n\r\n    updateCallback = null\r\n    setDataCb = null;\r\n    listItemData = []\r\n\r\n\r\n    // use this for initialization\r\n    onLoad() {\r\n        if (this.direction == DIRECTION.HORIZONTAL) {\r\n            // this.initCount = Math.floor((this.scrollView.node.width + this.scrollView.node.width / 2) * (cc.winSize.width / 1280) / this.itemWidth);\r\n            this.initCount = Math.floor(this.initCount * (cc.winSize.width / 1280));\r\n\r\n        }\r\n        this.initialize();\r\n        if (this.itemNodeTemplate) {\r\n            this.itemHeight = this.itemNodeTemplate.height;\r\n            this.itemWidth = this.itemNodeTemplate.width;\r\n        }\r\n    }\r\n    start() {\r\n       \r\n    }\r\n\r\n    setDataList(_updateCallback, _listItemData) {\r\n        this.setDataCb = () => {\r\n            this.setDataList(_updateCallback, _listItemData);\r\n        }\r\n        this.updateCallback = _updateCallback\r\n        this.listItemData = _listItemData\r\n        this.totalCount = this.listItemData.length;\r\n        if (this.direction == DIRECTION.VERTICAL) {\r\n            this.scrollView.content.height = this.totalCount * (this.itemHeight + this.spacing) + this.spacing; // get total content height\r\n        } else {\r\n            this.scrollView.content.width = this.totalCount * (this.itemWidth + this.spacing) + this.spacing; // get total content height\r\n        }\r\n\r\n        if (this.totalCount === 0 || this.totalCount <= this.items.length) {\r\n            for (let i = this.totalCount; i < this.items.length; i++) {\r\n                this.listItemRemove.push(this.items[i])\r\n                this.items[i].parent = null\r\n                this.items.splice(i, 1);\r\n                i--;\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this.listItemRemove.length; i++) {\r\n\r\n                this.items.push(this.listItemRemove[i])\r\n                this.listItemRemove[i].parent = this.scrollView.content;\r\n                this.listItemRemove.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n        if (this.direction == DIRECTION.VERTICAL) {\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                this.items[i].setPosition(0, -this.items[i].height * (0.5 + i) - this.spacing * (i + 1));\r\n                this.items[i].itemID = i;\r\n                if (this.updateCallback !== null && i < this.listItemData.length) {\r\n                    this.listItemData[i]['index'] = i;\r\n                    this.updateCallback(this.items[i], this.listItemData[i])\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                this.items[i].setPosition(this.items[i].width * (0.5 + i) + this.spacing * (i + 1), 0);\r\n                this.items[i].itemID = i;\r\n                if (this.updateCallback !== null && this.listItemData[i] != null) {\r\n                    this.updateCallback(this.items[i], this.listItemData[i])\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    updateDataList(_listItemData) {\r\n        this.listItemData = _listItemData;\r\n        this.totalCount = this.listItemData.length;\r\n        if (this.direction == DIRECTION.VERTICAL) {\r\n            this.scrollView.content.height = this.totalCount * (this.itemHeight + this.spacing) + this.spacing; // get total content height\r\n        } else {\r\n            this.scrollView.content.width = this.totalCount * (this.itemWidth + this.spacing) + this.spacing; // get total content height\r\n        }\r\n    }\r\n    initialize() {\r\n        if (this.direction == DIRECTION.VERTICAL) {\r\n            this.scrollView.content.height = this.totalCount * (this.itemHeight + this.spacing) + this.spacing; // get total content height\r\n        } else {\r\n            this.scrollView.content.width = this.totalCount * (this.itemWidth + this.spacing) + this.spacing; // get total content height\r\n        }\r\n\r\n        for (let i = 0; i < this.initCount; ++i) { // spawn items, we only need to do this once\r\n            let item;\r\n            if (cc.isValid(this.itemTemplate)) {\r\n                item = cc.instantiate(this.itemTemplate);\r\n                this.scrollView.content.addChild(item);\r\n            } else {\r\n                if (i == 0) {\r\n                    item = this.itemNodeTemplate;\r\n                } else {\r\n                    if (cc.isValid(this.scrollView.content.children[i])) {\r\n                        item = this.scrollView.content.children[i];\r\n                    } else {\r\n                        item = cc.instantiate(this.itemNodeTemplate);\r\n                        this.scrollView.content.addChild(item);\r\n                    }\r\n                }\r\n            }\r\n            if (this.direction == DIRECTION.VERTICAL) {\r\n                item.setPosition(0, -item.height * (0.5 + i) - this.spacing * (i + 1));\r\n            } else {\r\n                item.setPosition(item.width * (0.5 + i) + this.spacing * (i + 1), 0);\r\n            }\r\n            item['itemID'] = i;\r\n            this.items.push(item);\r\n        }\r\n        if (this.listItemData.length > 0) {\r\n            this.setDataCb();\r\n        }\r\n    }\r\n\r\n    getPositionInView(item) { // get item position in scrollview's node space\r\n        let worldPos = item.parent.convertToWorldSpaceAR(item.getPosition());\r\n        let viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);\r\n        return viewPos;\r\n    }\r\n    update(dt) {\r\n        if (this.listItemData.length <= this.initCount) return;\r\n\r\n        this.updateTimer += dt;\r\n        if (this.updateTimer < this.updateInterval) return; // we don't need to do the math every frame\r\n        this.updateTimer = 0;\r\n        let items = this.items;\r\n        let buffer = this.bufferZone;\r\n        let isDown = false;\r\n        let offset;\r\n        if (this.direction == DIRECTION.VERTICAL) {\r\n            isDown = this.scrollView.content.y < this.lastContentPosY; // scrolling direction\r\n            offset = (this.itemHeight + this.spacing) * items.length;\r\n\r\n        } else {\r\n            isDown = this.scrollView.content.x > this.lastContentPosX; // scrolling direction\r\n            offset = (this.itemWidth + this.spacing) * items.length;\r\n        }\r\n        for (let i = 0; i < items.length; ++i) {\r\n            let viewPos = this.getPositionInView(items[i]);\r\n            if (isDown) {\r\n                if (this.direction == DIRECTION.VERTICAL) {\r\n                    if (viewPos.y < -buffer && items[i].y + offset < 0) {\r\n                        items[i].y = items[i].y + offset;\r\n                        let itemId = items[i].itemID - items.length; // update item id\r\n                        items[i].itemID = itemId;\r\n                        if (this.updateCallback !== null) {\r\n                            this.updateCallback(items[i], this.listItemData[itemId])\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (viewPos.x > buffer && items[i].x - offset > 0) {\r\n                        items[i].x = items[i].x - offset;\r\n                        let itemId = items[i].itemID - items.length; // update item id\r\n                        items[i].itemID = itemId;\r\n                        if (this.updateCallback !== null)\r\n                            this.updateCallback(items[i], this.listItemData[itemId])\r\n                    }\r\n                }\r\n                // if away from buffer zone and not reaching top of content\r\n\r\n            } else {\r\n                // if away from buffer zone and not reaching bottom of content\r\n                if (this.direction === DIRECTION.VERTICAL) {\r\n                    if (viewPos.y > buffer && items[i].y - offset > -this.scrollView.content.height) {\r\n                        items[i].y = items[i].y - offset;\r\n                        let itemId = items[i].itemID + items.length;\r\n                        items[i].itemID = itemId;\r\n                        if (this.updateCallback !== null) {\r\n                            this.updateCallback(items[i], this.listItemData[itemId])\r\n                        }\r\n\r\n                    }\r\n                } else {\r\n                    if (viewPos.x < -buffer && items[i].x + offset < this.scrollView.content.width) {\r\n                        items[i].x = items[i].x + offset;\r\n                        let itemId = items[i].itemID + items.length;\r\n                        items[i].itemID = itemId;\r\n                        if (this.updateCallback !== null)\r\n                            this.updateCallback(items[i], this.listItemData[itemId])\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        // update lastContentPosY\r\n        this.lastContentPosY = this.scrollView.content.y;\r\n        this.lastContentPosX = this.scrollView.content.x;\r\n    }\r\n    setStateItem(state) {\r\n        this.scrollView.content.children.forEach((item) => {\r\n            item.active = state;\r\n        })\r\n    }\r\n}\r\n","import Configs from \"../../../../Loading/src/Configs\";\r\nimport App from \"../common/App\";\r\nimport Utils from \"../common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\nclass NotifyListener {\r\n    target: cc.Component;\r\n    callback: (route: string, data: Object) => void;\r\n\r\n    constructor(target: cc.Component, callback: (route: string, data: Object) => void) {\r\n        this.target = target;\r\n        this.callback = callback;\r\n    }\r\n}\r\n\r\nclass RequestListener {\r\n    target: cc.Component;\r\n    callback: (res: Object) => void;\r\n\r\n    constructor(target: cc.Component, callback: (res: Object) => void) {\r\n        this.target = target;\r\n        this.callback = callback;\r\n    }\r\n}\r\n\r\nclass NetworkListener {\r\n    target: cc.Component;\r\n    callback: () => void;\r\n\r\n    constructor(target: cc.Component, callback: () => void) {\r\n        this.target = target;\r\n        this.callback = callback;\r\n    }\r\n}\r\n\r\n@ccclass\r\nexport default class ShootFishNetworkClient {\r\n    private static instance: ShootFishNetworkClient;\r\n    private static reqId = 0;\r\n    public static MIN_PING = -1;\r\n    public static PING = 0;\r\n    public static TIME_DISTANCE = 0;\r\n    private static NODE_FIXED = new cc.Node().addComponent(cc.Sprite);\r\n    public static serverCurrentTimeMillis(): number {\r\n        //c - s = d\r\n        //-s = d-c\r\n        //s = -(d-c)\r\n        //s = -d + c\r\n        //s = c - d\r\n        return Date.now() - this.TIME_DISTANCE + Math.round(ShootFishNetworkClient.MIN_PING / 2);\r\n    }\r\n    public static systemCurrentTimeMillis(): number {\r\n        return Date.now();\r\n    }\r\n\r\n    public isUseWSS: boolean = Configs.App.USE_WSS;\r\n    public isAutoReconnect: boolean = true;\r\n\r\n    private ws: WebSocket = null;\r\n    private host: string = Configs.App.HOST_SHOOT_FISH.host;\r\n    private port: number = Configs.App.HOST_SHOOT_FISH.port;\r\n    // private host: string = \"gamebaiyoyo.com\";\r\n    // private port: number = 2083;\r\n    private isForceClose = false;\r\n    private onOpenes: Array<NetworkListener> = [];\r\n    private onCloses: Array<NetworkListener> = [];\r\n    private xorKey = \"dmVyeSBzZWNyZXQ\";\r\n    private requests: Object = new Object();\r\n    private intervalPing: number = -1;\r\n\r\n    private listeners: Array<NotifyListener> = new Array<NotifyListener>();\r\n\r\n    private isLogining = false;\r\n    private isLogined = false;\r\n    private onLogined: (logined) => void = null;\r\n\r\n    public static getInstance(): ShootFishNetworkClient {\r\n        if (this.instance == null) {\r\n            this.instance = new ShootFishNetworkClient();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    public checkConnect(onLogined: (isLogined) => void) {\r\n        this.onLogined = onLogined;\r\n        if (!this.isConnected()) {\r\n            App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n            this.connect();\r\n        } else if (!this.isLogined) {\r\n            this.login();\r\n        } else {\r\n            this.onLogined(this.isLogined);\r\n        }\r\n    }\r\n\r\n    private login() {\r\n        if (this.isLogining) return;\r\n        this.isLogining = true;\r\n        App.instance.showErrLoading(\"Đang đăng nhập...\");\r\n        // this.request(\"quickLogin\", {\r\n        //     \"deviceId\": \"shoot123456654\" + Configs.Login.Nickname,\r\n        //     \"platform\": \"android\",\r\n        //     \"language\": \"vi\"\r\n        // }, (res) => {\r\n        this.request(\"xxenglogin\", {\r\n            \"username\": Configs.Login.Username,\r\n            \"password\": md5(Configs.Login.Password),\r\n            \"platform\": Configs.App.getPlatformName(),\r\n        }, (res) => {\r\n            this.isLogining = false;\r\n            App.instance.showLoading(false);\r\n        //    console.log(res);\r\n            if (!res[\"ok\"]) {\r\n                if (this.onLogined != null) this.onLogined(false);\r\n                return;\r\n            }\r\n        //    console.log(\"login oke\");\r\n\r\n            this.isLogined = true;\r\n            Configs.Login.CoinFish = res[\"cash\"];\r\n            Configs.Login.UsernameFish = res[\"username\"];\r\n            Configs.Login.PasswordFish = res[\"password\"];\r\n            Configs.Login.UserIdFish = res[\"userId\"];\r\n            Configs.Login.FishConfigs = res[\"config\"];\r\n\r\n            if (this.onLogined != null) this.onLogined(true);\r\n        }, ShootFishNetworkClient.NODE_FIXED);\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    private onOpen(ev: Event) {\r\n     //   console.log(\"onOpen\");\r\n        this.intervalPing = setInterval(() => this.ping(), 3000);\r\n        this.ping();\r\n\r\n        for (let i = 0; i < this.onOpenes.length; i++) {\r\n            let listener = this.onOpenes[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback();\r\n            } else {\r\n                this.onOpenes.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n\r\n        if (this.onLogined != null) this.login();\r\n    }\r\n\r\n    private onMessage(ev: MessageEvent) {\r\n        let data = new Uint8Array(ev.data);\r\n        data = this.doXOR(data, 0, data.length);\r\n        let pack: Object = msgpack.decode(data);\r\n        if (pack.hasOwnProperty(\"msgId\")) {\r\n            if (pack[\"msgId\"] == 0) {\r\n                // console.log(pack);\r\n                for (let i = 0; i < this.listeners.length; i++) {\r\n                    let listener = this.listeners[i];\r\n                    if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                        listener.callback(pack[\"route\"], pack[\"data\"]);\r\n                    } else {\r\n                        this.listeners.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            } else {\r\n                // console.log(pack);\r\n                if (this.requests.hasOwnProperty(pack[\"msgId\"])) {\r\n                    let listener: RequestListener = this.requests[pack[\"msgId\"]];\r\n                    if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                        listener.callback(pack[\"data\"]);\r\n                    }\r\n                    delete this.requests[pack[\"msgId\"]];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private onError(ev: Event) {\r\n        App.instance.showLoading(false);\r\n   //     console.log(\"onError\");\r\n    }\r\n\r\n    private onClose(ev: Event) {\r\n      //  console.log(\"onClose\");\r\n        if (this.intervalPing > 0) clearInterval(this.intervalPing);\r\n        for (var i = 0; i < this.onCloses.length; i++) {\r\n            var listener = this.onCloses[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback();\r\n            } else {\r\n                this.onCloses.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n        if (this.isAutoReconnect && !this.isForceClose) {\r\n            setTimeout(() => {\r\n                if (!this.isForceClose) this.connect();\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    private send(msg: any) {\r\n        if (!this.isConnected()) return;\r\n        let source = msgpack.encode(msg);\r\n        source = this.doXOR(source, 0, source.length);\r\n        this.ws.send(source);\r\n    }\r\n\r\n    private doXOR(source: Uint8Array, start: number, count: number) {\r\n        let index = 0;\r\n        let end = start + count;\r\n        for (let i = start; i < end; i++) {\r\n            source[i] = (source[i] ^ Number(this.xorKey.charAt(index % this.xorKey.length)));\r\n            index++;\r\n        }\r\n        return source;\r\n    }\r\n\r\n    public connect() {\r\n    //    console.log(\"start connect: \" + this.host + \":\" + this.port);\r\n        this.isForceClose = false;\r\n        if (this.ws == null) {\r\n            // this.ws = new WebSocket(\"wss://\" + host + \":\" + port + \"/websocket\");\r\n            if (this.isUseWSS) {\r\n                if (cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID) {\r\n                    this.ws = new (Function.prototype.bind.apply(WebSocket, [null, \"wss://\" + this.host + \":\" + this.port, [], cc.url.raw(\"resources/raw/cacert.pem\")]));\r\n                } else {\r\n                    this.ws = new WebSocket(\"wss://\" + this.host + \":\" + this.port);\r\n                }\r\n            } else {\r\n                this.ws = new WebSocket(\"ws://\" + this.host + \":\" + this.port);\r\n            }\r\n            this.ws.binaryType = \"arraybuffer\";\r\n            this.ws.onopen = this.onOpen.bind(this);\r\n            this.ws.onmessage = this.onMessage.bind(this);\r\n            this.ws.onerror = this.onError.bind(this);\r\n            this.ws.onclose = this.onClose.bind(this);\r\n        } else {\r\n            if (this.ws.readyState !== WebSocket.OPEN) {\r\n                this.ws.close();\r\n                this.ws = null;\r\n                this.connect();\r\n            }\r\n        }\r\n    }\r\n\r\n    public addOnOpen(callback: () => void, target: cc.Component) {\r\n        this.onOpenes.push(new NetworkListener(target, callback));\r\n    }\r\n\r\n    public addOnClose(callback: () => void, target: cc.Component) {\r\n        this.onCloses.push(new NetworkListener(target, callback));\r\n    }\r\n\r\n    public close() {\r\n        this.isForceClose = true;\r\n        if (this.ws) {\r\n            this.ws.close();\r\n        }\r\n    }\r\n\r\n    public isConnected() {\r\n        if (this.ws) {\r\n            return this.ws.readyState == WebSocket.OPEN;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public addListener(callback: (route: string, data: Object) => void, target: cc.Component) {\r\n        this.listeners.push(new NotifyListener(target, callback));\r\n    }\r\n\r\n    public request(route: string, data: any, callback: (res: Object) => void, target: cc.Component) {\r\n        ShootFishNetworkClient.reqId++;\r\n        if (ShootFishNetworkClient.reqId > 64999) {\r\n            ShootFishNetworkClient.reqId = 1;\r\n        }\r\n        this.requests[ShootFishNetworkClient.reqId] = new RequestListener(target, callback);\r\n        // console.log({ data: typeof data != \"object\" || data == null || !data ? {} : data, msgId: ShootFishNetworkClient.reqId, route: route });\r\n        this.send({ data: typeof data != \"object\" || data == null || !data ? {} : data, msgId: ShootFishNetworkClient.reqId, route: route });\r\n    }\r\n\r\n    public notify(route: string, data: any) {\r\n        // console.log(JSON.stringify({ data: typeof data != \"object\" || data == null || !data ? {} : data, msgId: 0, route: route }));\r\n        this.send({ data: typeof data != \"object\" || data == null || !data ? {} : data, msgId: 0, route: route });\r\n    }\r\n\r\n    public ping(callback: () => void = null, target: cc.Component = null) {\r\n        let t = Date.now();\r\n        this.request(\"ping\", null, (res) => {\r\n            // console.log(res);\r\n            ShootFishNetworkClient.PING = Date.now() - t;\r\n            if (ShootFishNetworkClient.MIN_PING < 0 || ShootFishNetworkClient.PING < ShootFishNetworkClient.MIN_PING) {\r\n                ShootFishNetworkClient.MIN_PING = ShootFishNetworkClient.PING;\r\n                ShootFishNetworkClient.TIME_DISTANCE = Date.now() - res[\"time\"];\r\n            }\r\n            if (callback != null) callback();\r\n        }, target != null ? target : ShootFishNetworkClient.NODE_FIXED);\r\n    }\r\n}\r\n","import NetworkClient from \"./Network.NetworkClient\";\r\nimport OutPacket from \"./Network.OutPacket\";\r\nimport NetworkListener from \"./Network.NetworkListener\";\r\nimport cmd from \"./Network.Cmd\";\r\nimport InPacket from \"./Network.InPacket\";\r\nimport App from \"../common/App\";\r\nimport Configs from \"../../../../Loading/src/Configs\";\r\nimport Utils from \"../common/Utils\";\r\n\r\nexport default class SlotNetworkClient extends NetworkClient {\r\n    private static instance: SlotNetworkClient;\r\n\r\n    private listeners: Array<NetworkListener> = new Array<NetworkListener>();\r\n    private isLogin = false;\r\n    private onLogined: () => void = null; // callback, duoc goi khi login thanh cong\r\n\r\n    public static getInstance(): SlotNetworkClient {\r\n        if (this.instance == null) {\r\n            this.instance = new SlotNetworkClient();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.isUseWSS = Configs.App.USE_WSS;\r\n    }\r\n\r\n    public checkConnect(onLogined: () => void) {\r\n        this.onLogined = onLogined;\r\n        if (this.ws != null && this.ws.readyState == WebSocket.CONNECTING) return;\r\n        if (!this.isConnected()) {\r\n            this.connect();\r\n            return;\r\n        }\r\n        if (this.isLogin && this.onLogined != null) this.onLogined();\r\n    }\r\n\r\n    public connect() {\r\n        super.connect(Configs.App.HOST_SLOT.host, Configs.App.HOST_SLOT.port);\r\n    }\r\n\r\n    protected onError(ev: Event) {\r\n        App.instance.showLoading(false);\r\n         //Utils.Log(\"onError:\"+JSON.stringify(ev));\r\n    }\r\n\r\n    protected onOpen(ev: Event) {\r\n        super.onOpen(ev);\r\n        this.send(new cmd.SendLogin(Configs.Login.Nickname, Configs.Login.AccessToken));\r\n         //Utils.Log(\"slot connected\");\r\n    }\r\n\r\n    protected onMessage(ev: MessageEvent) {\r\n        var data = new Uint8Array(ev.data);\r\n        for (var i = 0; i < this.listeners.length; i++) {\r\n            var listener = this.listeners[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback(data);\r\n            } else {\r\n                this.listeners.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n\r\n        let inpacket = new InPacket(data);\r\n        switch (inpacket.getCmdId()) {\r\n            case cmd.Code.LOGIN:\r\n                this.isLogin = true;\r\n                if (this.onLogined != null) {\r\n                    this.onLogined();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    public addListener(callback: (data: Uint8Array) => void, target: cc.Component) {\r\n        this.listeners.push(new NetworkListener(target, callback));\r\n    }\r\n\r\n    public send(packet: OutPacket) {\r\n        for (var b = new Int8Array(packet._length), c = 0; c < packet._length; c++)\r\n            b[c] = packet._data[c];\r\n        if (this.ws != null && this.isConnected())\r\n            this.ws.send(b.buffer);\r\n    }\r\n\r\n    public sendCheck(packet: OutPacket) {\r\n        this.checkConnect(() => {\r\n            this.send(packet);\r\n        });\r\n    }\r\n}\r\n","import NetworkClient from \"./Network.NetworkClient\";\r\nimport NetworkListener from \"./Network.NetworkListener\";\r\nimport InPacket from \"./Network.InPacket\";\r\nimport cmd from \"./Network.Cmd\";\r\nimport OutPacket from \"./Network.OutPacket\";\r\nimport Configs from \"../../../../Loading/src/Configs\";\r\nimport Utils from \"../common/Utils\";\r\n\r\nexport default class TX2NetworkClient extends NetworkClient {\r\n    private static instance: TX2NetworkClient;\r\n\r\n    private listeners: Array<NetworkListener> = new Array<NetworkListener>();\r\n    private isLogin = false;\r\n    private onLogined: () => void = null;\r\n\r\n    public static getInstance(): TX2NetworkClient {\r\n        if (this.instance == null) {\r\n            this.instance = new TX2NetworkClient();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.isUseWSS = Configs.App.USE_WSS;\r\n    }\r\n\r\n    public checkConnect(onLogined: () => void = null) {\r\n        this.onLogined = onLogined;\r\n        if (this.ws != null && this.ws.readyState == WebSocket.CONNECTING) return;\r\n        if (!this.isConnected()) {\r\n            this.connect();\r\n            return;\r\n        }\r\n        if (this.isLogin && this.onLogined != null) this.onLogined();\r\n    }\r\n\r\n     connect() {\r\n        super.connect(Configs.App.HOST_TAI_XIU_MINI2.host, Configs.App.HOST_TAI_XIU_MINI2.port);\r\n    }\r\n\r\n    protected onOpen(ev: Event) {\r\n        super.onOpen(ev);\r\n        this.send(new cmd.SendLogin(Configs.Login.Nickname, Configs.Login.AccessToken));\r\n         //Utils.Log(\"tx2 connected\");\r\n    }\r\n\r\n    protected onMessage(ev: MessageEvent) {\r\n        var data = new Uint8Array(ev.data);\r\n        for (var i = 0; i < this.listeners.length; i++) {\r\n            var listener = this.listeners[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback(data);\r\n            } else {\r\n                this.listeners.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n\r\n        let inpacket = new InPacket(data);\r\n        switch (inpacket.getCmdId()) {\r\n            case cmd.Code.LOGIN:\r\n                this.isLogin = true;\r\n                if (this.onLogined != null) {\r\n                     //Utils.Log(\"Logined\");\r\n                    this.onLogined();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    public addListener(callback: (data: Uint8Array) => void, target: cc.Component) {\r\n        this.listeners.push(new NetworkListener(target, callback));\r\n    }\r\n\r\n    public send(packet: OutPacket) {\r\n        for (var b = new Int8Array(packet._length), c = 0; c < packet._length; c++)\r\n            b[c] = packet._data[c];\r\n        if (this.ws != null && this.isConnected())\r\n            this.ws.send(b.buffer);\r\n    }\r\n\r\n    public sendCheck(packet: OutPacket) {\r\n        this.checkConnect(() => {\r\n            this.send(packet);\r\n        });\r\n    }\r\n}\r\n","\r\n\r\nimport TabsListGame from \"./Lobby.TabsListGame\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TabMenuGame extends cc.Component {\r\n\r\n\r\n    @property([cc.Node])\r\n    listTab: cc.Node[] = [];\r\n\r\n    @property([cc.Toggle])\r\n    listToggle: cc.Toggle[] = [];\r\n\r\n    @property([cc.Node])\r\n    listAllGame: cc.Node[] = [];\r\n    @property([cc.Node])\r\n    listLiveGame: cc.Node[] = [];\r\n    @property([cc.Node])\r\n    listSlotGame: cc.Node[] = [];\r\n    @property([cc.Node])\r\n    listCardGame: cc.Node[] = [];\r\n    @property([cc.Node])\r\n    listMiniGame: cc.Node[] = [];\r\n    @property([cc.Node])\r\n    listGameSport: cc.Node[] = [];\r\n    @property(TabsListGame)\r\n    tabListGame: TabsListGame = null;\r\n\r\n    startIdxs: number[] = [];\r\n\r\n    onLoad() {\r\n        this.listAllGame.forEach(e => {\r\n            if (e) {\r\n                this.startIdxs.push(e.getSiblingIndex());\r\n            }\r\n        });\r\n    }\r\n\r\n    onBtnTabAll() {\r\n        for (let i = 0; i < this.listAllGame.length; i++) {\r\n            if (this.listAllGame[i]) {\r\n                this.listAllGame[i].active = true;\r\n                this.listAllGame[i].setSiblingIndex(this.startIdxs[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    onBtnTabSport() {\r\n        this.listAllGame.forEach(e => {\r\n            if (e) e.active = false;\r\n        });\r\n        let idx = 0;\r\n        this.listGameSport.forEach(e => {\r\n            if (e) {\r\n                e.active = true;\r\n                e.setSiblingIndex(idx++);\r\n            }\r\n        });\r\n    }\r\n\r\n    onBtnTabLive() {\r\n        this.listAllGame.forEach(e => {\r\n            if (e) e.active = false;\r\n        });\r\n        let idx = 0;\r\n        this.listLiveGame.forEach(e => {\r\n            if (e) {\r\n                e.active = true;\r\n                e.setSiblingIndex(idx++);\r\n            }\r\n        });\r\n    }\r\n\r\n    onBtnTabSlot() {\r\n        this.listAllGame.forEach(e => {\r\n            if (e) e.active = false;\r\n        });\r\n        let idx = 0;\r\n        this.listSlotGame.forEach(e => {\r\n            if (e) {\r\n                e.active = true;\r\n                e.setSiblingIndex(idx++);\r\n            }\r\n        });\r\n    }\r\n\r\n    onBtnTabMini() {\r\n        this.listAllGame.forEach(e => {\r\n            if (e) e.active = false;\r\n        });\r\n        let idx = 0;\r\n        this.listMiniGame.forEach(e => {\r\n            if (e) {\r\n                e.active = true;\r\n                e.setSiblingIndex(idx++);\r\n            }\r\n        });\r\n    }\r\n\r\n    onBtnTabCard() {\r\n        this.listAllGame.forEach(e => {\r\n            if (e) {\r\n                e.active = true;\r\n                e.setSiblingIndex(idx++);\r\n            }\r\n        });\r\n        let idx = 0;\r\n        this.listCardGame.forEach(e => {\r\n            if (e) {\r\n                e.active = true;\r\n                e.setSiblingIndex(idx++);\r\n            }\r\n        });\r\n    }\r\n    \r\n    onBtnTabFish() {\r\n        let idx = 0;\r\n        this.listAllGame.forEach(e => {\r\n            if (e) {\r\n                e.active = true;\r\n                e.setSiblingIndex(idx++);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport cmd from \"../Lobby.Cmd\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"../Script/networks/MiniGameNetworkClient\";\r\nimport BaseTabShop from \"./BaseTabShop\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport class TabPopupBank extends BaseTabShop {\r\n\r\n\r\n    @property(cc.Label)\r\n    lblBankNumber: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblBankAccountName: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblBankAddress: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lblTransNote: cc.Label = null;\r\n\r\n\r\n    @property(cc.Node)\r\n    dropdownBank: Node = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbAmount: cc.EditBox = null;\r\n\r\n    private _listBank = [];\r\n\r\n    start() {\r\n        this.lblTransNote.string = App.instance.getTextLang('txt_bank_transfer_note_9') + Configs.Login.Nickname;\r\n        App.instance.showLoading(true);\r\n\r\n\r\n        this.dropdownBank = this.dropdownBank.getComponent(\"DropDown\");\r\n        Http.get(Configs.App.API, { \"c\": 130 }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err == null) {\r\n                if (res.list_bank === undefined || res.list_bank.length == 0) {\r\n\r\n                    return;\r\n                }\r\n\r\n                let listBank = res.list_bank;\r\n                this._listBank = listBank;\r\n\r\n\r\n                let bankName = [{ optionString: App.instance.getTextLang(\"txt_select_bank\") }];\r\n                for (let i = 0; i < listBank.length; i++) {\r\n                    bankName.push({ optionString: listBank[i].bankName });\r\n                }\r\n                this.dropdownBank.clearOptionDatas();\r\n                this.dropdownBank.addOptionDatas(bankName);\r\n                this.dropdownBank.selectedIndex = 0;\r\n                this.dropdownBank.setCallBack((idx) => {\r\n                    if (idx > 0) {\r\n                        this.lblBankAddress.string = listBank[idx - 1].bankAddress;\r\n                        this.lblBankAccountName.string = listBank[idx - 1].bankAccountName;\r\n                        this.lblBankNumber.string = listBank[idx - 1].bankNumber;\r\n                    } else {\r\n                        this.lblBankAddress.string = \"\";\r\n                        this.lblBankAccountName.string = \"\";\r\n                        this.lblBankNumber.string = \"\";\r\n                    }\r\n\r\n\r\n                })\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    show(data) {\r\n         //Utils.Log(\"showTabBank:\" + JSON.stringify(data));\r\n        let listBank = data.providerConfig.banks;\r\n        this._listBank = listBank;\r\n\r\n\r\n        let bankName = [{ optionString: App.instance.getTextLang(\"txt_select_bank\") }];\r\n        for (let i = 0; i < listBank.length; i++) {\r\n            bankName.push({ optionString: listBank[i].name });\r\n        }\r\n        this.dropdownBank.clearOptionDatas();\r\n        this.dropdownBank.addOptionDatas(bankName);\r\n        this.dropdownBank.selectedIndex = 0;\r\n        this.dropdownBank.setCallBack((idx) => {\r\n            if (idx > 0) {\r\n                this.lblBankAddress.string = listBank[idx - 1].bankAddress;\r\n                this.lblBankAccountName.string = listBank[idx - 1].bankAccountName;\r\n                this.lblBankNumber.string = listBank[idx - 1].bankNumber;\r\n            } else {\r\n                this.lblBankAddress.string = \"\";\r\n                this.lblBankAccountName.string = \"\";\r\n                this.lblBankNumber.string = \"\";\r\n            }\r\n\r\n\r\n        })\r\n    }\r\n\r\n    submit() {\r\n        let ddBank = this.dropdownBank.selectedIndex;\r\n        if (ddBank == 0) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_select_bank1\"));\r\n            return;\r\n        }\r\n\r\n        let bankSelected = this._listBank[ddBank - 1].bankNumber;\r\n\r\n        let amount = Utils.formatEditBox(this.edbAmount.string);\r\n        if (amount < 10000) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_cash_in_min') + \"10.000\");\r\n            return;\r\n        }\r\n        if (amount > 200000) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_cash_in_max') + \"200.000\");\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        App.instance.showLoading(true, -1);\r\n        var request = {\r\n            \"c\": 2003,\r\n            \"fn\": bankSelected,\r\n            \"am\": amount,\r\n            \"nn\": Configs.Login.Nickname,\r\n            \"at\": Configs.Login.AccessToken,\r\n            \"pn\": \"manualbank\"\r\n        };\r\n\r\n         //Utils.Log(\"request sieutoc:\" + JSON.stringify(request) + \" : tabWell:\" + self.tabWell);\r\n        Http.get(Configs.App.API, request, (err, res) => {\r\n            App.instance.showLoading(false);\r\n             //Utils.Log(\" res:\" + JSON.stringify(res));\r\n            if (res.success == true) {\r\n                 //Utils.Log(\"princePay:\" + JSON.stringify(res));\r\n\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res.message);\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n        App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqDepositBank(bankSelected, amount));\r\n    }\r\n\r\n\r\n\r\n\r\n}","import TabTopupPaywell from \"./TabTopupPaywell\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TabTopupCard extends TabTopupPaywell {\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    @property({\r\n        type: cc.Toggle,\r\n        visible: false,\r\n        override: true\r\n    })\r\n    toggleChuyenKhoan: cc.Toggle = null;\r\n    @property({\r\n        type: cc.Toggle,\r\n        visible: false,\r\n        override: true\r\n    })\r\n    toggleSieutToc: cc.Toggle = null;\r\n    // onLoad () {}\r\n\r\n    showPayTypes() {\r\n        this.showTab(\"payasec\");\r\n    }\r\n    \r\n    hide() {\r\n        this.node.active = false;\r\n        this.tabNapThe.editMoney.tabIndex = -1;\r\n        this.tabNapThe.editName.tabIndex = -1;\r\n    }\r\n    showTab(payTypeKey) {\r\n        this.tabNapThe.show(this.data, this.dataProvider.providerName);\r\n        this.tabNapThe.editMoney.tabIndex = 0;\r\n        this.tabNapThe.editName.tabIndex = 0;\r\n    }\r\n    // update (dt) {}\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport DropDown from \"../../../Loading/Add-on/DropDown/Script/DropDown\";\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport LobbyChoseBank from \"./LobbyChoseBank\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TabTopupChuyenKhoan extends cc.Component {\r\n    @property\r\n    tabWell: string = \"\";\r\n    @property(LobbyChoseBank)\r\n    lobbyChoseBank: LobbyChoseBank = null;\r\n    @property(cc.Sprite)\r\n    btnChoseBank: cc.Sprite = null;\r\n    @property(cc.SpriteFrame)\r\n    sfChoseBank: cc.SpriteFrame = null;\r\n\r\n\r\n    @property(cc.EditBox)\r\n    editName: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editMoney: cc.EditBox = null;\r\n\r\n    @property(cc.Button)\r\n    btnXacNhan: cc.Button = null;\r\n\r\n    @property(cc.Node)\r\n    nodeArrow: cc.Node = null;\r\n\r\n    @property(DropDown)\r\n    dropCard: DropDown = null;\r\n\r\n    public data = null;\r\n    public dataBankChosing = null;\r\n    public providerName = null;\r\n    \r\n    \r\n    show(data, providerName) {\r\n        this.btnChoseBank.spriteFrame = null;\r\n        this.providerName = providerName;\r\n        this.node.active = true;\r\n        this.data = data;\r\n        this.dataBankChosing = null;\r\n        this.showBankChosing();\r\n    }\r\n\r\n    onFormatNumber() {\r\n        this.editMoney.string = Utils.formatNumberBank(this.editMoney.string).toUpperCase();\r\n    }\r\n\r\n    onFormatName() {\r\n        this.editName.string = Utils.formatNameBank(this.editName.string).toUpperCase();\r\n        if (cc.sys.isBrowser) {\r\n            this.editName.focus();\r\n        }\r\n    }\r\n    showBankChosing() {\r\n        var self = this;\r\n        if (self.tabWell == \"princePay\") {\r\n            this.nodeArrow.active = false;\r\n            this.editName.node.opacity = 255;\r\n            this.editMoney.node.opacity = 255;\r\n            this.btnXacNhan.node.opacity = 255;\r\n            this.editName.enabled = true;\r\n            this.editMoney.enabled = true;\r\n            this.btnXacNhan.interactable = true;\r\n            this.btnChoseBank.node.active = false;\r\n        }\r\n        else {\r\n            this.btnChoseBank.node.active = true;\r\n            if (this.dataBankChosing == null) {\r\n                this.nodeArrow.active = true;\r\n                this.editName.node.opacity = 50;\r\n                this.editMoney.node.opacity = 50;\r\n                this.btnXacNhan.node.opacity = 50;\r\n                this.editName.string = \"\";\r\n                this.editMoney.string = \"\";\r\n                this.btnChoseBank.spriteFrame = this.sfChoseBank;\r\n                this.btnChoseBank.node.scale = 1;\r\n                this.editName.enabled = false;\r\n                this.editMoney.enabled = false;\r\n                this.btnXacNhan.interactable = false;\r\n            }\r\n            else {\r\n                this.nodeArrow.active = false;\r\n                this.editName.node.opacity = 255;\r\n                this.editMoney.node.opacity = 255;\r\n                this.btnXacNhan.node.opacity = 255;\r\n                this.editName.enabled = true;\r\n                this.editMoney.enabled = true;\r\n                this.btnXacNhan.interactable = true;\r\n                if (self.tabWell == \"clickpay\") {\r\n                    cc.loader.load(this.dataBankChosing.bank_code, function (err, texture) {\r\n                        var newSpriteFrame = new cc.SpriteFrame(texture);\r\n                        self.btnChoseBank.spriteFrame = newSpriteFrame;\r\n                        self.btnChoseBank.node.scale = 1;\r\n                    });\r\n                }\r\n                else {\r\n                    cc.loader.load(this.dataBankChosing.imageUrl, function (err, texture) {\r\n                        var newSpriteFrame = new cc.SpriteFrame(texture);\r\n                        self.btnChoseBank.spriteFrame = newSpriteFrame;\r\n                        self.btnChoseBank.node.scale = 1;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    onBtnXacNhan() {\r\n        var money = Utils.formatEditBox(this.editMoney.string);\r\n        if (this.providerName == \"paywell\") {\r\n            if (money < 100000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\") + \" 100.000\");\r\n                return;\r\n            }\r\n            if (money > 300000000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\") + \" 300.000.000\");\r\n                return;\r\n            }\r\n        }\r\n        else if (this.providerName == \"princewell\") {\r\n            if (money < 50000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\") + \" 50.000\");\r\n                return;\r\n            }\r\n            if (money > 300000000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\") + \" 300.000.000\");\r\n                return;\r\n            }\r\n        }\r\n        else if (this.providerName == \"clickpay\") {\r\n            if (money < 200000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\") + \" 200.000\");\r\n                return;\r\n            }\r\n            if (money > 300000000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\") + \" 300.000.000\");\r\n                return;\r\n            }\r\n        }\r\n        if (this.editName.string == \"\" || this.editMoney.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n            return;\r\n        }\r\n        if (this.editName.string.indexOf(' ') == -1) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_bank_transfer_note_10\"));\r\n            return;\r\n        }\r\n        if (this.tabWell != \"princePay\") {\r\n            if (this.dataBankChosing == null) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                return;\r\n            }\r\n        }\r\n        var self = this;\r\n        App.instance.showLoading(true, -1);\r\n        let request = {\r\n            \"c\": 2003,\r\n            \"fn\": encodeURIComponent(this.editName.string.trim()),\r\n            \"am\": money,\r\n            \"pt\": 1,\r\n            \"nn\": Configs.Login.Nickname,\r\n            \"at\": Configs.Login.AccessToken,\r\n            \"pn\": this.providerName\r\n        };\r\n        if (self.tabWell != \"princePay\") {\r\n            request[\"bc\"] = this.dataBankChosing.key;\r\n        }\r\n        if (self.tabWell == \"clickpay\") {\r\n            request[\"bc\"] = this.dataBankChosing.code;\r\n        }\r\n        Http.get(Configs.App.API, request, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (res.success == true) {\r\n\r\n                if (self.tabWell == \"princePay\") {\r\n                    var url = JSON.parse(res.data);\r\n                    App.instance.openWebView(url.payurl);\r\n                }\r\n                else if (self.tabWell == \"clickpay\") {\r\n                    var url = JSON.parse(res.data);\r\n                    cc.sys.openURL(url.redirect_url);\r\n                }\r\n                else {\r\n                    App.instance.openWebView(res.data);\r\n                }\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res.message);\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    onBtnChoseBank() {\r\n        var self = this;\r\n        if (self.tabWell == \"clickpay\") {\r\n            if (Configs.Login.ClickPayPayment != null) {\r\n                this.lobbyChoseBank.init(self.tabWell, this.data.banks, (dataBankChosing) => {\r\n                    self.dataBankChosing = dataBankChosing;\r\n                    self.showBankChosing();\r\n                });\r\n                this.lobbyChoseBank.show();\r\n            }\r\n            else {\r\n                App.instance.showLoading(true);\r\n                var request = {\r\n                    \"c\": 2014,\r\n                    \"pn\": this.providerName\r\n                };\r\n                Http.get(Configs.App.API, request, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                    Configs.Login.ClickPayPayment = Configs.Login.ListPayment[3].providerConfig.banks = res;\r\n\r\n                    this.lobbyChoseBank.init(self.tabWell, this.data.banks, (dataBankChosing) => {\r\n                        self.dataBankChosing = dataBankChosing;\r\n                        self.showBankChosing();\r\n                    });\r\n                    this.lobbyChoseBank.show();\r\n                });\r\n            }\r\n\r\n        }\r\n        else {\r\n            //  cc.log(\"Data Topup Chuyen khoan:\", self.data);\r\n            this.lobbyChoseBank.init(self.tabWell, self.data.banks, (dataBankChosing) => {\r\n                self.dataBankChosing = dataBankChosing;\r\n                self.showBankChosing();\r\n            });\r\n            this.lobbyChoseBank.show();\r\n        }\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\nimport TabPopupChuyenKhoan from \"./TabTopupChuyenKhoan\";\r\nimport TabPopupSieuToc from \"./TabTopupSieuToc\";\r\nimport BaseTabShop from \"./BaseTabShop\";\r\n@ccclass\r\nexport default class TabTopupClickPay extends BaseTabShop{\r\n\r\n    @property(TabPopupChuyenKhoan)\r\n    tabChuyenKhoan:TabPopupChuyenKhoan=null;\r\n\r\n    @property(TabPopupSieuToc)\r\n    tabSieuToc:TabPopupSieuToc=null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleChuyenKhoan:cc.Toggle=null;\r\n    @property(cc.Toggle)\r\n    toggleSieutToc:cc.Toggle=null;\r\n\r\n\r\n    private dataProvider =null;\r\n    private data = null;\r\n    show(data){\r\n        super.show(data);\r\n        this.dataProvider = data;\r\n        this.data= data.providerConfig;\r\n        this.showPayTypes();\r\n        this.onBtnChoseTab(null,\"quickPay\");\r\n    }\r\n\r\n    hide(){\r\n        super.hide();\r\n        this.tabChuyenKhoan.editMoney.tabIndex = -1;\r\n        this.tabChuyenKhoan.editName.tabIndex = -1;\r\n        this.tabSieuToc.editMoney.tabIndex = -1;\r\n        this.tabSieuToc.editName.tabIndex = -1;\r\n    }\r\n\r\n    showPayTypes(){\r\n        this.toggleChuyenKhoan.node.active = false;\r\n        this.toggleSieutToc.node.active = false;\r\n        for(var i=0;i<this.data.payType.length;i++){\r\n            if(this.data.payType[i].status == 1){\r\n                if(this.data.payType[i].name == \"quickPay\"){\r\n                    this.toggleSieutToc.node.active = true;\r\n                }\r\n                else if(this.data.payType[i].name == \"banking\"){\r\n                    this.toggleChuyenKhoan.node.active = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    showTab(payTypeKey){\r\n        if(payTypeKey == \"quickPay\"){\r\n            this.tabSieuToc.show(this.data,this.dataProvider.providerName);\r\n            this.tabChuyenKhoan.hide();\r\n\r\n            this.tabChuyenKhoan.editMoney.tabIndex = -1;\r\n            this.tabChuyenKhoan.editName.tabIndex = -1;\r\n            this.tabSieuToc.editMoney.tabIndex = 0;\r\n            this.tabSieuToc.editName.tabIndex = 0;\r\n        }\r\n        else{\r\n            this.tabSieuToc.hide();\r\n            this.tabChuyenKhoan.show(this.data,this.dataProvider.providerName);\r\n\r\n            this.tabChuyenKhoan.editMoney.tabIndex = 0;\r\n            this.tabChuyenKhoan.editName.tabIndex = 0;\r\n            this.tabSieuToc.editMoney.tabIndex = -1;\r\n            this.tabSieuToc.editName.tabIndex = -1;\r\n        }\r\n    }\r\n\r\n    onBtnChoseTab(target,data){\r\n        var payTypeKey = data;\r\n        this.showTab(payTypeKey);\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport BaseTabShop from \"./BaseTabShop\";\r\nimport TabTopupChuyenKhoan from \"./TabTopupChuyenKhoan\";\r\nimport TabTopupManualBank from \"./TabTopupManualBank\";\r\nimport TapTopupManualMomo from \"./TabTopupManualMomo\";\r\nimport TapTopupManualZalo from \"./TabTopupManualZalo\";\r\nimport TabTopupMomo from \"./TabTopupMomo\";\r\nimport TabBanks from \"./Lobby.PopupThes\";\r\nimport TabTopupSieuToc from \"./TabTopupSieuToc\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TabTopupGame extends BaseTabShop {\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TabTopupGameBank extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    nodeInfoTransfer: cc.Node = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbAccountName: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbBankNumber: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    edbMoneyAmount: cc.EditBox = null;\r\n\r\n    @property(cc.Button)\r\n    btnConfirm: cc.Button = null;\r\n    bankCode = \"\";\r\n    transMsg = \"\"\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    onClickConfirm() {\r\n        let accountName = this.edbAccountName.string.trim();\r\n        let amount = this.edbMoneyAmount.string.trim();\r\n        let bankNumber = this.edbBankNumber.string.trim();\r\n        if (accountName == \"\" || amount == \"\" || bankNumber == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang('txt_input_all'));\r\n            return;\r\n        }\r\n        this.transMsg = this.generateTransMsg();\r\n        Http.get(Configs.App.API,\r\n            {\r\n                \"c\": 2003,\r\n                \"nn\": Configs.Login.Nickname,\r\n                \"at\": Configs.Login.AccessToken,\r\n                \"pt\": 1,\r\n                \"ds\": this.transMsg,\r\n                \"bc\": this.bankCode,\r\n                \"pn\": \"manual\",\r\n                \"bn\": parseInt(bankNumber)\r\n            },\r\n            (err, res) => {\r\n                App.instance.showLoading(false);\r\n                //  cc.log(res);\r\n                if (res['success']) {\r\n                    \r\n                }\r\n            });\r\n    }\r\n   \r\n    // update (dt) {}\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport BaseTabShop from \"./BaseTabShop\";\r\nimport TabTopupChuyenKhoan from \"./TabTopupChuyenKhoan\";\r\nimport TabTopupManualBank from \"./TabTopupManualBank\";\r\nimport TapTopupManualMomo from \"./TabTopupManualMomo\";\r\nimport TapTopupManualZalo from \"./TabTopupManualZalo\";\r\nimport TabTopupMomo from \"./TabTopupMomo\";\r\nimport TabTopupSieuToc from \"./TabTopupSieuToc\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TabTopupGame extends BaseTabShop {\r\n\r\n    @property(cc.Toggle)\r\n    toggleChuyenKhoan: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleZalo: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleMomo: cc.Toggle = null;\r\n\r\n    @property(cc.Label)\r\n    lbContentBanking: cc.Label = null;\r\n\r\n    @property(TabTopupManualBank)\r\n    tabChuyenKhoan: TabTopupManualBank = null;\r\n    @property(TapTopupManualMomo)\r\n    tabManualMomo: TapTopupManualMomo = null;\r\n    @property(TapTopupManualZalo)\r\n    tabManualZalo: TapTopupManualZalo = null;\r\n\r\n\r\n\r\n    private dataProvider = null;\r\n    private data = null;\r\n    private payTypesAlive = null;\r\n    show(data) {\r\n        super.show(data);\r\n        this.dataProvider = data;\r\n        this.data = data.providerConfig;\r\n        this.showPayTypes();\r\n    }\r\n\r\n    hide() {\r\n        super.hide();\r\n        this.tabChuyenKhoan.editName.tabIndex = -1;\r\n        this.tabChuyenKhoan.editMoney.tabIndex = -1;\r\n        this.tabChuyenKhoan.editBankNumber.tabIndex = -1;\r\n    }\r\n    showPayTypes() {\r\n        this.toggleChuyenKhoan.node.active = false;\r\n        this.toggleZalo.node.active = false;\r\n        this.toggleMomo.node.active = false;\r\n        var isFind = false;\r\n        for (var i = 0; i < this.data.payType.length; i++) {\r\n            if (this.data.payType[i].status == 1) {\r\n                switch (this.data.payType[i].name) {\r\n                    case \"momo_recharge\":\r\n                        this.toggleMomo.node.active = true;\r\n                        if (!isFind) {\r\n                            this.onBtnChoseTab(null,this.data.payType[i].name);\r\n                            this.toggleMomo.isChecked = true;\r\n                            isFind = true;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    showTab(payTypeKey) {\r\n        else if (payTypeKey == \"momo_recharge\") {\r\n            this.tabChuyenKhoan.hide();\r\n            this.tabManualZalo.hide();\r\n            this.tabManualMomo.show(this.data, this.dataProvider.providerName);\r\n            this.tabManualMomo.editMoney.tabIndex = 0;\r\n            this.tabManualMomo.editBankNumber.tabIndex=0;\r\n            this.tabManualMomo.editName.tabIndex = 0;\r\n\r\n        }\r\n    }\r\n    onBtnChoseTab(target, data) {\r\n        var payTypeKey = data;\r\n        this.showTab(payTypeKey);\r\n    }\r\n    onClickNap(even, data) {\r\n\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport LobbyChoseBank from \"./LobbyChoseBank\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TabTopupManualBank extends cc.Component {\r\n    @property\r\n    tabWell: string = \"\";\r\n    @property(LobbyChoseBank)\r\n    lobbyChoseBank: LobbyChoseBank = null;\r\n    @property(cc.Sprite)\r\n    btnChoseBank: cc.Sprite = null;\r\n    @property(cc.SpriteFrame)\r\n    sfChoseBank: cc.SpriteFrame = null;\r\n\r\n\r\n    @property(cc.EditBox)\r\n    editName: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editMoney: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editBankNumber: cc.EditBox = null;\r\n\r\n    @property(cc.Button)\r\n    btnXacNhan: cc.Button = null;\r\n\r\n    @property(cc.Node)\r\n    nodeArrow: cc.Node = null;\r\n    @property(cc.Node)\r\n    nodeInput: cc.Node = null;\r\n    @property(cc.Node)\r\n    nodeInfoTrans: cc.Node = null;\r\n    @property(cc.Label)\r\n    lbTransMsg: cc.Label = null;\r\n\t@property(cc.Label)\r\n    lbBankAccount: cc.Label = null;\r\n\t@property(cc.Label)\r\n    lbBankNumber: cc.Label = null;\r\n\t@property(cc.Label)\r\n    lbBank: cc.Label = null;\r\n\tprivate _listBank = [];\r\n\r\n    private data = null;\r\n    private dataBankChosing = null;\r\n    private providerName = null;\r\n    show(data, providerName) {\r\n        this.btnChoseBank.spriteFrame = null;\r\n        this.btnChoseBank.node.active = true;\r\n        this.providerName = providerName;\r\n        this.node.active = true;\r\n        this.data = data;\r\n        this.dataBankChosing = null;\r\n        this.showBankChosing();\r\n        this.nodeInput.active = true;\r\n        this.nodeInfoTrans.active = false;\r\n        this.editName.string = this.editMoney.string = this.editBankNumber.string = \"\";\r\n        this.editBankNumber.placeholder = App.instance.getTextLang('txt_account_number');\r\n        if (this.dataBankChosing != null) {\r\n            this.editName.enabled = true;\r\n            this.editMoney.enabled = true;\r\n            this.editBankNumber.enabled = true;\r\n            this.btnXacNhan.interactable = true;\r\n        } else {\r\n            this.editName.enabled = false;\r\n            this.editMoney.enabled = false;\r\n            this.editBankNumber.enabled = false;\r\n            this.btnXacNhan.interactable = false;\r\n        }\r\n    }\r\n    onLoad() {\r\n    }\r\n\r\n    onFormatNumber() {\r\n        this.editMoney.string = Utils.formatNumberBank(this.editMoney.string).toUpperCase();\r\n    }\r\n\r\n    onFormatName() {\r\n        this.editName.string = Utils.formatNameBank(this.editName.string).toUpperCase();\r\n        if (cc.sys.isBrowser) {\r\n            this.editName.focus();\r\n        }\r\n    }\r\n    onEdbBankNumberChange() {\r\n        if (cc.sys.isBrowser) {\r\n            this.editBankNumber.focus();\r\n        }\r\n    }\r\n    showBankChosing() {\r\n        var self = this;\r\n\r\n        this.btnChoseBank.node.active = true;\r\n        if (this.dataBankChosing == null) {\r\n            this.nodeArrow.active = true;\r\n            this.editName.node.opacity = 50;\r\n            this.editMoney.node.opacity = 50;\r\n            this.btnXacNhan.node.opacity = 50;\r\n            this.editBankNumber.node.opacity = 50;\r\n            this.editName.string = \"\";\r\n            this.editMoney.string = \"\";\r\n            this.btnChoseBank.spriteFrame = this.sfChoseBank;\r\n            this.btnChoseBank.node.scale = 1;\r\n            this.editName.enabled = false;\r\n            this.editMoney.enabled = false;\r\n            this.editBankNumber.enabled = true;\r\n            this.btnXacNhan.interactable = false;\r\n        }\r\n        else {\r\n            this.nodeArrow.active = false;\r\n            this.editName.node.opacity = 255;\r\n            this.editMoney.node.opacity = 255;\r\n            this.btnXacNhan.node.opacity = 255;\r\n            this.editBankNumber.node.opacity = 255;\r\n            this.editName.enabled = true;\r\n            this.editMoney.enabled = true;\r\n            this.editBankNumber.enabled = true;\r\n            this.btnXacNhan.interactable = true;\r\n            cc.loader.load(this.dataBankChosing.imageUrl, function (err, texture) {\r\n                var newSpriteFrame = new cc.SpriteFrame(texture);\r\n                self.btnChoseBank.spriteFrame = newSpriteFrame;\r\n                self.btnChoseBank.node.scale = 1;\r\n            });\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    onBtnXacNhan() {\r\n        if (this.node.active) {\r\n            var money = Utils.formatEditBox(this.editMoney.string);\r\n            var bankNumber = this.editBankNumber.string.trim();\r\n            if (this.editMoney.string == \"\" || bankNumber == \"\" || this.editName.string.trim() == \"\" || this.dataBankChosing == null) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                return;\r\n            }\r\n            if (money < 100000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\") + \" 100.000\");\r\n                return;\r\n            }\r\n            if (money > 300000000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\") + \" 300.000.000\");\r\n                return;\r\n            }\r\n            var self = this;\r\n            App.instance.showLoading(true, -1);\r\n            //Utils.Log(\"chuyen khoan:\" + encodeURIComponent(this.editName.string.trim()));\r\n            var request = {\r\n                \"c\": 2003,\r\n                \"fn\": encodeURIComponent(this.editName.string.trim()),\r\n                \"am\": money,\r\n                \"pt\": 1,\r\n                \"nn\": Configs.Login.Nickname,\r\n                \"at\": Configs.Login.AccessToken,\r\n                \"pn\": this.providerName,\r\n                \"bc\": this.dataBankChosing['name'],\r\n                \"ds\": this.generateTransMsg(),\r\n                \"bn\": bankNumber\r\n            };\r\n\t\t\tHttp.get(Configs.App.API, { \"c\": 130 }, (err, res) => {\r\n                let listBank = res.list_bank;\r\n                this._listBank = listBank;\r\n                        this.lbBank.string = listBank[0].bankName;\r\n                        this.lbBankNumber.string = listBank[0].bankNumber;\r\n                        this.lbBankAccount.string = listBank[0].bankAccountName;\r\n            });\r\n       \r\n            this.lbTransMsg.string = request['ds'];\r\n\t\t//\tthis.lbBankNumber.string = listBank.bankNumber;\r\n\t\t//\tthis.lbBankAccount.string = listBank.bankAccountName;\r\n\t\t//\tthis.lbBank.string = listBank.bankName;\r\n\t\t\t\r\n            Http.get(Configs.App.API, request, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                //  cc.log(res);\r\n                if (res.success == true) {\r\n                    this.nodeInput.active = false;\r\n                    this.nodeInfoTrans.active = true;\r\n                }\r\n                else {\r\n                    App.instance.ShowAlertDialog(res.message);\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    onBtnChoseBank() {\r\n        var self = this;\r\n        this.lobbyChoseBank.init(self.tabWell, self.data.banks, (dataBankChosing) => {\r\n            self.dataBankChosing = dataBankChosing;\r\n            self.showBankChosing();\r\n        });\r\n        this.lobbyChoseBank.show();\r\n    }\r\n    generateTransMsg() {\r\n        return (Configs.Login.Nickname);\r\n    }\r\n}\r\n","import Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport { Global } from \"../../../Loading/src/Global\";\r\nimport SPUtils from \"../Script/common/SPUtils\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TapTopupManualMomo extends cc.Component {\r\n    @property(cc.Sprite)\r\n    btnChoseBank: cc.Sprite = null;\r\n\t@property(cc.Button)\r\n    btnCopystk: cc.Button = null;\r\n\t@property(cc.Button)\r\n    btnCopynoidung: cc.Button = null;\r\n\r\n    @property(cc.EditBox)\r\n    editName: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editMoney: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editBankNumber: cc.EditBox = null;\r\n\r\n    @property(cc.Button)\r\n    btnXacNhan: cc.Button = null;\r\n\r\n\r\n    @property(cc.Node)\r\n    nodeInput: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeQR: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeArrow: cc.Node = null;\r\n    @property(cc.Label)\r\n    lbTransMsg: cc.Label = null;\r\n\t@property(cc.Label)\r\n    lbBankAccount: cc.Label = null;\r\n\t@property(cc.Label)\r\n    lbBankNumber: cc.Label = null;\r\n\t@property(cc.Sprite)\r\n    spriteBank: cc.Sprite = null;\r\n//\t@property(cc.Label)\r\n//    lbBank: cc.Label = null;\r\n\r\n    private providerName = null;\r\n    private data = null;\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n    show(data, providerName) {\r\n        this.providerName = providerName;\r\n        this.data = data;\r\n        this.node.active = true;\r\n        this.btnChoseBank.node.active = false;\r\n        this.nodeQR.active = false;\r\n        this.nodeInput.active = true;\r\n        this.nodeArrow.active = false;\r\n        this.editName.string = this.editMoney.string = this.editBankNumber.string = \"\";\r\n        this.editName.node.opacity = this.editBankNumber.node.opacity = this.editMoney.node.opacity = this.btnXacNhan.node.opacity = 255;\r\n        this.editName.enabled = true;\r\n        this.editMoney.enabled = true;\r\n        this.editBankNumber.enabled = true;\r\n        this.editBankNumber.placeholder = App.instance.getTextLang('txt_phone_number');\r\n        this.btnXacNhan.interactable = true;\r\n    }\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n    onClickConfirm() {\r\n        if (this.node.active) {\r\n            var money = Utils.formatEditBox(this.editMoney.string);\r\n            var bankNumber = this.editBankNumber.string.trim();\r\n            if (this.editMoney.string == \"\" || bankNumber == \"\" || this.editName.string.trim() == \"\") {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                return;\r\n            }\r\n            if (money < 10000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\") + \" 10.000\");\r\n                return;\r\n            }\r\n            if (money > 300000000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\") + \" 300.000.000\");\r\n                return;\r\n            }\r\n            var self = this;\r\n            App.instance.showLoading(true, -1);\r\n            var request = {\r\n                \"c\": 2003,\r\n                \"fn\": encodeURIComponent(this.editName.string.trim()),\r\n                \"am\": money,\r\n                \"pt\": 4,\r\n                \"nn\": Configs.Login.Nickname,\r\n                \"at\": Configs.Login.AccessToken,\r\n                \"pn\": this.providerName,\r\n                \"bc\": \"\",\r\n                \"ds\": this.generateTransMsg(),\r\n                \"bn\": bankNumber\r\n            };\r\n            Http.get(Configs.App.API, { \"c\": 130 }, (err, res) => {\r\n                let momoConfig = res.momoConfig;\r\n                this._momoConfig = momoConfig;\r\n                    //    this.lbBank.string = listBank[0].bankName;\r\n                        this.lbBankNumber.string = momoConfig.accountNumber;\r\n                        this.lbBankAccount.string = momoConfig.accountName;\r\n\t\t\t\t\t\tcc.loader.load(momoConfig.image_path, function (err, texture) {\r\n                    var newSpriteFrame = new cc.SpriteFrame(texture);\r\n                    self.spriteBank.spriteFrame = newSpriteFrame;\r\n                });\t\r\n            });\r\n\t\t\tthis.lbTransMsg.string =request['ds'];\r\n            Http.get(Configs.App.API, request, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                //  cc.log(res);\r\n                if (res.success == true) {\r\n                    this.nodeInput.active = false;\r\n                    this.nodeQR.active = true;\r\n                }\r\n                else {\r\n                    App.instance.ShowAlertDialog(res.message);\r\n                }\r\n            });\r\n\t\t\tthis.btnCopystk.node.on(\"click\", ()=> {\r\n            if (this.lbBankNumber.string.length > 0) {\r\n                \r\n                    SPUtils.copyToClipboard(this.lbBankNumber.string);\r\n\t\t\t\t\tApp.instance.alertDialog.showMsg(\"Đã sao chép số tài khoản.\");\r\n                \r\n            } else {\r\n                App.instance.alertDialog.showMsg(\"Chưa có số tài khoản.\");  \r\n            }\r\n        });\r\n\t\tthis.btnCopynoidung.node.on(\"click\", ()=> {\r\n            if (this.lbTransMsg.string.length > 0) {\r\n                SPUtils.copyToClipboard(this.lbTransMsg.string);\r\n\t\t\t\t\tApp.instance.alertDialog.showMsg(\"Đã sao chép nội dung.\");\r\n                \r\n            } else {\r\n                App.instance.alertDialog.showMsg(\"Chưa có nội dung.\");  \r\n            }\r\n        });\r\n        }\r\n    }\r\n    generateTransMsg() {\r\n        return (Configs.Login.Nickname);\r\n    }\r\n\t\r\n    // update (dt) {}\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TapTopupManualZalo extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    btnChoseBank: cc.Sprite = null;\r\n\r\n    @property(cc.EditBox)\r\n    editName: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editMoney: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editBankNumber: cc.EditBox = null;\r\n\r\n    @property(cc.Button)\r\n    btnXacNhan: cc.Button = null;\r\n@property(cc.Label)\r\n    lbBank: cc.Label = null;\r\n@property(cc.Label)\r\n    lbBankAccount: cc.Label = null;\r\n\t@property(cc.Label)\r\n    lbBankNumber: cc.Label = null;\r\n    @property(cc.Node)\r\n    nodeInput: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeQR: cc.Node = null;\r\n    @property(cc.Node)\r\n    nodeArrow: cc.Node = null;\r\n    @property(cc.Label)\r\n    lbTransMsg: cc.Label = null;\r\n\r\n    private providerName = null;\r\n    private data = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    show(data, providerName) {\r\n        this.providerName = providerName;\r\n        this.data = data;\r\n        this.node.active = true;\r\n        this.btnChoseBank.node.active = false;\r\n        this.nodeQR.active = false;\r\n        this.nodeInput.active = true;\r\n        this.nodeArrow.active = false;\r\n        this.editName.string = this.editMoney.string = this.editBankNumber.string = \"\";\r\n        // this.btnXacNhan.clickEvents[0].target = this.node;\r\n        // this.btnXacNhan.clickEvents[0].handler = \"onClickConfirm\";\r\n        // this.btnXacNhan.clickEvents[0].component = \"TabTopupManualZalo\";\r\n        this.editName.node.opacity=this.editMoney.node.opacity=this.btnXacNhan.node.opacity= 255;\r\n        this.editName.enabled = true;\r\n        this.editMoney.enabled = true;\r\n\t\t//this.editBankNumber.active=false;\r\n        this.editBankNumber.enabled=false;\r\n        this.editBankNumber.placeholder=App.instance.getTextLang('txt_account_number1');\r\n        this.btnXacNhan.interactable=true;\r\n\r\n    }\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n    onClickConfirm() {\r\n        if (this.node.active) {\r\n            var money = Utils.formatEditBox(this.editMoney.string);\r\n            var bankNumber = this.editBankNumber.string.trim();\r\n            if (this.editMoney.string == \"\" || this.editName.string.trim() == \"\") {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                return;\r\n            }\r\n            if (money < 10000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\") + \" 10.000\");\r\n                return;\r\n            }\r\n            if (money > 300000000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\") + \" 300.000.000\");\r\n                return;\r\n            }\r\n            var self = this;\r\n            App.instance.showLoading(true, -1);\r\n            var request = {\r\n                \"c\": 2003,\r\n                \"fn\": encodeURIComponent(this.editName.string.trim()),\r\n                \"am\": money,\r\n                \"pt\": 5,\r\n                \"nn\": Configs.Login.Nickname,\r\n                \"at\": Configs.Login.AccessToken,\r\n                \"pn\": this.providerName,\r\n                \"bc\": \"\",\r\n                \"ds\": this.generateTransMsg(),\r\n                \"bn\": bankNumber\r\n            };\r\n\t\t\tHttp.get(Configs.App.API, { \"c\": 130 }, (err, res) => {\r\n                let listBank = res.list_bank_auto;\r\n                this._listBank = listBank;\r\n                        this.lbBank.string = listBank[0].bankName;\r\n                        this.lbBankNumber.string = listBank[0].bankNumber;\r\n                        this.lbBankAccount.string = listBank[0].bankAccountName;\r\n            });\r\n            this.lbTransMsg.string =request['ds'];\r\n            Http.get(Configs.App.API, request, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                //  cc.log(res);\r\n                if (res.success == true) {\r\n                    this.nodeInput.active = false;\r\n                    this.nodeQR.active = true;\r\n                }\r\n                else {\r\n                    App.instance.ShowAlertDialog(res.message);\r\n                }\r\n            });\r\n        }\r\n     }\r\n     generateTransMsg() {\r\n        return (Configs.Login.Nickname);\r\n    }\r\n    // update (dt) {}\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport LobbyChoseBank from \"./LobbyChoseBank\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\n@ccclass\r\nexport default class TabTopupMomo extends cc.Component {\r\n    @property\r\n    tabWell: string = \"\";\r\n    @property(LobbyChoseBank)\r\n    lobbyChoseBank: LobbyChoseBank = null;\r\n    @property(cc.Sprite)\r\n    btnChoseBank: cc.Sprite = null;\r\n    @property(cc.SpriteFrame)\r\n    sfChoseBank: cc.SpriteFrame = null;\r\n\r\n\r\n    @property(cc.EditBox)\r\n    editName: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editMoney: cc.EditBox = null;\r\n\r\n    @property(cc.Button)\r\n    btnXacNhan: cc.Button = null;\r\n\r\n    @property(cc.Node)\r\n    nodeArrow: cc.Node = null;\r\n\r\n    private data = null;\r\n    private dataBankChosing = null;\r\n    private providerName = null;\r\n    show(data, providerName) {\r\n        this.btnChoseBank.spriteFrame = null;\r\n        this.providerName = providerName;\r\n        this.node.active = true;\r\n        this.data = data;\r\n        this.dataBankChosing = null;\r\n\r\n        this.showBankChosing();\r\n\r\n\r\n    }\r\n\r\n    onFormatNumber() {\r\n        this.editMoney.string = Utils.formatNumberBank(this.editMoney.string).toUpperCase();\r\n    }\r\n\r\n    onFormatName() {\r\n        this.editName.string = Utils.formatNameBank(this.editName.string).toUpperCase();\r\n    }\r\n    showBankChosing() {\r\n        var self = this;\r\n         //Utils.Log(\"showBankChosing:\" + self.tabWell);\r\n        if (self.tabWell == \"princePay\") {\r\n            this.nodeArrow.active = false;\r\n            this.editName.node.opacity = 255;\r\n            this.editMoney.node.opacity = 255;\r\n            this.btnXacNhan.node.opacity = 255;\r\n            this.editName.enabled = true;\r\n            this.editMoney.enabled = true;\r\n            this.btnXacNhan.interactable = true;\r\n            this.btnChoseBank.node.active = false;\r\n        }\r\n        else {\r\n            this.btnChoseBank.node.active = true;\r\n            if (this.dataBankChosing == null) {\r\n                this.nodeArrow.active = true;\r\n                this.editName.node.opacity = 50;\r\n                this.editMoney.node.opacity = 50;\r\n                this.btnXacNhan.node.opacity = 50;\r\n                this.editName.string = \"\";\r\n                this.editMoney.string = \"\";\r\n                this.btnChoseBank.spriteFrame = this.sfChoseBank;\r\n                this.btnChoseBank.node.scale = 1;\r\n                this.editName.enabled = false;\r\n                this.editMoney.enabled = false;\r\n                this.btnXacNhan.interactable = false;\r\n            }\r\n            else {\r\n                this.nodeArrow.active = false;\r\n                this.editName.node.opacity = 255;\r\n                this.editMoney.node.opacity = 255;\r\n                this.btnXacNhan.node.opacity = 255;\r\n                this.editName.enabled = true;\r\n                this.editMoney.enabled = true;\r\n                this.btnXacNhan.interactable = true;\r\n                if (self.tabWell == \"clickpay\") {\r\n                    cc.loader.load(this.dataBankChosing.bank_code, function (err, texture) {\r\n                        var newSpriteFrame = new cc.SpriteFrame(texture);\r\n                        self.btnChoseBank.spriteFrame = newSpriteFrame;\r\n                        self.btnChoseBank.node.scale = 1;\r\n                    });\r\n                }\r\n                else {\r\n                    cc.loader.load(this.dataBankChosing.imageUrl, function (err, texture) {\r\n                        var newSpriteFrame = new cc.SpriteFrame(texture);\r\n                        self.btnChoseBank.spriteFrame = newSpriteFrame;\r\n                        self.btnChoseBank.node.scale = 1;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    onBtnXacNhan() {\r\n        var money = Utils.formatEditBox(this.editMoney.string);\r\n        if (this.providerName == \"paywell\") {\r\n            if (money < 100000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\") + \" 100.000\");\r\n                return;\r\n            }\r\n            if (money > 300000000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\") + \" 300.000.000\");\r\n                return;\r\n            }\r\n        }\r\n        else if (this.providerName == \"princewell\") {\r\n            if (money < 20000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\") + \" 20.000\");\r\n                return;\r\n            }\r\n            if (money > 20000000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\") + \" 20.000.000\");\r\n                return;\r\n            }\r\n        }\r\n        else if (this.providerName == \"clickpay\") {\r\n            if (money < 200000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\") + \" 200.000\");\r\n                return;\r\n            }\r\n            if (money > 300000000) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\") + \" 300.000.000\");\r\n                return;\r\n            }\r\n        }\r\n        if (this.editName.string == \"\" || this.editMoney.string == \"\") {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n            return;\r\n        }\r\n        if (this.editName.string.indexOf(' ') == -1) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_bank_transfer_note_10\"));\r\n            return;\r\n        }\r\n        if (this.tabWell != \"princePay\") {\r\n            if (this.dataBankChosing == null) {\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                return;\r\n            }\r\n        }\r\n        var self = this;\r\n        App.instance.showLoading(true, -1);\r\n        var request = {\r\n            \"c\": 2003,\r\n            \"fn\": encodeURIComponent(this.editName.string.trim()),\r\n            \"am\": money,\r\n            \"pt\": 4,\r\n            \"nn\": Configs.Login.Nickname,\r\n            \"at\": Configs.Login.AccessToken,\r\n            \"pn\": this.providerName\r\n        };\r\n        if (self.tabWell != \"princePay\") {\r\n            request[\"bc\"] = this.dataBankChosing.key;\r\n        }\r\n        if (self.tabWell == \"clickpay\") {\r\n            request[\"bc\"] = this.dataBankChosing.code;\r\n        }\r\n        Http.get(Configs.App.API, request, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (res.success == true) {\r\n\r\n                if (self.tabWell == \"princePay\") {\r\n                    var url = JSON.parse(res.data);\r\n                    App.instance.openWebView(url.payurl);\r\n                }\r\n                else if (self.tabWell == \"clickpay\") {\r\n                    var url = JSON.parse(res.data);\r\n                    cc.sys.openURL(url.redirect_url);\r\n                }\r\n                else {\r\n                    App.instance.openWebView(res.data);\r\n                }\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(res.message);\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    onBtnChoseBank() {\r\n        var self = this;\r\n        if (self.tabWell == \"clickpay\") {\r\n            if (Configs.Login.ClickPayPayment != null) {\r\n                this.lobbyChoseBank.init(self.tabWell, this.data.banks, (dataBankChosing) => {\r\n                    self.dataBankChosing = dataBankChosing;\r\n                    self.showBankChosing();\r\n                });\r\n                this.lobbyChoseBank.show();\r\n            }\r\n            else {\r\n                App.instance.showLoading(true);\r\n                var request = {\r\n                    \"c\": 2014,\r\n                    \"pn\": this.providerName\r\n                };\r\n                Http.get(Configs.App.API, request, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                    Configs.Login.ClickPayPayment = Configs.Login.ListPayment[3].providerConfig.banks = res;\r\n\r\n                    this.lobbyChoseBank.init(self.tabWell, this.data.banks, (dataBankChosing) => {\r\n                        self.dataBankChosing = dataBankChosing;\r\n                        self.showBankChosing();\r\n                    });\r\n                    this.lobbyChoseBank.show();\r\n                });\r\n            }\r\n\r\n        }\r\n        else {\r\n            this.lobbyChoseBank.init(self.tabWell, this.data.banks, (dataBankChosing) => {\r\n                self.dataBankChosing = dataBankChosing;\r\n                self.showBankChosing();\r\n            });\r\n            this.lobbyChoseBank.show();\r\n        }\r\n    }\r\n}\r\n","import Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport TabTopupChuyenKhoan from \"./TabTopupChuyenKhoan\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TabTopupNapThe extends TabTopupChuyenKhoan {\r\n\r\n    @property(cc.Label)\r\n    lbFree: cc.Label = null;\r\n    @property({\r\n        type: cc.EditBox,\r\n        displayName: \"edbCardPin\",\r\n        override: true\r\n    })\r\n    editName: cc.EditBox = null;\r\n    @property({\r\n        type: cc.EditBox,\r\n        displayName: \"edbCardSeri\",\r\n        override: true\r\n    })\r\n    editMoney: cc.EditBox = null;\r\n\r\n    private listCard = [{ value: 10000, str: \"10.000 VNĐ\" }, { value: 20000, str: \"20.000 VNĐ\" }, { value: 50000, str: \"50.000 VNĐ\" }, { value: 100000, str: \"100.000 VNĐ\" }, { value: 200000, str: \"200.000 VNĐ\" }, { value: 500000, str: \"500.000 VNĐ\" }]\r\n    private listRateCard = [{ type: \"VNM\", fee: \"26%\" }, { type: \"GATE\", fee: \"32%\" }, { type: \"VCOIN\", fee: \"32%\" }, { type: \"VMS\", fee: \"26%\" }, { type: \"VTT\", fee: \"24%\" }, { type: \"VNP\", fee: \"26%\" }, { type: \"ZING\", fee: \"32%\" }]\r\n    show(data, providerName) {\r\n        super.show(data, providerName);\r\n        this.loadCardList();\r\n        this.lbFree.string = \"- Mỗi loại thẻ có phí nạp khác nhau.\";\r\n    }\r\n    onBtnXacNhan() {\r\n        let cardPin = this.editName.string.trim();\r\n        let seri = this.editMoney.string.trim();\r\n        var money = Utils.formatEditBox(this.dropCard.labelCaption.string);\r\n        if (seri == \"\" || cardPin == \"\" || this.dataBankChosing == null) {\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n            return;\r\n        }\r\n        App.instance.showLoading(true, -1);\r\n        let request = {\r\n            \"c\": 2033,\r\n            \"p\": cardPin,\r\n            \"sn\": seri,\r\n            \"am\": money,\r\n            \"tc\": this.dataBankChosing['key'],\r\n            \"nn\": Configs.Login.Nickname,\r\n            \"at\": Configs.Login.AccessToken,\r\n        };\r\n        //  cc.log(\"request:\", request);\r\n        Http.get(Configs.App.API, request, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            //  cc.log(res);\r\n            if (res.success == true) {\r\n                App.instance.ShowAlertDialog(\"Yêu cầu nạp thẻ đã được gửi thành công!\\nQuý khách vui lòng chờ trong ít phút!\");\r\n            }\r\n            else {\r\n                App.instance.ShowAlertDialog(\"Thông tin thẻ không đúng.\\nVui lòng kiểm tra lại!\");\r\n            }\r\n        });\r\n    }\r\n    loadCardList() {\r\n        var datas = new Array();\r\n        for (var i = 0; i < this.listCard.length; i++) {\r\n            datas.push({ optionString: this.listCard[i]['str'] });\r\n        }\r\n        this.dropCard.clearOptionDatas();\r\n        this.dropCard.addOptionDatas(datas);\r\n        this.dropCard.selectedIndex = 0;\r\n    }\r\n    onBtnChoseBank() {\r\n        this.lobbyChoseBank.init(this.tabWell, this.data.banks, (dataBankChosing) => {\r\n            this.dataBankChosing = dataBankChosing;\r\n            //  cc.log(\"data card=\", this.dataBankChosing);\r\n            for (let i = 0; i < this.listRateCard.length; i++) {\r\n                if (this.dataBankChosing['key'] == this.listRateCard[i]['type']) {\r\n                    this.lbFree.string = \"- Phí nạp: \" + this.listRateCard[i]['fee'];\r\n                }\r\n            }\r\n            this.showBankChosing();\r\n        });\r\n        this.lobbyChoseBank.show();\r\n    }\r\n}\r\n","\r\n\r\nimport Utils from \"../Script/common/Utils\";\r\nimport BaseTabShop from \"./BaseTabShop\";\r\nimport TabTopupChuyenKhoan from \"./TabTopupChuyenKhoan\";\r\nimport TabTopupNapThe from \"./TabTopupNapThe\";\r\nimport TabTopupSieuToc from \"./TabTopupSieuToc\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TabTopupPaywell extends BaseTabShop {\r\n\r\n    @property(TabTopupChuyenKhoan)\r\n    tabChuyenKhoan: TabTopupChuyenKhoan = null;\r\n\r\n    @property(TabTopupSieuToc)\r\n    tabSieuToc: TabTopupSieuToc = null;\r\n\r\n    @property(TabTopupNapThe)\r\n    tabNapThe: TabTopupNapThe = null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleChuyenKhoan: cc.Toggle = null;\r\n    @property(cc.Toggle)\r\n    toggleSieutToc: cc.Toggle = null;\r\n\r\n\r\n    public dataProvider = null;\r\n    public data = null;\r\n    show(data) {\r\n        super.show(data);\r\n        //Utils.Log(\"show TabTopupPaywell:\" + JSON.stringify(data));\r\n        this.dataProvider = data;\r\n        this.data = data.providerConfig;\r\n        this.showPayTypes();\r\n    }\r\n\r\n    hide() {\r\n        super.hide();\r\n        this.tabChuyenKhoan.editMoney.tabIndex = -1;\r\n        this.tabChuyenKhoan.editName.tabIndex = -1;\r\n        this.tabSieuToc.editMoney.tabIndex = -1;\r\n        this.tabSieuToc.editName.tabIndex = -1;\r\n    }\r\n\r\n    showPayTypes() {\r\n        this.toggleChuyenKhoan.node.active = false;\r\n        this.toggleSieutToc.node.active = false;\r\n        var isFind = false;\r\n\r\n        for (var i = 0; i < this.data.payType.length; i++) {\r\n            if (this.data.payType[i].status == 1) {\r\n                if (this.data.payType[i].name == \"quickPay\") {\r\n                    this.toggleSieutToc.node.active = true;\r\n                }\r\n                else if (this.data.payType[i].name == \"banking\") {\r\n                    this.toggleChuyenKhoan.node.active = true;\r\n                }\r\n\r\n                if (isFind == false) {\r\n                    this.onBtnChoseTab(null, this.data.payType[i].name);\r\n                    if (this.data.payType[i].name == \"quickPay\") {\r\n                        this.toggleSieutToc.isChecked = true;\r\n                    }\r\n                    else if (this.data.payType[i].name == \"banking\") {\r\n                        this.toggleChuyenKhoan.isChecked = true;\r\n                    }\r\n\r\n                    isFind = true;\r\n                }\r\n                if (this.data.payType[i].name == \"banking\") {\r\n                    this.onBtnChoseTab(null, this.data.payType[i].name);\r\n                    this.toggleSieutToc.isChecked = false;\r\n                    this.toggleChuyenKhoan.isChecked = true;\r\n                    isFind = true;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    showTab(payTypeKey) {\r\n        if (payTypeKey == \"quickPay\") {\r\n            this.tabSieuToc.show(this.data, this.dataProvider.providerName);\r\n            this.tabChuyenKhoan.hide();\r\n            this.tabChuyenKhoan.node.getChildByName(\"\");\r\n\r\n            this.tabChuyenKhoan.editMoney.tabIndex = -1;\r\n            this.tabChuyenKhoan.editName.tabIndex = -1;\r\n            if (this.tabSieuToc != null) {\r\n                this.tabSieuToc.editMoney.tabIndex = 0;\r\n                this.tabSieuToc.editName.tabIndex = -0;\r\n            }\r\n        }\r\n        else {\r\n            this.tabChuyenKhoan.show(this.data, this.dataProvider.providerName);\r\n            this.tabChuyenKhoan.editMoney.tabIndex = 0;\r\n            this.tabChuyenKhoan.editName.tabIndex = 0;\r\n            if (this.tabSieuToc != null) {\r\n                this.tabSieuToc.hide();\r\n                this.tabSieuToc.editMoney.tabIndex = -1;\r\n                this.tabSieuToc.editName.tabIndex = -1;\r\n            }\r\n        }\r\n    }\r\n    onBtnChoseTab(target, data) {\r\n        var payTypeKey = data;\r\n        this.showTab(payTypeKey);\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport BaseTabShop from \"./BaseTabShop\";\r\nimport TabTopupChuyenKhoan from \"./TabTopupChuyenKhoan\";\r\nimport TabTopupMomo from \"./TabTopupMomo\";\r\nimport TabTopupSieuToc from \"./TabTopupSieuToc\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TabTopupPaywell extends BaseTabShop{\r\n\r\n    @property(TabTopupChuyenKhoan)\r\n    tabChuyenKhoan:TabTopupChuyenKhoan=null;\r\n\r\n    @property(TabTopupSieuToc)\r\n    tabSieuToc:TabTopupSieuToc=null;\r\n\r\n    @property(TabTopupMomo)\r\n    tabMomo:TabTopupMomo=null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleChuyenKhoan:cc.Toggle=null;\r\n    @property(cc.Toggle)\r\n    toggleSieutToc:cc.Toggle=null;\r\n    @property(cc.Toggle)\r\n    toggleMomo:cc.Toggle=null;\r\n\r\n    private dataProvider =null;\r\n    private data = null;\r\n    private payTypesAlive = null;\r\n    show(data){\r\n        super.show(data);\r\n        this.dataProvider = data;\r\n        this.data= data.providerConfig;\r\n        this.showPayTypes();\r\n\r\n        \r\n    }\r\n\r\n    hide(){\r\n        super.hide();\r\n\r\n        this.tabChuyenKhoan.editMoney.tabIndex = -1;\r\n        this.tabChuyenKhoan.editName.tabIndex = -1;\r\n        this.tabSieuToc.editMoney.tabIndex = -1;\r\n        this.tabSieuToc.editName.tabIndex = -1;\r\n        this.tabMomo.editMoney.tabIndex = -1;\r\n        this.tabMomo.editName.tabIndex = -1;\r\n    }\r\n\r\n    showPayTypes(){\r\n        this.toggleChuyenKhoan.node.active = false;\r\n        this.toggleSieutToc.node.active = false;\r\n        this.toggleMomo.node.active = false;\r\n        var isFind = false;\r\n        for(var i=0;i<this.data.payType.length;i++){\r\n            if(this.data.payType[i].status == 1){\r\n                if(this.data.payType[i].name == \"quickPay\"){\r\n                    this.toggleSieutToc.node.active = true;\r\n                }\r\n                else if(this.data.payType[i].name == \"banking\"){\r\n                    this.toggleChuyenKhoan.node.active = true;\r\n                }\r\n                else{\r\n                    this.toggleMomo.node.active = true;\r\n                }\r\n                if(isFind == false) {\r\n                    this.onBtnChoseTab(null,this.data.payType[i].name);\r\n                    if(this.data.payType[i].name == \"quickPay\"){\r\n                        this.toggleSieutToc.isChecked = true;\r\n                    }\r\n                    else if(this.data.payType[i].name == \"banking\"){\r\n                        this.toggleChuyenKhoan.isChecked = true;\r\n                    }\r\n                    else{\r\n                        this.toggleMomo.isChecked = true;\r\n                    }\r\n                    isFind = true;\r\n                }\r\n                if(this.data.payType[i].name == \"banking\"){\r\n                    this.onBtnChoseTab(null,this.data.payType[i].name);\r\n                    this.toggleSieutToc.isChecked  = false;\r\n                    this.toggleMomo.isChecked = false;\r\n                    this.toggleChuyenKhoan.isChecked = true;\r\n                    isFind = true;\r\n                }\r\n               \r\n            }\r\n        }\r\n    }\r\n\r\n    showTab(payTypeKey){\r\n        if(payTypeKey == \"quickPay\"){\r\n            this.tabSieuToc.show(this.data,this.dataProvider.providerName);\r\n            this.tabChuyenKhoan.hide();\r\n            this.tabMomo.hide();\r\n\r\n            this.tabChuyenKhoan.editMoney.tabIndex = -1;\r\n            this.tabChuyenKhoan.editName.tabIndex = -1;\r\n            this.tabSieuToc.editMoney.tabIndex = 0;\r\n            this.tabSieuToc.editName.tabIndex = 0;\r\n            this.tabMomo.editMoney.tabIndex = -1;\r\n            this.tabMomo.editName.tabIndex = -1;\r\n        }\r\n        else if(payTypeKey == \"banking\"){\r\n            this.tabSieuToc.hide();\r\n            this.tabMomo.hide();\r\n            this.tabChuyenKhoan.show(this.data,this.dataProvider.providerName);\r\n            this.tabChuyenKhoan.editMoney.tabIndex = 0;\r\n            this.tabChuyenKhoan.editName.tabIndex = 0;\r\n            this.tabSieuToc.editMoney.tabIndex = -1;\r\n            this.tabSieuToc.editName.tabIndex = -1;\r\n            this.tabMomo.editMoney.tabIndex = -1;\r\n            this.tabMomo.editName.tabIndex = -1;\r\n        }\r\n        else{\r\n            this.tabChuyenKhoan.editMoney.tabIndex = -1;\r\n            this.tabChuyenKhoan.editName.tabIndex = -1;\r\n            this.tabSieuToc.editMoney.tabIndex = -1;\r\n            this.tabSieuToc.editName.tabIndex = -1;\r\n            this.tabMomo.editMoney.tabIndex = 0;\r\n            this.tabMomo.editName.tabIndex = 0;\r\n            this.tabSieuToc.hide();\r\n            this.tabChuyenKhoan.hide();\r\n            this.tabMomo.show(this.data,this.dataProvider.providerName);\r\n        }\r\n    }\r\n\r\n    onBtnChoseTab(target,data){\r\n        var payTypeKey = data;\r\n        this.showTab(payTypeKey);\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Utils from \"../Script/common/Utils\";\r\nimport BaseTabShop from \"./BaseTabShop\";\r\nimport TabTopupSieuToc from \"./TabTopupSieuToc\";\r\nimport TabTopupChuyenKhoan from \"./TabTopupSieuToc\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TabTopupPaywell extends BaseTabShop{\r\n\r\n    @property(TabTopupChuyenKhoan)\r\n    tabChuyenKhoan:TabTopupChuyenKhoan=null;\r\n\r\n    @property(TabTopupSieuToc)\r\n    tabSieuToc:TabTopupSieuToc=null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleChuyenKhoan:cc.Toggle=null;\r\n    @property(cc.Toggle)\r\n    toggleSieutToc:cc.Toggle=null;\r\n\r\n\r\n    private dataProvider =null;\r\n    private data = null;\r\n    show(data){\r\n        super.show(data);\r\n         //Utils.Log(\"show TabTopupPaywell:\"+JSON.stringify(data));\r\n        this.dataProvider = data;\r\n        this.data= data.providerConfig;\r\n        this.showPayTypes();\r\n    }\r\n\r\n    hide(){\r\n        super.hide();\r\n    }\r\n\r\n    showPayTypes(){\r\n        this.toggleChuyenKhoan.node.active = false;\r\n        this.toggleSieutToc.node.active = false;\r\n        var isFind = false;\r\n        for(var i=0;i<this.data.payType.length;i++){\r\n            if(this.data.payType[i].status == 1){\r\n                if(this.data.payType[i].name == \"quickPay\"){\r\n                    this.toggleSieutToc.node.active = true;\r\n                }\r\n                else if(this.data.payType[i].name == \"banking\"){\r\n                    this.toggleChuyenKhoan.node.active = true;\r\n                }\r\n                \r\n                if(isFind == false) {\r\n                    this.onBtnChoseTab(null,this.data.payType[i].name);\r\n                    if(this.data.payType[i].name == \"quickPay\"){\r\n                        this.toggleSieutToc.isChecked = true;\r\n                    }\r\n                    else if(this.data.payType[i].name == \"banking\"){\r\n                        this.toggleChuyenKhoan.isChecked = true;\r\n                    }\r\n                    \r\n                    isFind = true;\r\n                }\r\n                if(this.data.payType[i].name == \"banking\"){\r\n                    this.onBtnChoseTab(null,this.data.payType[i].name);\r\n                    this.toggleSieutToc.isChecked  = false;\r\n                    this.toggleChuyenKhoan.isChecked = true;\r\n                    isFind = true;\r\n                }\r\n               \r\n            }\r\n        }\r\n    }\r\n\r\n    showTab(payTypeKey){\r\n        if(payTypeKey == \"IB_ONLINE\"){\r\n            this.tabSieuToc.show(this.data,this.dataProvider.providerName);\r\n            this.tabChuyenKhoan.hide();\r\n        }\r\n        else{\r\n            this.tabSieuToc.hide();\r\n            this.tabChuyenKhoan.show(this.data,this.dataProvider.providerName);\r\n        }\r\n    }\r\n\r\n    onBtnChoseTab(target,data){\r\n        var payTypeKey = data;\r\n        this.showTab(payTypeKey);\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport LobbyChoseBank from \"./LobbyChoseBank\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n\r\n@ccclass\r\nexport default class TabTopupChuyenKhoan extends cc.Component {\r\n    @property\r\n    tabWell = \"\";\r\n    @property(LobbyChoseBank)\r\n    lobbyChoseBank:LobbyChoseBank=null;\r\n    @property(cc.Sprite)\r\n    btnChoseBank: cc.Sprite = null;\r\n    @property(cc.SpriteFrame)\r\n    sfChoseBank: cc.SpriteFrame = null;\r\n    \r\n\r\n    @property(cc.EditBox)\r\n    editName: cc.EditBox=null;\r\n\r\n    @property(cc.EditBox)\r\n    editMoney:cc.EditBox=null;\r\n\r\n    @property(cc.Button)\r\n    btnXacNhan:cc.Button=null;\r\n\r\n    @property(cc.Node)\r\n    nodeArrow:cc.Node=null;\r\n   \r\n    private data = null;\r\n    private dataBankChosing = null;\r\n    private providerName = null;\r\n    show(data,providerName){\r\n        this.btnChoseBank.spriteFrame = null;\r\n        this.providerName = providerName;\r\n        this.node.active = true;\r\n        this.data = data;\r\n        this.dataBankChosing = null;\r\n        \r\n        this.showBankChosing();\r\n\r\n       \r\n    }\r\n\r\n    showBankChosing(){\r\n        var self = this;\r\n        if(self.tabWell == \"princePay\"){\r\n            this.nodeArrow.active = false;\r\n            this.editName.node.opacity = 255;\r\n            this.editMoney.node.opacity = 255;\r\n            this.btnXacNhan.node.opacity = 255;\r\n            this.editName.enabled = true;\r\n            this.editMoney.enabled = true;\r\n            this.btnXacNhan.interactable = true;\r\n            this.btnChoseBank.node.active = false;\r\n        }\r\n        else{\r\n            this.btnChoseBank.node.active = true;\r\n            if(this.dataBankChosing == null){\r\n                this.nodeArrow.active = true;\r\n                this.editName.node.opacity = 50;\r\n                this.editMoney.node.opacity = 50;\r\n                this.btnXacNhan.node.opacity = 50;\r\n                this.editName.string = \"\";\r\n                this.editMoney.string = \"\";\r\n                this.btnChoseBank.spriteFrame = this.sfChoseBank;\r\n                this.btnChoseBank.node.scale = 1;\r\n                this.editName.enabled = false;\r\n                this.editMoney.enabled = false;\r\n                this.btnXacNhan.interactable = false;\r\n            }\r\n            else{\r\n                this.nodeArrow.active = false;\r\n                this.editName.node.opacity = 255;\r\n                this.editMoney.node.opacity = 255;\r\n                this.btnXacNhan.node.opacity = 255;\r\n                this.editName.enabled = true;\r\n                this.editMoney.enabled = true;\r\n                this.btnXacNhan.interactable = true;\r\n                if(self.tabWell == \"clickpay\"){\r\n                    cc.loader.load(this.dataBankChosing.bank_logo, function (err, texture) {\r\n                        var newSpriteFrame = new cc.SpriteFrame(texture);\r\n                        self.btnChoseBank.spriteFrame = newSpriteFrame;\r\n                        self.btnChoseBank.node.scale = 1;\r\n                    });\r\n                }\r\n                else{\r\n                    cc.loader.load(this.dataBankChosing.imageUrl, function (err, texture) {\r\n                        var newSpriteFrame = new cc.SpriteFrame(texture);\r\n                        self.btnChoseBank.spriteFrame = newSpriteFrame;\r\n                        self.btnChoseBank.node.scale = 1;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    hide(){\r\n        this.node.active = false;\r\n    }\r\n\r\n    onFormatNumber(){\r\n        this.editMoney.string= Utils.formatNumberBank(this.editMoney.string).toUpperCase();\r\n    }\r\n    \r\n    onFormatName(){\r\n        this.editName.string= Utils.formatNameBank(this.editName.string).toUpperCase();\r\n        if (cc.sys.isBrowser) {\r\n            this.editName.focus();\r\n        }\r\n    }\r\n\r\n    onBtnXacNhan(){\r\n        var money = Utils.formatEditBox(this.editMoney.string);\r\n         //Utils.Log(\"providerName:\"+this.providerName);\r\n        if(this.providerName == \"paywell\"){\r\n            if(money < 100000){\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\")+\" 100.000\");\r\n                return;\r\n            }\r\n            if(money > 300000000){\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\")+\" 300.000.000\");\r\n                return;\r\n            }\r\n        }\r\n        else if(this.providerName == \"princewell\"){\r\n            if(money < 50000){\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\")+\" 50.000\");\r\n                return;\r\n            }\r\n            if(money > 300000000){\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\")+\" 300.000.000\");\r\n                return;\r\n            }\r\n        }\r\n        else if(this.providerName == \"clickpay\"){\r\n            if(money < 200000){\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_min\")+\" 200.000\");\r\n                return;\r\n            }\r\n            if(money > 300000000){\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_cash_in_max\")+\" 300.000.000\");\r\n                return;\r\n            }\r\n        }\r\n        \r\n        if(this.editName.string == \"\" || this.editMoney.string == \"\"){\r\n            App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n            return;\r\n        }\r\n        if(this.editName.string.indexOf(' ') == -1){\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang(\"txt_bank_transfer_note_10\"));\r\n            return;\r\n        }\r\n        if(this.tabWell != \"princePay\"){\r\n            if(this.dataBankChosing == null){\r\n                App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_input_all\"));\r\n                return;\r\n            }\r\n        }\r\n        var self = this;\r\n        App.instance.showLoading(true,-1);\r\n        var request = { \r\n            \"c\": 2003,\r\n            \"fn\": encodeURIComponent(this.editName.string.trim()),\r\n            \"am\": money,\r\n            \"pt\":0,\r\n            \"nn\":Configs.Login.Nickname,\r\n            \"at\":Configs.Login.AccessToken,\r\n            \"pn\":this.providerName };\r\n            if(self.tabWell != \"princePay\"){\r\n                request[\"bc\"] =  this.dataBankChosing.key;\r\n            }\r\n            if(self.tabWell == \"clickpay\"){\r\n                request[\"bc\"] =  this.dataBankChosing.code;\r\n            }\r\n        Http.get(Configs.App.API, request, (err, res) => {\r\n            App.instance.showLoading(false);\r\n             //Utils.Log(\" res:\"+JSON.stringify(res));\r\n            if(res.success == true){\r\n                if(self.tabWell == \"princePay\"){\r\n                   \r\n                    var url = JSON.parse(res.data);\r\n                    App.instance.openWebView(url.payurl);\r\n                }\r\n                else if(self.tabWell == \"clickpay\"){\r\n                    var url = JSON.parse(res.data);\r\n                    cc.sys.openURL(url.redirect_url);\r\n                    // App.instance.openWebView(url.redirect_url);\r\n                }\r\n                else{\r\n                    App.instance.openWebView(res.data);\r\n                }\r\n            }\r\n            else{\r\n                App.instance.ShowAlertDialog(res.message);\r\n            }\r\n            \r\n                \r\n        });\r\n    }\r\n\r\n    onBtnChoseBank(){\r\n        var self = this;\r\n        if(self.tabWell == \"clickpay\"){\r\n            if(Configs.Login.ClickPayPayment != null){\r\n                this.lobbyChoseBank.init(self.tabWell,this.data.banks,(dataBankChosing)=>{\r\n                    self.dataBankChosing = dataBankChosing;\r\n                    self.showBankChosing();\r\n                });\r\n                this.lobbyChoseBank.show();\r\n            }\r\n            else{\r\n                App.instance.showLoading(true);\r\n                var request = { \r\n                    \"c\": 2014,\r\n                    \"pn\":this.providerName \r\n                };\r\n                Http.get(Configs.App.API, request, (err, res) => {\r\n                    App.instance.showLoading(false);\r\n                    Configs.Login.ClickPayPayment =  Configs.Login.ListPayment[3].providerConfig.banks = res;\r\n                    \r\n                    this.lobbyChoseBank.init(self.tabWell,this.data.banks,(dataBankChosing)=>{\r\n                        self.dataBankChosing = dataBankChosing;\r\n                        self.showBankChosing();\r\n                    });\r\n                    this.lobbyChoseBank.show();\r\n                });\r\n            }\r\n            \r\n        }\r\n        else{\r\n            this.lobbyChoseBank.init(self.tabWell,this.data.banks,(dataBankChosing)=>{\r\n                self.dataBankChosing = dataBankChosing;\r\n                self.showBankChosing();\r\n            });\r\n            this.lobbyChoseBank.show();\r\n        }\r\n    }\r\n}\r\n","import Configs from \"../../../../Loading/src/Configs\";\r\nimport App from \"../common/App\";\r\nimport Utils from \"../common/Utils\";\r\nimport NetworkListener from \"./Network.NetworkListener\";\r\nimport SockJsClient from \"./Network.SockJsClient\";\r\nexport default class TaiXiuSTNetworkClient extends SockJsClient {\r\n    private static instance: TaiXiuSTNetworkClient;\r\n    token = \"\";\r\n    public static TaiXiuSieuTocController = null;\r\n    isOpenGame = false;\r\n    private listeners: Array<NetworkListener> = new Array<NetworkListener>();\r\n    public static getInstance(): TaiXiuSTNetworkClient {\r\n        if (this.instance == null) {\r\n            this.instance = new TaiXiuSTNetworkClient();\r\n        }\r\n        return this.instance;\r\n    }\r\n    connect() {\r\n        super.connect(Configs.App.HOST_SOCKJS + Configs.App.SOCKJS_LOGIN + \"?access_token=\" + Configs.Login.AccessTokenSockJs, Configs.App.TXST_SUB_TOPIC);\r\n    }\r\n    public addListener(callback: (data: Uint8Array) => void, target: cc.Component) {\r\n        this.listeners.push(new NetworkListener(target, callback));\r\n    }\r\n    protected onMessage(data) {\r\n        for (var i = 0; i < this.listeners.length; i++) {\r\n            var listener = this.listeners[i];\r\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\r\n                listener.callback(data);\r\n            } else {\r\n                this.listeners.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n    onCustomMessage(msg, data = null) {\r\n        super.onCustomMessage(msg, data);\r\n        switch (msg) {\r\n            case \"SUBSCRIBE\":\r\n                 //Utils.Log(data);\r\n                this.listSubChannel.push(data); // add sub-id to list to check later in game;\r\n                if (data.destination == \"/user/queue/tx\") {\r\n                    TaiXiuSTNetworkClient.TaiXiuSieuTocController.gameSubscribeId = data.id;\r\n                }\r\n                break;\r\n            case \"UNSUBSCRIBE\"://event unsubscribe delete sub-id to check subscribed channel in game  before send data\r\n                 //Utils.Log(data);\r\n                for (let i = 0; i < this.listSubChannel.length; i++) {\r\n                    if (this.listSubChannel[i].id == data.id) {\r\n                        this.subscribe(this.listSubChannel[i].destination);\r\n                        this.listSubChannel.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case \"ONCLOSE\":\r\n                this.onClose(\"ONCLOSE\");\r\n                break;\r\n        }\r\n\r\n    }\r\n    onConnected() {\r\n        super.onConnected();\r\n        if (this.isOpenGame) {\r\n            App.instance.openMiniGameTaiXiuSieuToc(\"TaiXiuSieuToc\", \"TaiXiuSieuToc\");\r\n            this.isOpenGame = false;\r\n        }\r\n    }\r\n    sendBet(data) {\r\n         //Utils.Log(\"data Bet==\", data);\r\n        this.send(\"/topic/bet\", JSON.stringify(data));\r\n    }\r\n    sendChat(data) {\r\n        this.send(\"/topic/chats\", JSON.stringify(data));\r\n    }\r\n    getChatHistory() {\r\n        let data: any = {};\r\n        this.send(\"/topic/public\", JSON.stringify(data));\r\n    }\r\n    getHistorySession() {\r\n         //Utils.Log(\"getHistorySession\");\r\n        let data: any = {};\r\n        this.send(\"/topic/lichsuphien\", JSON.stringify(data));\r\n    }\r\n    checkConnect(cb) {\r\n        if (this.isConnected && this.isLogin) {\r\n            cb();\r\n        } else {\r\n            this.reconnect();\r\n        }\r\n    }\r\n\r\n    protected send(destination, data) {\r\n        var headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": \"Bearer \" + this.token\r\n        };\r\n         //Utils.Log(\"Bearer \" + this.token);\r\n        this.stompClient.send(destination, headers, data);\r\n    }\r\n    protected onClose(event) {\r\n        super.onClose(event);\r\n        if (TaiXiuSTNetworkClient.TaiXiuSieuTocController != null) {\r\n            TaiXiuSTNetworkClient.TaiXiuSieuTocController.dismiss();\r\n        }\r\n    }\r\n    getHistory(page, size, onFinished) {\r\n        let url = Configs.App.HOST_SOCKJS + \"api/tx/lichsucuoc?page=%d&size=%d&sort=id%2Cdesc\";\r\n        url = cc.js.formatStr(url, page, size);\r\n        this.requestAPI(url, onFinished);\r\n    }\r\n    getHistorySessionId(sessionid, onFinished) {\r\n        let url = Configs.App.HOST_SOCKJS + \"api/tx/thongkephien/\" + sessionid;\r\n        this.requestAPI(url, onFinished);\r\n    }\r\n    getTopHonor() {\r\n        // let url = Configs.App.HOST_SOCKJS + \"api/tx-ranks\";\r\n        // this.requestAPI(url, onFinished, \"GET\");\r\n        let data: any = {};\r\n        this.send(\"/topic/ranktx\", JSON.stringify(data));\r\n    }\r\n    requestAPI(url: string, onFinished: (err: any, json: any) => void, method = \"POST\") {\r\n        var xhr = new XMLHttpRequest();\r\n         //Utils.Log(\"url==\" + url);\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    var data = null;\r\n                    var e = null;\r\n                    try {\r\n                        data = JSON.parse(xhr.responseText);\r\n                    } catch (ex) {\r\n                        e = ex;\r\n                    }\r\n                    onFinished(e, data);\r\n                } else {\r\n                    onFinished(xhr.status, null);\r\n                }\r\n            }\r\n        };\r\n         //Utils.Log(\"Method==\" + method);\r\n        xhr.open(method, url, true);\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhr.setRequestHeader(\"Authorization\", `Bearer ${this.token}`);\r\n        xhr.send();\r\n\r\n    }\r\n}\r\n","import Utils from \"../Script/common/Utils\";\r\n\r\nconst TypeOfTurn = {\r\n\tMOT_LA: 1,\r\n\tMOT_DOI: 2,\r\n\tHAI_DOI_THONG: 12,\r\n\tSAM_CO: 3,\r\n\tSANH: 4,\r\n\tTU_QUY: 5,\r\n\tHAI_TU_QUY: 25,\r\n\tBA_DOI_THONG: 6,\r\n\tBON_DOI_THONG: 7,\r\n\tNAM_DOI_THONG: 8,\r\n\tSAU_DOI_THUONG: 9,\r\n\tSAU_DOI_THONG: 10,\r\n\tSANH_RONG: 11\r\n}\r\nclass CardGroup {\r\n\r\n\tcards = null;\r\n\tcardsBySuits = null;\r\n\r\n\tconstructor(cards) {\r\n\t\tthis.cards = CardGroup.sortCards(cards);\r\n\t\tthis.cardsBySuits = new Map<number, Array<any>>();\r\n\t\tvar _cardsBySuits = this.cardsBySuits;\r\n\t\tcards.forEach(function (value, i) {\r\n\t\t\tif (_cardsBySuits.get(value.card) === undefined)\r\n\t\t\t\t_cardsBySuits.set(value.card, [value]);\r\n\t\t\telse {\r\n\t\t\t\tvar currCards = _cardsBySuits.get(value.card);\r\n\t\t\t\tcurrCards.push(value);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgetOrderedBySuit() {\r\n\t\tvar newMap = new Map<number, Array<any>>(this.cardsBySuits);\r\n\t\tvar orderedCards = [];\r\n\t\t//tu quy\r\n\t\tfor (var [key, value] of newMap)\r\n\t\t\tif (value.length == 4) {\r\n\t\t\t\torderedCards = orderedCards.concat(value);\r\n\t\t\t\tnewMap.delete(key);\r\n\t\t\t}\r\n\t\t//3 doi thong\r\n\t\tfor (var [key, value] of newMap)\r\n\t\t\tif (value.length >= 2) {\r\n\t\t\t\tvar _key = CardGroup.getNextKey(key);\r\n\t\t\t\tif (newMap.get(_key) && newMap.get(_key).length >= 2) {\r\n\t\t\t\t\tvar __key = CardGroup.getNextKey(_key);\r\n\t\t\t\t\tif (newMap.get(__key) && newMap.get(__key).length >= 2) {\r\n\t\t\t\t\t\torderedCards = orderedCards.concat([value.shift(), value.shift()]);\r\n\t\t\t\t\t\tif (value.length <= 0)\r\n\t\t\t\t\t\t\tnewMap.delete(key);\r\n\t\t\t\t\t\tvar _value = newMap.get(_key);\r\n\t\t\t\t\t\torderedCards = orderedCards.concat([_value.shift(), _value.shift()]);\r\n\t\t\t\t\t\tif (_value.length <= 0)\r\n\t\t\t\t\t\t\tnewMap.delete(_key);\r\n\t\t\t\t\t\tvar __value = newMap.get(__key);\r\n\t\t\t\t\t\torderedCards = orderedCards.concat([__value.shift(), __value.shift()]);\r\n\t\t\t\t\t\tif (__value.length <= 0)\r\n\t\t\t\t\t\t\tnewMap.delete(__key);\r\n\t\t\t\t\t\tvar ___key = CardGroup.getNextKey(__key);\r\n\t\t\t\t\t\tif (newMap.get(___key) && newMap.get(___key).length >= 2) {\r\n\t\t\t\t\t\t\t// 4 doi thong\r\n\t\t\t\t\t\t\tvar ___value = newMap.get(___key);\r\n\t\t\t\t\t\t\torderedCards = orderedCards.concat([___value.shift(), ___value.shift()]);\r\n\t\t\t\t\t\t\tif (___value.length <= 0)\r\n\t\t\t\t\t\t\t\tnewMap.delete(___key);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\tfor (var [key, value] of newMap)\r\n\t\t\tif (value.length == 3) {\r\n\t\t\t\torderedCards = orderedCards.concat(value);\r\n\t\t\t\tnewMap.delete(key);\r\n\t\t\t}\r\n\t\tdo {\r\n\t\t\tvar sequenceSuites = CardGroup.getFirstSequenceSuit([...newMap.keys()], 3);\r\n\t\t\tif (sequenceSuites) {\r\n\t\t\t\tsequenceSuites.forEach(function (_value, i) {\r\n\t\t\t\t\torderedCards = orderedCards.concat([newMap.get(_value).shift()]);\r\n\t\t\t\t\tif (newMap.get(_value).length <= 0)\r\n\t\t\t\t\t\tnewMap.delete(_value);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} while (sequenceSuites)\r\n\t\tfor (var [key, value] of newMap)\r\n\t\t\tif (value.length == 2) {\r\n\t\t\t\torderedCards = orderedCards.concat(value);\r\n\t\t\t\tnewMap.delete(key);\r\n\t\t\t}\r\n\t\tfor (var [key, value] of newMap) {\r\n\t\t\torderedCards = orderedCards.concat(value);\r\n\t\t\tnewMap.delete(key);\r\n\t\t}\r\n\t\treturn orderedCards;\r\n\t}\r\n\r\n\tgetCardType() {\r\n\t\tvar newMap = new Map<number, Array<any>>(this.cardsBySuits);\r\n\t\tvar mapSize = newMap.size;\r\n\t\tvar keys = [...newMap.keys()];\r\n\t\tswitch (mapSize) {\r\n\t\t\tcase 1:\r\n\t\t\t\tif (newMap.get(keys[0]).length == 1) return TypeOfTurn.MOT_LA;\r\n\t\t\t\telse if (newMap.get(keys[0]).length == 2) return TypeOfTurn.MOT_DOI;\r\n\t\t\t\telse if (newMap.get(keys[0]).length == 3) return TypeOfTurn.SAM_CO;\r\n\t\t\t\telse return TypeOfTurn.TU_QUY;\r\n\t\t\t// break;\r\n\t\t\tcase 2:\r\n\t\t\t\treturn TypeOfTurn.HAI_TU_QUY;\r\n\t\t\t// break;\r\n\t\t\tcase 3:\r\n\t\t\t\tif (newMap.get(keys[0]).length == 1) return TypeOfTurn.SANH;\r\n\t\t\t\telse return TypeOfTurn.BA_DOI_THONG;\r\n\t\t\t// break;\r\n\t\t\tcase 4:\r\n\t\t\t\tif (newMap.get(keys[0]).length == 1) return TypeOfTurn.SANH;\r\n\t\t\t\telse return TypeOfTurn.BON_DOI_THONG;\r\n\t\t\t// break;\r\n\t\t\tdefault:\r\n\t\t\t\treturn TypeOfTurn.SANH\r\n\t\t\t// break;\r\n\t\t}\r\n\t}\r\n\r\n\tgetSuitableCards(submitCards) {\r\n\t\tvar submitCardGroup = new CardGroup(submitCards);\r\n\t\tvar submitCardType = submitCardGroup.getCardType();\r\n\t\tvar maxSubmitCard = CardGroup.getMaxCardOfCards(submitCards);\r\n\t\tvar newMap = new Map<number, Array<any>>(this.cardsBySuits);\r\n\t\tswitch (submitCardType) {\r\n\t\t\tcase TypeOfTurn.MOT_LA:\r\n\t\t\t\tfor (var i = 0; i < this.cards.length; i++) {\r\n\t\t\t\t\tif (CardGroup.point(this.cards[i]) > CardGroup.point(maxSubmitCard))\r\n\t\t\t\t\t\treturn [this.cards[i]];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.MOT_DOI:\r\n\t\t\t\tfor (var [key, value] of newMap) {\r\n\t\t\t\t\tif (value.length == 1) continue;\r\n\t\t\t\t\tif (value.length >= 2) {\r\n\t\t\t\t\t\tfor (var i = 0; i < value.length; i++) {\r\n\t\t\t\t\t\t\tif (CardGroup.point(value[i]) > CardGroup.point(maxSubmitCard))\r\n\t\t\t\t\t\t\t\treturn [value.shift(), value.shift()];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.SAM_CO:\r\n\t\t\t\tfor (var [key, value] of newMap) {\r\n\t\t\t\t\tif (value.length < 3) continue;\r\n\t\t\t\t\tif (key > maxSubmitCard.card)\r\n\t\t\t\t\t\treturn [value.shift(), value.shift(), value.shift()];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.TU_QUY:\r\n\t\t\t\tfor (var [key, value] of newMap) {\r\n\t\t\t\t\tif (value.length < 4) continue;\r\n\t\t\t\t\tif (key > maxSubmitCard.card)\r\n\t\t\t\t\t\treturn [value];\r\n\t\t\t\t}\r\n\t\t\t\tfor (var [key, value] of newMap)\r\n\t\t\t\t\tif (value.length >= 2) {\r\n\t\t\t\t\t\tvar _key = CardGroup.getNextKey(key);\r\n\t\t\t\t\t\tif (newMap.get(_key) && newMap.get(_key).length >= 2) {\r\n\t\t\t\t\t\t\tvar __key = CardGroup.getNextKey(_key);\r\n\t\t\t\t\t\t\tif (newMap.get(__key) && newMap.get(__key).length >= 2) {\r\n\t\t\t\t\t\t\t\tvar ___key = CardGroup.getNextKey(__key);\r\n\t\t\t\t\t\t\t\tif (newMap.get(___key) && newMap.get(___key).length >= 2) {\r\n\t\t\t\t\t\t\t\t\t// 4 doi thong\r\n\t\t\t\t\t\t\t\t\tvar orderedCards = [value.shift(), value.shift()];\r\n\t\t\t\t\t\t\t\t\tvar _value = newMap.get(_key);\r\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([_value.shift(), _value.shift()]);\r\n\t\t\t\t\t\t\t\t\tvar __value = newMap.get(__key);\r\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([__value.shift(), __value.shift()]);\r\n\t\t\t\t\t\t\t\t\tvar ___value = newMap.get(___key);\r\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([___value.shift(), ___value.shift()]);\r\n\t\t\t\t\t\t\t\t\treturn orderedCards;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.HAI_TU_QUY:\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.BA_DOI_THONG:\r\n\t\t\t\tfor (var [key, value] of newMap) {\r\n\t\t\t\t\tif (value.length < 4) continue;\r\n\t\t\t\t\treturn [value];\r\n\t\t\t\t}\r\n\t\t\t\tfor (var [key, value] of newMap)\r\n\t\t\t\t\tif (value.length >= 2) {\r\n\t\t\t\t\t\tvar _key = CardGroup.getNextKey(key);\r\n\t\t\t\t\t\tif (newMap.get(_key) && newMap.get(_key).length >= 2) {\r\n\t\t\t\t\t\t\tvar __key = CardGroup.getNextKey(_key);\r\n\t\t\t\t\t\t\tif (newMap.get(__key) && newMap.get(__key).length >= 2) {\r\n\t\t\t\t\t\t\t\tvar orderedCards = [value.shift(), value.shift()];\r\n\t\t\t\t\t\t\t\tvar _value = newMap.get(_key);\r\n\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([_value.shift(), _value.shift()]);\r\n\t\t\t\t\t\t\t\tvar __value = newMap.get(__key);\r\n\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([__value.shift(), __value.shift()]);\r\n\t\t\t\t\t\t\t\tvar maxCard = CardGroup.getMaxCardOfCards(orderedCards);\r\n\t\t\t\t\t\t\t\tif (CardGroup.point(maxCard) > CardGroup.point(maxSubmitCard))\r\n\t\t\t\t\t\t\t\t\treturn orderedCards;\r\n\t\t\t\t\t\t\t\tvar ___key = CardGroup.getNextKey(__key);\r\n\t\t\t\t\t\t\t\tif (newMap.get(___key) && newMap.get(___key).length >= 2) {\r\n\t\t\t\t\t\t\t\t\t// 4 doi thong\r\n\r\n\t\t\t\t\t\t\t\t\tvar ___value = newMap.get(___key);\r\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([___value.shift(), ___value.shift()]);\r\n\t\t\t\t\t\t\t\t\treturn orderedCards;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.BON_DOI_THONG:\r\n\t\t\t\tfor (var [key, value] of newMap)\r\n\t\t\t\t\tif (value.length >= 2) {\r\n\t\t\t\t\t\tvar _key = CardGroup.getNextKey(key);\r\n\t\t\t\t\t\tif (newMap.get(_key) && newMap.get(_key).length >= 2) {\r\n\t\t\t\t\t\t\tvar __key = CardGroup.getNextKey(_key);\r\n\t\t\t\t\t\t\tif (newMap.get(__key) && newMap.get(__key).length >= 2) {\r\n\t\t\t\t\t\t\t\tvar ___key = CardGroup.getNextKey(__key);\r\n\t\t\t\t\t\t\t\tif (newMap.get(___key) && newMap.get(___key).length >= 2) {\r\n\t\t\t\t\t\t\t\t\t// 4 doi thong\r\n\t\t\t\t\t\t\t\t\tvar orderedCards = [value.shift(), value.shift()];\r\n\t\t\t\t\t\t\t\t\tvar _value = newMap.get(_key);\r\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([_value.shift(), _value.shift()]);\r\n\t\t\t\t\t\t\t\t\tvar __value = newMap.get(__key);\r\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([__value.shift(), __value.shift()]);\r\n\t\t\t\t\t\t\t\t\tvar ___value = newMap.get(___key);\r\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([___value.shift(), ___value.shift()]);\r\n\t\t\t\t\t\t\t\t\tvar maxCard = CardGroup.getMaxCardOfCards(orderedCards);\r\n\t\t\t\t\t\t\t\t\tif (CardGroup.point(maxCard) > CardGroup.point(maxSubmitCard))\r\n\t\t\t\t\t\t\t\t\t\treturn orderedCards;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.SANH:\r\n\t\t\t\tvar count = submitCards.length;\r\n\t\t\t\treturn this.getSequenceSuitBySize(newMap, count, maxSubmitCard);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetSuggestionNoCards(listSelected, data, isCheck = false) {\r\n\t\tlet listSuggestion;\r\n\t\tif (!isCheck) {\r\n\t\t\tlistSuggestion = this.get_BON_DOI_THONG([], listSelected);\r\n\t\t\tif (listSuggestion.length > 0) {\r\n\t\t\t\treturn listSuggestion;\r\n\t\t\t}\r\n\t\t\tlistSuggestion = this.get_BA_DOI_THONG([], listSelected);\r\n\t\t\tif (listSuggestion.length > 0) {\r\n\t\t\t\treturn listSuggestion;\r\n\t\t\t}\r\n\t\t\tlistSuggestion = this.get_TU_QUY([], listSelected);\r\n\t\t\tif (listSuggestion.length > 0) {\r\n\t\t\t\treturn listSuggestion;\r\n\t\t\t}\r\n\t\t\tlistSuggestion = this.getSequenceSuitBySize([], data, listSelected);\r\n\t\t\tif (listSuggestion.length > 0) {\r\n\t\t\t\treturn listSuggestion;\r\n\t\t\t}\r\n\t\t\tlistSuggestion = this.get_SAM_CO([], listSelected);\r\n\t\t\tif (listSuggestion.length > 0) {\r\n\t\t\t\treturn listSuggestion;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlistSuggestion = this.get_TU_QUY([], listSelected);\r\n\t\t\tif (listSuggestion.length > 0) {\r\n\t\t\t\treturn listSuggestion;\r\n\t\t\t}\r\n\t\t\tlistSuggestion = this.get_BON_DOI_THONG([], listSelected);\r\n\t\t\tif (listSuggestion.length > 0) {\r\n\t\t\t\treturn listSuggestion;\r\n\t\t\t}\r\n\t\t\tlistSuggestion = this.get_BA_DOI_THONG([], listSelected);\r\n\t\t\tif (listSuggestion.length > 0) {\r\n\t\t\t\treturn listSuggestion;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (listSuggestion.length > 0) {\r\n\t\t\treturn listSuggestion;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tgetSuggestionCards(submitCards, data, callback) {\r\n\t\tvar submitCardGroup = new CardGroup(submitCards);\r\n\t\tvar submitCardType = submitCardGroup.getCardType();\r\n\t\t //Utils.Log(\"submitCards=\",submitCards);\r\n\t\t //Utils.Log(\"Submit card type=\" + submitCardType);\r\n\t\tvar maxSubmitCard = CardGroup.getMaxCardOfCards(submitCards);\r\n\t\tvar newMap = new Map<number, Array<any>>(this.cardsBySuits);\r\n\t\tlet listSuggestion = new Array();\r\n\t\tswitch (submitCardType) {\r\n\t\t\tcase TypeOfTurn.MOT_LA:\r\n\t\t\t\tif (submitCards[0].card != 2) {\r\n\t\t\t\t\tfor (var i = 0; i < this.cards.length; i++) {\r\n\t\t\t\t\t\tif (CardGroup.point(this.cards[i]) > CardGroup.point(maxSubmitCard))\r\n\t\t\t\t\t\t\tlistSuggestion.push([this.cards[i]]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn callback();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.MOT_DOI:\r\n\t\t\t\tfor (var [key, value] of newMap) {\r\n\t\t\t\t\tif (value.length == 1) continue;\r\n\t\t\t\t\tif (value.length >= 2) {\r\n\t\t\t\t\t\tfor (var i = 0; i < value.length; i++) {\r\n\t\t\t\t\t\t\tif (CardGroup.point(value[i]) > CardGroup.point(maxSubmitCard))\r\n\t\t\t\t\t\t\t\tlistSuggestion.push([value.shift(), value.shift()]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.SAM_CO:\r\n\t\t\t\tfor (var [key, value] of newMap) {\r\n\t\t\t\t\tif (value.length < 3) continue;\r\n\t\t\t\t\tif (key > maxSubmitCard.card)\r\n\t\t\t\t\t\tlistSuggestion.push([value.shift(), value.shift(), value.shift()]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.TU_QUY:\r\n\t\t\t\tlistSuggestion = this.get_BON_DOI_THONG(submitCards);\r\n\t\t\t\tif (listSuggestion.length > 0)\r\n\t\t\t\t\treturn listSuggestion;\r\n\t\t\t\tlistSuggestion = this.get_TU_QUY(submitCards);\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.HAI_TU_QUY:\r\n\t\t\t\tlistSuggestion = this.get_TU_QUY(submitCards);\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.BA_DOI_THONG:\r\n\t\t\t\tlistSuggestion = this.get_BON_DOI_THONG(submitCards);\r\n\t\t\t\tif (listSuggestion.length > 0)\r\n\t\t\t\t\treturn listSuggestion;\r\n\t\t\t\tlistSuggestion = this.get_TU_QUY(submitCards);\r\n\t\t\t\tif (listSuggestion.length > 0)\r\n\t\t\t\t\treturn listSuggestion;\r\n\t\t\t\tlistSuggestion = this.get_BA_DOI_THONG(submitCards);\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.BON_DOI_THONG:\r\n\t\t\t\tfor (var [key, value] of newMap)\r\n\t\t\t\t\tif (value.length >= 2) {\r\n\t\t\t\t\t\tvar _key = CardGroup.getNextKey(key);\r\n\t\t\t\t\t\tif (newMap.get(_key) && newMap.get(_key).length >= 2) {\r\n\t\t\t\t\t\t\tvar __key = CardGroup.getNextKey(_key);\r\n\t\t\t\t\t\t\tif (newMap.get(__key) && newMap.get(__key).length >= 2) {\r\n\t\t\t\t\t\t\t\tvar ___key = CardGroup.getNextKey(__key);\r\n\t\t\t\t\t\t\t\tif (newMap.get(___key) && newMap.get(___key).length >= 2) {\r\n\t\t\t\t\t\t\t\t\t// 4 doi thong\r\n\t\t\t\t\t\t\t\t\tvar orderedCards = [value.shift(), value.shift()];\r\n\t\t\t\t\t\t\t\t\tvar _value = newMap.get(_key);\r\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([_value.shift(), _value.shift()]);\r\n\t\t\t\t\t\t\t\t\tvar __value = newMap.get(__key);\r\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([__value.shift(), __value.shift()]);\r\n\t\t\t\t\t\t\t\t\tvar ___value = newMap.get(___key);\r\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([___value.shift(), ___value.shift()]);\r\n\t\t\t\t\t\t\t\t\tvar maxCard = CardGroup.getMaxCardOfCards(orderedCards);\r\n\t\t\t\t\t\t\t\t\tif (CardGroup.point(maxCard) > CardGroup.point(maxSubmitCard))\r\n\t\t\t\t\t\t\t\t\t\tlistSuggestion.push(orderedCards);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase TypeOfTurn.SANH:\r\n\t\t\t\tlistSuggestion = this.getSequenceSuitBySize(submitCards, data);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif (listSuggestion.length > 0) {\r\n\t\t\treturn listSuggestion;\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tgetSequenceSuitBySize(submitCards, data, listSelected = null) {\r\n\t\tif (submitCards.length > 0) {\r\n\t\t\tlet listCard = new Array();\r\n\t\t\tfor (var [key, value] of new Map(this.cardsBySuits)) {\r\n\t\t\t\tlistCard.push({ card: key, value: value });\r\n\t\t\t}\r\n\t\t\tlet listTmp = new Array();\r\n\t\t\tlet listSg = new Array();\r\n\t\t\tlistCard.sort((a, b) => { return (a.card == 1 ? 14 : a.card) - (b.card == 1 ? 14 : b.card) });// sx tang dan;\r\n\t\t\tfor (let i = 0; i < listCard.length; i++) {\r\n\t\t\t\tif ((listCard[i].card == 1 ? 14 : listCard[i].card) >= submitCards[0].card) {\r\n\t\t\t\t\tif (i + 1 < listCard.length && (listCard[i].card == 1 ? 14 : listCard[i].card) == (listCard[i + 1].card == 1 ? 14 : listCard[i + 1].card) - 1)\r\n\t\t\t\t\t\tlistTmp.push(listCard[i]);\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlistTmp.push(listCard[i]);\r\n\t\t\t\t\t\tif (listTmp.length >= submitCards.length) {\r\n\t\t\t\t\t\t\tlet index = listTmp.findIndex(e => (e.value.findIndex(e2 => (e2.card == data.card && e2.face == data.face)) >= 0));\r\n\t\t\t\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i <= listTmp.length - submitCards.length; i++) {\r\n\t\t\t\t\t\t\t\t\tlet tmp = new Array();\r\n\t\t\t\t\t\t\t\t\tfor (let j = i; j < i + submitCards.length; j++)\r\n\t\t\t\t\t\t\t\t\t\tif (listTmp[j].card == data.card)\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.push(data);\r\n\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.push(listTmp[j].value[0]);\r\n\t\t\t\t\t\t\t\t\tlistSg.push(tmp);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlistTmp = new Array();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn listSg;\r\n\t\t}\r\n\t\telse if (listSelected != null) {\r\n\t\t\tif (listSelected.length >= 2) {\r\n\t\t\t\tlet listCard = new Array();\r\n\t\t\t\tfor (var [key, value] of new Map(this.cardsBySuits)) {\r\n\t\t\t\t\tlistCard.push({ card: key, value: value });\r\n\t\t\t\t}\r\n\t\t\t\tlet listTmp = new Array();\r\n\t\t\t\tlet listSg = new Array();\r\n\t\t\t\tlistCard.sort((a, b) => { return (a.card == 1 ? 14 : a.card) - (b.card == 1 ? 14 : b.card) });// sx tang dan;\r\n\t\t\t\tfor (let i = 0; i < listCard.length; i++) {\r\n\t\t\t\t\tif ((listCard[i].card == 1 ? 14 : listCard[i].card) >= 3) {\r\n\t\t\t\t\t\tif (i + 1 < listCard.length && (listCard[i].card == 1 ? 14 : listCard[i].card) == (listCard[i + 1].card == 1 ? 14 : listCard[i + 1].card) - 1)\r\n\t\t\t\t\t\t\tlistTmp.push(listCard[i]);\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tlistTmp.push(listCard[i]);\r\n\t\t\t\t\t\t\tif (listTmp.length >= 3) {\r\n\t\t\t\t\t\t\t\tlet index = listTmp.findIndex(e => e.value.findIndex(e2 => (e2.card == data.card && e2.face == data.face)) >= 0);\r\n\t\t\t\t\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t\t\t\t\tlet tmp = new Array();\r\n\t\t\t\t\t\t\t\t\tfor (let j = 0; j < listTmp.length; j++) {\r\n\t\t\t\t\t\t\t\t\t\tif (listTmp[j].card == data.card)\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.push(data);\r\n\t\t\t\t\t\t\t\t\t\telse if (listSelected.findIndex(e => CardGroup.indexToCard(e.index).card == listTmp[j].card) >= 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tvar _index = listSelected.findIndex(e => CardGroup.indexToCard(e.index).card == listTmp[j].card);\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.push(CardGroup.indexToCard(listSelected[_index].index));\r\n\t\t\t\t\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.push(listTmp[j].value[0]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (listSelected.filter(e => tmp.findIndex(e2 => (CardGroup.indexToCard(e.index).card == e2.card && CardGroup.indexToCard(e.index).face == e2.face)) >= 0).length >= 2) {\r\n\t\t\t\t\t\t\t\t\t\tlistSg.push(tmp);\r\n\t\t\t\t\t\t\t\t\t\treturn listSg;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlistTmp = new Array();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn listSg;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn [];\r\n\t\t}\r\n\t\treturn [];\r\n\t}\r\n\tget_BA_DOI_THONG(submitCards, listSelected = null) {\r\n\t\tif (submitCards.length > 0) {\r\n\t\t\tlet listCard = new Array();\r\n\t\t\tlet listTmp2 = new Array();\r\n\t\t\tlet listTmp = new Array();\r\n\t\t\tlet listSg = new Array();\r\n\t\t\tfor (var [key, value] of new Map(this.cardsBySuits)) {\r\n\t\t\t\tlistCard.push({ card: key, value: value });\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < listCard.length; i++) {\r\n\t\t\t\tif (i + 1 < listCard.length\r\n\t\t\t\t\t&& CardGroup.cardRank(listCard[i].card) == CardGroup.cardRank(listCard[i + 1].card) - 1\r\n\t\t\t\t\t&& listCard[i].value.length >= 2 && listCard[i + 1].value.length >= 2) {\r\n\t\t\t\t\tlistTmp.push(listCard[i]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (listCard[i].value.length >= 2) {\r\n\t\t\t\t\t\tlistTmp.push(listCard[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (listTmp.length >= 3)\r\n\t\t\t\t\t\tlistTmp2.push(listTmp);\r\n\t\t\t\t\tlistTmp = new Array();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < listTmp2.length; i++) {\r\n\t\t\t\tfor (let j = 0; j < listTmp2[i].length - 2; j++) {\r\n\t\t\t\t\tlet tmp = new Array();\r\n\t\t\t\t\tfor (let l = j; l < j + 3; l++) {\r\n\t\t\t\t\t\tfor (let k = 0; k < 2; k++)\r\n\t\t\t\t\t\t\ttmp.push(listTmp2[i][l].value[k]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlistSg.push(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn listSg;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet listSg = new Array();\r\n\t\t\tif (listSelected.length >= 2) {\r\n\t\t\t\tlet listCard = new Array();\r\n\t\t\t\tlet listTmp2 = new Array();\r\n\t\t\t\tlet listTmp = new Array();\r\n\r\n\t\t\t\tfor (var [key, value] of new Map(this.cardsBySuits)) {\r\n\t\t\t\t\tlistCard.push({ card: key, value: value });\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < listCard.length; i++) {\r\n\t\t\t\t\tif (i + 1 < listCard.length\r\n\t\t\t\t\t\t&& CardGroup.cardRank(listCard[i].card) == CardGroup.cardRank(listCard[i + 1].card) - 1\r\n\t\t\t\t\t\t&& listCard[i].value.length >= 2 && listCard[i + 1].value.length >= 2) {\r\n\t\t\t\t\t\tlistTmp.push(listCard[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (listCard[i].value.length >= 2) {\r\n\t\t\t\t\t\t\tlistTmp.push(listCard[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (listTmp.length >= 3)\r\n\t\t\t\t\t\t\tlistTmp2.push(listTmp);\r\n\t\t\t\t\t\tlistTmp = new Array();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < listTmp2.length; i++) {\r\n\t\t\t\t\tfor (let j = 0; j < listTmp2[i].length - 2; j++) {\r\n\t\t\t\t\t\tlet tmp = new Array();\r\n\t\t\t\t\t\tfor (let l = j; l < j + 3; l++) {\r\n\t\t\t\t\t\t\tfor (let k = 0; k < 2; k++)\r\n\t\t\t\t\t\t\t\ttmp.push(listTmp2[i][l].value[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (listSelected.filter(e => tmp.findIndex(e2 => (CardGroup.indexToCard(e.index).card == e2.card && CardGroup.indexToCard(e.index).face == e2.face)) >= 0).length >= 2) {\r\n\t\t\t\t\t\t\tlistSg.push(tmp);\r\n\t\t\t\t\t\t\treturn listSg;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn listSg;\r\n\t\t}\r\n\t}\r\n\tget_BON_DOI_THONG(submitCards, listSelected = null) {\r\n\t\tif (submitCards.length > 0) {\r\n\t\t\tlet listCard = new Array();\r\n\t\t\tlet listTmp2 = new Array();\r\n\t\t\tlet listTmp = new Array();\r\n\t\t\tlet listSg = new Array();\r\n\t\t\tfor (var [key, value] of new Map(this.cardsBySuits)) {\r\n\t\t\t\tlistCard.push({ card: key, value: value });\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < listCard.length; i++) {\r\n\t\t\t\tif (i + 1 < listCard.length\r\n\t\t\t\t\t&& CardGroup.cardRank(listCard[i].card) == CardGroup.cardRank(listCard[i + 1].card) - 1\r\n\t\t\t\t\t&& listCard[i].value.length >= 2 && listCard[i + 1].value.length >= 2) {\r\n\t\t\t\t\tlistTmp.push(listCard[i]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (listCard[i].value.length >= 2) {\r\n\t\t\t\t\t\tlistTmp.push(listCard[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (listTmp.length >= 3)\r\n\t\t\t\t\t\tlistTmp2.push(listTmp);\r\n\t\t\t\t\tlistTmp = new Array();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < listTmp2.length; i++) {\r\n\t\t\t\tfor (let j = 0; j < listTmp2[i].length - 3; j++) {\r\n\t\t\t\t\tlet tmp = new Array();\r\n\t\t\t\t\tfor (let l = j; l < j + 4; l++) {\r\n\t\t\t\t\t\tfor (let k = 0; k < 2; k++)\r\n\t\t\t\t\t\t\ttmp.push(listTmp2[i][l].value[k]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlistSg.push(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn listSg;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet listSg = new Array();\r\n\t\t\tif (listSelected.length >= 2) {\r\n\t\t\t\tlet listCard = new Array();\r\n\t\t\t\tlet listTmp2 = new Array();\r\n\t\t\t\tlet listTmp = new Array();\r\n\t\t\t\tfor (var [key, value] of new Map(this.cardsBySuits)) {\r\n\t\t\t\t\tlistCard.push({ card: key, value: value });\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < listCard.length; i++) {\r\n\t\t\t\t\tif (i + 1 < listCard.length\r\n\t\t\t\t\t\t&& CardGroup.cardRank(listCard[i].card) == CardGroup.cardRank(listCard[i + 1].card) - 1\r\n\t\t\t\t\t\t&& listCard[i].value.length >= 2 && listCard[i + 1].value.length >= 2) {\r\n\t\t\t\t\t\tlistTmp.push(listCard[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (listCard[i].value.length >= 2) {\r\n\t\t\t\t\t\t\tlistTmp.push(listCard[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (listTmp.length >= 3)\r\n\t\t\t\t\t\t\tlistTmp2.push(listTmp);\r\n\t\t\t\t\t\tlistTmp = new Array();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < listTmp2.length; i++) {\r\n\t\t\t\t\tfor (let j = 0; j < listTmp2[i].length - 3; j++) {\r\n\t\t\t\t\t\tlet tmp = new Array();\r\n\t\t\t\t\t\tfor (let l = j; l < j + 4; l++) {\r\n\t\t\t\t\t\t\tfor (let k = 0; k < 2; k++)\r\n\t\t\t\t\t\t\t\ttmp.push(listTmp2[i][l].value[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (listSelected.filter(e => tmp.findIndex(e2 => (CardGroup.indexToCard(e.index).card == e2.card && CardGroup.indexToCard(e.index).face == e2.face)) >= 0).length >= 2) {\r\n\t\t\t\t\t\t\tlistSg.push(tmp);\r\n\t\t\t\t\t\t\treturn listSg;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn listSg;\r\n\t\t}\r\n\t}\r\n\tget_TU_QUY(submitCards, listSelected = null) {\r\n\t\tif (submitCards.length > 0) {\r\n\t\t\tlet listSg = new Array();\r\n\t\t\tfor (var [key, value] of new Map<number, Array<any>>(this.cardsBySuits)) {\r\n\t\t\t\tif (value.length == 4) {\r\n\t\t\t\t\tlistSg.push(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn listSg;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet listSg = new Array();\r\n\t\t\tif (listSelected.length >= 2) {\r\n\t\t\t\tfor (var [key, value] of new Map<number, Array<any>>(this.cardsBySuits)) {\r\n\t\t\t\t\tif (value.length == 4 && listSelected.filter(e => value.findIndex(e2 => (CardGroup.indexToCard(e.index).card == e2.card && CardGroup.indexToCard(e.index).face == e2.face)) >= 0).length >= 2) {\r\n\t\t\t\t\t\tlistSg.push(value);\r\n\t\t\t\t\t\treturn listSg;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn listSg;\r\n\t\t}\r\n\t}\r\n\tget_SAM_CO(submitCards, listSelected = null) {\r\n\t\tlet listSg = new Array();\r\n\t\tif (listSelected.length >= 2) {\r\n\r\n\t\t\tfor (var [key, value] of new Map<number, Array<any>>(this.cardsBySuits)) {\r\n\t\t\t\tlet tmp = new Array();\r\n\t\t\t\tif (value.length < 3) continue;\r\n\t\t\t\tif (key > 2) {\r\n\t\t\t\t\ttmp = [value.shift(), value.shift(), value.shift()];\r\n\t\t\t\t\tif (listSelected.filter(e => tmp.findIndex(e2 => (CardGroup.indexToCard(e.index).card == e2.card && CardGroup.indexToCard(e.index).face == e2.face)) >= 0).length >= 2) {\r\n\t\t\t\t\t\tlistSg.push(tmp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn listSg;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn listSg;\r\n\t}\r\n\r\n\tstatic getMaxCardOfCards(cards) {\r\n\t\treturn CardGroup.sortCards(cards)[cards.length - 1];\r\n\t}\r\n\r\n\tstatic getNextKey(key) {\r\n\t\treturn key == 13 ? 1 : key + 1;\r\n\t}\r\n\r\n\tstatic subCards(cards, subCards) {\r\n\t\treturn cards.filter(function (value) {\r\n\t\t\tvar found = false;\r\n\t\t\tsubCards.forEach(function (_value, i) {\r\n\t\t\t\tif (value.card == _value.card\r\n\t\t\t\t\t&& value.face == _value.face) {\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn !found;\r\n\t\t});\r\n\t}\r\n\tstatic sortSuits(suits) {\r\n\t\tsuits.sort(function (a, b) {\r\n\t\t\treturn (a + 10) % 13 - (b + 10) % 13;\r\n\t\t})\r\n\t}\r\n\tstatic sortCards(cards) {\r\n\t\treturn cards.sort(function (a, b) {\r\n\t\t\treturn CardGroup.point(a) - CardGroup.point(b);\r\n\t\t})\r\n\t}\r\n\r\n\tstatic point(card) {\r\n\t\treturn (card.card + 10) % 13 * 4 + card.face;\r\n\t}\r\n\r\n\tstatic getFirstSequenceSuit(suits, minCount) {\r\n\t\tif (!suits)\r\n\t\t\treturn null;\r\n\t\tif (minCount <= 1 || minCount > suits.length)\r\n\t\t\treturn null;\r\n\t\tvar _suits = [...suits];\r\n\t\tCardGroup.sortSuits(_suits);\r\n\t\tvar temp = [];\r\n\t\tdo {\r\n\t\t\tvar curr = _suits.shift()\r\n\t\t\tif (curr == 2)\r\n\t\t\t\tbreak;\r\n\t\t\tif (temp.length > 0\r\n\t\t\t\t&& ((curr != 1 && (curr - temp[temp.length - 1] > 1))\r\n\t\t\t\t\t|| curr == 1 && temp[temp.length - 1] != 13)) {\r\n\t\t\t\tif (temp.length >= minCount)\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\ttemp = [];\r\n\t\t\t}\r\n\t\t\ttemp.push(curr);\r\n\t\t}\r\n\t\twhile (_suits.length != 0);\r\n\r\n\t\tif (temp.length >= minCount)\r\n\t\t\treturn temp;\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic getFirstSequenceSuitBySize(map, count, maxCard) {\r\n\t\tif (!map)\r\n\t\t\treturn null;\r\n\t\tif (count <= 1 || count > map.length)\r\n\t\t\treturn null;\r\n\t\tvar _suits = [...map.keys()];\r\n\t\tCardGroup.sortSuits(_suits);\r\n\t\tvar temp = [];\r\n\t\tfor (var i = 0; i < _suits.length - 1; i++) {\r\n\t\t\tvar curr = _suits[i];\r\n\t\t\tvar next = _suits[i + 1];\r\n\t\t\tif (curr == 1) {\r\n\t\t\t\tvar listCards = map.get(curr);\r\n\t\t\t\tfor (let j = 0; j < listCards.length; j++) {\r\n\t\t\t\t\tif (CardGroup.point(listCards[j]) > CardGroup.point(maxCard)) {\r\n\t\t\t\t\t\ttemp.push(listCards[j]);\r\n\t\t\t\t\t\t// return temp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (curr < maxCard.card - count) {\r\n\t\t\t\tmap.delete(curr);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (curr == 2 || next == 2)\r\n\t\t\t\tbreak;\r\n\t\t\telse if (temp.length == count - 1) {\r\n\t\t\t\tvar listCards = map.get(curr);\r\n\t\t\t\tfor (let j = 0; j < listCards.length; j++) {\r\n\t\t\t\t\tif (CardGroup.point(listCards[j]) > CardGroup.point(maxCard)) {\r\n\t\t\t\t\t\ttemp.push(listCards[j]);\r\n\t\t\t\t\t\t// return temp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tmap.delete(_suits.shift());\r\n\t\t\t\treturn CardGroup.getFirstSequenceSuitBySize(map, count, maxCard);\r\n\t\t\t}\r\n\t\t\telse if ((next - curr) == 1 || (next == 1 && curr == 13)) {\r\n\t\t\t\tvar listCards = map.get(curr);\r\n\t\t\t\ttemp.push(listCards[0]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmap.delete(_suits.shift());\r\n\t\t\t\ttemp.push(CardGroup.getFirstSequenceSuitBySize(map, count, maxCard));\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (temp.length == count)\r\n\t\t\treturn temp;\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic cardRank(card) {\r\n\t\treturn (card + 10) % 13;\r\n\t}\r\n\r\n\tstatic indexToCard(index) {\r\n\t\tvar face = index + 1;\r\n\t\twhile (face > 4)\r\n\t\t\tface -= 4;\r\n\t\tvar card = (index + 1 - face) / 4 + 3;\r\n\t\tif (card > 13) card -= 13;\r\n\t\treturn { card: card, face: face };\r\n\t}\r\n\r\n\tstatic indexsToCards(indexs) {\r\n\t\tvar cards = [];\r\n\t\tindexs.forEach(index => {\r\n\t\t\tcards.push(CardGroup.indexToCard(index));\r\n\t\t});\r\n\t\treturn cards;\r\n\t}\r\n\r\n\tstatic cardsToIndexs(cards) {\r\n\t\tvar indexs = [];\r\n\t\tcards.forEach(card => {\r\n\t\t\tindexs.push(CardGroup.cardToIndex(card));\r\n\t\t});\r\n\t\treturn indexs;\r\n\t}\r\n\r\n\tstatic cardToIndex(card) {\r\n\t\treturn (card.card + 10) % 13 * 4 + card.face - 1;\r\n\t}\r\n}\r\nexport default CardGroup;","import Res from \"./TienLen.Res\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Card extends cc.Component {\r\n\r\n    spr = null;\r\n    posY = 0;\r\n    offsetY = 20;\r\n    isSelected = false;\r\n    callback = null;\r\n    index = null;\r\n\r\n    onLoad() {\r\n        this.spr = this.node.getComponent(cc.Sprite);\r\n        this.posY = this.node.y;\r\n    }\r\n\r\n    onSelect() {\r\n        this.node.y += this.isSelected ? -this.offsetY : this.offsetY;\r\n        this.isSelected = !this.isSelected;\r\n        if (this.isSelected && this.callback) {\r\n            this.callback(this.index);\r\n        }\r\n\r\n    }\r\n\r\n    setCardData(index, callback = null) {\r\n        this.index = index;\r\n        if(this.spr==null){\r\n            this.spr=this.node.getComponent(cc.Sprite);\r\n        }\r\n        this.spr.spriteFrame = Res.getInstance().getCardFace(index);\r\n        this.callback = callback;\r\n    }\r\n\r\n    getCardIndex() {\r\n        return this.index;\r\n    }\r\n\r\n    select() {\r\n        this.node.y = this.posY + this.offsetY;\r\n        this.isSelected = true;\r\n    }\r\n\r\n    deSelect() {\r\n        this.node.y = this.posY;\r\n        this.isSelected = false;\r\n    }\r\n}\r\n","\r\nimport Utils from \"../Script/common/Utils\";\r\nimport InPacket from \"../Script/networks/Network.InPacket\";\r\nimport OutPacket from \"../Script/networks/Network.OutPacket\";\r\nimport TienLenConstant from \"./TienLen.Constant\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\nexport namespace TienLenCmd {\r\n    export class Code {\r\n        static LOGIN = 1;\r\n        static NOTIFY_DISCONNECT = 37;\r\n        static PING_PONG = 50;\r\n        static JOIN_ROOM = 3001;\r\n        static RECONNECT_GAME_ROOM: 3002;\r\n        static QUICK_ROOM_SUCCEED = 3006;\r\n        static CHAT_ROOM = 3008;\r\n        static DANH_BAI = 3101;\r\n        static START_GAME = 3102;\r\n        static END_GAME = 3103;\r\n        static THANG_TRANG = 3104;\r\n        static CHIA_BAI = 3105;\r\n        static BO_LUOT = 3106;\r\n        static AUTO_START = 3107;\r\n        static FIRST_TURN = 3108;\r\n        static UPDATE_GAME_INFO = 3110;\r\n        static REQUEST_LEAVE_ROOM = 3111;\r\n        static CHANGE_TURN = 3112;\r\n        static CHAT_CHONG = 3113;\r\n        static HOLD = 3116;\r\n        static JOIN_ROOM_SUCCESS = 3118;\r\n        static USER_LEAVE_ROOM = 3119;\r\n        static NOTIFY_KICK_OFF = 3120;\r\n        static USER_JOIN_ROOM = 3121;\r\n        static UPDATE_MATCH = 3123;\r\n        static WAIT_4_DOI_THONG = 3124;\r\n    }\r\n\r\n    export class SendTest extends OutPacket {\r\n        constructor(a: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(0)\r\n            this.packHeader();\r\n            this.putString(a);\r\n            this.putInt(111);\r\n            this.putLong(2147483647);\r\n            this.putLong(325);\r\n            this.putLong(8686);\r\n            this.updateSize()\r\n        }\r\n    }\r\n    \r\n    export class SendLogin extends OutPacket {\r\n        constructor(a: string, b: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.LOGIN)\r\n            this.packHeader();\r\n            this.putString(a);\r\n            this.putString(b);\r\n            this.updateSize()\r\n        }\r\n    }\r\n    \r\n    export class SendReconnectRoom extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.RECONNECT_GAME_ROOM);\r\n            this.packHeader();\r\n            this.updateSize()\r\n        }\r\n    }\r\n    \r\n    export class SendReadyAutoStart extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(3124);\r\n            this.packHeader();\r\n            this.updateSize()\r\n        }\r\n    }\r\n    \r\n    export class SendStartGame extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.START_GAME);\r\n            this.packHeader();\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class SendPing extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(0);\r\n            this.setCmdId(Code.PING_PONG);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendDanhBai extends OutPacket {\r\n        constructor(a: boolean, b) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.DANH_BAI);\r\n            this.packHeader();\r\n            this.putByte(a);\r\n            if (!a) {\r\n                this.putShort(b.length);\r\n                for (let c = 0; c < b.length; c++) this.putByte(b[c]);\r\n            }\r\n            this.updateSize()\r\n        }\r\n    }\r\n\r\n    export class SendBoLuot extends OutPacket {\r\n        constructor(a: boolean) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.DANH_BAI);\r\n            this.packHeader();\r\n            this.putByte(a);\r\n            this.updateSize()\r\n        }\r\n    }\r\n    \r\n    export class SendRequestLeaveGame extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.REQUEST_LEAVE_ROOM);\r\n            this.packHeader();\r\n            this.updateSize()\r\n        }\r\n    }\r\n    \r\n    export class ReceivedJoinRoomSuccess extends InPacket {\r\n        myChair = 0;\r\n        moneyBet = 0;\r\n        roomOwner = 0;\r\n        roomId = 0;\r\n        gameId = 0;\r\n        moneyType = 0;\r\n        playerSize = 0;\r\n        playerStatus = [];\r\n        playerInfos = [];\r\n        gameAction = 0;\r\n        handCardSizeSize = 0;\r\n        handCardSize = [];\r\n        currentChair = 0;\r\n        countDownTime = 0;\r\n        \r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.myChair = this.getByte();\r\n            this.moneyBet = this.getLong();\r\n            this.roomOwner = this.getByte();\r\n            this.roomId = this.getInt();\r\n            this.gameId = this.getInt();\r\n            this.moneyType = this.getByte();\r\n            this.playerSize = this.getShort();\r\n            this.playerStatus = [];\r\n            for (var a = 0; a < this.playerSize; a++) this.playerStatus.push(this.getByte());\r\n            this.playerSize = this.getShort();\r\n            this.playerInfos = [];\r\n            for (var a = 0; a < this.playerSize; a++) {\r\n                var b = {\r\n                    avatar: this.getString(),\r\n                    nickName: this.getString(),\r\n                    money: this.getLong()\r\n                };\r\n                this.playerInfos.push(b)\r\n            }\r\n            this.gameAction = this.getByte();\r\n            this.handCardSizeSize = this.getShort();\r\n            this.handCardSize = [];\r\n            for (var a = 0; a < this.handCardSizeSize; a++) this.handCardSize.push(this.getByte());\r\n            this.currentChair = this.getByte();\r\n            this.countDownTime = this.getByte()\r\n        }\r\n    }\r\n\r\n    export class ReceivedDisconnect extends InPacket {\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ReceivedUpdateGameInfo extends InPacket {\r\n        maxPlayer = 0;\r\n        myChair = 0;\r\n        cards = [];\r\n        boLuot = false;\r\n        toiTrang = 0;\r\n        newRound = false;\r\n        gameServerState = 0;\r\n        gameAction = 0;\r\n        activeTimeRemain = 0;\r\n        currentChair = 0;\r\n        recentCards = [];\r\n        moneyType = 0;\r\n        moneyBet = 0;\r\n        gameId = 0;\r\n        roomId = 0;\r\n        playerStatus = [];\r\n        hasInfoList = [];\r\n        playerInfos = [];\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.maxPlayer = this.getByte();\r\n            this.myChair = this.getByte();\r\n            var b = this.getShort();\r\n            this.cards = [];\r\n            for (var a = 0; a < b; a++) this.cards.push(this.getByte());\r\n            this.boLuot = this.getBool();\r\n            this.toiTrang = this.getInt();\r\n            this.newRound = this.getBool();\r\n            this.gameServerState = this.getByte();\r\n            this.gameAction = this.getByte();\r\n            this.activeTimeRemain = this.getByte();\r\n            this.currentChair = this.getByte();\r\n            b = this.getShort();\r\n            this.recentCards = [];\r\n            for (var a = 0; a < b; a++) this.recentCards.push(this.getByte());\r\n            this.moneyType = this.getByte();\r\n            this.moneyBet = this.getLong();\r\n            this.gameId = this.getInt();\r\n            this.roomId = this.getInt();\r\n            b = this.getShort();\r\n            this.playerStatus = [];\r\n            this.hasInfoList = [];\r\n            this.playerInfos = [];\r\n            for (var a = 0; a < b; a++) this.hasInfoList.push(this.getBool());\r\n            for (var a = 0; a < TienLenConstant.Config.MAX_PLAYER; a++) {\r\n                var info = {};\r\n                if (this.hasInfoList[a]) {\r\n                    var cards = this.getByte();\r\n                    this.playerStatus.push(this.getByte());\r\n                    var avatar = this.getString();\r\n                    var uID = this.getInt();\r\n                    var nickName = this.getString();\r\n                    var money = this.getLong();\r\n                    info = {\r\n                        cards: cards,\r\n                        avatar: avatar,\r\n                        uID: uID,\r\n                        nickName: nickName,\r\n                        money: money\r\n                    }\r\n                } else\r\n                    this.playerStatus.push(0);\r\n                this.playerInfos.push(info);\r\n            }\r\n        }\r\n    }\r\n\r\n    export class ReceivedAutoStart extends InPacket {\r\n        isAutoStart = false;\r\n        autoStartTime = 0;\r\n        \r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.isAutoStart = this.getBool();\r\n            this.autoStartTime = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ReceivedChiaBai extends InPacket {\r\n        cardSize = 0;\r\n        cards = [];\r\n        toiTrang = 0;\r\n        timeBaoSam = 0;\r\n        gameId = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            var a = 0;\r\n            this.cardSize = this.getShort();\r\n            this.cards = [];\r\n            for (a = 0; a < this.cardSize; a++) this.cards.push(this.getByte());\r\n            this.toiTrang = this.getByte();\r\n            this.timeBaoSam = this.getByte();\r\n            this.gameId = this.getInt()\r\n        }\r\n    }\r\n    \r\n    export class ReceivedDanhBai extends InPacket {\r\n        chair = 0;\r\n        cards = [];\r\n        numberCard = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte();\r\n            var b = this.getShort();\r\n            this.cards = [];\r\n            for (var a = 0; a < b; a++) this.cards.push(this.getByte());\r\n            this.numberCard = this.getByte();\r\n        }\r\n    }\r\n    \r\n    export class ReceivedBoluot extends InPacket {\r\n        chair = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte()\r\n        }\r\n    }\r\n    \r\n    export class ReceivedChangeTurn extends InPacket {\r\n        newRound = false;\r\n        chair = 0;\r\n        chairLastTurn = 0;\r\n        time = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.newRound = this.getBool();\r\n            this.chair = this.getByte();\r\n            this.chairLastTurn = this.getByte();\r\n             //Utils.Log(\"chairLastTurn: \" + this.chairLastTurn);\r\n            this.time = this.getByte()\r\n        }\r\n    }\r\n    \r\n    export class ReceivedWaitBonDoiThong extends InPacket {\r\n        chair = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte()\r\n        }\r\n    }\r\n    \r\n    export class ReceivedEndGame extends InPacket {\r\n        winTypes = [];\r\n        ketQuaTinhTienList = [];\r\n        cards = [];\r\n        sizeWinType = 0;\r\n        kqTinhTienSize = 0;\r\n        currentMoney = [];\r\n        countDown = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.winTypes = [];\r\n            this.ketQuaTinhTienList = [];\r\n            this.cards = [];\r\n            this.sizeWinType = this.getShort();\r\n             //Utils.Log(\"sizeWinType: \" + this.sizeWinType);\r\n            for (var a = 0; a < this.sizeWinType; a++) this.winTypes.push(this.getByte());\r\n            this.kqTinhTienSize = this.getShort();\r\n            for (a = 0; a < this.kqTinhTienSize; a++) this.ketQuaTinhTienList.push(this.getLong());\r\n            var b = this.getShort();\r\n            this.currentMoney = [];\r\n            for (var a = 0; a < b; a++) this.currentMoney.push(this.getLong());\r\n            for (var a = 0; a < TienLenConstant.Config.MAX_PLAYER; a++) {\r\n                for (var b = this.getShort(), c = [], d = 0; d < b; d++) c.push(this.getByte());\r\n                this.cards.push(c)\r\n            }\r\n            this.countDown = this.getByte()\r\n        }\r\n    }\r\n    \r\n    export class ReceivedFirstTurnDecision extends InPacket {\r\n        isRandom = false;\r\n        chair = 0;\r\n        cardSize = 0;\r\n        cards = [];\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.isRandom = this.getBool();\r\n            this.chair = this.getByte();\r\n            this.cardSize = this.getShort();\r\n            this.cards = [];\r\n            for (var a = 0; a < this.cardSize; a++) {\r\n                var b = this.getByte();\r\n                this.cards.push(b);\r\n                 //Utils.Log(\"cardFirstTurn: \" + a + \" \" + b)\r\n            }\r\n        }\r\n    }\r\n    \r\n    export class ReceivedChatChong extends InPacket {\r\n        winChair = 0;\r\n        lostChair = 0;\r\n        winMoney = 0;\r\n        lostMoney = 0;\r\n        winCurrentMoney = 0;\r\n        lostCurrentMoney = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.winChair = this.getByte();\r\n            this.lostChair = this.getByte();\r\n            this.winMoney = this.getLong();\r\n            this.lostMoney = this.getLong();\r\n            this.winCurrentMoney = this.getLong();\r\n            this.lostCurrentMoney = this.getLong()\r\n        }\r\n    }\r\n    \r\n    export class ReceivedPingPong2 extends InPacket {\r\n        id = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.id = this.getLong()\r\n        }\r\n    }\r\n    \r\n    export class UserLeaveRoom extends InPacket {\r\n        chair = 0;\r\n        nickName = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte();\r\n            this.nickName = this.getString()\r\n        }\r\n    }\r\n    \r\n    export class ReceiveUserJoinRoom extends InPacket {\r\n        info = {};\r\n        uChair = 0;;\r\n        uStatus = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.info = {\r\n                nickName: this.getString(),\r\n                avatar: this.getString(),\r\n                money: this.getLong()\r\n            };\r\n            this.uChair = this.getByte();\r\n            this.uStatus = this.getByte()\r\n        }\r\n    }\r\n    \r\n    export class ReceivedUpdateMatch extends InPacket {\r\n        myChair = 0;\r\n        hasInfo = [];\r\n        infos = [];\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.myChair = this.getByte();\r\n            var a = this.getShort();\r\n            this.hasInfo = [];\r\n            for (var b = 0; b < a; b++) this.hasInfo.push(this.getBool());\r\n            this.infos = [];\r\n            for (b = 0; b < a; b++) {\r\n                var c = {\r\n                    money: this.getLong(),\r\n                    status: this.getInt()\r\n                };\r\n                this.hasInfo[b] && (c.money, c.status);\r\n                this.infos.push(c)\r\n            }\r\n        }\r\n    }\r\n    \r\n    export class ReceiveSamConfig extends InPacket {\r\n        listSize = 0;\r\n        list = [];\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.listSize = this.getShort();\r\n            this.list = [];\r\n            for (var a = 0; a < this.listSize; a++) {\r\n                var b = {\r\n                    maxUserPerRoom: this.getByte(),\r\n                    moneyType: this.getByte(),\r\n                    moneyBet: this.getLong(),\r\n                    moneyRequire: this.getLong(),\r\n                    nPersion: this.getInt()\r\n                };\r\n                this.list.push(b)\r\n            }\r\n        }\r\n    }\r\n    \r\n    export class ReceivedNotifyRegOutRoom extends InPacket {\r\n        outChair = 0;\r\n        isOutRoom = false;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.outChair = this.getByte();\r\n            this.isOutRoom = this.getBool()\r\n        }\r\n    }\r\n\r\n    export class ReceivedKickOff extends InPacket {\r\n        reason = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.reason = this.getByte()\r\n        }\r\n    }\r\n\r\n    export class ReceivePingPong extends InPacket {\r\n        test = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.test = this.getLong()\r\n        }\r\n    }\r\n\r\n    export class ReceivedChatRoom extends InPacket {\r\n        chair: number;\r\n        isIcon: boolean;\r\n        content: string;\r\n        nickname: string;\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.chair = this.getByte();\r\n            this.isIcon = this.getBool();\r\n            this.content = decodeURI(this.getString());\r\n            this.nickname = this.getString()\r\n        }\r\n    }\r\n\r\n    export class SendChatRoom extends OutPacket {\r\n        constructor(a: number, b: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHAT_ROOM);\r\n            this.packHeader();\r\n            this.putByte(a ? 1 : 0);\r\n            this.putString(encodeURI(b));\r\n            this.updateSize();\r\n        }\r\n    }\r\n}\r\nexport default TienLenCmd;","export namespace TienLenConstant {\r\n    export class GameState {\r\n        static NONE = -1;\r\n        static AUTOSTART = 0;\r\n        static JOINROOM = 4;\r\n        static FIRSTTURN = 1;\r\n        static CHIABAI = 2;\r\n        static CHANGETURN = 3;\r\n        static USERJOIN = 5;\r\n        static DANHBAI = 6;\r\n        static BOLUOT = 7;\r\n        static QUIT = 8;\r\n        static USERLEAVE = 12;\r\n        static ENDGAME = 13;\r\n        static UPDATEMATH = 14;\r\n        static UPDATEOWNERROOM = 15;\r\n        static PLAYCONTINUE = 16;\r\n        static CHATCHONG = 17;\r\n        static JACKPOT = 18;\r\n        static REASONQUIT = 19;\r\n        static NOTIFYOUTROOM = 20;\r\n        static WAITBONDOITHONG = 21;\r\n    }\r\n\r\n    export class Config {\r\n        static MAX_PLAYER = 4;\r\n        static MAX_CARDS = 13;\r\n    }\r\n\r\n    export class SortType {\r\n        static kSortTangDan = 0;\r\n        static kSortGroup = 1;\r\n        static kSortUnkown = 2;\r\n    }\r\n\r\n    export class PlayerType {\r\n        static MY = 0;\r\n        static ENEMY = 1;\r\n        static STATENONE = 0;\r\n        static STATEVIEWING = 1;\r\n        static STATEBAOSAM = 2;\r\n    }\r\n}\r\nexport default TienLenConstant;","import Utils from \"../Script/common/Utils\";\r\nimport GameData from \"../Script/games/GameData\";\r\nimport TienLenConstant from \"./TienLen.Constant\";\r\nimport Player from \"./TienLen.Player\";\r\n\r\nexport default class TienLenGameLogic {\r\n    static instance: TienLenGameLogic;\r\n\r\n    roomOwnerID = 0;\r\n    roomOwner = 0;\r\n    bet = 0;\r\n    myChair = -1;\r\n    roomLock = !1;\r\n    roomId = 0;\r\n    roomIndex = 0;\r\n    roomJackpot = 0;\r\n    players = [];\r\n    gameState = -1;\r\n    typeToiTrang = 0;\r\n    timeBaoSam = 0;\r\n    timeAutoStart = 0;\r\n    cardChiabai = [];\r\n    cardDanhBai = [];\r\n    firstTurnCards = [];\r\n    changeTurnChair = -1;\r\n    activeLocalChair = -1;\r\n    newRound = !0;\r\n    gameAction = -1;\r\n    cards = [];\r\n    activeTimeRemain = 0;\r\n    moneyType = 1;\r\n    gameId = 0;\r\n    gameServerState = null;\r\n    baoSam = null;\r\n    boLuot = null;\r\n    toiTrang = null;\r\n    recentCards = [];\r\n    cardSizes = [];\r\n    handCardSizeSize = 0;\r\n    chairLastTurn = -1;\r\n\r\n    public static getInstance(): TienLenGameLogic {\r\n        if (this.instance == null) {\r\n            this.instance = new TienLenGameLogic();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor() {\r\n        this.roomOwnerID = this.roomOwner = this.bet = 0;\r\n        this.myChair = -1;\r\n        this.roomLock = !1;\r\n        this.roomId = this.roomIndex = this.roomJackpot = 0;\r\n        this.players = [];\r\n        this.gameState = -1;\r\n        this.typeToiTrang = this.timeBaoSam = this.timeAutoStart = 0;\r\n        this.cardChiabai = [];\r\n        this.cardDanhBai = [];\r\n        this.firstTurnCards = [];\r\n        this.changeTurnChair = this.activeLocalChair = -1;\r\n        this.newRound = !0;\r\n        this.gameAction = -1;\r\n        this.cards = [];\r\n        for (var a = this.activeTimeRemain = 0; a < TienLenConstant.Config.MAX_PLAYER; a++) {\r\n            var b = new Player();\r\n            0 == a && (b.type = TienLenConstant.PlayerType.MY);\r\n            this.players.push(b);\r\n        }\r\n    }\r\n\r\n    initReconnect(a) {\r\n        cc.sys.localStorage.setItem(\"outRoom\", \"0\");\r\n        GameData.getInstance().maxPlayer = a.maxPlayer;\r\n        // 2 == gameData.maxPlayer ? GameManager.getInstance().currentGame = 4 : GameManager.getInstance().currentGame = 5;\r\n        this.gameState = TienLenConstant.GameState.PLAYCONTINUE;\r\n        this.bet = a.roomBet;\r\n        this.moneyType = a.moneyType;\r\n        this.roomOwner = a.roomOwner;\r\n        this.roomId = a.roomId;\r\n        this.gameId = a.gameId;\r\n        this.myChair = a.myChair;\r\n        this.cardChiabai = [];\r\n         //Utils.Log(\"cardChidBai size\" + a.cards.length);\r\n        for (var b = 0; b < a.cards.length; b++) this.cardChiabai.push(a.cards[b]),  //Utils.Log(\"carChiabai \" + a.cards[b]);\r\n        this.gameServerState = a.gameServerState;\r\n        this.gameAction = a.gameAction;\r\n        this.activeTimeRemain = a.activeTimeRemain;\r\n        this.changeTurnChair = this.activeLocalChair = this.convertChair(a.currentChair);\r\n        this.baoSam = a.baoSam;\r\n        this.boLuot = a.boLuot;\r\n        this.toiTrang = a.toiTrang;\r\n        this.recentCards = [];\r\n        for (var b = 0; b < a.recentCards.length; b++) this.recentCards.push(a.recentCards[b]);\r\n        for (var b = 0; b < this.players.length; b++) this.players[b].ingame = !1;\r\n        for (var b = 0; b < GameData.getInstance().maxPlayer; b++) {\r\n            var c = this.convertChair(b);\r\n            0 != a.playerStatus[b] && ( Utils.Log(\"playI: \" + b + \" \" + c), this.players[c].ingame = !0, this.players[c].active = !0, this.players[c].info = a.playerInfos[b],  Utils.Log(\"pkPlayerInfos\" + a.playerInfos[b].nickName), this.players[c].status = a.playerStatus[b], this.players[c].chairInServer = b, this.players[c].chairLocal = c);\r\n        }\r\n    }\r\n\r\n    initWith(a) {\r\n        this.gameState = TienLenConstant.GameState.JOINROOM;\r\n        this.bet = a.moneyBet;\r\n        this.moneyType = a.moneyType;\r\n        this.roomOwner = a.roomOwner;\r\n        this.roomId = a.roomId;\r\n        this.gameId = a.gameId;\r\n        this.myChair = a.myChair;\r\n        this.gameId = a.gameId;\r\n        this.gameAction = a.gameAction;\r\n        this.activeTimeRemain = a.activeTimeRemain;\r\n        this.changeTurnChair = this.activeLocalChair = this.convertChair(a.currentChair);\r\n        this.cardSizes = [];\r\n        for (b = 0; b < this.handCardSizeSize; b++) this.cardSizes.push(a.handCardSize[b]);\r\n        for (var b = 0; b < this.players.length; b++) this.players[b].ingame = !1;\r\n        for (b = 0; b < GameData.getInstance().maxPlayer; b++) {\r\n            var c = this.convertChair(b);\r\n            0 != a.playerStatus[b] && (this.players[c].ingame = !0, this.players[c].active = !0, this.players[c].info = a.playerInfos[b], this.players[c].status = a.playerStatus[b], this.players[c].chairInServer = b, this.players[c].chairLocal = c, this.players[c].remainCard = a.handCardSize[b]);\r\n        }\r\n    }\r\n\r\n    convertChair(a) {\r\n        a = (a - this.myChair + 4) % 4;\r\n        2 == GameData.getInstance().maxPlayer ? 0 != a && (a = 2) : 0 != a && (a = TienLenConstant.Config.MAX_PLAYER - a);\r\n        return a;\r\n    }\r\n\r\n    numberPlayer() {\r\n        for (var a = 0, b = 0; b < TienLenConstant.Config.MAX_PLAYER; b++) this.players[b].ingame && 1 < this.players[b].status && a++;\r\n        return a;\r\n    }\r\n\r\n    userJoinRoom(a) {\r\n        this.gameState = TienLenConstant.GameState.USERJOIN;\r\n        var b = this.convertChair(a.uChair);\r\n        this.activeLocalChair = b;\r\n        this.players[b].ingame = !0;\r\n        this.players[b].active = !0;\r\n        this.players[b].info = a.info;\r\n        this.players[b].status = a.uStatus;\r\n        this.players[b].chairInServer = a.uChair;\r\n    }\r\n\r\n    updateOwnerRoom(a) {\r\n        this.roomOwner = a.chair;\r\n        this.gameState = TienLenConstant.GameState.UPDATEOWNERROOM;\r\n    }\r\n\r\n    autoStart(a) {\r\n        this.gameState = TienLenConstant.GameState.AUTOSTART;\r\n        this.timeAutoStart = a.autoStartTime;\r\n    }\r\n\r\n    firstTurn(a) {\r\n        this.gameState = TienLenConstant.GameState.FIRSTTURN;\r\n        this.firstTurnCards = [0,\r\n            0, 0, 0, 0\r\n        ];\r\n        if (a.isRandom)\r\n            for (var b = 0; b < a.cards.length && b < GameData.getInstance().maxPlayer; b++) this.firstTurnCards[this.convertChair(b)] = a.cards[b];\r\n        for (b = 0; b < TienLenConstant.Config.MAX_PLAYER; b++)  Utils.Log(\"this.firstTurn: \" + b + \" \" + this.firstTurnCards[b]);\r\n    }\r\n\r\n    chiabai(a) {\r\n        this.gameState = TienLenConstant.GameState.CHIABAI;\r\n        this.cardChiabai = a.cards;\r\n        this.timeBaoSam = a.timeBaoSam;\r\n        this.gameId = a.gameId;\r\n    }\r\n\r\n    danhbai(a) {\r\n        this.gameState = TienLenConstant.GameState.DANHBAI;\r\n        this.cardDanhBai = a.cards;\r\n        a = this.convertChair(a.chair);\r\n        0 <= a && 4 >= a && (this.activeLocalChair =\r\n            a);\r\n    }\r\n\r\n    boluot(a) {\r\n        this.gameState = TienLenConstant.GameState.BOLUOT;\r\n    }\r\n\r\n    notifyOutRoom(a) {\r\n        this.gameState = TienLenConstant.GameState.NOTIFYOUTROOM;\r\n    }\r\n\r\n    changeturn(a) {\r\n        this.gameState = TienLenConstant.GameState.CHANGETURN;\r\n        this.newRound = a.newRound;\r\n        var b = this.convertChair(a.chair);\r\n        this.chairLastTurn = this.convertChair(a.chairLastTurn);\r\n         //Utils.Log(\"chairLastTurn: \" + this.chairLastTurn);\r\n        this.changeTurnChair = this.activeLocalChair = b;\r\n    }\r\n\r\n    waitBonDoiThong(a) {\r\n        this.gameState = TienLenConstant.GameState.WAITBONDOITHONG;\r\n         //Utils.Log(\"server.chair: \" +\r\n            a.chair);\r\n        this.chairLastTurn = this.convertChair(a.chair);\r\n         //Utils.Log(\"chairLastTurn: \" + this.chairLastTurn);\r\n    }\r\n\r\n    quitRoom() {\r\n        this.gameState = TienLenConstant.GameState.QUIT\r\n    }\r\n\r\n    chatchong(a) {\r\n        this.gameState = TienLenConstant.GameState.CHATCHONG;\r\n        var b = this.convertChair(a.winChair),\r\n            c = this.convertChair(a.lostChair);\r\n        // 0 == b ? lobby.updateMoney(a.winMoney, this.moneyType) : 0 == c && lobby.updateMoney(a.lostMoney, this.moneyType);\r\n        this.players[b].info.money = a.winCurrentMoney;\r\n        this.players[c].info.money = a.lostCurrentMoney;\r\n    }\r\n\r\n    baosam(a) {\r\n        // this.gameState =\r\n        //     TienLenConstant.GameState.BAOSAM;\r\n    }\r\n\r\n    huybaosam(a) {\r\n        // this.gameState = TienLenConstant.GameState.HUYBAOSAM\r\n    }\r\n\r\n    quyetdinhsam(a) {\r\n        // this.gameState = TienLenConstant.GameState.QUYETDINHSAM\r\n    }\r\n\r\n    jackpot(a) {\r\n        this.gameState = TienLenConstant.GameState.JACKPOT;\r\n    }\r\n\r\n    userLeave(a) {\r\n        var b = this.convertChair(a.chair);\r\n        0 <= b && 3 >= b && a.nickName == this.players[b].info.nickName && (this.players[b].ingame = !1, this.activeLocalChair = b);\r\n        this.gameState = TienLenConstant.GameState.USERLEAVE;\r\n    }\r\n\r\n    endGame(a) {\r\n        this.gameState = TienLenConstant.GameState.ENDGAME;\r\n        this.roomJackpot = a.roomJackpot;\r\n        // for (var i = 0; i < a.currentMoney.length && i < GameData.getInstance().maxPlayer; i++)\r\n        //     this.players[this.convertChair(i)].info && (this.players[this.convertChair(i)].info.money = a.currentMoney[i], 0 == this.convertChair(i) && lobby.updateMoney(a.currentMoney[i], this.moneyType));\r\n         //Utils.Log(\"endGame\");\r\n    }\r\n\r\n    updateMath(a) {\r\n        this.gameState = TienLenConstant.GameState.UPDATEMATH;\r\n        this.myChair = a.myChair;\r\n        this.roomOwner = a.ownerChair;\r\n        for (var b = 0; b < a.hasInfo.length && b < GameData.getInstance().maxPlayer; b++)\r\n            if (a.hasInfo[b]) {\r\n                var c = this.convertChair(b);\r\n                this.players[c].ingame &&\r\n                    (this.players[c].info.money = a.infos[b].money, this.players[c].active = !0, this.players[c].status = a.infos[b].status)\r\n            }\r\n    }\r\n}","import Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport BroadcastReceiver from \"../Script/common/BroadcastReceiver\";\r\nimport SPUtils from \"../Script/common/SPUtils\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport TienLenNetworkClient from \"../Script/networks/TienLenNetworkClient\";\r\nimport Card from \"./TienLen.Card\";\r\nimport CardGroup from \"./TienLen.CardGoup\";\r\nimport TienLenCmd from \"./TienLen.Cmd\";\r\nimport TienLenConstant from \"./TienLen.Constant\";\r\nimport Player from \"./TienLen.Player\";\r\nimport Res from \"./TienLen.Res\";\r\nimport Room from \"./TienLen.Room\";\r\nimport History from \"./TienLen.PopupHistory\"\r\n\r\nvar TW = cc.tween;\r\nconst { ccclass, property } = cc._decorator;\r\nenum TYPECARD {\r\n    MOT_LA = 1,\r\n    MOT_DOI = 2,\r\n    HAI_DOI_THONG = 12,\r\n    SAM_CO = 3,\r\n    SANH = 4,\r\n    TU_QUY = 5,\r\n    HAI_TU_QUY = 25,\r\n    BA_DOI_THONG = 6,\r\n    BON_DOI_THONG = 7,\r\n    NAM_DOI_THONG = 8,\r\n    SAU_DOI_THUONG = 9,\r\n    SAU_DOI_THONG = 10,\r\n    SANH_RONG = 11\r\n}\r\nenum TYPE_WIN {\r\n    SANH_RONG = 1,\r\n    TU_QUY = 2,\r\n    NAM_DOI_THONG = 3,\r\n    SAU_DOI = 4,\r\n\r\n}\r\nenum STATE_GAME {\r\n    WAITING = 0,\r\n    PLAYING = 1,\r\n    FINISH = 2,\r\n}\r\nenum audio_clip {\r\n    BG = 0,\r\n    LOSE = 1,\r\n    WIN = 2,\r\n    CHETMAYNE = 3,\r\n    DODI = 4,\r\n    HAINE = 5,\r\n    MAYHABUOI = 6,\r\n    THUADICUNG = 7,\r\n    START_GAME = 8,\r\n    CHIA_BAI = 9,\r\n    DANH = 10\r\n}\r\n@ccclass\r\nexport default class InGame extends cc.Component {\r\n\r\n    public static instance: InGame = null;\r\n    @property(History)\r\n    history: History = null;\r\n    @property(cc.Toggle)\r\n    toggleMusic: cc.Toggle = null;\r\n    @property(cc.Toggle)\r\n    toggleSound: cc.Toggle = null;\r\n    @property(cc.Node)\r\n    nodeSetting:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    contentChatNhanh:cc.Node = null;\r\n    @property(cc.Node)\r\n    bgChat:cc.Node = null;\r\n    @property(cc.Node)\r\n    boxSetting:cc.Node = null;\r\n    @property(cc.Sprite)\r\n    sprAvatar: cc.Sprite = null;\r\n    @property(cc.Label)\r\n    lbRoomId: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbRoomBet: cc.Label = null;\r\n    @property(Player)\r\n    players: Player[] = [];\r\n    @property(cc.Label)\r\n    lbTimeCountDown: cc.Label = null;\r\n    @property(cc.SpriteFrame)\r\n    cards: cc.SpriteFrame[] = [];\r\n    @property(cc.Node)\r\n    cardLine: cc.Node = null;\r\n    @property(cc.Prefab)\r\n    cardItem: cc.Prefab = null;\r\n    @property(cc.Node)\r\n    board: cc.Node = null;\r\n    @property(cc.Node)\r\n    btnsInGame: cc.Node = null;\r\n    @property(cc.Label)\r\n    lblToast: cc.Label = null;\r\n    @property(cc.Node)\r\n    popupGuide: cc.Node = null;\r\n    // UI Chat\r\n    @property(cc.Node)\r\n    UI_Chat: cc.Node = null;\r\n    @property(cc.EditBox)\r\n    edtChatInput: cc.EditBox = null;\r\n\r\n    // Popup Result\r\n    @property(cc.Node)\r\n    popupResult: cc.Node = null;\r\n    @property(cc.ScrollView)\r\n    scrollPopupResult: cc.ScrollView = null;\r\n    @property(cc.Node)\r\n    contentPopupResult: cc.Node = null;\r\n    @property(cc.Prefab)\r\n    prefabPlayerResult: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    fxWhoPlayFirst: cc.Node = null;\r\n\r\n    @property(sp.Skeleton)\r\n    animWin: sp.Skeleton = null;\r\n\r\n    @property(sp.SkeletonData)\r\n    dataAnimChatHai: sp.SkeletonData = null;\r\n\r\n    @property(sp.Skeleton)\r\n    animBeat: sp.Skeleton = null;\r\n\r\n    @property(sp.SkeletonData)\r\n    animToiTrang: sp.SkeletonData = null;\r\n\r\n    @property(sp.SkeletonData)\r\n    animBeatTypeCard: sp.SkeletonData = null;\r\n\r\n    soundManager = null;\r\n\r\n    dataFirstTurn = null;\r\n    dataChiaBai = null;\r\n    state_game = STATE_GAME.WAITING;\r\n\r\n    cardsOnHand = {};\r\n    buttons = {};\r\n    myChair = 0;\r\n    sortBySuit = true;\r\n    currTurnCards = [];\r\n    curCardOnBoard = [];\r\n    countChat = 0;\r\n    checkTurn = false;\r\n\r\n    countDown = null;\r\n\r\n    private timeoutChiaBaiDone = null;\r\n    private timeoutDelayChiaBai = null;\r\n\r\n    cachePlayersInfo = [];\r\n\r\n    onLoad() {\r\n        InGame.instance = this;\r\n        this.soundManager = Room.instance.soundManager;\r\n        this.initRes();\r\n        this.sprAvatar.spriteFrame = App.instance.getAvatarSpriteFrame(Configs.Login.Avatar);\r\n        cc.Tween.stopAllByTarget(this.popupResult);\r\n        this.popupResult.active = false;\r\n        this.bgChat.active = false;\r\n        var self = this;\r\n        for(var i=0;i<this.contentChatNhanh.childrenCount;i++){\r\n            let node = this.contentChatNhanh.children[i];\r\n            node.on('click',function(){\r\n                self.onBtnClickBoxChat();\r\n                self.chatNhanhMsg(node.children[0].getComponent(cc.Label).string);\r\n            })\r\n        }\r\n        this.edtChatInput.node.on('click',function(){\r\n            self.onBtnClickBoxChat();\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    showSetting(){\r\n        this.toggleMusic.isChecked = SPUtils.getMusicVolumn() > 0;\r\n        this.toggleSound.isChecked = SPUtils.getSoundVolumn() > 0;\r\n        this.nodeSetting.active = true;\r\n    }\r\n\r\n    hideSetting(){\r\n        this.nodeSetting.active = false;\r\n    }\r\n\r\n    \r\n\r\n    private onBtnHistory() {\r\n\r\n        // this.actCoomingSoon();\r\n        // return;\r\n        if (this.history == null) {\r\n            App.instance.showLoading(true);\r\n            cc.assetManager.getBundle(\"TienLen\").load(\"PopupHistory\", cc.Prefab, function (finish, total, item) {\r\n            }, (err1, prefab: cc.Prefab) => {\r\n                App.instance.showLoading(false);\r\n                if (err1 != null) {\r\n                     //Utils.Log(\"errr load game TIENLEN:\", err1);\r\n                } else {\r\n                     //Utils.Log(\"vao daycai chu\");\r\n                    this.history = cc.instantiate(prefab).getComponent(\"TienLen.PopupHistory\");\r\n                    this.history.node.parent = this.node.parent;\r\n                    this.history.node.active = true;\r\n                    this.history.show()\r\n                }\r\n            })\r\n        } else {\r\n            this.history.node.parent = this.node.parent;\r\n            this.history.node.active = true;\r\n            this.history.show()\r\n        }\r\n\r\n        // App.instance.showLoading(true);\r\n        // Http.get(Configs.App.API, { \"c\": 139, \"p\": this.page, \"un\": Configs.Login.Nickname, \"gn\": \"Audition\" }, (err, res) => {\r\n        //     App.instance.showLoading(false);\r\n        //     if (err != null) return;\r\n        //      //Utils.Log(\"\");\r\n\r\n            \r\n        // });\r\n    }\r\n\r\n\r\n    onBtnToggleMusic(){\r\n        SPUtils.setMusicVolumn(this.toggleMusic.isChecked ? 1 : 0);\r\n        BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n    }\r\n\r\n    onBtnToggleSound(){\r\n        SPUtils.setSoundVolumn(this.toggleSound.isChecked ? 1 : 0);\r\n        BroadcastReceiver.send(BroadcastReceiver.ON_AUDIO_CHANGED);\r\n    }\r\n\r\n    initRes() {\r\n        Res.getInstance();\r\n        this.btnsInGame.children.forEach(btn => {\r\n            this.buttons[btn.name] = btn;\r\n        });\r\n    }\r\n\r\n    onBtnSetting(){\r\n        this.boxSetting.active = !this.boxSetting.active;\r\n    }\r\n\r\n    public show(isShow: boolean, roomInfo = null) {\r\n        if (isShow) {\r\n            this.node.active = true;\r\n            this.sprAvatar.spriteFrame = App.instance.getAvatarSpriteFrame(Configs.Login.Avatar);\r\n            this.cleanCardLine();\r\n            this.cleanCardsOnBoard();\r\n            this.cleanCardsOnHand();\r\n            for (let index = 0; index < TienLenConstant.Config.MAX_PLAYER; index++) {\r\n                this.players[index].setStatus();\r\n                this.players[index].setLeaveRoom();\r\n                this.players[index].state = STATE_GAME.WAITING;\r\n            }\r\n            this.setRoomInfo(roomInfo);\r\n\r\n        } else {\r\n            this.node.active = false;\r\n        }\r\n    }\r\n\r\n    actLeaveRoom() {\r\n        TienLenNetworkClient.getInstance().send(new TienLenCmd.SendRequestLeaveGame());\r\n    }\r\n\r\n    setRoomInfo(room) {\r\n         //Utils.Log(\"TLMN setRoomInfo data : \", room);\r\n        this.lbRoomId.string = room.roomId;\r\n        if (room.moneyBet == 0) {\r\n            this.lbRoomBet.string = \"\";\r\n        } else {\r\n            this.lbRoomBet.string = Utils.formatNumber(room.moneyBet);\r\n        }\r\n        this.lbTimeCountDown.node.active = false;\r\n        this.myChair = room.myChair;\r\n        this.setPlayersInfo(room);\r\n        for (let index = 0; index < 4; index++) {\r\n            this.players[index].hideChat();\r\n        }\r\n        if (room.cards != null) {\r\n            if (room.cards.length > 0) {\r\n                this.cardLine.active = true;\r\n                this.setCardsOnHand(this.sortCards(room.cards));\r\n                this.setActiveButtons([\"bt_sort\"], [true]);\r\n            }\r\n        }\r\n        this.closePopupResult();\r\n    }\r\n\r\n    setPlayersInfo(room) {\r\n        this.cachePlayersInfo = [];\r\n        for (let i = 0; i < room.playerInfos.length; i++) {\r\n            var info = room.playerInfos[i];\r\n            if (room.playerStatus[i] != 0) {\r\n                this.cachePlayersInfo.push(info.nickName);\r\n                var chair = this.convertChair(i);\r\n                var pl = this.players[chair];\r\n\r\n\r\n                if (pl) pl.setPlayerInfo(info);\r\n                if (room.playerStatus[i] == 1) {\r\n                    pl.setStateViewing(true);\r\n                }\r\n                if (info.nickName == Configs.Login.Nickname && room.playerStatus[i] == 1) {\r\n                    this.state_game = STATE_GAME.PLAYING;\r\n                }\r\n                if (room.playerStatus[i] == 3 && room.hasOwnProperty(\"handCardSize\")) {\r\n                    pl.setCardRemain(room.handCardSize[i]);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    updateGameInfo(data) {\r\n        this.show(true, data);\r\n    }\r\n\r\n    onUserJoinRoom(user) {\r\n        if (user.uStatus != 0) {\r\n            this.cachePlayersInfo[user.uChair] = user.info.nickName;\r\n            let player = this.players[this.convertChair(user.uChair)];\r\n            if (this.state_game == STATE_GAME.PLAYING) {\r\n                player.setStateViewing(true);\r\n            }\r\n            player.setPlayerInfo(user.info);\r\n        }\r\n    }\r\n\r\n    autoStart(autoInfo) {\r\n        if (autoInfo.isAutoStart) {\r\n            this.state_game = STATE_GAME.WAITING;\r\n            this.setTimeCountDown(\"Ván đấu bắt đầu sau: \", autoInfo.autoStartTime);\r\n            this.closePopupResult();\r\n            this.players.forEach((player) => {\r\n                if (player.node.active)\r\n                    player.setStateViewing(false);\r\n            })\r\n        }\r\n    }\r\n\r\n    setTimeCountDown(msg, t) {\r\n        this.lbTimeCountDown.string = msg + \"\" + t + \"s\";\r\n        this.lbTimeCountDown.node.active = true;\r\n        clearInterval(this.countDown);\r\n        this.countDown = setInterval(() => {\r\n            if (this.node) {\r\n                t--;\r\n                if (t < 1) {\r\n                    this.state_game = STATE_GAME.PLAYING;\r\n                }\r\n                if (t < 0) {\r\n\r\n                    clearInterval(this.countDown);\r\n                    this.lbTimeCountDown.node.active = false;\r\n                } else {\r\n                    this.lbTimeCountDown.string = msg + \"\" + t + \"s\";\r\n                }\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    firstTurn(data) {\r\n        this.cleanCardLine();\r\n        clearTimeout(this.timeoutDelayChiaBai);\r\n        // this.timeoutDelayChiaBai = setTimeout(() => {\r\n        let numPlayer = 0;\r\n        let arrSeatId = [];\r\n        for (let i = 0; i < data.cards.length; i++) {\r\n            var pl = this.players[this.convertChair(i)]\r\n            if (pl.active) {\r\n                numPlayer += 1;\r\n                arrSeatId.push(this.convertChair(i));\r\n            }\r\n        }\r\n\r\n        let cardDeal = 6;\r\n        // Open | Hide cards not use -> Mau binh nhieu la bai qua nen chi chia 4 la tuong trung\r\n        // for (let index = 0; index < 4 * cardDeal; index++) { // 4 players * 6 cards\r\n\r\n        let timeShip = 0.05; // 0.15\r\n        // Move Cards used to each player joined\r\n        if (numPlayer > 4) numPlayer = 4;\r\n        this.fxWhoPlayFirst.active = true;\r\n         //Utils.Log(\"thang ngay danh truoc:\" + this.cachePlayersInfo[data.chair]);\r\n        this.fxWhoPlayFirst.getChildByName(\"txt\").getComponent(cc.Label).string = this.cachePlayersInfo[data.chair] + \" đánh trước !\";\r\n        this.scheduleOnce(() => {\r\n            this.fxWhoPlayFirst.active = false;\r\n        }, 2.0)\r\n        for (let i = 0; i < this.players.length; i++) {\r\n            let player = this.players[i];\r\n            this.resolveCardDeal(player);\r\n        }\r\n        // }, 1000);\r\n    }\r\n    actCoomingSoon(){\r\n        App.instance.ShowAlertDialog(App.instance.getTextLang(\"txt_function_in_development\"));\r\n    }\r\n    resolveCardDeal(player) {\r\n        if (player.state == STATE_GAME.PLAYING) {\r\n            for (let j = 0, l = 6; j < l; j++) {\r\n                let card4Me = player.cardDeal[j];\r\n                if (!card4Me) {\r\n                    card4Me = cc.instantiate(this.cardItem);\r\n                    card4Me.getComponent(Card).setCardData(52);\r\n                    this.node.addChild(card4Me);\r\n                    player.cardDeal.push(card4Me);\r\n                }\r\n                card4Me.active = true;\r\n                let rawPlayerPos = cc.v2(player.node.x, player.node.y - 50);\r\n                cc.Tween.stopAllByTarget(card4Me);\r\n                TW(card4Me)\r\n                    .set({ opacity: 150, scale: 0.5, x: 0, y: 0 })\r\n                    .delay(j * 0.05)\r\n                    .parallel(TW()\r\n                        .to(0.2, { x: rawPlayerPos.x, y: rawPlayerPos.y, opacity: 255 }, { easing: cc.easing.sineOut }),\r\n                        TW().by(0.15, { angle: 360 }, { easing: cc.easing.sineOut })\r\n                    )\r\n                    .call(() => {\r\n                        this.soundManager.playAudioEffect(audio_clip.CHIA_BAI);\r\n                        card4Me.active = false;\r\n                        if (j == l - 1 && this.players.indexOf(player) == 0) {\r\n                            this.resolveChiaBai(this.dataChiaBai);\r\n                        }\r\n                    }).start();\r\n            }\r\n        }\r\n    }\r\n\r\n    chiaBai(data) {\r\n        this.dataChiaBai = data;\r\n        this.firstTurn(this.dataFirstTurn);\r\n    }\r\n    resolveChiaBai(data) {\r\n        this.setCardsOnHand(this.sortCards(data.cards));\r\n        if (data.toiTrang > 0) {\r\n\r\n        }\r\n        for (let i = 0; i < this.players.length; i++) {\r\n            if (this.players[i].active && this.players[i].state == STATE_GAME.PLAYING) {\r\n                this.players[i].offFirstCard();\r\n                if (i > 0) {\r\n                    this.players[i].setCardRemain(data.cardSize);\r\n                }\r\n            }\r\n        }\r\n        this.setActiveButtons([\"bt_sort\"], [true]);\r\n    }\r\n\r\n    changeTurn(turn) {\r\n        var chair = this.convertChair(turn.chair);\r\n        for (let index = 0; index < 4; index++) {\r\n            this.players[index].setTimeRemain(0);\r\n        }\r\n        if (turn.time) {\r\n            this.players[chair].setTimeRemain(turn.time);\r\n        } else {\r\n            this.players[chair].setTimeRemain(14);\r\n        }\r\n\r\n        if (chair == 0) {\r\n            this.setActiveButtons([\"bt_submit_turn\", \"bt_pass_turn\"], [true, true]);\r\n            this.checkTurn = true;\r\n        }\r\n        if (turn.newRound) {\r\n            this.cleanCardsOnBoard();\r\n            this.currTurnCards = [];\r\n            this.curCardOnBoard = [];\r\n            this.countChat = 0;\r\n            this.checkTurn = false;\r\n            // for (let i = 0; i < this.players.length; i++) {\r\n            //     if (this.players[i].active) {\r\n            //         this.players[i].setStatus();\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n\r\n    submitTurn(turn) {\r\n        this.setActiveButtons([\"bt_submit_turn\", \"bt_pass_turn\"], [false, false]);\r\n        this.players[0].setTimeRemain(0);\r\n        var cards = this.sortCards(turn.cards);\r\n\r\n        let isExist2 = false;\r\n        for (let index = 0; index < turn.cards.length; index++) {\r\n            if (turn.cards[index] == 48 || turn.cards[index] == 49 || turn.cards[index] == 50 || turn.cards[index] == 51) {\r\n                isExist2 = true;\r\n            }\r\n        }\r\n\r\n        if (isExist2) {\r\n            let animChatHai = new cc.Node(\"animChatHai\").addComponent(sp.Skeleton);\r\n            this.node.getChildByName(\"board\").addChild(animChatHai.node);\r\n            animChatHai.node.setPosition(cc.v2(-98, -348));\r\n            animChatHai.skeletonData = this.dataAnimChatHai;\r\n            animChatHai.setAnimation(0, \"Đánh 2\", false);\r\n            setTimeout(() => {\r\n                animChatHai.node.destroy();\r\n            }, 1500);\r\n        }\r\n\r\n        var cardHalf = (cards.length - 1) / 2;\r\n        var ranX = Math.floor(Math.random() * 100) - 50;\r\n        var ranY = Math.floor(Math.random() * 100) - 30;\r\n        var chair = this.convertChair(turn.chair);\r\n        var pl = this.players[chair];\r\n        this.board.children.forEach((card) => {\r\n            card.color = cc.Color.GRAY;\r\n        })\r\n        if (chair == 0) {//this player\r\n            for (let i = 0; i < cards.length; i++) {\r\n                var cardIndex = cards[i];\r\n                var _card = this.cardsOnHand[cardIndex];\r\n                var pos = _card.parent.convertToWorldSpaceAR(_card.position)\r\n                pos = this.board.convertToNodeSpaceAR(pos);\r\n                _card.parent = this.board;\r\n                _card.setPosition(pos);\r\n                _card.runAction(cc.moveTo(0.2, cc.v2((i - cardHalf) * 30 + ranX, ranY)));\r\n                _card.runAction(cc.scaleTo(0.2, 0.65, 0.65));\r\n                delete this.cardsOnHand[cardIndex];\r\n            }\r\n        } else { //that player\r\n            var pos = pl.node.parent.convertToWorldSpaceAR(pl.node.position)\r\n            pos = this.board.convertToNodeSpaceAR(pos);\r\n            for (let i = 0; i < cards.length; i++) {\r\n                var cardItem = cc.instantiate(this.cardItem);\r\n                cardItem.parent = this.board;\r\n                cardItem.setScale(0.65, 0.65);\r\n                cardItem.setPosition(pos);\r\n                cardItem.getComponent(Card).setCardData(cards[i]);\r\n                cardItem.setContentSize(cc.size(100, 135));\r\n                cardItem.runAction(cc.moveTo(0.2, cc.v2((i - cardHalf) * 30 + ranX, ranY)));\r\n            }\r\n            pl.setCardRemain(turn.numberCard);\r\n            this.currTurnCards = cards;\r\n        }\r\n        this.checkTypeSoundEff(cards, this.curCardOnBoard);\r\n        this.curCardOnBoard = cards;\r\n\r\n        let typeCard = this.getTypeCard(cards);\r\n        this.showAnimTypeCard(typeCard, cards);\r\n\r\n\r\n    }\r\n    checkTypeSoundEff(cards, currTurnCards = null) {\r\n        let typeSound = 10;\r\n        let arrPig = [48, 49, 50, 51];\r\n\r\n        if (arrPig.some(ele => cards.includes(ele))) {\r\n            typeSound = audio_clip.HAINE;\r\n        }\r\n        if (currTurnCards.some(ele => arrPig.includes(ele))) {//chat dc 2.\r\n            this.countChat++;\r\n            if (this.countChat == 1)\r\n                typeSound = audio_clip.CHETMAYNE;\r\n            else if (this.countChat == 2) {\r\n                typeSound = audio_clip.MAYHABUOI;\r\n            } else if (this.countChat == 3) {\r\n                typeSound = audio_clip.DODI;\r\n            }\r\n        }\r\n        this.soundManager.playAudioEffect(typeSound);\r\n    }\r\n\r\n    passTurn(turn) {\r\n         //Utils.Log(\"Pass turn\");\r\n        this.players[this.convertChair(turn.chair)].setNotify(\"Bỏ lượt\");\r\n        this.setActiveButtons([\"bt_submit_turn\", \"bt_pass_turn\"], [false, false]);\r\n        this.players[0].setTimeRemain(0);\r\n    }\r\n\r\n    actSubmitTurn() {\r\n        var cardSelected = [];\r\n        this.cardLine.children.forEach(card => {\r\n            var _card = card.getComponent(Card);\r\n            if (_card.isSelected)\r\n                cardSelected.push(_card.getCardIndex());\r\n        });\r\n        this.sendSubmitTurn(cardSelected);\r\n\r\n        this.checkTurn = false;\r\n    }\r\n\r\n    sendSubmitTurn(cardSelected) {\r\n        TienLenNetworkClient.getInstance().send(new TienLenCmd.SendDanhBai(!1, cardSelected));\r\n    }\r\n\r\n    actPassTurn() {\r\n        this.sendPassTurn();\r\n\r\n        this.checkTurn = false;\r\n    }\r\n\r\n    sendPassTurn() {\r\n        TienLenNetworkClient.getInstance().send(new TienLenCmd.SendBoLuot(!0));\r\n    }\r\n\r\n    sortCards(cards) {\r\n        cards = CardGroup.indexsToCards(cards);\r\n        var _cards = [];\r\n        if (this.sortBySuit)\r\n            _cards = new CardGroup(cards).getOrderedBySuit();\r\n        else\r\n            _cards = CardGroup.sortCards(cards);\r\n        return CardGroup.cardsToIndexs(_cards);\r\n    }\r\n\r\n    actSort() {\r\n        this.sortBySuit = !this.sortBySuit;\r\n        var cards = this.getCardsOnHand();\r\n        cards = this.sortCards(cards);\r\n        this.sortCardsOnHand(cards);\r\n        this.setToggleCardsOnHand();\r\n    }\r\n\r\n    setCardsOnHand(cards) {\r\n        let count = 0;\r\n        cards.forEach(card => {\r\n            var cardItem = cc.instantiate(this.cardItem);\r\n            cardItem.setContentSize(cc.size(100, 135));\r\n            cardItem.parent = this.cardLine;\r\n            cardItem.getComponent(Card).setCardData(52);\r\n            cc.tween(cardItem).delay(0.05 * count)\r\n                .to(0.2, { angle: -10, scaleX: 0 })\r\n                .to(0.2, { angle: 0, scaleX: 1 }).call(() => {\r\n                    cardItem.getComponent(Card).setCardData(card, this.onCardSelectCallback.bind(this));\r\n                    this.cardsOnHand[card] = cardItem;\r\n                }).start();\r\n            count++;\r\n        });\r\n    }\r\n\r\n    onCardSelectCallback(card) {\r\n        if (this.currTurnCards\r\n            && this.currTurnCards.length == 1\r\n            && this.currTurnCards[0].card >= 48) //1 la khac 2\r\n        {\r\n            this.setToggleCardsOnHand();\r\n            this.setToggleCardsOnHand([card]);\r\n        } else\r\n            this.checkSuggestion(card);\r\n    }\r\n\r\n    checkSuggestion(data) {\r\n        data = CardGroup.indexToCard(data);\r\n        var cardsOnHand = CardGroup.indexsToCards(this.getCardsOnHand());\r\n        var turnCards = CardGroup.indexsToCards(this.currTurnCards);\r\n        var suggestionCards;\r\n        if (this.checkTurn)\r\n            suggestionCards = new CardGroup(cardsOnHand).getSuggestionCards(turnCards, data, () => {\r\n                let tmp = new Array();\r\n                for (var key in this.cardsOnHand) {\r\n                    let tmpCard = this.cardsOnHand[key].getComponent(Card);\r\n                    if (tmpCard.isSelected) {\r\n                        tmp.push(tmpCard);\r\n                    }\r\n                }\r\n                return new CardGroup(cardsOnHand).getSuggestionNoCards(tmp, data, true);\r\n            });\r\n        else {\r\n            let tmp = new Array();\r\n            for (var key in this.cardsOnHand) {\r\n                let tmpCard = this.cardsOnHand[key].getComponent(Card);\r\n                if (tmpCard.isSelected) {\r\n                    tmp.push(tmpCard);\r\n                }\r\n            }\r\n            suggestionCards = new CardGroup(cardsOnHand).getSuggestionNoCards(tmp, data);\r\n        }\r\n        if (suggestionCards) {\r\n            for (let i = 0; i < suggestionCards.length; i++) {\r\n                for (let j = 0; j < suggestionCards[i].length; j++) {\r\n                    if (CardGroup.cardToIndex(data) == CardGroup.cardToIndex(suggestionCards[i][j])) {\r\n                        this.setToggleCardsOnHand(CardGroup.cardsToIndexs(suggestionCards[i]));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getCardsOnHand() {\r\n        var cards = [];\r\n        for (var key in this.cardsOnHand) {\r\n            cards.push(this.cardsOnHand[key].getComponent(Card).getCardIndex());\r\n        }\r\n        return cards;\r\n    }\r\n\r\n    cleanCardsOnHand() {\r\n        for (var key in this.cardsOnHand)\r\n            delete this.cardsOnHand[key];\r\n    }\r\n\r\n    cleanCardsOnBoard() {\r\n        this.board.removeAllChildren();\r\n    }\r\n\r\n    setToggleCardsOnHand(cards = null) {\r\n        if (cards === null) {\r\n            for (var key in this.cardsOnHand) {\r\n                this.cardsOnHand[key].getComponent(Card).deSelect();\r\n            }\r\n        } else {\r\n            for (var key in this.cardsOnHand) {\r\n                this.cardsOnHand[key].getComponent(Card).deSelect();\r\n            }\r\n            for (let i = 0; i < cards.length; i++) {\r\n                this.cardsOnHand[cards[i]].getComponent(Card).select();\r\n            }\r\n        }\r\n    }\r\n\r\n    sortCardsOnHand(cards) {\r\n        for (let i = 0; i < cards.length; i++) {\r\n            var index = cards[i];\r\n            this.cardsOnHand[index].setSiblingIndex(i);\r\n        }\r\n    }\r\n\r\n    cleanCardLine() {\r\n        this.cardLine.removeAllChildren();\r\n\r\n        for (let i = 1; i < this.players.length; i++) {\r\n            this.players[i].clearCardLine();\r\n        }\r\n    }\r\n\r\n    setActiveButtons(btnNames, actives) {\r\n        for (let i = 0; i < btnNames.length; i++) {\r\n            this.buttons[btnNames[i]].active = actives[i];\r\n        }\r\n    }\r\n\r\n    endGame(data) {\r\n         //Utils.Log(\"TTTTTTTTTT endGame data : \", JSON.stringify(data));\r\n        this.state_game = STATE_GAME.FINISH;\r\n\r\n        for (let index = 0; index < 4; index++) {\r\n            this.players[index].setTimeRemain(0);\r\n        }\r\n        if (this.cardLine.childrenCount > 0) {\r\n            this.soundManager.playAudioEffect(audio_clip.THUADICUNG);\r\n        }\r\n        var coinChanges = data.ketQuaTinhTienList;\r\n        for (let i = 0; i < coinChanges.length; i++) {\r\n            var chair = this.convertChair(i);\r\n            if (i < TienLenConstant.Config.MAX_PLAYER) {\r\n                this.players[chair].setCoinChange(coinChanges[i]);\r\n                this.players[chair].setCoin(data.currentMoney[i]);\r\n            }\r\n        }\r\n        for (let i = 0, l = data.ketQuaTinhTienList.length; i < l; i++) {\r\n            var chair = this.convertChair(i);\r\n            if (i < TienLenConstant.Config.MAX_PLAYER) {\r\n                let player = this.players[chair];\r\n                if (data.winTypes[i] != 1) {\r\n                    if (data.winTypes[i] < 11 && player.node.active) {\r\n                        player.showAnimWinLose(true);\r\n                        if ([4, 5, 6, 7, 8, 9].includes(data.winTypes[i])) {\r\n                            player.showAnimToiTrang(data.winTypes[i]);\r\n                        }\r\n                        if (player == this.players[0]) {\r\n                            this.soundManager.playAudioEffect(audio_clip.WIN)\r\n                        }\r\n                    } else {\r\n                        player.showAnimWinLose(false);\r\n                        if (player == this.players[0]) {\r\n                            this.soundManager.playAudioEffect(audio_clip.LOSE)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        for (let i = 0; i < data.cards.length; i++) {\r\n            var chair = this.convertChair(i);\r\n            if (chair != 0) {\r\n                this.players[chair].setCardLine(data.cards[i]);\r\n                this.players[chair].setCardRemain(0);\r\n            }\r\n        }\r\n        this.setActiveButtons([\"bt_sort\"], [false]);\r\n        if (data.countDown == 0) {\r\n            this.setTimeCountDown(\"Ván đấu kết thúc sau: \", 10);\r\n            setTimeout(() => {\r\n                this.cleanCardsOnHand();\r\n                this.cleanCardLine();\r\n                this.cleanCardsOnBoard();\r\n                for (let index = 0; index < TienLenConstant.Config.MAX_PLAYER; index++) {\r\n                    this.players[index].setStatus();\r\n                    this.players[index].animWinLose.node.active = false;\r\n                    this.players[index].animToiTrang.node.active = false;\r\n                    this.players[index].setTimeRemain(0);\r\n                }\r\n            }, 5000);\r\n        } else {\r\n             //Utils.Log(\"TTTTTTTTTT TLMN\");\r\n            setTimeout(() => {\r\n                this.setTimeCountDown(\"Ván đấu kết thúc sau: \", data.countDown - 6);\r\n            }, 4000);\r\n\r\n            setTimeout(() => {\r\n                this.cleanCardsOnHand();\r\n                this.cleanCardLine();\r\n                this.cleanCardsOnBoard();\r\n                for (let index = 0; index < TienLenConstant.Config.MAX_PLAYER; index++) {\r\n                    this.players[index].animWinLose.node.active = false;\r\n                    this.players[index].animToiTrang.node.active = false;\r\n                    this.players[index].setStatus();\r\n                    this.players[index].setTimeRemain(0);\r\n                }\r\n            }, 9000);\r\n        }\r\n        TienLenNetworkClient.getInstance().send(new TienLenCmd.SendReadyAutoStart());\r\n        cc.Tween.stopAllByTarget(this.popupResult.getChildByName(\"bg\"));\r\n        setTimeout(() => {\r\n            // show Popup Result\r\n            this.popupResult.active = true;\r\n            TW(this.popupResult.getChildByName(\"bg\")).set({ opacity: 150, scale: 0.8 }).to(0.3, { scale: 1.0, opacity: 255 }, { easing: cc.easing.backInOut }).start();\r\n            this.contentPopupResult.destroyAllChildren();\r\n            this.contentPopupResult.removeAllChildren();\r\n\r\n            let isTLMN = data.sizeWinType == 5 ? false : true;\r\n            let ketQuaTinhTien = data.ketQuaTinhTienList.slice().sort((x, y) => {\r\n                return y - x;\r\n            })\r\n\r\n            let countId = 0;\r\n            for (let index = 0; index < ketQuaTinhTien.length; index++) {\r\n                if (ketQuaTinhTien[index] != 0) {\r\n                    countId++;\r\n                    let item = cc.instantiate(this.prefabPlayerResult).getComponent(\"TienLen.ItemPlayerResult\");\r\n                    let indexInDataKqtt = data.ketQuaTinhTienList.indexOf(ketQuaTinhTien[index]);\r\n                    item.initItem({\r\n                        id: index + 1,// index + 1,\r\n                        userName: this.cachePlayersInfo[indexInDataKqtt],\r\n                        goldChange: data.ketQuaTinhTienList[indexInDataKqtt],\r\n                        cards: data.cards[indexInDataKqtt],\r\n                        winTypes: data.winTypes[indexInDataKqtt],\r\n                        isTLMN: isTLMN,\r\n                        countId: countId\r\n                    })\r\n                    this.contentPopupResult.addChild(item.node);\r\n                }\r\n            }\r\n            this.scrollPopupResult.scrollToTop(0);\r\n        }, 4000);\r\n    }\r\n\r\n    updateMatch(data) {\r\n\r\n    }\r\n\r\n    userLeaveRoom(data) {\r\n        var chair = this.convertChair(data.chair);\r\n        this.players[chair].setLeaveRoom();\r\n        if (chair == 0) {\r\n            this.show(false);\r\n            Room.instance.show(true);\r\n            Room.instance.refreshRoom();\r\n        }\r\n    }\r\n\r\n    notifyUserRegOutRoom(res) {\r\n        let outChair = res[\"outChair\"];\r\n        let isOutRoom = res[\"isOutRoom\"];\r\n        let chair = this.convertChair(outChair);\r\n        if (chair == 0) {\r\n            if (isOutRoom) {\r\n                // this.players[chair].setNotify(\"Sắp rời bàn !\");\r\n                App.instance.showToast(App.instance.getTextLang('txt_room_leave'));\r\n                this.players[chair].setBackGame(true);\r\n            } else {\r\n                // this.players[chair].setNotify(\"Khô Máu !\");\r\n                App.instance.showToast(App.instance.getTextLang('txt_room_cancel_leave'));\r\n                this.players[chair].setBackGame(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    playerChat(res) {\r\n        let chair = res[\"chair\"];\r\n        let isIcon = res[\"isIcon\"];\r\n        let content = res[\"content\"];\r\n\r\n        let seatId = this.convertChair(chair);\r\n        if (isIcon) {\r\n            // Chat Icon\r\n            this.players[seatId].showChatEmotion(content);\r\n        } else {\r\n            // Chat Msg\r\n            this.players[seatId].showChatMsg(content);\r\n        }\r\n    }\r\n\r\n    playerChatChong(res) {\r\n        let winChair = res[\"winChair\"];\r\n        let lostChair = res[\"lostChair\"];\r\n        let winMoney = res[\"winMoney\"];\r\n        let lostMoney = res[\"lostMoney\"];\r\n        let winCurrentMoney = res[\"winCurrentMoney\"];\r\n        let lostCurrentMoney = res[\"lostCurrentMoney\"];\r\n\r\n        setTimeout(() => {\r\n            let seatIdWin = this.convertChair(winChair);\r\n            let seatIdLost = this.convertChair(lostChair);\r\n            this.players[seatIdWin].setCoinChange(winMoney);\r\n            this.players[seatIdLost].setCoinChange(lostMoney);\r\n            this.players[seatIdWin].setCoin(winCurrentMoney);\r\n            this.players[seatIdLost].setCoin(lostCurrentMoney);\r\n            setTimeout(() => {\r\n                this.players[seatIdWin].setStatus(\"\");\r\n                this.players[seatIdLost].setStatus(\"\");\r\n            }, 2000);\r\n        }, 1000);\r\n    }\r\n\r\n    wait4doithong(res) {\r\n        let chair = res[\"chair\"];\r\n\r\n        this.fxWhoPlayFirst.active = true;\r\n        this.fxWhoPlayFirst.getChildByName(\"txt\").getComponent(cc.Label).string = \"Đợi Bốn Đôi Thông !\";\r\n        setTimeout(() => {\r\n            this.fxWhoPlayFirst.active = false;\r\n        }, 2000);\r\n    }\r\n\r\n    showPopupGuide() {\r\n        this.popupGuide.active = true;\r\n    }\r\n\r\n    closePopupGuide() {\r\n        this.popupGuide.active = false;\r\n    }\r\n    // Chat\r\n\r\n    onBtnClickBgChat(){\r\n        this.UI_Chat.opacity = 100;\r\n        this.bgChat.active = false;\r\n    }\r\n\r\n    onBtnClickBoxChat(){\r\n        this.UI_Chat.opacity = 255;\r\n        this.bgChat.active = true;\r\n    }\r\n    showUIChat() {\r\n        this.onBtnClickBoxChat();\r\n        this.UI_Chat.active = true;\r\n        cc.tween(this.UI_Chat).to(0.3, { x: cc.winSize.width / 2 - this.UI_Chat.width / 2 }, { easing: cc.easing.sineOut }).start();\r\n    }\r\n\r\n    toggleUIChat(){\r\n        if(this.UI_Chat.active == false){\r\n            this.showUIChat();\r\n        }\r\n        else{\r\n            this.closeUIChat();\r\n        }\r\n    }\r\n\r\n    closeUIChat() {\r\n        this.UI_Chat.active = false;\r\n        cc.tween(this.UI_Chat).to(0.3, { x: cc.winSize.width / 2 + this.UI_Chat.width / 2 }, { easing: cc.easing.sineIn }).call(() => {\r\n            this.UI_Chat.active = false;\r\n        }).start();\r\n    }\r\n\r\n    chatEmotion(event, id) {\r\n         //Utils.Log(\"BaCay chatEmotion id : \", id);\r\n        TienLenNetworkClient.getInstance().send(new TienLenCmd.SendChatRoom(1, id));\r\n        this.closeUIChat();\r\n    }\r\n\r\n    chatMsg() {\r\n        if (this.edtChatInput.string.trim().length > 0) {\r\n            TienLenNetworkClient.getInstance().send(new TienLenCmd.SendChatRoom(0, this.edtChatInput.string));\r\n            this.edtChatInput.string = \"\";\r\n            this.closeUIChat();\r\n        }\r\n    }\r\n\r\n    chatNhanhMsg(msg) {\r\n        if (msg.trim().length > 0) {\r\n             //Utils.Log(\"chatNhanhMsg:\"+msg);\r\n            TienLenNetworkClient.getInstance().send(new TienLenCmd.SendChatRoom(0, msg));\r\n            this.closeUIChat();\r\n        }\r\n    }\r\n\r\n    convertChair(a) {\r\n        return (a - this.myChair + 4) % 4;\r\n    }\r\n\r\n    showToast(message: string) {\r\n        this.lblToast.string = message;\r\n        let parent = this.lblToast.node.parent;\r\n        parent.stopAllActions();\r\n        parent.active = true;\r\n        parent.opacity = 0;\r\n        parent.runAction(cc.sequence(cc.fadeIn(0.1), cc.delayTime(2), cc.fadeOut(0.2), cc.callFunc(() => {\r\n            parent.active = false;\r\n        })));\r\n    }\r\n\r\n    closePopupResult() {\r\n        cc.Tween.stopAllByTarget(this.popupResult);\r\n        TW(this.popupResult.getChildByName(\"bg\")).to(0.3, { opacity: 150, scale: 0.8 }, { easing: cc.easing.backIn }).call(() => {\r\n            this.popupResult.active = false;\r\n        }).start();\r\n    }\r\n    getTypeCard(arrCard) {\r\n        let indexsToCard = [];\r\n        arrCard.forEach((element) => {\r\n            indexsToCard.push(CardGroup.indexToCard(element))\r\n        });\r\n        let cardtype = new CardGroup(indexsToCard).getCardType();\r\n        return cardtype;\r\n    }\r\n    showAnimTypeCard(typeCard, cards) {\r\n        let animName = \"\";\r\n        switch (typeCard) {\r\n            case TYPECARD.BA_DOI_THONG:\r\n                animName = \"chat ba doi thong\"\r\n                break;\r\n            case TYPECARD.BON_DOI_THONG:\r\n                animName = \"chat bon doi thong\"\r\n                break;\r\n            case TYPECARD.TU_QUY:\r\n                animName = \"chat tu quy\"\r\n                break;\r\n        }\r\n        if (animName != \"\") {\r\n            this.animBeat.node.parent.active = true;\r\n            this.animBeat.setAnimation(0, animName, true);\r\n            this.showSpecialCard(cards);\r\n        }\r\n\r\n\r\n    }\r\n    showSpecialCard(indexs) {\r\n        // card.zIndex = 1000;\r\n        // card.runAction(\r\n        //     cc.sequence(\r\n        //         cc.delayTime(delay),\r\n        //         cc.spawn(\r\n        //             cc.scaleTo(0.15,0.01,1.2),\r\n        //             cc.skewTo(0.15,0,-15),\r\n        //         ),\r\n        //         cc.callFunc(()=>{\r\n        //             card.skewY = 15;\r\n        //             card.getComponent('Card').setTextureWithCode(code);\r\n        //         }),\r\n        //         cc.spawn(\r\n        //             cc.scaleTo(0.15,1.2),\r\n        //             cc.skewTo(0.15,0,0),\r\n        //         ),\r\n        //         cc.delayTime(0.1),\r\n        //         cc.scaleTo(0.2,1).easing(cc.easeCubicActionIn()),\r\n        //         cc.delayTime(0.2),\r\n\r\n        //     )\r\n        // )\r\n        let totalSize = ((120 * indexs.length) / 2) + 60;\r\n        let initPos = cc.v2(-(totalSize / 2) + 60, 0);\r\n        let cardNode = []\r\n        for (let i = 0; i < indexs.length; i++) {\r\n            var cardItem = cc.instantiate(this.cardItem);\r\n            cardNode.push(cardItem);\r\n            cardItem.parent = this.animBeat.node.parent\r\n            cardItem.getComponent(Card).setCardData(indexs[i]);\r\n            // cardItem.setScale(0.6, 0.6);\r\n            cardItem.setPosition(cc.v2(0, -cc.winSize.height));\r\n            cardItem.active = true;\r\n            TW(cardItem).delay(0.05 * i).to(0.15, { x: initPos.x + (i * 60), y: -cc.winSize.height / 4, scaleX: 0.01, scaleY: 1.2, skewX: 0, skewY: -15 })\r\n                .call(() => {\r\n\r\n                    cardItem.skewY = 15;\r\n                }).to(0.15, { x: initPos.x + (i * 60), y: initPos.y, scale: 1.2, skewX: 0, skewY: 0 })\r\n                .delay(0.1)\r\n                .to(0.2, { scale: 1.0 }, { easing: cc.easing.cubicOut })\r\n                .start();\r\n        }\r\n        setTimeout(() => {\r\n            cardNode.forEach((card) => {\r\n                card.destroy();\r\n            });\r\n            this.animBeat.node.parent.active = false;\r\n        }, 2500)\r\n        this.animBeat.node.scale = 0.6;\r\n        this.animBeat.node.setPosition(cc.v2(-74.5, -158));\r\n    }\r\n}\r\n","import Utils from \"../Script/common/Utils\";\r\nimport Res from \"./TienLen.Res\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TienLen_ItemPlayerResult extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    labelRank: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelUserName: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelMoneyChange: cc.Label = null;\r\n    @property(cc.Node)\r\n    listCards: cc.Node = null;\r\n    @property(cc.Node)\r\n    resultWin: cc.Node = null;\r\n    @property(cc.Node)\r\n    resultLose: cc.Node = null;\r\n    @property(cc.Node)\r\n    fxResult: cc.Node = null;\r\n    @property(cc.Label)\r\n    labelFx: cc.Label = null;\r\n    @property(cc.Font)\r\n    fontFx: cc.Font[] = [];\r\n    @property(cc.SpriteFrame)\r\n    sprCups: cc.SpriteFrame[] = [];\r\n    @property(cc.BitmapFont)\r\n    fontNumber: cc.BitmapFont[] = [];\r\n    @property(cc.Prefab)\r\n    prefabCard: cc.Prefab = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    initItem(data) {\r\n         //Utils.Log(\"TTTTTTTTTT ItemPlayerResult data : \", data);\r\n\r\n        this.labelRank.string = data.countId;\r\n        this.labelRank.font = this.fontFx[data.winTypes < 10 ? 0 : 1];\r\n        this.labelUserName.string = data.userName;\r\n        this.labelMoneyChange.string = data.goldChange > 0 ? \"+\" + Utils.formatNumber(data.goldChange) : Utils.formatNumber(data.goldChange);\r\n        this.labelMoneyChange.font = data.goldChange > 0 ? this.fontNumber[0] : this.fontNumber[1];\r\n        if(data.goldChange > 0){\r\n            this.labelMoneyChange.font = this.fontNumber[0];\r\n            this.labelMoneyChange.node.position = cc.v3(-207,3,0);\r\n        }\r\n        else{\r\n            this.labelMoneyChange.font = this.fontNumber[1];\r\n            this.labelMoneyChange.node.position = cc.v3(-207,-8,0);\r\n        }\r\n        for (let index = 0; index < data.cards.length; index++) {\r\n            let item = cc.instantiate(this.prefabCard);\r\n            item.getComponent(cc.Sprite).spriteFrame = Res.getInstance().getCardFace(data.cards[index]);\r\n            this.listCards.addChild(item);\r\n        }\r\n        this.resultWin.active = data.winTypes < 11 ? true : false;\r\n        if(data.countId <= 3){\r\n            this.node.getChildByName(\"ic_cup\").active = true ;\r\n            this.node.getChildByName(\"ic_cup\").getComponent(cc.Sprite).spriteFrame = this.sprCups[data.countId - 1];\r\n        }\r\n        else{\r\n            this.node.getChildByName(\"ic_cup\").active = false ;\r\n        }\r\n        this.resultLose.active = !this.resultWin.active;\r\n\r\n        if (data.isTLMN) {\r\n            switch (data.winTypes) {\r\n                case 2:\r\n\r\n                    break;\r\n                case 3:\r\n                case 4:\r\n                case 5:\r\n                case 6:\r\n                case 7:\r\n                case 8:\r\n                case 9:\r\n                    if (data.winTypes == 3) {\r\n                         //Utils.Log(\"TTTTTTTTTT ItemPlayerResult Thắng Bắt Treo data.winTypes : \", data.winTypes);\r\n                        this.fxResult.active = true;\r\n                        this.labelFx.font = this.fontFx[0];\r\n                        this.labelFx.string = \"Thắng Bắt Treo\";\r\n                         //Utils.Log(\"TTTTTTTTTT ItemPlayerResult Thắng Bắt Treo\");\r\n                    } else {\r\n                         //Utils.Log(\"TTTTTTTTTT ItemPlayerResult Tới Trắng data.winTypes : \", data.winTypes);\r\n                        this.fxResult.active = true;\r\n                        this.labelFx.font = this.fontFx[0];\r\n                        this.labelFx.string = \"Tới Trắng\";\r\n                         //Utils.Log(\"TTTTTTTTTT ItemPlayerResult Tới Trắng\");\r\n                    }\r\n                    break;\r\n                case 11:\r\n                    // Thoi Tu Quy | 2\r\n                    if (this.kiemtraThoiTuQuy(data.cards)) {\r\n                        this.fxResult.active = true;\r\n                        this.labelFx.font = this.fontFx[1];\r\n                        this.labelFx.string = \"Thối Tứ Quý\";\r\n                         //Utils.Log(\"TTTTTTTTTT ItemPlayerResult Thối Tứ Quý\");\r\n                    }\r\n\r\n                    if (this.kiemtraThoiHeo(data.cards)) {\r\n                        this.fxResult.active = true;\r\n                        this.labelFx.font = this.fontFx[1];\r\n                        this.labelFx.string = \"Thối 2\";\r\n                         //Utils.Log(\"TTTTTTTTTT ItemPlayerResult Thối 2\");\r\n                    }\r\n                    break;\r\n                case 12:\r\n                    // Cong\r\n                    this.fxResult.active = true;\r\n                    this.labelFx.font = this.fontFx[1];\r\n                    this.labelFx.string = \"Cóng\";\r\n                     //Utils.Log(\"TTTTTTTTTT ItemPlayerResult Cóng\");\r\n                    break;\r\n                case 13:\r\n                    // Thua Toi Trang\r\n                    this.fxResult.active = true;\r\n                    this.labelFx.font = this.fontFx[1];\r\n                    this.labelFx.string = \"Thua Tới Trắng\";\r\n                     //Utils.Log(\"TTTTTTTTTT ItemPlayerResult Thua Tới Trắng\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            switch (data.winTypes) {\r\n                case 2:\r\n                case 5:\r\n                case 10:\r\n                    break;\r\n                case 3:\r\n                case 4:\r\n                case 6:\r\n                case 7:\r\n                case 8:\r\n                case 9:\r\n                    if (data.winTypes == 3) {\r\n                        this.fxResult.active = true;\r\n                        this.labelFx.font = this.fontFx[0];\r\n                        this.labelFx.string = \"Thắng Sâm\";\r\n                    } else if (data.winTypes == 4) {\r\n                        this.fxResult.active = true;\r\n                        this.labelFx.font = this.fontFx[0];\r\n                        this.labelFx.string = \"Chặn Sâm\";\r\n                    } else {\r\n                        this.fxResult.active = true;\r\n                        this.labelFx.font = this.fontFx[0];\r\n                        this.labelFx.string = \"Tới Trắng\";\r\n                    }\r\n                    break;\r\n                case 11:\r\n                case 12:\r\n\r\n                    break;\r\n                case 13:\r\n                    // Thoi Tu Quy | 2\r\n                    if (this.kiemtraThoiTuQuy(data.cards)) {\r\n                        this.fxResult.active = true;\r\n                        this.labelFx.font = this.fontFx[1];\r\n                        this.labelFx.string = \"Thối Tứ Quý\";\r\n                         //Utils.Log(\"TTTTTTTTTT ItemPlayerResult Thối Tứ Quý\");\r\n                    }\r\n\r\n                    if (this.kiemtraThoiHeo(data.cards)) {\r\n                        this.fxResult.active = true;\r\n                        this.labelFx.font = this.fontFx[1];\r\n                        this.labelFx.string = \"Thối 2\";\r\n                         //Utils.Log(\"TTTTTTTTTT ItemPlayerResult Thối 2\");\r\n                    }\r\n                    break;\r\n                case 14:\r\n                    // Cong\r\n                    this.fxResult.active = true;\r\n                    this.labelFx.font = this.fontFx[1];\r\n                    this.labelFx.string = \"Cóng\";\r\n                    break;\r\n                case 15:\r\n\r\n                    break;\r\n                case 16:\r\n                    // Bi chan sam\r\n                    this.fxResult.active = true;\r\n                    this.labelFx.font = this.fontFx[1];\r\n                    this.labelFx.string = \"Bị Chặn Sâm\";\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    kiemtraThoiHeo(a) {\r\n        for (var b = 0, c = 0; c < a.length; c++) Math.floor(a[c] / 4) == 12 && b++;\r\n        return 0 < b ? !0 : !1\r\n    }\r\n\r\n    kiemtraThoiTuQuy(a) {\r\n        a.sort(function (a, b) {\r\n            return a - b\r\n        });\r\n        if (4 <= a.length)\r\n            for (var b = a.length - 1, c = 0; 0 < b;) {\r\n                if (Math.floor(a[b] / 4) == Math.floor(a[b - 1] / 4)) {\r\n                    if (c++, 3 == c) return !0\r\n                } else c = 0;\r\n                b--\r\n            }\r\n        return !1\r\n    };\r\n\r\n    // update (dt) {}\r\n}\r\n","import Configs from \"../../../Loading/src/Configs\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport Card from \"./TienLen.Card\";\r\nimport Res from \"./TienLen.Res\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nenum STATE_GAME {\r\n    WAITING = 0,\r\n    PLAYING = 1,\r\n    FINISH = 2,\r\n}\r\n\r\n@ccclass\r\nexport default class Player extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    lblNickname: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblCoin: cc.Label = null;\r\n    @property(cc.Sprite)\r\n    avatar: cc.Sprite = null;\r\n    @property(cc.Sprite)\r\n    card: cc.Sprite = null;\r\n    @property(cc.Label)\r\n    lblCardRemain: cc.Label = null;\r\n    @property(cc.Sprite)\r\n    timeRemain: cc.Sprite = null;\r\n    @property(cc.Label)\r\n    lbStatus: cc.Label = null;\r\n    @property(cc.Node)\r\n    cardLine: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    chatEmotion: cc.Node = null;\r\n    @property(cc.Node)\r\n    chatMsg: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    clockTurn: cc.Node = null;\r\n\r\n    @property(sp.Skeleton)\r\n    animWinLose: sp.Skeleton = null;\r\n\r\n    @property(sp.Skeleton)\r\n    animToiTrang: sp.Skeleton = null;\r\n\r\n    @property([cc.BitmapFont])\r\n    fontNumber: cc.BitmapFont[] = [];\r\n    @property(cc.Font)\r\n    fontNormal: cc.Font = null;\r\n\r\n    @property(cc.Node)\r\n    ic_back_game: cc.Node = null;\r\n\r\n    cardDeal = [];\r\n    ingame = false;\r\n    active = false;\r\n    chairLocal = -1;\r\n    chairInServer = -1;\r\n    type = 1;\r\n    cards = [];\r\n    state = STATE_GAME.WAITING;\r\n    status = -1;\r\n    info = null;\r\n\r\n    runRemain = null;\r\n\r\n    private timeoutChat = null;\r\n\r\n    setPlayerInfo(info) {\r\n         //Utils.Log(\"TLMN setPlayerInfo : \", info);\r\n        this.lblNickname.string = info.nickName;\r\n        this.setCoin(info.money);\r\n        if (info.nickName == Configs.Login.Nickname) {\r\n            this.avatar.spriteFrame = App.instance.getAvatarSpriteFrame(Configs.Login.Avatar);\r\n        }\r\n        this.node.active = true;\r\n\r\n        this.active = true;\r\n        this.info = info;\r\n        this.ic_back_game.active = false;\r\n        this.offFirstCard();\r\n        this.clockTurn.active = false;\r\n    }\r\n    setStateViewing(state) {\r\n        cc.find(\"/avatar/face\", this.node).color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n        if (state) {\r\n            this.state = STATE_GAME.WAITING;\r\n            this.setStatus(\"Đang Xem\");\r\n        } else {\r\n            this.state = STATE_GAME.PLAYING;\r\n            this.setStatus();\r\n        }\r\n\r\n    }\r\n    setFirstCard(index) {\r\n        this.card.spriteFrame = Res.getInstance().getCardFace(index);\r\n        this.card.node.active = true;\r\n        this.lblCardRemain.node.active = false;\r\n    }\r\n\r\n    offFirstCard() {\r\n        this.card.node.active = false;\r\n        this.card.spriteFrame = Res.getInstance().getCardFace(52);\r\n    }\r\n\r\n    setCardRemain(cardSize) {\r\n         //Utils.Log(\"card size==\" + cardSize);\r\n        if (cardSize == 0) {\r\n            this.card.node.active = false;\r\n            return;\r\n        }\r\n         //Utils.Log(\"Active carrd size\");\r\n        this.card.spriteFrame = Res.getInstance().getCardFace(52);\r\n        this.card.node.active = true;\r\n        this.lblCardRemain.node.active = true;\r\n        this.lblCardRemain.string = cardSize;\r\n    }\r\n\r\n    setTimeRemain(remain = 0) {\r\n        if (remain == 0) {\r\n            cc.Tween.stopAllByTarget(this.clockTurn);\r\n            this.clockTurn.active = false;\r\n            return;\r\n        } else {\r\n            this.clockTurn.active = true;\r\n            this.clockTurn.getComponentInChildren(cc.Label).string = remain + \"\";\r\n            cc.Tween.stopAllByTarget(this.clockTurn);\r\n            cc.tween(this.clockTurn)\r\n                .set({ angle: 0 })\r\n                .to(0.25, { angle: 5 }).to(0.25, { angle: 0 })\r\n                .to(0.25, { angle: -5 })\r\n                .to(0.25, { angle: 0 })\r\n                .call(() => {\r\n                    remain--;\r\n                    this.setTimeRemain(remain);\r\n                }).start();\r\n        }\r\n    }\r\n\r\n    clearTimeRemain() {\r\n        this.timeRemain.fillRange = 0;\r\n    }\r\n\r\n    setStatus(status = \"\") {\r\n        if (status == \"\") {\r\n            this.lbStatus.node.active = false;\r\n            return;\r\n        }\r\n\r\n        this.lbStatus.node.active = true;\r\n        this.lbStatus.fontSize = 22;\r\n        this.lbStatus.font = this.fontNormal;\r\n        this.lbStatus.node.color = new cc.Color().fromHEX(\"#F7E0A0\");\r\n        var stt = status.toUpperCase();\r\n        this.lbStatus.string = stt;\r\n    }\r\n\r\n    setNotify(data) {\r\n        this.lbStatus.font = this.fontNormal;\r\n        this.lbStatus.node.color = new cc.Color().fromHEX(\"#F7E0A0\");\r\n        this.lbStatus.string = data;\r\n        this.lbStatus.node.active = true;\r\n        cc.Tween.stopAllByTarget(this.lbStatus.node);\r\n        this.lbStatus.fontSize = 32;\r\n        cc.tween(this.lbStatus.node).set({ y: 0, scale: 0 }).to(0.3, { scale: 1.0 }, { easing: cc.easing.backOut }).start();\r\n        setTimeout(() => {\r\n            this.lbStatus.node.active = false;\r\n        }, 1000)\r\n    }\r\n\r\n    setCoin(coin) {\r\n        this.lblCoin.string = Utils.formatNumber(coin);\r\n    }\r\n\r\n    setCoinChange(change) {\r\n         //Utils.Log(\"set coin change:\" + change);\r\n        this.lbStatus.node.color = cc.Color.WHITE;\r\n        this.lbStatus.node.active = true;\r\n        this.lbStatus.string = \"\";\r\n        if (change > 0) {\r\n            this.lbStatus.font = this.fontNumber[0];\r\n            this.lbStatus.string = \"+\" + Utils.formatNumber(change);\r\n        } else if (change < 0) {\r\n            this.lbStatus.font = this.fontNumber[1];\r\n            this.lbStatus.string = Utils.formatNumber(change);\r\n        }\r\n        this.lbStatus.spacingX = -1;\r\n        this.lbStatus.fontSize = 25;\r\n        cc.Tween.stopAllByTarget(this.lbStatus.node);\r\n        cc.tween(this.lbStatus.node).set({ y: 0, scale: 1.0 }).to(1.0, { y: 6, scale: 1.2 }, { easing: cc.easing.backOut }).start();\r\n    }\r\n    setLeaveRoom() {\r\n        this.node.active = false;\r\n        this.active = false;\r\n        this.info = null;\r\n    }\r\n    setBackGame(state) {\r\n        this.ic_back_game.active = state;\r\n    }\r\n    setCardLine(cards) {\r\n        this.cardLine.getComponent(cc.Layout).enabled = true;\r\n        cards.forEach(card => {\r\n            var item = cc.instantiate(Res.getInstance().getCardItem());\r\n            item.parent = this.cardLine;\r\n            item.removeComponent(cc.Button);\r\n            item.getComponent(Card).setCardData(card);\r\n            item.opacity = 0;\r\n        });\r\n        setTimeout(() => {\r\n            if (this.node.x > 0) {\r\n                this.cardLine.getComponent(cc.Layout).enabled = false;\r\n                let size = this.cardLine.childrenCount;\r\n                for (let i = 0; i < size; i++) {\r\n                    this.cardLine.children[i].zIndex = size - i;\r\n                    cc.tween(this.cardLine.children[i]).to(0.1 * i, { opacity: 255 }).start();\r\n                }\r\n            } else {\r\n                this.cardLine.getComponent(cc.Layout).enabled = false;\r\n                let size = this.cardLine.childrenCount;\r\n                for (let i = 0; i < size; i++) {\r\n                    this.cardLine.children[i].zIndex = i;\r\n                    cc.tween(this.cardLine.children[i]).to(0.1 * i, { opacity: 255 }).start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n    }\r\n\r\n    clearCardLine() {\r\n        this.cardLine.removeAllChildren();\r\n    }\r\n\r\n    showChatEmotion(content) {\r\n        this.chatEmotion.active = true;\r\n        this.chatMsg.active = false;\r\n        clearTimeout(this.timeoutChat);\r\n        this.chatEmotion.getComponent(sp.Skeleton).setAnimation(0, content, true);\r\n        this.timeoutChat = setTimeout(() => {\r\n            this.chatEmotion.active = false;\r\n            this.chatMsg.active = false;\r\n        }, 3000);\r\n    }\r\n\r\n    showChatMsg(content) {\r\n\r\n        this.chatEmotion.active = false;\r\n        this.chatMsg.active = true;\r\n        clearTimeout(this.timeoutChat);\r\n        this.chatMsg.getComponentInChildren(cc.Label).string = content;\r\n        this.timeoutChat = setTimeout(() => {\r\n            this.chatEmotion.active = false;\r\n            this.chatMsg.active = false;\r\n        }, 5000);\r\n    }\r\n\r\n    hideChat() {\r\n        clearTimeout(this.timeoutChat);\r\n        this.chatEmotion.active = false;\r\n        this.chatMsg.active = false;\r\n    }\r\n    showAnimWinLose(state) {\r\n        this.animWinLose.node.active = true;\r\n        let animName = state ? \"thắng3\" : \"thua\";\r\n        this.animWinLose.node.scale = state ? 0.6 : 0.7;\r\n        let posAnim = state ? cc.v2(0, -81) : cc.v2(-40, -77);\r\n        this.animWinLose.node.setPosition(posAnim);\r\n        this.animWinLose.setAnimation(0, animName, true);\r\n    }\r\n    showAnimToiTrang(winType) {\r\n        let animName = \"5 đoi thòng\";\r\n        switch (winType) {\r\n            case 4:\r\n                animName = \"sanh rong\"\r\n                break;\r\n            case 5:\r\n                animName = \"tu quy hai\"\r\n                break;\r\n            case 6:\r\n                animName = \"5 đoi thòng\"\r\n                break;\r\n            case 7:\r\n                animName = \"6 doi\"\r\n                break;\r\n        }\r\n        this.animToiTrang.node.active = true;\r\n        this.animToiTrang.setAnimation(0, animName, true);\r\n    }\r\n}\r\n","import Configs from \"../../../Loading/src/Configs\";\r\nimport App from \"../Script/common/App\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport Card from \"./TienLen.Card\";\r\nimport Res from \"./TienLen.Resz\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Player extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    lblNickname: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblCoin: cc.Label = null;\r\n    @property(cc.Sprite)\r\n    avatar: cc.Sprite = null;\r\n    @property(cc.Sprite)\r\n    card: cc.Sprite = null;\r\n    @property(cc.Label)\r\n    lblCardRemain: cc.Label = null;\r\n    @property(cc.Sprite)\r\n    timeRemain: cc.Sprite = null;\r\n    @property(cc.Label)\r\n    lbStatus: cc.Label = null;\r\n    @property(cc.Node)\r\n    cardLine: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    chatEmotion: cc.Node = null;\r\n    @property(cc.Node)\r\n    chatMsg: cc.Node = null;\r\n\r\n    ingame = false;\r\n    active = false;\r\n    chairLocal = -1;\r\n    chairInServer = -1;\r\n    type = 1;\r\n    cards = [];\r\n    state = 0;\r\n    status = -1;\r\n    info = null\r\n\r\n    runRemain = null;\r\n\r\n    private timeoutChat = null;\r\n\r\n    setPlayerInfo(info) {\r\n        //  cc.log(\"TLMN setPlayerInfo : \", info);\r\n        this.lblNickname.string = info.nickName;\r\n        this.setCoin(info.money);\r\n        this.avatar.spriteFrame = App.instance.getAvatarSpriteFrame(info.avatar);\r\n        this.node.active = true;\r\n\r\n        this.active = true;\r\n        this.info = info;\r\n        this.offFirstCard();\r\n    }\r\n\r\n    setFirstCard(index) {\r\n        this.card.spriteFrame = Res.getInstance().getCardFace(index);\r\n        this.card.node.active = true;\r\n        this.lblCardRemain.node.active = false;\r\n    }\r\n\r\n    offFirstCard() {\r\n        this.card.node.active = false;\r\n        this.card.spriteFrame = Res.getInstance().getCardFace(52);\r\n    }\r\n\r\n    setCardRemain(cardSize) {\r\n        if (cardSize == 0) {\r\n            this.card.node.active = false;\r\n            return;\r\n        }\r\n        this.card.spriteFrame = Res.getInstance().getCardFace(52);\r\n        this.card.node.active = true;\r\n        this.lblCardRemain.node.active = true;\r\n        this.lblCardRemain.string = cardSize;\r\n    }\r\n\r\n    setTimeRemain(remain = 0) {\r\n        //  cc.log(\"OOOOOOOOOOOOOOOO : \", remain);\r\n        if (remain == 0) {\r\n            clearInterval(this.runRemain);\r\n            this.timeRemain.fillRange = 0;\r\n            return;\r\n        } else {\r\n            var refresh = 100;\r\n            var step = refresh / remain / 1000;\r\n            var sefl = this;\r\n            var change = function () {\r\n                if (!sefl || !sefl.timeRemain)\r\n                    return;\r\n                if (sefl.timeRemain.fillRange <= 0) {\r\n                    clearInterval(sefl.runRemain);\r\n                    sefl.timeRemain.fillRange = 0;\r\n                    return;\r\n                }\r\n                sefl.timeRemain.fillRange -= step;\r\n            }\r\n            this.timeRemain.fillRange = 1;\r\n            this.runRemain = setInterval(change, refresh);\r\n        }\r\n    }\r\n\r\n    clearTimeRemain() {\r\n        this.timeRemain.fillRange = 0;\r\n    }\r\n\r\n    setStatus(status = \"\") {\r\n        var stt = status.toUpperCase();\r\n        this.lbStatus.string = stt;\r\n    }\r\n\r\n    setNotify(data) {\r\n        this.lbStatus.string = data;\r\n        setTimeout(() => {\r\n            this.lbStatus.string = \"\";\r\n        }, 1000)\r\n    }\r\n\r\n    setCoin(coin) {\r\n        this.lblCoin.string = Utils.formatNumber(coin);\r\n    }\r\n\r\n    setCoinChange(change) {\r\n        if (change > 0) {\r\n            //  cc.log(\"GGGG hide setCoinChange change : \", change);\r\n            this.lbStatus.node.active = true;\r\n            this.lbStatus.string = \"+\" + Utils.formatNumber(change);\r\n        } else if (change < 0) {\r\n            this.lbStatus.node.active = true;\r\n            this.lbStatus.string = Utils.formatNumber(change);\r\n        }\r\n    }\r\n\r\n    setLeaveRoom() {\r\n        this.node.active = false;\r\n        this.active = false;\r\n        this.info = null;\r\n    }\r\n\r\n    setCardLine(cards) {\r\n        cards.forEach(card => {\r\n            var item = cc.instantiate(Res.getInstance().getCardItem());\r\n            item.parent = this.cardLine;\r\n            item.removeComponent(cc.Button);\r\n            item.getComponent(Card).setCardData(card);\r\n        });\r\n    }\r\n\r\n    clearCardLine() {\r\n        this.cardLine.removeAllChildren();\r\n    }\r\n\r\n    showChatEmotion(content) {\r\n        this.chatEmotion.active = true;\r\n        this.chatMsg.active = false;\r\n        clearTimeout(this.timeoutChat);\r\n        this.chatEmotion.getComponent(sp.Skeleton).setAnimation(0, content, true);\r\n        this.timeoutChat = setTimeout(() => {\r\n            this.chatEmotion.active = false;\r\n            this.chatMsg.active = false;\r\n        }, 3000);\r\n    }\r\n\r\n    showChatMsg(content) {\r\n        this.chatEmotion.active = false;\r\n        this.chatMsg.active = true;\r\n        clearTimeout(this.timeoutChat);\r\n        this.chatMsg.children[1].getComponent(cc.Label).string = content;\r\n        this.timeoutChat = setTimeout(() => {\r\n            this.chatEmotion.active = false;\r\n            this.chatMsg.active = false;\r\n        }, 3000);\r\n    }\r\n\r\n    hideChat() {\r\n        clearTimeout(this.timeoutChat);\r\n        this.chatEmotion.active = false;\r\n        this.chatMsg.active = false;\r\n    }\r\n}\r\n\r\n\r\n","import Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport Dialog from \"../Script/common/Dialog\";\r\nimport Utils from \"../Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupTransaction extends Dialog {\r\n    @property(cc.Node)\r\n    content: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    prefab: cc.Node = null;\r\n    \r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n\r\n\r\n\r\n    @property([cc.BitmapFont])\r\n    fontNumber: cc.BitmapFont[] = [];\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n    private data = null;\r\n    private dataPlay = [];\r\n    private dataCashout = [];\r\n    private dataExchange = [];\r\n    private currentData = [];\r\n    private totalPageLoaded = 0;\r\n    onLoad() {\r\n\r\n    }\r\n    start() {\r\n\r\n       \r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    show() {\r\n        super.show();\r\n        this.resetDataLoaded();\r\n        this.currentData = [];\r\n        this.data\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n    resetDataLoaded() {\r\n        this.totalPageLoaded = 0;\r\n        this.currentData = [];\r\n        this.dataCashout = [];\r\n        this.dataPlay = [];\r\n        this.dataExchange = [];\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    loadPage(res) {\r\n        this.content.removeAllChildren();\r\n        for (let i = 0; i < 13; i++) {\r\n            var indexData = i;\r\n\r\n            if (indexData < res[\"transactions\"].length) {\r\n                let item = cc.instantiate(this.prefab);\r\n                item.parent = this.content;\r\n                let itemData = res[\"transactions\"][indexData];\r\n                var json = JSON.parse(itemData[\"description\"]);\r\n                item.getChildByName(\"Trans\").getComponent(cc.Label).string = itemData[\"transId\"];\r\n                item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"transactionTime\"];\r\n                item.getChildByName(\"Service\").getComponent(cc.Label).string = json[\"roomID\"];\r\n                item.getChildByName(\"Coin\").getComponent(cc.Label).string = (itemData[\"moneyExchange\"] > 0 ? \"+\" : \"\") + Utils.formatNumber(itemData[\"moneyExchange\"]);\r\n                item.getChildByName(\"Balance\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"currentMoney\"]);\r\n                item.getChildByName(\"Coin\").getComponent(cc.Label).font = itemData[\"moneyExchange\"] > 0 ? this.fontNumber[0] : this.fontNumber[1];\r\n                item.getChildByName(\"Coin\").getComponent(cc.Label).fontSize = itemData[\"moneyExchange\"] > 0 ? 15 : 15;\r\n\r\n                var pos =  item.getChildByName(\"Coin\").getComponent(cc.Label).node.position;\r\n                item.getChildByName(\"Coin\").getComponent(cc.Label).node.position = itemData[\"moneyExchange\"] > 0 ? cc.v3(pos.x,15,0) : cc.v3(pos.x,5,0);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private loadData(isReloadScr = true) {\r\n        App.instance.showLoading(true);\r\n        let params = null;\r\n        params = { \"c\": 139, \"un\": Configs.Login.Nickname, \"p\": this.page };\r\n         //Utils.Log(\"HistoryTienLen request:\"+JSON.stringify(params));\r\n        Http.get(Configs.App.API, params, (err, res) => {\r\n            App.instance.showLoading(false);\r\n             //Utils.Log(\"HistoryTienLen response:\"+JSON.stringify(res));\r\n            if (err != null) {\r\n\r\n                return;\r\n            }\r\n            if (res[\"success\"]) {\r\n                this.maxPage = res[\"totalPages\"];\r\n                this.totalPageLoaded++;\r\n                this.data = res;\r\n                let transactionData = res['transactions'];\r\n                 //Utils.Log(\"transactionData:\" + JSON.stringify(transactionData));\r\n                if (this.totalPageLoaded < this.maxPage) {\r\n                    this.dataPlay.push(...transactionData);\r\n                    this.currentData = this.dataPlay;\r\n                }\r\n               \r\n                this.maxPage = res[\"totalPages\"];\r\n                this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n                this.loadPage(res);\r\n\r\n            } else {\r\n                this.content.removeAllChildren();\r\n            }\r\n        });\r\n    }\r\n   \r\n    private setDataItem(item, itemData) {\r\n        var json = JSON.parse(itemData[\"description\"]);\r\n        item.getChildByName(\"Trans\").getComponent(cc.Label).string = itemData[\"transId\"];\r\n        item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"transactionTime\"];\r\n        item.getChildByName(\"Service\").getComponent(cc.Label).string = json[\"roomID\"];\r\n        item.getChildByName(\"Coin\").getComponent(cc.Label).string = (itemData[\"moneyExchange\"] > 0 ? \"+\" : \"\") + Utils.formatNumber(itemData[\"moneyExchange\"]);\r\n        item.getChildByName(\"Coin\").getComponent(cc.Label).font = itemData[\"moneyExchange\"] > 0 ? this.fontNumber[0] : this.fontNumber[1];\r\n        item.getChildByName(\"Coin\").getComponent(cc.Label).fontSize = itemData[\"moneyExchange\"] > 0 ? 8 : 7;\r\n        item.getChildByName(\"Balance\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"currentMoney\"]);\r\n        item.getChildByName(\"Desc\").getComponent(cc.RichText).string = itemData[\"description\"];\r\n        item.active = true;\r\n    }\r\n    convertNameThirdParty(serviceName) {\r\n        switch (serviceName) {\r\n            case \"WM_DEPOSIT\":\r\n            case \"WM_WITHDRAW\":\r\n                return \"Live casino WM\";\r\n            case \"IBC2_DEPOSIT\":\r\n            case \"IBC2_WITHDRAW\":\r\n                return \"Thể Thao IBC\";\r\n            case \"AG_DEPOSIT\":\r\n            case \"AG_WITHDRAW\":\r\n                return \"Live casino AG\";\r\n            case \"CMD_DEPOSIT\":\r\n            case \"CMD_WITHDRAW\":\r\n                return \"Thể thao CMD368\";\r\n            case \"Cashout\":\r\n                return \"Rút tiền\";\r\n            case \"190\":\r\n                return \"Tài Xỉu Siêu Tốc\";\r\n            default:\r\n                return serviceName\r\n        }\r\n    }\r\n    onScrollEvent(scrollview, eventType, customEventData) {\r\n        if (eventType == cc.ScrollView.EventType.SCROLL_TO_BOTTOM) {\r\n            if (this.page < this.maxPage) {\r\n                this.page++;\r\n                this.loadData(false);\r\n            }\r\n        }\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class Res extends cc.Component {\r\n    static instance: Res;\r\n    // cards = [];\r\n    // cardItem = null;\r\n    @property(cc.Prefab)\r\n    cardItem: cc.Prefab = null;\r\n    @property([cc.SpriteFrame])\r\n    cards: cc.SpriteFrame[] = [];\r\n    public static getInstance(): Res {\r\n        return this.instance;\r\n    }\r\n\r\n    onLoad(){\r\n        Res.instance = this;\r\n        cc.game.addPersistRootNode(Res.instance.node)\r\n    }\r\n\r\n    // constructor() {\r\n    //     cc.loader.loadResDir(\"sprites/LaBai\", cc.SpriteFrame, (err, sprs, urls) => {\r\n    //         this.cards = sprs;\r\n    //     });\r\n    //     cc.loader.loadRes(\"prefabs/card/card\", cc.Prefab, (err, prefab) => {\r\n    //         this.cardItem = prefab;\r\n    //     });\r\n    // }\r\n\r\n    getCardFace(index) {\r\n        if (index < 10) index = \"0\" + index;\r\n        return this.cards.filter(card => card.name == (\"labai_\" + index))[0];\r\n    }\r\n\r\n    getCardItem() {\r\n        return this.cardItem;\r\n    }\r\n}\r\n","\r\nexport default class Res {\r\n    static instance: Res;\r\n    cards = [];\r\n    cardItem = null;\r\n\r\n    public static getInstance(): Res {\r\n        if (this.instance == null)\r\n            this.instance = new Res();\r\n        return this.instance;\r\n    }\r\n\r\n    constructor() {\r\n        cc.loader.loadResDir(\"sprites/LaBai\", cc.SpriteFrame, (err, sprs, urls) => {\r\n            this.cards = sprs;\r\n        });\r\n        cc.loader.loadRes(\"prefabs/card/card\", cc.Prefab, (err, prefab) => {\r\n            this.cardItem = prefab;\r\n        });\r\n    }\r\n\r\n    getCardFace(index) {\r\n        if (index < 10) index = \"0\" + index;\r\n        return this.cards.filter(card => card.name == (\"labai_\" + index))[0];\r\n    }\r\n\r\n    getCardItem() {\r\n        return this.cardItem;\r\n    }\r\n}\r\n","import BundleControl from \"../../../Loading/src/BundleControl\";\r\nimport Configs from \"../../../Loading/src/Configs\";\r\nimport App from \"../Script/common/App\";\r\nimport BroadcastReceiver from \"../Script/common/BroadcastReceiver\";\r\nimport AudioManager from \"../Script/common/Common.AudioManager\";\r\nimport SPUtils from \"../Script/common/SPUtils\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport CardGameCmd from \"../Script/networks/CardGame.Cmd\";\r\nimport InPacket from \"../Script/networks/Network.InPacket\";\r\nimport TienLenNetworkClient from \"../Script/networks/TienLenNetworkClient\";\r\nimport TienLenCmd from \"./TienLen.Cmd\";\r\nimport TienLenGameLogic from \"./TienLen.GameLogic\";\r\nimport InGame from \"./TienLen.InGame\";\r\nimport Res from \"./TienLen.Res\";\r\n\r\nenum audio_clip {\r\n    BG = 0,\r\n    LOSE = 1,\r\n    WIN = 2,\r\n    CHETMAYNE = 3,\r\n    DODI = 4,\r\n    HAINE = 5,\r\n    MAYHABUOI = 6,\r\n    THUADICUNG = 7,\r\n    START_GAME = 8,\r\n    CHIA_BAI = 9,\r\n    DANH = 10\r\n}\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass(\"TienLen.InGame.SoundManager\")\r\nexport class SoundManager {\r\n    @property(cc.AudioSource)\r\n    bgMusic: cc.AudioSource = null;\r\n\r\n    @property(cc.AudioSource)\r\n    effSound: cc.AudioSource = null;\r\n\r\n    @property([cc.AudioClip])\r\n    listAudio: cc.AudioClip[] = [];\r\n    playBgMusic() {\r\n        AudioManager.getInstance().playBackgroundMusic(this.listAudio[audio_clip.BG]);\r\n\r\n    }\r\n    playAudioEffect(indexAudio) {\r\n        if (SPUtils.getSoundVolumn() > 0) {\r\n            this.effSound.clip = this.listAudio[indexAudio];\r\n            this.effSound.play();\r\n        }\r\n    }\r\n    stopBgMusic() {\r\n        this.bgMusic.stop();\r\n    }\r\n}\r\n@ccclass\r\nexport default class Room extends cc.Component {\r\n    public static IS_SOLO = false;\r\n    public static instance: Room = null;\r\n    @property(cc.Sprite)\r\n    sprAvatar: cc.Sprite = null;\r\n    @property(cc.Node)\r\n    roomContent: cc.Node = null;\r\n    @property(cc.Prefab)\r\n    roomItem: cc.Node = null;\r\n    @property(cc.Node)\r\n    ingameNode: cc.Node = null;\r\n    @property(cc.Prefab)\r\n    ingamePr: cc.Prefab = null;\r\n    @property(cc.Label)\r\n    lbCoin: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblNickname: cc.Label = null;\r\n\r\n    @property(cc.Prefab)\r\n    prefabItemRoom: cc.Prefab = null;\r\n    @property(SoundManager)\r\n    soundManager: SoundManager = null;\r\n    bundleGame = null;\r\n\r\n    private ingame: InGame = null;\r\n    private listRoom = [];\r\n\r\n    onLoad() {\r\n        Room.instance = this;\r\n        Res.getInstance();\r\n        this.soundManager.playBgMusic();\r\n        this.sprAvatar.spriteFrame = App.instance.getAvatarSpriteFrame(Configs.Login.Avatar);\r\n        this.lbCoin.string = Utils.formatNumber(Configs.Login.Coin);\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\r\n            this.lbCoin.string = Utils.formatNumber(Configs.Login.Coin);\r\n        }, this);\r\n        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n\r\n        TienLenNetworkClient.getInstance().addOnClose(() => {\r\n            this.actBack();\r\n        }, this);\r\n        this.lblNickname.string = Configs.Login.Nickname;\r\n    }\r\n\r\n    start() {\r\n        TienLenNetworkClient.getInstance().addListener((data) => {\r\n            let inpacket = new InPacket(data);\r\n            let cmdId = inpacket.getCmdId();\r\n             //Utils.Log(\"TienLen cmd: \", cmdId);\r\n            switch (cmdId) {\r\n                case CardGameCmd.Code.LOGIN:\r\n                    TienLenNetworkClient.getInstance().send(new TienLenCmd.SendReconnectRoom());\r\n                    break;\r\n                case CardGameCmd.Code.MONEY_BET_CONFIG: {\r\n                    let res = new CardGameCmd.ResMoneyBetConfig(data);\r\n                     //Utils.Log(res);\r\n                    this.listRoom = res.list;\r\n                    this.initRooms(res.list);\r\n                    break;\r\n                }\r\n                case CardGameCmd.Code.JOIN_ROOM_FAIL: {\r\n                    let res = new CardGameCmd.ReceivedJoinRoomFail(data);\r\n                    var e = \"\";\r\n                    switch (res.error) {\r\n                        case 1:\r\n                            e = \"L\\u1ed7i ki\\u1ec3m tra th\\u00f4ng tin!\";\r\n                            break;\r\n                        case 2:\r\n                            e = \"Kh\\u00f4ng t\\u00ecm \\u0111\\u01b0\\u1ee3c ph\\u00f2ng th\\u00edch h\\u1ee3p. Vui l\\u00f2ng th\\u1eed l\\u1ea1i sau!\";\r\n                            break;\r\n                        case 3:\r\n                            e = \"B\\u1ea1n kh\\u00f4ng \\u0111\\u1ee7 ti\\u1ec1n v\\u00e0o ph\\u00f2ng ch\\u01a1i n\\u00e0y!\";\r\n                            break;\r\n                        case 4:\r\n                            e = \"Kh\\u00f4ng t\\u00ecm \\u0111\\u01b0\\u1ee3c ph\\u00f2ng th\\u00edch h\\u1ee3p. Vui l\\u00f2ng th\\u1eed l\\u1ea1i sau!\";\r\n                            break;\r\n                        case 5:\r\n                            e = \"M\\u1ed7i l\\u1ea7n v\\u00e0o ph\\u00f2ng ph\\u1ea3i c\\u00e1ch nhau 10 gi\\u00e2y!\";\r\n                            break;\r\n                        case 6:\r\n                            e = \"H\\u1ec7 th\\u1ed1ng b\\u1ea3o tr\\u00ec!\";\r\n                            break;\r\n                        case 7:\r\n                            e = \"Kh\\u00f4ng t\\u00ecm th\\u1ea5y ph\\u00f2ng ch\\u01a1i!\";\r\n                            break;\r\n                        case 8:\r\n                            e = \"M\\u1eadt kh\\u1ea9u ph\\u00f2ng ch\\u01a1i kh\\u00f4ng \\u0111\\u00fang!\";\r\n                            break;\r\n                        case 9:\r\n                            e = \"Ph\\u00f2ng ch\\u01a1i \\u0111\\u00e3 \\u0111\\u1ee7 ng\\u01b0\\u1eddi!\";\r\n                            break;\r\n                        case 10:\r\n                            e = \"B\\u1ea1n b\\u1ecb ch\\u1ee7 ph\\u00f2ng kh\\u00f4ng cho v\\u00e0o b\\u00e0n!\"\r\n                    }\r\n                    App.instance.alertDialog.showMsg(e);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.JOIN_ROOM_SUCCESS: {\r\n                    let res = new TienLenCmd.ReceivedJoinRoomSuccess(data);\r\n                     //Utils.Log(res);\r\n                    TienLenGameLogic.getInstance().initWith(res);\r\n                    this.show(false);\r\n                    this.ingame.show(true, res);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.UPDATE_GAME_INFO: {\r\n                    let res = new TienLenCmd.ReceivedUpdateGameInfo(data);\r\n                     //Utils.Log(res);\r\n                    this.show(false);\r\n                    this.ingame.updateGameInfo(res);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.AUTO_START: {\r\n                    let res = new TienLenCmd.ReceivedAutoStart(data);\r\n                     //Utils.Log(res);\r\n                    TienLenGameLogic.getInstance().autoStart(res);\r\n                    this.ingame.autoStart(res);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.USER_JOIN_ROOM: {\r\n                    let res = new TienLenCmd.ReceiveUserJoinRoom(data);\r\n                     //Utils.Log(\"TienLenCmd.Code.USER_JOIN_ROOM:\\n\", res);\r\n                    this.ingame.onUserJoinRoom(res);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.FIRST_TURN: {\r\n                    let res = new TienLenCmd.ReceivedFirstTurnDecision(data);\r\n                     //Utils.Log(res);\r\n                    // this.ingame.firstTurn(res);\r\n                    this.ingame.dataFirstTurn = res;\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.CHIA_BAI: {\r\n                    let res = new TienLenCmd.ReceivedChiaBai(data);\r\n                     //Utils.Log(\" TienLenCmd.Code.CHIA_BAI:\", res);\r\n                    this.ingame.chiaBai(res)\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.CHANGE_TURN: {\r\n                    let res = new TienLenCmd.ReceivedChangeTurn(data);\r\n                     //Utils.Log(res);\r\n                    this.ingame.changeTurn(res);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.DANH_BAI: {\r\n                    let res = new TienLenCmd.ReceivedDanhBai(data);\r\n                     //Utils.Log(res);\r\n                    this.ingame.submitTurn(res);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.BO_LUOT: {\r\n                    let res = new TienLenCmd.ReceivedBoluot(data);\r\n                     //Utils.Log(res);\r\n                    this.ingame.passTurn(res);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.END_GAME: {\r\n                    let res = new TienLenCmd.ReceivedEndGame(data);\r\n                     //Utils.Log(res);\r\n                    this.ingame.endGame(res);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.UPDATE_MATCH: {\r\n                    let res = new TienLenCmd.ReceivedUpdateMatch(data);\r\n                     //Utils.Log(res);\r\n                    this.ingame.updateMatch(res);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.USER_LEAVE_ROOM: {\r\n                    let res = new TienLenCmd.UserLeaveRoom(data);\r\n                     //Utils.Log(res);\r\n                    this.ingame.userLeaveRoom(res);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.REQUEST_LEAVE_ROOM: {\r\n                    let res = new TienLenCmd.ReceivedNotifyRegOutRoom(data);\r\n                     //Utils.Log(res);\r\n                    this.ingame.notifyUserRegOutRoom(res);\r\n                    break;\r\n                }\r\n                case TienLenCmd.Code.CHAT_ROOM:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new TienLenCmd.ReceivedChatRoom(data);\r\n                         //Utils.Log(\"TLMN CHAT_ROOM res : \", JSON.stringify(res));\r\n                        this.ingame.playerChat(res);\r\n                    }\r\n                    break;\r\n                case TienLenCmd.Code.CHAT_CHONG:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new TienLenCmd.ReceivedChatChong(data);\r\n                         //Utils.Log(\"TLMN CHAT_CHONG res : \", JSON.stringify(res));\r\n                        this.ingame.playerChatChong(res);\r\n                    }\r\n                    break;\r\n                case TienLenCmd.Code.WAIT_4_DOI_THONG:\r\n                    {\r\n                        App.instance.showLoading(false);\r\n                        let res = new TienLenCmd.ReceivedWaitBonDoiThong(data);\r\n                         //Utils.Log(\"TLMN WAIT_4_DOI_THONG res : \", JSON.stringify(res));\r\n                        this.ingame.wait4doithong(res);\r\n                    }\r\n            }\r\n        }, this);\r\n\r\n        //get list room\r\n        this.refreshRoom();\r\n    }\r\n\r\n    initRooms(rooms) {\r\n        let arrBet = [];\r\n        this.roomContent.removeAllChildren();\r\n        let id = 0;\r\n        let names = [\"San bằng tất cả\", \"Nhiều tiền thì vào\", \"Dân chơi\", \"Bàn cho đại gia\", \"Tứ quý\", \"Bốn đôi thông\", \"Tới trắng\", \"Chặt heo\"];\r\n        for (let i = 0; i < rooms.length; i++) {\r\n            let room = rooms[i];\r\n            if ((Room.IS_SOLO && room.maxUserPerRoom == 2) || (!Room.IS_SOLO && room.maxUserPerRoom != 2)) {\r\n                id++;\r\n\r\n                let isExisted = arrBet.indexOf(room.moneyBet);\r\n                if (isExisted == -1) {\r\n                    arrBet.push(room.moneyBet);\r\n                }\r\n            }\r\n        }\r\n        arrBet.sort(function (a, b) {\r\n            return a - b;\r\n        });\r\n         //Utils.Log(\"CardGame_ItemRoom arrBet Increase : \", arrBet);\r\n\r\n        for (let index = 0; index < arrBet.length; index++) {\r\n            let playerCount = 0;\r\n            let maxUser = 0;\r\n            let moneyRequire = 0;\r\n            for (let a = 0; a < rooms.length; a++) {\r\n                let room = rooms[a];\r\n\r\n                if ((Room.IS_SOLO && room.maxUserPerRoom == 2) || (!Room.IS_SOLO && room.maxUserPerRoom != 2)) {\r\n                    if (room.moneyBet == arrBet[index]) {\r\n                        playerCount += room.nPersion;\r\n                        maxUser = room.maxUserPerRoom;\r\n                        moneyRequire = room.moneyRequire;\r\n                    }\r\n                }\r\n            }\r\n            let item = cc.instantiate(this.prefabItemRoom).getComponent(\"CardGame_ItemRoom\");\r\n            item.initItems({\r\n                bet: arrBet[index],\r\n                players: playerCount,\r\n                maxUser: maxUser,\r\n                moneyRequire: moneyRequire,\r\n                gameId: Room.IS_SOLO ? 1 : 0  // 0 = TLMN, 1 = TLMN Solo, 2 = Sam Loc, 3 = Ba Cay, 4 = Bai Cao, 5 = Poker, 6 = Mau Binh\r\n            });\r\n            this.roomContent.addChild(item.node);\r\n        }\r\n\r\n        this.roomContent.parent.parent.getComponent(cc.ScrollView).scrollToBottom(0);\r\n        this.roomContent.parent.parent.getComponent(cc.ScrollView).scrollToTop(2);\r\n\r\n    }\r\n\r\n    handleJoinRoom(info) {\r\n         //Utils.Log(\"CardGame handleJoinRoom info : \", info);\r\n        if (Configs.Login.Coin < info.moneyRequire) {\r\n            App.instance.showToast(App.instance.getTextLang('txt_not_enough'))\r\n            return;\r\n        }\r\n        if (this.ingame == null) {\r\n            App.instance.showLoading(true);\r\n            cc.assetManager.getBundle(\"TienLen\").load(\"InGame\", cc.Prefab, function (finish, total, item) {\r\n            }, (err1, prefab: cc.Prefab) => {\r\n                App.instance.showLoading(false);\r\n                if (err1 != null) {\r\n                     //Utils.Log(\"errr load game TIENLEN:\", err1);\r\n                } else {\r\n                    this.ingame = cc.instantiate(prefab).getComponent(\"TienLen.InGame\");\r\n                    this.ingame.node.parent = this.node.parent;\r\n                    this.ingame.node.active = false;\r\n                    TienLenNetworkClient.getInstance().send(new CardGameCmd.SendJoinRoom(Configs.App.MONEY_TYPE, info.maxUser, info.bet, 0));\r\n                }\r\n            })\r\n        } else {\r\n            this.ingame.node.parent = this.node.parent;\r\n            this.ingame.node.active = false;\r\n            TienLenNetworkClient.getInstance().send(new CardGameCmd.SendJoinRoom(Configs.App.MONEY_TYPE, info.maxUser, info.bet, 0));\r\n        }\r\n\r\n\r\n    }\r\n\r\n    actBack() {\r\n        TienLenNetworkClient.getInstance().close();\r\n        App.instance.loadScene(\"Lobby\");\r\n    }\r\n\r\n    public show(isShow: boolean) {\r\n        this.node.active = isShow;\r\n        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n    }\r\n\r\n    refreshRoom() {\r\n        TienLenNetworkClient.getInstance().send(new CardGameCmd.SendMoneyBetConfig());\r\n    }\r\n\r\n    public actQuickPlay() {\r\n        if (this.listRoom == null) {\r\n            App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_room_err2'));\r\n            return;\r\n        }\r\n        //find all room bet < coin\r\n        let cb = () => {\r\n            let listRoom = [];\r\n            for (let i = 0; i < this.listRoom.length; i++) {\r\n                if (this.listRoom[i].moneyRequire <= Configs.Login.Coin) {\r\n                    let room = this.listRoom[i];\r\n                    if ((Room.IS_SOLO && room.maxUserPerRoom == 2) || (!Room.IS_SOLO && room.maxUserPerRoom != 2)) {\r\n                        listRoom.push(room);\r\n                    }\r\n                }\r\n            }\r\n            if (listRoom.length <= 0) {\r\n                App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_room_err2'));\r\n                return;\r\n            }\r\n            let randomIdx = Utils.randomRangeInt(0, listRoom.length);\r\n            let room = listRoom[randomIdx];\r\n            TienLenNetworkClient.getInstance().send(new CardGameCmd.SendJoinRoom(Configs.App.MONEY_TYPE, room.maxUserPerRoom, room.moneyBet, 0));\r\n        };\r\n        if (this.ingame == null) {\r\n            App.instance.showLoading(true);\r\n            cc.assetManager.getBundle(\"TienLen\").load(\"InGame\", cc.Prefab, function (finish, total, item) {\r\n            }, (err1, prefab: cc.Prefab) => {\r\n                this.ingame = cc.instantiate(prefab).getComponent(\"TienLen.InGame\");\r\n                this.ingame.node.parent = this.node.parent;\r\n                this.ingame.node.active = false;\r\n                App.instance.showLoading(false);\r\n                cb();\r\n            })\r\n        } else {\r\n            this.ingame.node.parent = this.node.parent;\r\n            this.ingame.node.active = false;\r\n            cb();\r\n        }\r\n\r\n    }\r\n}","import Configs from \"../../../../Loading/src/Configs\";\r\nimport Utils from \"../common/Utils\";\r\nimport CardGameNetworkClient from \"./CardGameNetworkClient\";\r\n\r\n\r\nexport default class TienLenNetworkClient extends CardGameNetworkClient {\r\n\r\n    public static getInstance(): TienLenNetworkClient {\r\n        if (this.instance == null) {\r\n            this.instance = new TienLenNetworkClient();\r\n        }\r\n        return this.instance as TienLenNetworkClient;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    _connect() {\r\n        super.connect(Configs.App.HOST_TLMN.host, Configs.App.HOST_TLMN.port);\r\n    }\r\n\r\n    onOpen(ev: Event) {\r\n        super.onOpen(ev);\r\n         //Utils.Log(\"tlmn connected\");\r\n    }\r\n}","import Configs from \"../../../Loading/src/Configs\";\r\nimport Http from \"../../../Loading/src/Http\";\r\nimport App from \"../Script/common/App\";\r\nimport BroadcastReceiver from \"../Script/common/BroadcastReceiver\";\r\nimport SPUtils from \"../Script/common/SPUtils\";\r\nimport Utils from \"../Script/common/Utils\";\r\nimport TienLenNetworkClient from \"../Script/networks/TienLenNetworkClient\";\r\nimport Card from \"./TienLen.Card\";\r\nimport CardGroup from \"./TienLen.CardGoup\";\r\nimport TienLenCmd from \"./TienLen.Cmd\";\r\nimport TienLenConstant from \"./TienLen.Constant\";\r\nimport Player from \"./TienLen.Playerz\";\r\nimport Res from \"./TienLen.Resz\";\r\nimport Room from \"./TienLen.Room\";\r\nimport History from \"./TienLen.PopupHistory\"\r\nimport cmd from \"../Script/networks/Network.Cmd\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class InGame extends cc.Component {\r\n\r\n    public static instance: InGame = null;\r\n\r\n    @property(cc.Label)\r\n    lbRoomId: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbRoomBet: cc.Label = null;\r\n    @property(Player)\r\n    players: Player[] = [];\r\n    @property(cc.Label)\r\n    lbTimeCountDown: cc.Label = null;\r\n    @property(cc.SpriteFrame)\r\n    cards: cc.SpriteFrame[] = [];\r\n    @property(cc.Node)\r\n    cardLine: cc.Node = null;\r\n    @property(cc.Prefab)\r\n    cardItem: cc.Prefab = null;\r\n    @property(cc.Node)\r\n    board: cc.Node = null;\r\n    @property(cc.Node)\r\n    btnsInGame: cc.Node = null;\r\n    @property(cc.Label)\r\n    lblToast: cc.Label = null;\r\n    @property(cc.Node)\r\n    popupGuide: cc.Node = null;\r\n    // UI Chat\r\n    @property(cc.Node)\r\n    UI_Chat: cc.Node = null;\r\n    @property(cc.EditBox)\r\n    edtChatInput: cc.EditBox = null;\r\n\r\n    @property(cc.Node)\r\n    cardsDeal: cc.Node = null;\r\n\r\n    // Popup Result\r\n    @property(cc.Node)\r\n    popupResult: cc.Node = null;\r\n    @property(cc.ScrollView)\r\n    scrollPopupResult: cc.ScrollView = null;\r\n    @property(cc.Node)\r\n    contentPopupResult: cc.Node = null;\r\n    @property(cc.Prefab)\r\n    prefabPlayerResult: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    fxMeWin: cc.Node = null;\r\n    @property(cc.Node)\r\n    fxMeLose: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    fxWhoPlayFirst: cc.Node = null;\r\n\r\n    cardsOnHand = {};\r\n    buttons = {};\r\n    myChair = 0;\r\n    sortBySuit = true;\r\n    currTurnCards = [];\r\n    checkTurn = false;\r\n\r\n    countDown = null;\r\n\r\n    private timeoutChiaBaiDone = null;\r\n    private timeoutDelayChiaBai = null;\r\n\r\n    cachePlayersInfo = [];\r\n\r\n    onLoad() {\r\n        InGame.instance = this;\r\n        this.initRes();\r\n    }\r\n\r\n    initRes() {\r\n        Res.getInstance();\r\n        this.btnsInGame.children.forEach(btn => {\r\n            this.buttons[btn.name] = btn;\r\n        });\r\n    }\r\n\r\n    public show(isShow: boolean, roomInfo = null) {\r\n        if (isShow) {\r\n            this.node.active = true;\r\n            this.cleanCardLine();\r\n            this.cleanCardsOnBoard();\r\n            this.cleanCardsOnHand();\r\n            for (let index = 0; index < TienLenConstant.Config.MAX_PLAYER; index++) {\r\n                this.players[index].setStatus();\r\n                this.players[index].setLeaveRoom();\r\n            }\r\n            this.setRoomInfo(roomInfo);\r\n\r\n        } else {\r\n            this.node.active = false;\r\n        }\r\n    }\r\n\r\n    actLeaveRoom() {\r\n        TienLenNetworkClient.getInstance().send(new TienLenCmd.SendRequestLeaveGame());\r\n    }\r\n\r\n    setRoomInfo(room) {\r\n        //  cc.log(\"TLMN setRoomInfo data : \", room);\r\n        this.lbRoomId.string = room.roomId;\r\n        if (room.moneyBet == 0) {\r\n            this.lbRoomBet.string = \"\";\r\n        } else {\r\n            this.lbRoomBet.string = Utils.formatNumber(room.moneyBet);\r\n        }\r\n\r\n        this.myChair = room.myChair;\r\n        this.setPlayersInfo(room);\r\n        for (let index = 0; index < 4; index++) {\r\n            this.players[index].hideChat();\r\n        }\r\n        if (room.cards != null) {\r\n            if (room.cards.length > 0) {\r\n                this.cardLine.active = true;\r\n                //  cc.log(\"TLMN setRoomInfo show card\");\r\n                this.setCardsOnHand(this.sortCards(room.cards));\r\n                this.setActiveButtons([\"bt_sort\"], [true]);\r\n            }\r\n        }\r\n\r\n        this.closePopupResult();\r\n    }\r\n\r\n    setPlayersInfo(room) {\r\n        this.cachePlayersInfo = [];\r\n        for (let i = 0; i < room.playerInfos.length; i++) {\r\n            var info = room.playerInfos[i];\r\n            if (room.playerStatus[i] != 0) {\r\n                this.cachePlayersInfo.push(info.nickName);\r\n                var chair = this.convertChair(i);\r\n                var pl = this.players[chair];\r\n                if (pl) pl.setPlayerInfo(info);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateGameInfo(data) {\r\n        this.show(true, data);\r\n    }\r\n\r\n    onUserJoinRoom(user) {\r\n        if (user.uStatus != 0) {\r\n            this.cachePlayersInfo[user.uChair] = user.info.nickName;\r\n            this.players[this.convertChair(user.uChair)].setPlayerInfo(user.info);\r\n        }\r\n    }\r\n\r\n    autoStart(autoInfo) {\r\n        if (autoInfo.isAutoStart) {\r\n            this.setTimeCountDown(\"Ván đấu bắt đầu sau: \", autoInfo.autoStartTime);\r\n            this.closePopupResult();\r\n        }\r\n    }\r\n\r\n    setTimeCountDown(msg, t) {\r\n        this.lbTimeCountDown.string = msg + \"\" + t + \"s\";\r\n        this.lbTimeCountDown.node.active = true;\r\n        clearInterval(this.countDown);\r\n        this.countDown = setInterval(() => {\r\n            t--;\r\n            if (t < 0) {\r\n                clearInterval(this.countDown);\r\n                this.lbTimeCountDown.node.active = false;\r\n            } else {\r\n                this.lbTimeCountDown.string = msg + \"\" + t + \"s\";\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    firstTurn(data) {\r\n        this.cleanCardLine();\r\n        //  cc.log(\"TLMN firstTurn data : \", data);\r\n\r\n        clearTimeout(this.timeoutDelayChiaBai);\r\n        this.timeoutDelayChiaBai = setTimeout(() => {\r\n            let numPlayer = 0;\r\n            let arrSeatId = [];\r\n            for (let i = 0; i < data.cards.length; i++) {\r\n                var pl = this.players[this.convertChair(i)]\r\n                if (pl.active) {\r\n                    numPlayer += 1;\r\n                    arrSeatId.push(this.convertChair(i));\r\n                }\r\n            }\r\n\r\n            let cardDeal = 6;\r\n            // Open | Hide cards not use -> Mau binh nhieu la bai qua nen chi chia 4 la tuong trung\r\n            for (let index = 0; index < 4 * cardDeal; index++) { // 4 players * 6 cards\r\n                this.cardsDeal.children[index].active = index >= numPlayer * cardDeal ? false : true;\r\n                this.cardsDeal.children[index].position = cc.v2(0, 0);\r\n            }\r\n\r\n            let timeShip = 0.1; // 0.15\r\n            // Move Cards used to each player joined\r\n            for (let a = 0; a < cardDeal; a++) { // players x 6 cards\r\n                for (let b = 0; b < numPlayer; b++) {\r\n                    let seatId = arrSeatId[b];\r\n                    let card4Me = this.cardsDeal.children[(a * numPlayer) + b];\r\n                    let rawPlayerPos = this.players[seatId].node.position;\r\n                    //  cc.log(\"TLMN CHIA_BAI delayTime : \", ((a * numPlayer) + b) * timeShip);\r\n                    card4Me.runAction(\r\n                        cc.sequence(\r\n                            cc.delayTime(((a * numPlayer) + b) * timeShip),\r\n                            cc.moveTo(0.2, rawPlayerPos)\r\n                        )\r\n                    );\r\n                }\r\n            }\r\n\r\n            let delayOver2Under = 0.2;\r\n            var maxDelay = (((cardDeal - 1) * numPlayer) + (numPlayer - 1)) * timeShip; // ((a * numPlayer) + b) * timeShip\r\n            let timeUnderLayer = (maxDelay + 0.2 + delayOver2Under) * 1000;\r\n            //  cc.log(\"CHIA_BAI timeUnderLayer : \", timeUnderLayer);\r\n            clearTimeout(this.timeoutChiaBaiDone);\r\n            this.timeoutChiaBaiDone = setTimeout(() => {\r\n                for (let index = 0; index < 4 * 6; index++) { // 4 players * 6 cards\r\n                    //  cc.log(\"CHIA_BAI cardsDeal index : \", index);\r\n                    this.cardsDeal.children[index].active = false;\r\n                }\r\n                this.fxWhoPlayFirst.active = false;\r\n            }, timeUnderLayer);\r\n\r\n            this.fxWhoPlayFirst.active = true;\r\n            this.fxWhoPlayFirst.children[0].getComponent(cc.Label).string = this.cachePlayersInfo[data.chair] + \" đánh trước !\";\r\n        }, 1000);\r\n\r\n        for (let i = 0; i < data.cards.length; i++) {\r\n            var card = data.cards[i];\r\n            var pl = this.players[this.convertChair(i)]\r\n            if (pl.active) {\r\n                pl.setFirstCard(card);\r\n            }\r\n        }\r\n    }\r\n\r\n    chiaBai(data) {\r\n        this.setCardsOnHand(this.sortCards(data.cards));\r\n        if (data.toiTrang > 0) {\r\n\r\n        }\r\n        for (let i = 0; i < this.players.length; i++) {\r\n            if (this.players[i].active) {\r\n                this.players[i].offFirstCard();\r\n                if (i > 0) {\r\n                    this.players[i].setCardRemain(data.cardSize);\r\n                }\r\n            }\r\n        }\r\n        this.setActiveButtons([\"bt_sort\"], [true]);\r\n    }\r\n\r\n    changeTurn(turn) {\r\n        var chair = this.convertChair(turn.chair);\r\n        for (let index = 0; index < 4; index++) {\r\n            this.players[index].setTimeRemain(0);\r\n        }\r\n        //  cc.log(\"UUUUUUU turn : \", turn);\r\n        if (turn.time) {\r\n            this.players[chair].setTimeRemain(turn.time);\r\n        } else {\r\n            this.players[chair].setTimeRemain(14);\r\n        }\r\n\r\n        if (chair == 0) {\r\n            this.setActiveButtons([\"bt_submit_turn\", \"bt_pass_turn\"], [true, true]);\r\n            this.checkTurn = true;\r\n        }\r\n        if (turn.newRound) {\r\n            this.cleanCardsOnBoard();\r\n            this.currTurnCards = [];\r\n            this.checkTurn = false;\r\n            for (let i = 0; i < this.players.length; i++) {\r\n                if (this.players[i].active) {\r\n                    this.players[i].setStatus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    submitTurn(turn) {\r\n        this.setActiveButtons([\"bt_submit_turn\", \"bt_pass_turn\"], [false, false]);\r\n        this.players[0].setTimeRemain(0);\r\n        var cards = this.sortCards(turn.cards);\r\n\r\n        let isExist2 = false;\r\n        for (let index = 0; index < turn.cards.length; index++) {\r\n            if (turn.cards[index] == 48 || turn.cards[index] == 49 || turn.cards[index] == 50 || turn.cards[index] == 51) {\r\n                isExist2 = true;\r\n            }\r\n        }\r\n\r\n        if (isExist2) {\r\n            this.fxWhoPlayFirst.active = true;\r\n            this.fxWhoPlayFirst.children[0].getComponent(cc.Label).string = \"Heo !\";\r\n            setTimeout(() => {\r\n                this.fxWhoPlayFirst.active = false;\r\n            }, 2000);\r\n        }\r\n\r\n        var cardHalf = (cards.length - 1) / 2;\r\n        var ranX = Math.floor(Math.random() * 100) - 50;\r\n        var ranY = Math.floor(Math.random() * 100) - 50;\r\n        var chair = this.convertChair(turn.chair);\r\n        var pl = this.players[chair];\r\n        if (chair == 0) {\r\n            for (let i = 0; i < cards.length; i++) {\r\n                var cardIndex = cards[i];\r\n                var _card = this.cardsOnHand[cardIndex];\r\n                var pos = _card.parent.convertToWorldSpaceAR(_card.position)\r\n                pos = this.board.convertToNodeSpaceAR(pos);\r\n                _card.parent = this.board;\r\n                _card.setPosition(pos);\r\n                _card.runAction(cc.moveTo(0.2, cc.v2((i - cardHalf) * 30 + ranX, ranY)));\r\n                _card.runAction(cc.scaleTo(0.2, 0.6, 0.6));\r\n                delete this.cardsOnHand[cardIndex];\r\n            }\r\n        } else {\r\n            var pos = pl.node.parent.convertToWorldSpaceAR(pl.node.position)\r\n            pos = this.board.convertToNodeSpaceAR(pos);\r\n            for (let i = 0; i < cards.length; i++) {\r\n                var cardItem = cc.instantiate(this.cardItem);\r\n                cardItem.parent = this.board;\r\n                cardItem.setScale(0.6, 0.6);\r\n                cardItem.setPosition(pos);\r\n                cardItem.getComponent(Card).setCardData(cards[i]);\r\n                cardItem.runAction(cc.moveTo(0.2, cc.v2((i - cardHalf) * 30 + ranX, ranY)));\r\n            }\r\n            pl.setCardRemain(turn.numberCard);\r\n            this.currTurnCards = cards;\r\n        }\r\n    }\r\n\r\n    passTurn(turn) {\r\n        this.players[this.convertChair(turn.chair)].setStatus(\"Bỏ lượt\");\r\n        this.setActiveButtons([\"bt_submit_turn\", \"bt_pass_turn\"], [false, false]);\r\n        this.players[0].setTimeRemain(0);\r\n    }\r\n\r\n    actSubmitTurn() {\r\n        var cardSelected = [];\r\n        this.cardLine.children.forEach(card => {\r\n            var _card = card.getComponent(Card);\r\n            if (_card.isSelected)\r\n                cardSelected.push(_card.getCardIndex());\r\n        });\r\n        this.sendSubmitTurn(cardSelected);\r\n\r\n        this.checkTurn = false;\r\n    }\r\n\r\n    sendSubmitTurn(cardSelected) {\r\n        TienLenNetworkClient.getInstance().send(new TienLenCmd.SendDanhBai(!1, cardSelected));\r\n    }\r\n\r\n    actPassTurn() {\r\n        this.sendPassTurn();\r\n\r\n        this.checkTurn = false;\r\n    }\r\n\r\n    sendPassTurn() {\r\n        TienLenNetworkClient.getInstance().send(new TienLenCmd.SendBoLuot(!0));\r\n    }\r\n\r\n    sortCards(cards) {\r\n        cards = CardGroup.indexsToCards(cards);\r\n        var _cards = [];\r\n        if (this.sortBySuit)\r\n            _cards = new CardGroup(cards).getOrderedBySuit();\r\n        else\r\n            _cards = CardGroup.sortCards(cards);\r\n        return CardGroup.cardsToIndexs(_cards);\r\n    }\r\n\r\n    actSort() {\r\n        this.sortBySuit = !this.sortBySuit;\r\n        var cards = this.getCardsOnHand();\r\n        cards = this.sortCards(cards);\r\n        this.sortCardsOnHand(cards);\r\n        this.setToggleCardsOnHand();\r\n    }\r\n\r\n    setCardsOnHand(cards) {\r\n        cards.forEach(card => {\r\n            var cardItem = cc.instantiate(this.cardItem);\r\n            cardItem.parent = this.cardLine;\r\n            cardItem.getComponent(Card).setCardData(card, this.onCardSelectCallback.bind(this));\r\n            this.cardsOnHand[card] = cardItem;\r\n        });\r\n    }\r\n\r\n    onCardSelectCallback(card) {\r\n        if (this.currTurnCards\r\n            && this.currTurnCards.length == 1\r\n            && this.currTurnCards[0].card >= 48) //1 la khac 2\r\n        {\r\n            this.setToggleCardsOnHand();\r\n            this.setToggleCardsOnHand([card]);\r\n        } else\r\n            this.checkSuggestion(card);\r\n    }\r\n\r\n    checkSuggestion(data) {\r\n        data = CardGroup.indexToCard(data);\r\n        var cardsOnHand = CardGroup.indexsToCards(this.getCardsOnHand());\r\n        var turnCards = CardGroup.indexsToCards(this.currTurnCards);\r\n        var suggestionCards;\r\n        if (this.checkTurn)\r\n            suggestionCards = new CardGroup(cardsOnHand).getSuggestionCards(turnCards, data, () => {\r\n                let tmp = new Array();\r\n                for (var key in this.cardsOnHand) {\r\n                    let tmpCard = this.cardsOnHand[key].getComponent(Card);\r\n                    if (tmpCard.isSelected) {\r\n                        tmp.push(tmpCard);\r\n                    }\r\n                }\r\n                return new CardGroup(cardsOnHand).getSuggestionNoCards(tmp, data, true);\r\n            });\r\n        else {\r\n            let tmp = new Array();\r\n            for (var key in this.cardsOnHand) {\r\n                let tmpCard = this.cardsOnHand[key].getComponent(Card);\r\n                if (tmpCard.isSelected) {\r\n                    tmp.push(tmpCard);\r\n                }\r\n            }\r\n            suggestionCards = new CardGroup(cardsOnHand).getSuggestionNoCards(tmp, data);\r\n        }\r\n        if (suggestionCards) {\r\n            for (let i = 0; i < suggestionCards.length; i++) {\r\n                for (let j = 0; j < suggestionCards[i].length; j++) {\r\n                    if (CardGroup.cardToIndex(data) == CardGroup.cardToIndex(suggestionCards[i][j])) {\r\n                        this.setToggleCardsOnHand(CardGroup.cardsToIndexs(suggestionCards[i]));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getCardsOnHand() {\r\n        var cards = [];\r\n        for (var key in this.cardsOnHand) {\r\n            cards.push(this.cardsOnHand[key].getComponent(Card).getCardIndex());\r\n        }\r\n        return cards;\r\n    }\r\n\r\n    cleanCardsOnHand() {\r\n        for (var key in this.cardsOnHand)\r\n            delete this.cardsOnHand[key];\r\n    }\r\n\r\n    cleanCardsOnBoard() {\r\n        this.board.removeAllChildren();\r\n    }\r\n\r\n    setToggleCardsOnHand(cards = null) {\r\n        if (cards === null) {\r\n            for (var key in this.cardsOnHand) {\r\n                this.cardsOnHand[key].getComponent(Card).deSelect();\r\n            }\r\n        } else {\r\n            for (var key in this.cardsOnHand) {\r\n                this.cardsOnHand[key].getComponent(Card).deSelect();\r\n            }\r\n            for (let i = 0; i < cards.length; i++) {\r\n                this.cardsOnHand[cards[i]].getComponent(Card).select();\r\n            }\r\n        }\r\n    }\r\n\r\n    sortCardsOnHand(cards) {\r\n        for (let i = 0; i < cards.length; i++) {\r\n            var index = cards[i];\r\n            this.cardsOnHand[index].setSiblingIndex(i);\r\n        }\r\n    }\r\n\r\n    cleanCardLine() {\r\n        this.cardLine.removeAllChildren();\r\n\r\n        for (let i = 1; i < this.players.length; i++) {\r\n            this.players[i].clearCardLine();\r\n        }\r\n    }\r\n\r\n    setActiveButtons(btnNames, actives) {\r\n        for (let i = 0; i < btnNames.length; i++) {\r\n            this.buttons[btnNames[i]].active = actives[i];\r\n        }\r\n    }\r\n\r\n    endGame(data) {\r\n        //  cc.log(\"TTTTTTTTTT endGame data : \", data);\r\n        for (let index = 0; index < 4; index++) {\r\n            this.players[index].setTimeRemain(0);\r\n        }\r\n        var coinChanges = data.ketQuaTinhTienList;\r\n        for (let i = 0; i < coinChanges.length; i++) {\r\n            var chair = this.convertChair(i);\r\n            if (i < TienLenConstant.Config.MAX_PLAYER) {\r\n                this.players[chair].setCoinChange(coinChanges[i]);\r\n                this.players[chair].setCoin(data.currentMoney[i]);\r\n                if (chair == 0) {\r\n                    Configs.Login.Coin = data.currentMoney[i];\r\n                    this.fxMeWin.active = coinChanges[i] > 0 ? true : false;\r\n                    this.fxMeLose.active = coinChanges[i] < 0 ? true : false;\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < data.cards.length; i++) {\r\n            var chair = this.convertChair(i);\r\n            if (chair != 0) {\r\n                this.players[chair].setCardLine(data.cards[i]);\r\n                this.players[chair].setCardRemain(0);\r\n            }\r\n        }\r\n        this.setActiveButtons([\"bt_sort\"], [false]);\r\n        //  cc.log(\"TTTTTTTTTT Sam 1 : \", data.countDown);\r\n        if (data.countDown == 0) {\r\n            //  cc.log(\"TTTTTTTTTT Sam\");\r\n            this.setTimeCountDown(\"Ván đấu kết thúc sau: \", 10);\r\n            setTimeout(() => {\r\n                this.cleanCardsOnHand();\r\n                this.cleanCardLine();\r\n                this.cleanCardsOnBoard();\r\n                for (let index = 0; index < TienLenConstant.Config.MAX_PLAYER; index++) {\r\n                    this.players[index].setStatus();\r\n                }\r\n            }, 5000);\r\n        } else {\r\n            //  cc.log(\"TTTTTTTTTT TLMN\");\r\n            setTimeout(() => {\r\n                this.setTimeCountDown(\"Ván đấu kết thúc sau: \", data.countDown - 6);\r\n            }, 4000);\r\n\r\n            setTimeout(() => {\r\n                this.cleanCardsOnHand();\r\n                this.cleanCardLine();\r\n                this.cleanCardsOnBoard();\r\n                for (let index = 0; index < TienLenConstant.Config.MAX_PLAYER; index++) {\r\n                    this.players[index].setStatus();\r\n                }\r\n            }, 9000);\r\n        }\r\n        TienLenNetworkClient.getInstance().send(new TienLenCmd.SendReadyAutoStart());\r\n\r\n        setTimeout(() => {\r\n            // show Popup Result\r\n            this.fxMeWin.active = false;\r\n            this.fxMeLose.active = false;\r\n            this.popupResult.active = true;\r\n            this.contentPopupResult.destroyAllChildren();\r\n            this.contentPopupResult.removeAllChildren();\r\n\r\n            let isTLMN = data.sizeWinType == 5 ? false : true;\r\n\r\n            for (let index = 0; index < data.ketQuaTinhTienList.length; index++) {\r\n                if (data.ketQuaTinhTienList[index] != 0) {\r\n                    let item = cc.instantiate(this.prefabPlayerResult).getComponent(\"TienLen.ItemPlayerResult\");\r\n                    item.initItem({\r\n                        id: index + 1,\r\n                        userName: this.cachePlayersInfo[index],\r\n                        goldChange: data.ketQuaTinhTienList[index],\r\n                        cards: data.cards[index],\r\n                        winTypes: data.winTypes[index],\r\n                        isTLMN: isTLMN\r\n                    })\r\n                    this.contentPopupResult.addChild(item.node);\r\n                }\r\n            }\r\n            this.scrollPopupResult.scrollToTop(0);\r\n        }, 4000);\r\n    }\r\n\r\n    updateMatch(data) {\r\n\r\n    }\r\n\r\n    userLeaveRoom(data) {\r\n        var chair = this.convertChair(data.chair);\r\n        this.players[chair].setLeaveRoom();\r\n        if (chair == 0) {\r\n            this.show(false);\r\n            Room.instance.show(true);\r\n            Room.instance.refreshRoom();\r\n        }\r\n    }\r\n\r\n    notifyUserRegOutRoom(res) {\r\n        let outChair = res[\"outChair\"];\r\n        let isOutRoom = res[\"isOutRoom\"];\r\n        let chair = this.convertChair(outChair);\r\n        if (chair == 0) {\r\n            if (isOutRoom) {\r\n                this.players[chair].setNotify(\"Sắp rời bàn !\");\r\n            } else {\r\n                this.players[chair].setNotify(\"Khô Máu !\");\r\n            }\r\n        }\r\n    }\r\n\r\n    playerChat(res) {\r\n        let chair = res[\"chair\"];\r\n        let isIcon = res[\"isIcon\"];\r\n        let content = res[\"content\"];\r\n\r\n        let seatId = this.convertChair(chair);\r\n        if (isIcon) {\r\n            // Chat Icon\r\n            this.players[seatId].showChatEmotion(content);\r\n        } else {\r\n            // Chat Msg\r\n            this.players[seatId].showChatMsg(content);\r\n        }\r\n    }\r\n\r\n    playerChatChong(res) {\r\n        let winChair = res[\"winChair\"];\r\n        let lostChair = res[\"lostChair\"];\r\n        let winMoney = res[\"winMoney\"];\r\n        let lostMoney = res[\"lostMoney\"];\r\n        let winCurrentMoney = res[\"winCurrentMoney\"];\r\n        let lostCurrentMoney = res[\"lostCurrentMoney\"];\r\n\r\n        setTimeout(() => {\r\n            let seatIdWin = this.convertChair(winChair);\r\n            let seatIdLost = this.convertChair(lostChair);\r\n            this.players[seatIdWin].setCoinChange(winMoney);\r\n            this.players[seatIdLost].setCoinChange(lostMoney);\r\n            this.players[seatIdWin].setCoin(winCurrentMoney);\r\n            this.players[seatIdLost].setCoin(lostCurrentMoney);\r\n            setTimeout(() => {\r\n                this.players[seatIdWin].setStatus(\"\");\r\n                this.players[seatIdLost].setStatus(\"\");\r\n            }, 2000);\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    wait4doithong(res) {\r\n        let chair = res[\"chair\"];\r\n\r\n        this.fxWhoPlayFirst.active = true;\r\n        this.fxWhoPlayFirst.children[0].getComponent(cc.Label).string = \"Đợi Bốn Đôi Thông !\";\r\n        setTimeout(() => {\r\n            this.fxWhoPlayFirst.active = false;\r\n        }, 2000);\r\n    }\r\n\r\n    showPopupGuide() {\r\n        this.popupGuide.active = true;\r\n    }\r\n\r\n    closePopupGuide() {\r\n        this.popupGuide.active = false;\r\n    }\r\n\r\n    // Chat\r\n    showUIChat() {\r\n        this.UI_Chat.active = true;\r\n        this.UI_Chat.runAction(\r\n            cc.moveTo(0.5, 420, 0)\r\n        );\r\n    }\r\n\r\n    closeUIChat() {\r\n        this.UI_Chat.runAction(\r\n            cc.moveTo(0.5, 1000, 0)\r\n        );\r\n    }\r\n\r\n    chatEmotion(event, id) {\r\n        //  cc.log(\"BaCay chatEmotion id : \", id);\r\n        TienLenNetworkClient.getInstance().send(new TienLenCmd.SendChatRoom(1, id));\r\n        this.closeUIChat();\r\n    }\r\n\r\n    chatMsg() {\r\n        if (this.edtChatInput.string.trim().length > 0) {\r\n            TienLenNetworkClient.getInstance().send(new TienLenCmd.SendChatRoom(0, this.edtChatInput.string));\r\n            this.edtChatInput.string = \"\";\r\n            this.closeUIChat();\r\n        }\r\n    }\r\n\r\n    convertChair(a) {\r\n        return (a - this.myChair + 4) % 4;\r\n    }\r\n\r\n    showToast(message: string) {\r\n        this.lblToast.string = message;\r\n        let parent = this.lblToast.node.parent;\r\n        parent.stopAllActions();\r\n        parent.active = true;\r\n        parent.opacity = 0;\r\n        parent.runAction(cc.sequence(cc.fadeIn(0.1), cc.delayTime(2), cc.fadeOut(0.2), cc.callFunc(() => {\r\n            parent.active = false;\r\n        })));\r\n    }\r\n\r\n    closePopupResult() {\r\n        this.popupResult.active = false;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TimeUtils {\r\n    public static currentTimeMillis(): number {\r\n        return Date.now();\r\n    }\r\n\r\n    public static ping: number = 0;\r\n    public static minPing: number = -1;\r\n    public static minDistanceTime: number = 0;\r\n\r\n    public static serverTime()\r\n    {\r\n        return Math.ceil(this.currentTimeMillis() - this.minDistanceTime + this.minPing/2);\r\n    }\r\n}\r\n","import Utils from \"./Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nnamespace common {\r\n\r\n    export class TweenListener {\r\n        target: cc.Component = null;\r\n        duration: number = 0;\r\n        curDuration: number = 0;\r\n        callback: (p: number) => void = null;\r\n    }\r\n\r\n    @ccclass\r\n    export class Tween extends cc.Component {\r\n\r\n        private static instance: Tween = null;\r\n        private static getInstance(): Tween {\r\n            if (this.instance == null) {\r\n                let node = new cc.Node();\r\n                node.name = \"Tween\";\r\n                cc.game.addPersistRootNode(node);\r\n                this.instance = node.addComponent(Tween);\r\n            }\r\n            return this.instance;\r\n        }\r\n\r\n        private static listeners = new Array<TweenListener>();\r\n\r\n        private skeepFrame = false;\r\n        private readonly countSkeep = 1;\r\n        private curCountSkeep = 0;\r\n        private delta = 0;\r\n\r\n        update(dt: number) {\r\n            if (this.skeepFrame) {\r\n                this.curCountSkeep++;\r\n                this.delta += dt;\r\n                if (this.curCountSkeep >= this.countSkeep) {\r\n                    this.curCountSkeep = 0;\r\n                    this.skeepFrame = false;\r\n                }\r\n                return;\r\n            }\r\n            for (var i = 0; i < Tween.listeners.length; i++) {\r\n                let listener = Tween.listeners[i];\r\n                if (listener.target && listener.target instanceof cc.Component && listener.target.node) {\r\n                    listener.curDuration = Math.min(listener.duration, listener.curDuration + dt + this.delta);\r\n                    listener.callback(listener.curDuration / listener.duration);\r\n                    if (listener.curDuration >= listener.duration) {\r\n                        Tween.listeners.splice(i--, 1);\r\n                    }\r\n                } else {\r\n                    Tween.listeners.splice(i--, 1);\r\n                }\r\n            }\r\n\r\n            this.skeepFrame = true;\r\n            this.delta = 0;\r\n        }\r\n\r\n        static numberTo(label: cc.Label, toNumber: number, duration: number, format: (n: number) => string = (n) => { return Utils.formatNumber(n) }) {\r\n            this.getInstance();\r\n            let listener = null;\r\n            for (var i = 0; i < Tween.listeners.length; i++) {\r\n                let _listener = Tween.listeners[i];\r\n                if (_listener.target == label) {\r\n                    listener = _listener;\r\n                    break;\r\n                }\r\n            }\r\n            if (listener == null) {\r\n                listener = new TweenListener();\r\n                this.listeners.push(listener);\r\n            }\r\n            let startNumber = Utils.stringToInt(label.string);\r\n            let distance = toNumber - startNumber;\r\n            listener.curDuration = 0;\r\n            listener.duration = duration;\r\n            listener.target = label;\r\n            listener.callback = (p: number) => {\r\n                label.string = format(parseInt(\"\" + (startNumber + distance * p)));\r\n            }\r\n        }\r\n\r\n        public static showPopup(box:cc.Node,parent:cc.Node){\r\n            parent.active = true;\r\n            box.scale = 0;\r\n            parent.opacity = 0;\r\n            cc.Tween.stopAllByTarget(box);\r\n            cc.Tween.stopAllByTarget(parent);\r\n            cc.tween(box)\r\n                .to(0.5, { scale: 1 }, { easing: \"backOut\" })\r\n                .start();\r\n    \r\n            cc.tween(parent)\r\n                .to(0.3, { opacity: 255 }, { easing: \"linear\" })\r\n                .start();\r\n        }\r\n    \r\n        public static hidePopup(box:cc.Node,parent:cc.Node,isDestroy:boolean = true){\r\n            cc.Tween.stopAllByTarget(box);\r\n            cc.Tween.stopAllByTarget(parent);\r\n            cc.tween(box)\r\n                .to(0.5, { scale: 0 }, { easing: \"backIn\" })\r\n                .call(() => {\r\n                    if(isDestroy){\r\n                        parent.destroy();\r\n                    }\r\n                    else{\r\n                        parent.active =  false;\r\n                    }\r\n                })\r\n                .start();\r\n    \r\n            cc.tween(parent)\r\n                .to(0.5, { opacity: 0 }, { easing: \"linear\" })\r\n                .start();\r\n        }\r\n    }\r\n\r\n\r\n}\r\nexport default common.Tween;","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Toggle)\r\n    btnEmotion: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    btnChatNhanh: cc.Toggle = null;\r\n\r\n    @property(cc.Node)\r\n    tabEmotion:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    tabChatNhanh:cc.Node = null;\r\n\r\n    \r\n\r\n    onBtnEmotion(){\r\n        this.tabEmotion.active = true;\r\n        this.tabChatNhanh.active = false;\r\n    }\r\n\r\n    onBtnChatNhanh(){\r\n        this.tabEmotion.active = false;\r\n        this.tabChatNhanh.active = true;\r\n    }\r\n}\r\n","\r\nimport { cmd } from \"./Lobby.Cmd\";\r\nimport App from \"./Script/common/App\";\r\nimport Utils from \"./Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"./Script/networks/MiniGameNetworkClient\";\r\nimport SlotNetworkClient from \"./Script/networks/SlotNetworkClient\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIItemDiemDanh extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    txtProgress: cc.Label = null;\r\n    @property(cc.Label)\r\n    txtDes: cc.Label = null;\r\n    @property(cc.Sprite)\r\n    imgProgress: cc.Sprite = null;\r\n    @property(cc.Node)\r\n    btnLam: cc.Node = null;\r\n    @property(cc.Node)\r\n    btnNhanThuong: cc.Node = null;\r\n    @property(cc.Node)\r\n    btnHoanThanh: cc.Node = null;\r\n\r\n    private data = null;\r\n\r\n    getDescription(gameId) {\r\n        var des = \"\";\r\n        switch (gameId) {\r\n            case 191:\r\n                des = \"Tổng cược HẢI TẶC 200k Tặng 1 lượt quay NATRA 100\";\r\n                break;\r\n            case 170:\r\n                des = \"Tổng cược NATRA 200k Tặng 1 lượt quay THẦN TÀI 100\";\r\n                break;\r\n            case 110:\r\n                des = \"Tổng cược THẦN TÀI 200k Tặng 1 lượt quay THỦY CUNG 100\";\r\n                break;\r\n            case 160:\r\n                des = \"Tổng cược THỦY CUNG 200k Tặng 1 lượt quay  TỨ THẦN THÚ 100\";\r\n                break;\r\n            case 150:\r\n                des = \"Tổng cược TỨ THẦN THÚ 200k Tặng 1 lượt quay THỦY CUNG 100\";\r\n                break;\r\n            case 180:\r\n                des = \"Tổng cược AVENGER 200k Tặng 1 lượt quay NATRA 100\";\r\n                break;\r\n                break;\r\n        }\r\n        return des;\r\n    }\r\n\r\n    init(data) {\r\n        this.data = data;\r\n        this.txtDes.string = this.getDescription(data.dailyQuestData.gameId);\r\n        var ratio = data.dailyGiftData.currentValue / data.dailyQuestData.valueDone;\r\n        if (ratio > 1) {\r\n            ratio = 1;\r\n        }\r\n        this.txtProgress.string = App.instance.getTextLang('txt_progress') + \": \" + Math.floor(ratio * 100) + \"%\";\r\n        this.imgProgress.fillRange = ratio;\r\n        if (data.dailyGiftData.isReceive == true) {\r\n            this.btnLam.active = false;\r\n            this.btnNhanThuong.active = false;\r\n            this.btnHoanThanh.active = false;\r\n        }\r\n        else if (data.dailyGiftData.isSuccess == true) {\r\n            this.btnLam.active = false;\r\n            this.btnNhanThuong.active = true;\r\n            this.btnHoanThanh.active = false;\r\n        }\r\n\r\n        else {\r\n            this.btnLam.active = true;\r\n            this.btnNhanThuong.active = false;\r\n            this.btnHoanThanh.active = false;\r\n        }\r\n    }\r\n\r\n    onBtnLam() {\r\n        if (this.data.dailyQuestData.gameId == 120) {\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot3\", \"Slot3\");\r\n            });\r\n        }\r\n        else if (this.data.dailyQuestData.gameId == 110) {\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot1\", \"Slot1\");\r\n            });\r\n        }\r\n        else if (this.data.dailyQuestData.gameId == 170) {\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot7\", \"Slot7\");\r\n            });\r\n        }\r\n        else if (this.data.dailyQuestData.gameId == 160) {\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot4\", \"Slot4\");\r\n            });\r\n        }\r\n        else if (this.data.dailyQuestData.gameId == 150) {\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot10\", \"Slot10\");\r\n            });\r\n        }\r\n        else if (this.data.dailyQuestData.gameId == 150) {\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot10\", \"Slot10\");\r\n            });\r\n        }\r\n        else if (this.data.dailyQuestData.gameId == 191) {\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot6\", \"Slot6\");\r\n            });\r\n        }\r\n        else if (this.data.dailyQuestData.gameId == 180) {\r\n            App.instance.removeAllWebView();\r\n            App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n            SlotNetworkClient.getInstance().checkConnect(() => {\r\n                App.instance.showLoading(false);\r\n                App.instance.openGame(\"Slot8\", \"Slot8\");\r\n            });\r\n        }\r\n    }\r\n\r\n    onBtnNhanThuong() {\r\n        //Utils.Log(\"onBtnNhanThuong:\" + JSON.stringify(this.data));\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqReceiveQuest(this.data.index));\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIItemMailClick extends cc.Component {\r\n\r\n   \r\n    OpenURL(obj,url){\r\n        cc.sys.openURL(url);\r\n    }\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\n\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIItemDiemDanh extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    txtContent: cc.Label = null;\r\n    \r\n    @property(cc.Node)\r\n    nodeNew: cc.Node = null;\r\n   \r\n\r\n    private data = null;\r\n    private uiPopupMail = null;\r\n    init(uiPopupMail,data){\r\n        this.uiPopupMail = uiPopupMail;\r\n        this.data = data;\r\n        this.txtContent.string = data.title;\r\n        this.nodeNew.active = data.status == 0 ?true:false;\r\n    }\r\n\r\n    onBtnRead(){\r\n        this.uiPopupMail.readMail(this.data);\r\n        if(this.data.status == 0){\r\n            //new\r\n            this.data.status = 1;\r\n            this.nodeNew.active = this.data.status == 0 ?true:false;\r\n            Http.get(Configs.App.API, { c: \"404\", mid: this.data.mail_id }, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                if (err != null) return;\r\n                BroadcastReceiver.send(BroadcastReceiver.ON_UPDATE_MAIL);\r\n                \r\n            });\r\n        }\r\n    }\r\n}\r\n","\r\nimport App from \"./App\";\r\nimport Utils from \"./Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    @property(cc.Node)\r\n    nodeBox: cc.Node = null;\r\n    @property(cc.Label)\r\n    labelUser: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelGame: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelGold: cc.Label = null;\r\n    @property(cc.Label)\r\n    labelTypeWin: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbNotify: cc.Label = null;\r\n    @property(cc.Node)\r\n    nodeJackpot: cc.Node = null;\r\n    @property(cc.Node)\r\n    nodeNotify: cc.Node = null;\r\n    private listContent = [];\r\n    private index = 0;\r\n\r\n    onLoad() {\r\n    }\r\n\r\n    ctor() {\r\n        var self = this;\r\n        self.listContent = [];\r\n        this.index = 0;\r\n    }\r\n\r\n    test() {\r\n\r\n        var data = {};\r\n        data[\"username\"] = \"user\" + this.index;\r\n        data[\"totalPrizes\"] = 100000 + this.index;\r\n        data[\"type\"] = 0;\r\n        data[\"gameName\"] = \"Chim Điên\"\r\n        //Utils.Log(\"data:\" + JSON.stringify(data));\r\n        this.addJackpot(data);\r\n        this.index++;\r\n    }\r\n\r\n    addJackpot(data) {\r\n\r\n        if (this.listContent == null) {\r\n            return;\r\n        }\r\n        //Utils.Log(\"addJackpot:\" + JSON.stringify(data));\r\n        this.listContent.push(data);\r\n        if (this.listContent.length == 1) {\r\n            //run now\r\n            this.show(data);\r\n        }\r\n        else {\r\n            // running, add list\r\n            this.listContent.push(data);\r\n        }\r\n    }\r\n    addNotify(data) {\r\n        if (this.listContent == null) {\r\n            return;\r\n        }\r\n        //  cc.log(\"addNotify:\" + JSON.stringify(data));\r\n        this.listContent.push(data);\r\n        if (this.listContent.length == 1) {\r\n            //run now\r\n            this.showNoti(data);\r\n        }\r\n        else {\r\n            // running, add list\r\n            this.listContent.push(data);\r\n        }\r\n    }\r\n\r\n    show(data) {\r\n        this.nodeJackpot.active = true;\r\n        this.nodeNotify.active = false;\r\n        if (data == null || data.totalPrizes === undefined) {\r\n            this.hide();\r\n            return;\r\n        }\r\n        if (App.instance.isShowNotifyJackpot == false) {\r\n            this.node.active = false;\r\n            return;\r\n        }\r\n        this.labelUser.string = data.username;\r\n        this.labelGold.string = Utils.formatNumber(data.totalPrizes);\r\n        this.labelGame.string = data.gameName;\r\n        this.labelTypeWin.string = data.type;\r\n        cc.Tween.stopAllByTarget(this.node);\r\n        this.node.active = true;\r\n        cc.tween(this.node).delay(5.0).set({ x: cc.winSize.width / 2 + 500 }).to(0.6, { x: cc.winSize.width / 2 - 170 }, { easing: cc.easing.backOut }).delay(4.0)\r\n            .call(() => {\r\n                this.hide();\r\n            }).start();\r\n    }\r\n    showNoti(data) {\r\n        this.nodeJackpot.active = false;\r\n        this.nodeNotify.active = true;\r\n        this.lbNotify.string = data['message'];\r\n        cc.Tween.stopAllByTarget(this.node);\r\n        this.node.active = true;\r\n        cc.tween(this.node).delay(5.0).set({ x: cc.winSize.width / 2 + 500 }).to(0.6, { x: cc.winSize.width / 2 - 170 }, { easing: cc.easing.backOut }).delay(4.0)\r\n            .call(() => {\r\n                this.hide();\r\n            }).start();\r\n    }\r\n    hide() {\r\n        cc.Tween.stopAllByTarget(this.node);\r\n        cc.tween(this.node).to(0.3, { x: cc.winSize.width / 2 + 200 }, { easing: cc.easing.backIn }).call(() => {\r\n            this.node.active = false;\r\n            this.listContent.splice(0, 1);\r\n            if (this.listContent.length >= 1) {\r\n                var data = this.listContent[0];\r\n                if (data.hasOwnProperty(\"message\")) {\r\n                    this.showNoti(data)\r\n                } else {\r\n                    this.show(data);\r\n                }\r\n            }\r\n        }).start();\r\n\r\n    }\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport { Global } from \"../../Loading/src/Global\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport cmd from \"./Lobby.Cmd\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"./Script/networks/MiniGameNetworkClient\";\r\nimport InPacket from \"./Script/networks/Network.InPacket\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIPopupDiemDanh extends Dialog {\r\n    @property(cc.Node)\r\n    content: cc.Node = null;\r\n    @property(cc.Node)\r\n    prefab: cc.Node = null;\r\n    @property(cc.Node)\r\n    itemDiemDanhNode: cc.Node = null;\r\n    @property(cc.Node)\r\n    itemDiemDanh: cc.Node = null;\r\n    start() {\r\n\r\n        MiniGameNetworkClient.getInstance().addListener((data) => {\r\n            if (!this.node.active) return;\r\n            let inpacket = new InPacket(data);\r\n            //Utils.Log(inpacket.getCmdId());\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.GET_LIST_QUEST: {\r\n\r\n                    this.content.removeAllChildren();\r\n                    this.itemDiemDanh = null;\r\n                    let res = new cmd.ResGetListQuest(data);\r\n                    var list = JSON.parse(res.bf);\r\n                    for (var i = 0; i < list.length; i++) {\r\n                        var item = cc.instantiate(this.prefab);\r\n                        item.parent = this.content;\r\n                        item.setSiblingIndex(list[i].dailyQuestData.piority + 1);\r\n                        //Utils.Log(list[i].dailyQuestData.piority + 1);\r\n                        item.getComponent(\"UIItemDiemDanh\").init(list[i]);\r\n                    }\r\n\r\n                }\r\n                    break;\r\n                case cmd.Code.RECEIVE_LIST_QUEST: {\r\n                    let res = new cmd.ResReceiveListQuest(data);\r\n                    //Utils.Log(\"ListQuest:\" + JSON.stringify(res));\r\n                    if (res.isSuccess) {\r\n                        App.instance.alertDialog.showMsg(App.instance.getTextLang('txt_giftcode_success'));\r\n                        MiniGameNetworkClient.getInstance().send(new cmd.ReqGetListQuest());\r\n                        Configs.Login.Coin = res.currentMoney;\r\n                        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }, this);\r\n\r\n    }\r\n    onEnable() {\r\n        this.checkDiemDanh();\r\n    }\r\n    checkDiemDanh() {\r\n        Http.get(Configs.App.API, { c: \"2031\", nn: Configs.Login.Nickname, at: Configs.Login.AccessToken, ac: \"history\" }, (err, res) => {\r\n            //Utils.Log(\"DIEMDANH:\", res);\r\n            if (res['data'] != null) {\r\n                if (this.itemDiemDanh == null) {\r\n                    this.itemDiemDanh = cc.instantiate(this.itemDiemDanhNode);\r\n                    this.itemDiemDanh.parent = this.content;\r\n                    this.itemDiemDanh.setSiblingIndex(0);\r\n                    //  cc.log(\"init diem danh\");\r\n                }\r\n                let progress = 0;\r\n                let dataHis = res['data'];\r\n                for (let i = 0; i < dataHis.length; i++) {\r\n                    if (dataHis[i]['consecutive'] != 0) {\r\n                        progress++\r\n                    }\r\n                }\r\n                cc.find('BgProgress/Progress', this.itemDiemDanh).getComponent(cc.Sprite).fillRange = progress / 7;\r\n                this.itemDiemDanh.getChildByName('TxtProgress').getComponent(cc.Label).string = App.instance.getTextLang('txt_progress') + \": \" + Math.floor((progress / 7) * 100) + \"%\";\r\n            }\r\n        });\r\n    }\r\n    onClickAttendance() {\r\n        Global.LobbyController.actDiemDanh1();\r\n        this.dismiss();\r\n    }\r\n    show() {\r\n        super.show();\r\n        // App.instance.showLoading(true);\r\n        MiniGameNetworkClient.getInstance().send(new cmd.ReqGetListQuest());\r\n    }\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"./Script/common/App\";\r\nimport BroadcastReceiver from \"./Script/common/BroadcastReceiver\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\nimport Utils from \"./Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIPopupMail extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    content: cc.Node = null;\r\n    @property(cc.Node)\r\n    prefab: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    txtTitle: cc.Label = null;\r\n\r\n    @property(cc.RichText)\r\n    txtContent: cc.RichText = null;\r\n\r\n    @property(cc.Label)\r\n    txtTime: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    txtSender: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    boxInfo: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    boxEmpty: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    boxHave: cc.Node = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n    private listMail = [];\r\n\r\n    start() {\r\n\r\n    }\r\n    _onShowed() {\r\n        super._onShowed();\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    show() {\r\n        super.show();\r\n        // this.loadData();\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { c: \"405\", nn: Configs.Login.Nickname, p: this.page }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n             //Utils.Log(\"UIPopupMail:\" + JSON.stringify(res));\r\n            if (res[\"success\"]) {\r\n                if (res[\"errorCode\"] == \"10001\") {\r\n                    this.boxEmpty.active = true;\r\n                    this.boxHave.active = false;\r\n                }\r\n                else {\r\n                    this.boxEmpty.active = false;\r\n                    this.boxHave.active = true;\r\n                    this.boxInfo.active = false;\r\n                    this.content.removeAllChildren();\r\n\r\n                    this.maxPage = res[\"totalPages\"];\r\n                    this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n                    Configs.Login.ListMail = res[\"transactions\"];\r\n                    res['transactions'].sort((x, y) => {\r\n                        return x['status'] - y['status'];\r\n                    });\r\n                    BroadcastReceiver.send(BroadcastReceiver.ON_UPDATE_MAIL);\r\n                    for (let i = 0; i < res[\"transactions\"].length; i++) {\r\n                        let dataItem = res[\"transactions\"][i];\r\n                         //Utils.Log(\"Status==\" + dataItem['status']);\r\n                        var item = cc.instantiate(this.prefab);\r\n                        item.parent = this.content;\r\n                        item.getComponent(\"UIItemMail\").init(this, dataItem);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private dataMailReading = null;\r\n    readMail(dataMail) {\r\n\r\n        this.dataMailReading = dataMail;\r\n        this.boxInfo.active = true;\r\n        this.txtTitle.string = App.instance.getTextLang('txt_mail_title') + dataMail.title + \" \" + dataMail.title;\r\n        this.txtContent.string =App.instance.getTextLang('txt_mail_content')+ dataMail.content;\r\n        this.txtTime.string =App.instance.getTextLang('txt_mail_time_send')+ dataMail.createTime;\r\n        this.txtSender.string = App.instance.getTextLang('txt_mail_from') + dataMail.author;\r\n    }\r\n\r\n    OpenURL() {\r\n        cc.sys.openURL(\"https://google.com\");\r\n    }\r\n    onBtnXoa() {\r\n        if (this.dataMailReading != null) {\r\n            App.instance.showLoading(true);\r\n            Http.get(Configs.App.API, { c: \"403\", mid: this.dataMailReading.mail_id }, (err, res) => {\r\n                App.instance.showLoading(false);\r\n                if (err != null) return;\r\n                if (res.success) {\r\n                    this.loadData();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","\r\nimport App from \"./Script/common/App\";\r\nimport Dialog from \"./Script/common/Dialog\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIPopupRule extends Dialog {\r\n   \r\n\r\n    start(){\r\n        \r\n    }\r\n    _onShowed() {\r\n        super._onShowed();\r\n     \r\n    }\r\n\r\n    \r\n\r\n    show() {\r\n        super.show();\r\n        // this.loadData();\r\n    }\r\n\r\n    \r\n}\r\n","import Configs from \"../../../../Loading/src/Configs\";\r\n\r\nvar IS_SHOW_LOG = true;\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nexport namespace common {\r\n    export class Utils {\r\n        static Rad2Deg: number = 57.2957795;\r\n        static Deg2Rad: number = 0.0174532925;\r\n        static loadImgFromUrl(_sprite: cc.Sprite = null, url: string = '', parentScale: cc.Node = null) {\r\n            if (_sprite === null || url === '') return;\r\n            cc.assetManager.loadRemote(url, (err, tex: cc.Texture2D) => {\r\n                if (err != null) return;\r\n                _sprite.spriteFrame = new cc.SpriteFrame(tex);\r\n                if (parentScale) {\r\n                    if (parentScale.width < _sprite.node.width) {\r\n                        let sc = (parentScale.width / _sprite.node.width) - .1\r\n                        //Utils.Log('---> SCALE W ' + sc);\r\n                        if (sc > .5)\r\n                            _sprite.node.scale = sc\r\n                    } else if (parentScale.height < _sprite.node.height) {\r\n                        let sc = (parentScale.height / _sprite.node.height) - .1\r\n\r\n                        //Utils.Log('---> SCALE H ' + sc);\r\n                        if (sc > .5)\r\n                            _sprite.node.scale = sc\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        static copy(text) {\r\n            try {\r\n                if (cc.sys.os == cc.sys.OS_ANDROID) {\r\n                    // jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"JavaCopy\", \"(Ljava/lang/String;)V\", text);\r\n                    jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"JavaCopy\", \"(Ljava/lang/String;Ljava/lang/String;)V\", text);\r\n                }\r\n                else if (cc.sys.os == cc.sys.OS_IOS) {\r\n                    jsb.reflection.callStaticMethod(\"AppController\", \"JavaCopy:\", text);\r\n                }\r\n                else {\r\n                    const el = document.createElement('textarea');\r\n                    el.value = text;\r\n                    document.body.appendChild(el);\r\n                    el.select();\r\n                    document.execCommand('copy');\r\n                    document.body.removeChild(el);\r\n                }\r\n            }\r\n            catch (message) {\r\n                //  cc.log(\"Error Copy:\", message);\r\n            }\r\n        }\r\n\r\n        static degreesToVec2(degrees: number): cc.Vec2 {\r\n            return Utils.radianToVec2(degrees * Utils.Deg2Rad);\r\n        }\r\n\r\n        static radianToVec2(radian: number): cc.Vec2 {\r\n            return cc.v2(Math.cos(radian), Math.sin(radian));\r\n        }\r\n\r\n        static numberToEnum<T>(value: number, typeEnum: T): T[keyof T] | undefined {\r\n            return typeEnum[typeEnum[value]];\r\n        }\r\n\r\n        static ToVND(number) {\r\n            var result = number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n            if (result == null || result == \"NaN\") result = 0;\r\n            return result;\r\n        }\r\n        static ToInt(vnd) {\r\n            // var vndtmp = vnd.replaceAll('.','');\r\n            if (vnd == \"\") return 0;\r\n            var vndtmp = vnd.split('.').join('');\r\n            return parseInt(vndtmp);\r\n        }\r\n\r\n        static IsJsonString(text) {\r\n            if (/^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').\r\n                replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\r\n                replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\r\n\r\n                //the json is ok\r\n                return true;\r\n            } else {\r\n\r\n                //the json is not ok\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        static loadSpriteFrameFromBase64(base64: string, callback: (sprFrame: cc.SpriteFrame) => void) {\r\n            //create DOM element\r\n            let img = new Image();\r\n            //define img.onload before assigning src\r\n            img.onload = function () {\r\n                let texture = new cc.Texture2D();\r\n                texture.initWithElement(img);\r\n                texture.handleLoadedTexture();\r\n                let sp = new cc.SpriteFrame(texture);\r\n                //  //Utils.Log(sp);\r\n                //assign the spriteframe to you sprite\r\n                callback(sp);\r\n            }.bind(this);\r\n            img.src = \"data:image/png;base64,\" + base64;\r\n        }\r\n\r\n        static formatNameBank(n: string): string {\r\n            var name = n.toLowerCase();\r\n            var arr = {\r\n                \"àáảãạăắằẳẵặâấầẩẫậ\": \"a\",\r\n                \"óòỏõọơớờởỡợôốồổỗộ\": \"o\",\r\n                \"éèẻẽẹêếềểễệ\": \"e\",\r\n                \"úùủũụưứừửữự\": \"u\",\r\n                \"íìỉĩị\": \"i\",\r\n                \"ýỳỷỹỵ\": \"y\",\r\n                \"đ\": \"d\",\r\n                \"~!@#$%^&*()_+`[]\\{}|;':*-+\\\",./<>?0123456789\": \"_\"\r\n            };\r\n            for (var i = 0; i < name.length; i++) {\r\n                for (var key in arr) {\r\n                    for (var j = 0; j < key.length; j++) {\r\n                        if (name[i] == key[j]) {\r\n                            name = name.replace(name[i], arr[key]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            name = name.replace(/_/g, '');\r\n            // name = name.replace(/[^a-zA-Z ]/g, \"\");\r\n            name = name.toUpperCase();\r\n            return name;\r\n        }\r\n\r\n        static formatName(n: string): string {\r\n            var name = n;\r\n            var arr = {\r\n                \"àáảãạăắằẳẵặâấầẩẫậ\": \"a\",\r\n                \"óòỏõọơớờởỡợôốồổỗộ\": \"o\",\r\n                \"éèẻẽẹêếềểễệ\": \"e\",\r\n                \"úùủũụưứừửữự\": \"u\",\r\n                \"íìỉĩị\": \"i\",\r\n                \"ýỳỷỹỵ\": \"y\",\r\n                \"đ\": \"d\",\r\n            };\r\n            for (var i = 0; i < name.length; i++) {\r\n                for (var key in arr) {\r\n                    for (var j = 0; j < key.length; j++) {\r\n                        if (name[i] == key[j]) {\r\n                            name = name.replace(name[i], arr[key]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            name = name.trim();\r\n            return name;\r\n        }\r\n\r\n        static formatNumberBank(n: string): string {\r\n            var name = n;\r\n            name = name.replace(/[^0-9]/g, \"\")\r\n            return name;\r\n        }\r\n\r\n\r\n        static formatEditBox(n: string): number {\r\n            if (n == \"\") return 0;\r\n            var vndtmp = n.split('.').join('');\r\n            return parseInt(vndtmp);\r\n        }\r\n\r\n        static formatNumber(n: number): string {\r\n            var result = n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n            return result;\r\n            // return n.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.');\r\n        }\r\n        static formatMoney(money: number, isForMatK = false) {\r\n            let format = \"\";\r\n            let mo = Math.abs(money);\r\n            if (mo >= 1000000000) {\r\n                mo /= 1000000000;\r\n                format = \"B\";\r\n            } else if (mo >= 1000000) {\r\n                mo /= 1000000;\r\n                format = \"M\";\r\n            } else if (mo >= 1000 && isForMatK) {\r\n                mo /= 1000;\r\n                format = \"K\";\r\n            } else {\r\n                return this.formatNumber(money);\r\n            }\r\n\r\n            let str = Math.abs(money).toString();\r\n            let str1 = Math.floor(mo).toString();\r\n\r\n            let strResult = str[str1.length] + str[str1.length + 1]\r\n            if (strResult === '00') {\r\n                return (money < 0 ? \"-\" : \"\") + Math.floor(mo) + format;\r\n            } else {\r\n                if (strResult[1] === '0') {\r\n                    return (money < 0 ? \"-\" : \"\") + Math.floor(mo) + \".\" + strResult[0] + format;\r\n                } else\r\n                    return (money < 0 ? \"-\" : \"\") + Math.floor(mo) + \".\" + strResult + format;\r\n            }\r\n        }\r\n\r\n        \r\n        static formatMoney2(money: number, isForMatK = false) {\r\n            const formatter = new Intl.NumberFormat(\"en-US\", {\r\n                minimumFractionDigits: 0,\r\n                maximumFractionDigits: 2,\r\n            });\r\n        \r\n            // Nếu không cần format thành K/M/B, trả về dạng 1,000,000\r\n            if (!isForMatK) {\r\n                return formatter.format(money);\r\n            }\r\n        \r\n            let format = \"\";\r\n            let mo = Math.abs(money);\r\n        \r\n            if (mo >= 1000000000) {\r\n                mo /= 1000000000;\r\n                format = \"B\";\r\n            } else if (mo >= 1000000) {\r\n                mo /= 1000000;\r\n                format = \"M\";\r\n            } else if (mo >= 1000) {\r\n                mo /= 1000;\r\n                format = \"K\";\r\n            } else {\r\n                return formatter.format(money);\r\n            }\r\n        \r\n            return (money < 0 ? \"-\" : \"\") + formatter.format(mo) + format;\r\n        }\r\n\r\n        static formatNumberMin(value) {\r\n            var newValue = value;\r\n            if (value >= 1000) {\r\n                var suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\r\n                var suffixNum = Math.floor((\"\" + value).length / 3);\r\n                var shortValue = 0;\r\n                for (var precision = 2; precision >= 1; precision--) {\r\n                    shortValue = parseFloat((suffixNum != 0 ? (value / Math.pow(1000, suffixNum)) : value).toPrecision(precision));\r\n                    var dotLessShortValue = (shortValue + '').replace(/[^a-zA-Z 0-9]+/g, '');\r\n                    if (dotLessShortValue.length <= 2) { break; }\r\n                }\r\n                if (shortValue % 1 != 0) shortValue = parseFloat(shortValue.toFixed(1));\r\n                newValue = shortValue + suffixes[suffixNum];\r\n            }\r\n            return newValue;\r\n        }\r\n\r\n        static stringToInt(s: string): number {\r\n            var n = parseInt(s.replace(/\\./g, '').replace(/,/g, ''));\r\n            if (isNaN(n)) n = 0;\r\n            return n;\r\n        }\r\n\r\n        static randomRangeInt(min: number, max: number): number {\r\n            //Returns a random number between min (inclusive) and max (inclusive)\r\n            //Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n            //Returns a random number between min (inclusive) and max (exclusive)\r\n            return Math.floor(Math.random() * (max - min)) + min;\r\n        }\r\n\r\n        static randomRange(min: number, max: number): number {\r\n            //Returns a random number between min (inclusive) and max (exclusive)\r\n            return Math.random() * (max - min) + min;\r\n        }\r\n\r\n        static v2Distance(v1: cc.Vec2, v2: cc.Vec2): number {\r\n            return Math.sqrt(Math.pow(v2.x - v1.x, 2) + Math.pow(v2.y - v1.y, 2));\r\n        }\r\n\r\n        static v2Degrees(v1: cc.Vec2, v2: cc.Vec2): number {\r\n            return Math.atan2(v2.y - v1.y, v2.x - v1.x) * 180 / Math.PI;\r\n        }\r\n\r\n        static dateToYYYYMMdd(date: Date) {\r\n            var mm = date.getMonth() + 1; // getMonth() is zero-based\r\n            var dd = date.getDate();\r\n\r\n            return [\r\n                date.getFullYear(),\r\n                (mm > 9 ? '' : '0') + mm,\r\n                (dd > 9 ? '' : '0') + dd\r\n            ].join('-');\r\n        }\r\n\r\n        static dateToYYYYMM(date: Date) {\r\n            var mm = date.getMonth() + 1; // getMonth() is zero-based\r\n            var dd = date.getDate();\r\n\r\n            return [\r\n                date.getFullYear(),\r\n                (mm > 9 ? '' : '0') + mm\r\n            ].join('-');\r\n        }\r\n\r\n        static removeDups(array: Array<any>) {\r\n            var unique = {};\r\n            array.forEach(function (i) {\r\n                if (!unique[i]) {\r\n                    unique[i] = true;\r\n                }\r\n            });\r\n            return Object.keys(unique);\r\n        }\r\n        static Log(str, params1 = null) {\r\n            if (IS_SHOW_LOG) {\r\n                if (Configs.App.IS_PRO) {\r\n               //     console.log(str + \":\", (params1 != null ? params1 : \"\"));\r\n                } else {\r\n                //    cc.log(str + \":\", (params1 != null ? params1 : \"\"));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default common.Utils;"],"file":"index.js"}