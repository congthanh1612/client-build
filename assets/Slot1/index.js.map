{"version":3,"sources":["assets/Slot1/Slot1Script/Slot1.Cmd.ts","assets/Slot1/Slot1Script/Slot1.ItemSlot.ts","assets/Slot1/Slot1Script/Slot1.Lobby.ts","assets/Slot1/Slot1Script/Slot1.PopupBonus.ts","assets/Slot1/Slot1Script/Slot1.PopupGuide.ts","assets/Slot1/Slot1Script/Slot1.PopupHistory.ts","assets/Slot1/Slot1Script/Slot1.PopupJackpotHistory.ts","assets/Slot1/Slot1Script/Slot1.PopupSelectLine.ts","assets/Slot1/Slot1Script/Slot1.Slot1Controller.ts","assets/Slot1/Slot1Script/Slot1.TrialResults.ts"],"names":["cmd","Network_InPacket_1","require","Network_OutPacket_1","cc","_decorator","ccclass","Code","SUBCRIBE","UNSUBCRIBE","CHANGE_ROOM","PLAY","UPDATE_RESULT","UPDATE_POT","AUTO","STOP_AUTO","FORCE_STOP_AUTO","DATE_X2","BIG_WIN","FREE","FREE_DAI_LY","MINIMIZE","UPDATE_JACKPOT_SLOTS","SUBCRIBE_HALL_SLOT","ReceiveFreeDaiLy","_super","data","_this","call","this","freeSpin","getByte","__extends","default","SendSubcribe","roomId","initData","setControllerId","setCmdId","packHeader","putByte","updateSize","ReceiveDateX2","ngayX2","remain","currentMoney","lines","currentRoom","getString","getLong","SendUnSubcribe","ResUpdateJackpotSlots","pots","SendPlay","betValue","putInt","putString","SendChangeRoom","roomLeavedId","roomJoinedId","ReceiveUpdatePot","valueRoom1","valueRoom2","valueRoom3","valueRoom4","x21","x22","ReceiveResult","ref","result","matrix","linesWin","haiSao","prize","ReqSubcribeHallSlot","exports","_a","property","Slot1ItemSlot","apply","arguments","spriteIcon","spineIcon","nodeBox","itemAtlast","gamePlayManager","itemId","index","animName","prototype","onLoad","find","node","getComponent","Sprite","sp","Skeleton","getChildByName","init","active","scale","setContentSize","size","width","height","spriteFrame","getSpriteFrame","changeSpriteBlurByItemId","sizeMode","SizeMode","TRIMMED","changeSpriteRealByItemId","changeSpineIcon","y","parseInt","checkShowSpriteOrSpine","Tween","stopAllByTarget","color","Color","WHITE","tween","to","easing","sineOut","delay","GRAY","start","setAnimation","__decorate","Node","SpriteAtlas","Component","App_1","Tween_1","SlotNetworkClient_1","Slot1_Cmd_1","Slot1Lobby","listPot","rooms","bgAnim","moneyLabel","mSlotController","tileWidth","winSize","titleheight","scaleX","scaleY","zIndex","pSlot3Controller","isMusic","audioEngine","setMusicVolume","playMusic","musicLobby","show","showAnimation","hide","isSound","play","soundStartSpin","onBtnBack","instance","showLoading","getInstance","send","betId","stopAll","loadScene","onBtn100","onJoinRoom","onBtn5k","omBtn10k","onUpdateJackpot","pData","res","resJson","JSON","parse","string","numberTo","p","Label","Dialog_1","Utils_1","PopupBonus","items","nodeBoxNotify","txtNotify","lblLeft","lblHeso","lblWin","sprBgItem","sprIcon","sprLight","listRandomIcon","factor","left","onFinished","onSpecialFinished","dataBonus","dataSpecial","heso","win","controller","opacity","initItem","_loop_1","i","this_1","children","resetItem","on","value","length","log","onBtnSoundTouchBonus","set","x","backOut","hidden","ranIndex","randomRangeInt","childrenCount","onDisable","Button","item","instantiate","parent","showBonus","bonus","sineIn","btn","interactable","arrBonus","split","push","Number","onBtnSoundSumary","showPopup","onBtnExit","backIn","hidePopup","scheduleOnce","SpriteFrame","PopupGuide","pages","page","soundSlotState","actNext","reloadData","actPrev","dismiss","canPlaySound","soundSave","sys","localStorage","getItem","Configs_1","Http_1","PopupHistory","lblPage","itemTemplate","soundClick","maxPage","Array","_onShowed","loadData","actNextPage","actPrevPage","get","App","API","c","un","Login","Nickname","gn","err","destroy","i_1","itemData","replace","formatNumber","type","AudioClip","PopupJackpotHistory","getTextLang","PopupSelectLine","buttonsLine","btnClose","arrLine","onSelectedChanged","SELECTED","getSelectedLines","actSelectAll","actSelectEven","actSelectOdd","actDeselectAll","arrLineSelected","BundleControl_1","BroadcastReceiver_1","Slot1_ItemSlot_1","Slot1_Lobby_1","Slot1_PopupBonus_1","Slot1_TrialResults_1","TW","Slot1Controller","nodeCoin","btnBack","btnPlayTry","btnPlayReal","btnLine","popupBonus","nodeBoxSetting","toggleMusic","toggleSound","spriteSpin","animSpin","sfSpinStart","sfSpinStop","nodeDemo","nodeWinJackpot","txtWinJackpot","nodeGamePlay","mSlotLobby","jackpotLabel","totalLineLabel","btnSpin","toggleFast","toggleAuto","lblFreeSpinCount","lblBet","bigWinNode","txtWinBigWin","jackpotNode","bonusNode","iconWildColumns","lineWinParent","collumParent","totalWinLabel","totalBetLabel","musicBonus","soundRepeatSpin","soundEndSpin","soundSpinWin","soundBigWin","soundJackpot","soundBonus","soundtouchBonus","soundtouchBonusLose","soundSmumary","arrRealItem","popupJackpotHistory","popupHistory","popupGuide","popupSelectLine","bonusGameView","dailyFreeSpin","listActiveItem","columnsWild","TIME_DELAY_SHOW_LINE","wildItemId","listBet","listBetString","isTrial","isSpining","autoSpin","mapLine","isFastCurrent","mutipleJpNode","isFast","arrReel","distanceReel","arrUIItemIcon","numberSpinReel","isHaveResultSpin","dataResult","isFirst","audioIdRepeatSpin","self","addOnClose","addListener","getCmdId","spinResult","stringify","hideGamePlay","sendCheck","register","USER_UPDATE_COIN","Coin","showErrLoading","checkConnect","initMutipleJPNode","assetManager","getBundle","load","Prefab","err1","prefab","director","getScene","setInfo","showAnimations","nodeItem","indexCol","position","v3","showGamePlay","randomIconList","betIdTmp","totalbet","formatNumberMin","setButtonEnable","Math","floor","random","loop","randomBetween","min","max","onClickChangeRoom","showToast","actBack","spinClick","hideWinEffect","hideLineWin","rIdx","results","alertDialog","showMsg","toString","indexOf","beginSpinReel","spinFinish","hasDelay","changeAllItemToDark","that","runAction","sequence","delayTime","callFunc","setButtonFlash","showCoins","number","showWinEffect","bonusSpine","getComponentInChildren","animation","actShowBonus","showLineWin","isChecked","audioIdJackpot","jackpotSpine","stop","indexReel","timeDelay","loopSpinReel","processLoopSpinReel","itemIdTmp","endSpinReel","arrReal","id","unshift","timeStop","isWin","getSpriteFrameIcon","onBtnToggleMusic","onBtnToggleSound","onBtnHistory","onBtnHideSetting","onBtnHistoryJackpot","onBtnSoundClick","onBtnSetting","line","acHideAllLine","acShowOneByOne","lineNode","arrItem","getItemWinInLine","arrIdOfItem","idWin","forEach","getItemIdWinInLine","duration","getDuration","stopAction","stopAllActions","element","changeBet","chooseBet","event","bet","oldIdx","changeSpeed","setAutoSpin","actHistoryJackpot","loadPrefabGame","actHistory","actGuide","actSelectLine","dataHaiSao","cb","state","sprite","spine","lineId","lineArr","arrId","count","filter","Toggle","TrialResults","_pos","_data","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","_length","_controllerId","_cmdId","_error","93","94","95","96","97","98","99","100","101","102","103"],"mappings":"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","sourcesContent":["import InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport OutPacket from \"../../Lobby/LobbyScript/Script/networks/Network.OutPacket\";\r\n\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\nexport namespace cmd {\r\n    export class Code {\r\n        static SUBCRIBE = 2003;\r\n        static UNSUBCRIBE = 2004;\r\n        static CHANGE_ROOM = 2005;\r\n        static PLAY = 2001;\r\n        static UPDATE_RESULT = 2001;\r\n        static UPDATE_POT = 2002;\r\n        static AUTO = 2006;\r\n        static STOP_AUTO = 2006;\r\n        static FORCE_STOP_AUTO = 2008;\r\n        static DATE_X2 = 2009;\r\n        static BIG_WIN = 2010;\r\n        static FREE = 2011;\r\n        static FREE_DAI_LY = 2012;\r\n        static MINIMIZE = 2013;\r\n        static UPDATE_JACKPOT_SLOTS = 10003;\r\n        static SUBCRIBE_HALL_SLOT = 10001;\r\n    }\r\n    export class ReceiveFreeDaiLy extends InPacket {\r\n      \r\n        freeSpin = 0;\r\n\r\n      \r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n           \r\n            this.freeSpin = this.getByte();\r\n            \r\n        }\r\n    }\r\n    export class SendSubcribe extends OutPacket {\r\n        constructor(roomId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE);\r\n            this.packHeader();\r\n            this.putByte(roomId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReceiveDateX2 extends InPacket {\r\n        \r\n        ngayX2 = \"\";\r\n        remain = 0;\r\n        currentMoney = 0;\r\n        freeSpin = 0;\r\n        lines = \"\";\r\n        currentRoom = 0;\r\n\r\n      \r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n           \r\n            this.ngayX2 = this.getString();\r\n            this.remain = this.getByte();\r\n            this.currentMoney = this.getLong();\r\n            this.freeSpin = this.getByte();\r\n            this.lines = this.getString();\r\n            this.currentRoom = this.getByte();\r\n        }\r\n    }\r\n    export class SendUnSubcribe extends OutPacket {\r\n        constructor(roomId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.UNSUBCRIBE);\r\n            this.packHeader();\r\n            this.putByte(roomId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ResUpdateJackpotSlots extends InPacket {\r\n        pots = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.pots = this.getString()\r\n        }\r\n    }\r\n    export class SendPlay extends OutPacket {\r\n        constructor(betValue: number, lines: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.PLAY);\r\n            this.packHeader();\r\n            this.putInt(betValue);\r\n            this.putString(lines);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendChangeRoom extends OutPacket {\r\n        constructor(roomLeavedId: number, roomJoinedId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHANGE_ROOM);\r\n            this.packHeader();\r\n            this.putByte(roomLeavedId);\r\n            this.putByte(roomJoinedId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ReceiveUpdatePot extends InPacket {\r\n        valueRoom1 = 0;\r\n        valueRoom2 = 0;\r\n        valueRoom3 = 0;\r\n        valueRoom4 = 0;\r\n        x21 = 0;\r\n        x22 = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.valueRoom1 = this.getLong();\r\n            this.valueRoom2 = this.getLong();\r\n            this.valueRoom3 = this.getLong();\r\n            this.valueRoom4 = this.getLong();\r\n            this.x21 = this.getByte();\r\n            this.x22 = this.getByte();\r\n        }\r\n    }\r\n    export class ReceiveResult extends InPacket {\r\n        ref = 0;\r\n        result = 0;\r\n        matrix = \"\";\r\n        linesWin = \"\";\r\n        haiSao = \"\";\r\n        prize = 0;\r\n        currentMoney = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.ref = this.getLong();\r\n            this.result = this.getByte();\r\n            this.matrix = this.getString();\r\n            this.linesWin = this.getString();\r\n            this.haiSao = this.getString();\r\n            this.prize = this.getLong();\r\n            this.currentMoney = this.getLong();\r\n        }\r\n    }\r\n\r\n    export class ReqSubcribeHallSlot extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE_HALL_SLOT);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n}\r\nexport default cmd;","const { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class Slot1ItemSlot extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    spriteIcon: cc.Sprite = null;\r\n\r\n    @property(sp.Skeleton)\r\n    spineIcon: sp.Skeleton = null;\r\n\r\n    @property(cc.Node)\r\n    nodeBox: cc.Node = null;\r\n    @property(cc.SpriteAtlas)\r\n    itemAtlast: cc.SpriteAtlas = null;\r\n\r\n    public gamePlayManager = null;\r\n    public itemId = null;\r\n    public index = null;\r\n    public animName = null;\r\n    onLoad() {\r\n        this.spriteIcon = cc.find(\"Box/sprite\", this.node).getComponent(cc.Sprite);\r\n        this.spineIcon = cc.find(\"Box/spine\", this.node).getComponent(sp.Skeleton);\r\n        this.nodeBox = this.node.getChildByName(\"Box\");\r\n\r\n    }\r\n    init(itemId, index, gamePlayManager) {\r\n        var self = this;\r\n        self.gamePlayManager = gamePlayManager;\r\n        self.itemId = itemId;\r\n        self.index = index;\r\n        self.spriteIcon.node.active = true;\r\n        this.spineIcon.node.scale = 0.65;\r\n        this.spriteIcon.node.setContentSize(cc.size(this.spriteIcon.node.width / 1.5, this.spriteIcon.node.height / 1.5));\r\n        self.spineIcon.node.active = false;\r\n        // self.spriteIcon.spriteFrame = self.gamePlayManager.getSpriteFrameIcon(self.itemId);\r\n        this.spriteIcon.spriteFrame = this.itemAtlast.getSpriteFrame(itemId);\r\n    }\r\n\r\n\r\n\r\n    changeSpriteBlurByItemId(itemId) {\r\n        var self = this;\r\n        self.itemId = itemId;\r\n        this.spineIcon.node.active = false;\r\n        this.spriteIcon.node.active = true;\r\n        this.spriteIcon.sizeMode = cc.Sprite.SizeMode.TRIMMED;\r\n        self.spriteIcon.spriteFrame = this.itemAtlast.getSpriteFrame(\"blur_\" + itemId);\r\n        this.spriteIcon.node.setContentSize(cc.size(this.spriteIcon.node.width / 1.4, this.spriteIcon.node.height / 1.4));\r\n    }\r\n\r\n    changeSpriteRealByItemId(itemId) {\r\n        var self = this;\r\n        this.itemId = itemId;\r\n        this.spriteIcon.sizeMode = cc.Sprite.SizeMode.TRIMMED;\r\n        this.spriteIcon.spriteFrame = this.itemAtlast.getSpriteFrame(itemId);\r\n        this.spriteIcon.node.setContentSize(cc.size(this.spriteIcon.node.width / 1.4, this.spriteIcon.node.height / 1.4));\r\n    }\r\n\r\n    changeSpineIcon(itemId) {\r\n        var self = this;\r\n        self.itemId = itemId;\r\n        this.spriteIcon.node.y = 0;\r\n        this.spriteIcon.sizeMode = cc.Sprite.SizeMode.TRIMMED;\r\n        this.spriteIcon.spriteFrame = this.itemAtlast.getSpriteFrame(itemId);\r\n        this.spriteIcon.node.setContentSize(cc.size(this.spriteIcon.node.width / 1.4, this.spriteIcon.node.height / 1.4));\r\n        if (itemId > 2) {\r\n            this.spineIcon.node.active = false;\r\n        } else {\r\n            itemId = parseInt(itemId);\r\n            switch (itemId) {\r\n                case 0:\r\n                    this.animName = \"jackport icon2\"\r\n                    this.spriteIcon.node.y = 10;\r\n                    break;\r\n                case 1:\r\n                    this.animName = \"wwild\"\r\n                    break;\r\n                case 2:\r\n                    this.animName = \"bounus3\";\r\n                    break;\r\n            }\r\n\r\n            // this.spineIcon.setAnimation(0, animName, true);\r\n        }\r\n    }\r\n    checkShowSpriteOrSpine() {\r\n        cc.Tween.stopAllByTarget(this.spriteIcon.node);\r\n        cc.Tween.stopAllByTarget(this.spineIcon.node);\r\n        if (this.itemId > 2) {\r\n            this.spineIcon.node.active = false;\r\n            this.spriteIcon.node.active = true;\r\n            this.spriteIcon.node.color = cc.Color.WHITE;\r\n            cc.tween(this.spriteIcon.node)\r\n                .to(0.25, { scale: 0.9 }, { easing: cc.easing.sineOut })\r\n                .to(0.25, { scale: 0.8 }, { easing: cc.easing.sineOut })\r\n                .delay(0.4)\r\n                .call(() => {\r\n                    this.spriteIcon.node.color = cc.Color.GRAY;\r\n                }).start();\r\n        } else {\r\n            this.spineIcon.node.active = true;\r\n            this.spriteIcon.node.active = false;\r\n            this.spineIcon.setAnimation(0, this.animName, true);\r\n            this.spineIcon.node.color = cc.Color.WHITE;\r\n\r\n            cc.tween(this.spineIcon.node)\r\n                .delay(0.9).call(() => {\r\n                    this.spineIcon.node.color = cc.Color.GRAY;\r\n                    this.spriteIcon.node.active = true;\r\n                    this.spineIcon.node.active = false;\r\n                }).start();\r\n        }\r\n    }\r\n}","\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport SlotNetworkClient from \"../../Lobby/LobbyScript/Script/networks/SlotNetworkClient\";\r\nimport cmd from \"./Slot1.Cmd\";\r\nimport Slot1Controller from \"./Slot1.Slot1Controller\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot1Lobby extends cc.Component {\r\n\r\n    @property([cc.Label])\r\n    listPot: cc.Label[] = [];\r\n    @property([cc.Node])\r\n    rooms: cc.Node[] = [];\r\n    @property(cc.Node)\r\n    bgAnim: cc.Node = null;\r\n    @property(cc.Label)\r\n    moneyLabel: cc.Label = null;\r\n\r\n    mSlotController: Slot1Controller = null;\r\n\r\n    onLoad() {\r\n        let tileWidth = cc.winSize.width / 1280;\r\n        let titleheight = cc.winSize.height / 720;\r\n        this.bgAnim.scaleX = this.bgAnim.scaleX * tileWidth;\r\n        this.bgAnim.scaleY = this.bgAnim.scaleY * titleheight;\r\n        this.node.zIndex = 2;\r\n    }\r\n    start() {\r\n\r\n    }\r\n    public init(pSlot3Controller: Slot1Controller) {\r\n        this.mSlotController = pSlot3Controller;\r\n        if (this.mSlotController.isMusic) {\r\n            cc.audioEngine.setMusicVolume(0.5);\r\n            cc.audioEngine.playMusic(this.mSlotController.musicLobby, true);\r\n        }\r\n\r\n        this.show();\r\n    }\r\n\r\n    show() {\r\n        this.node.active = true;\r\n        this.showAnimation();\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    showAnimation() {\r\n        if (this.mSlotController.isSound) {\r\n            cc.audioEngine.play(this.mSlotController.soundStartSpin, false, 1);\r\n        }\r\n        var self = this;\r\n        // for(var i=0;i<this.rooms.length;i++){\r\n        //     var nodeBox = this.rooms[i]\r\n        //     cc.Tween.stopAllByTarget(nodeBox);\r\n        //     nodeBox.opacity = 0;\r\n        //     if (i == 0) {\r\n        //         nodeBox.position = cc.v3(-200, 0,0);\r\n        //     }\r\n        //     else if (i == 1) {\r\n        //         nodeBox.position = cc.v3(0, -200,0);\r\n        //     }\r\n        //     else if (i == 2) {\r\n        //         nodeBox.position = cc.v3(0, 200,0);\r\n        //     }\r\n        //     else {\r\n        //         nodeBox.position = cc.v3(200, 0,0);\r\n        //     }\r\n        //     cc.tween(nodeBox)\r\n        //         .to(1, { position: cc.v3(0, 0,0), opacity: 255 }, { easing: \"backOut\" })\r\n        //         .start();\r\n        // }\r\n    }\r\n\r\n    public onBtnBack() {\r\n        App.instance.showLoading(true);\r\n        SlotNetworkClient.getInstance().send(new cmd.SendUnSubcribe(this.mSlotController.betId));\r\n        cc.audioEngine.stopAll();\r\n        App.instance.loadScene(\"Lobby\");\r\n    }\r\n\r\n    private onBtn100() {\r\n        this.mSlotController.betId = 0;\r\n        SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(this.mSlotController.betId));\r\n        this.node.active = false;\r\n        this.mSlotController.onJoinRoom();\r\n    }\r\n\r\n    private onBtn5k() {\r\n        this.mSlotController.betId = 1;\r\n        SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(this.mSlotController.betId));\r\n        this.node.active = false;\r\n        this.mSlotController.onJoinRoom();\r\n    }\r\n\r\n    private omBtn10k() {\r\n        this.mSlotController.betId = 2;\r\n        SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(this.mSlotController.betId));\r\n        this.node.active = false;\r\n        this.mSlotController.onJoinRoom();\r\n    }\r\n\r\n    public onUpdateJackpot(pData) {\r\n        let res = new cmd.ResUpdateJackpotSlots(pData);\r\n        let resJson = JSON.parse(res.pots);\r\n        if (this.listPot[0].string == \"0\") {\r\n            this.listPot[0].string = (resJson['audition']['100'] - 100000) + \"\";\r\n            this.listPot[1].string = (resJson['audition']['1000'] - 1000000) + \"\";\r\n            this.listPot[2].string = (resJson['audition']['10000'] - 10000000) + \"\";\r\n        }\r\n        Tween.numberTo(this.listPot[0], resJson['audition']['100'].p, 4);\r\n        Tween.numberTo(this.listPot[1], resJson['audition']['1000'].p, 4);\r\n        Tween.numberTo(this.listPot[2], resJson['audition']['10000'].p, 4);\r\n    }\r\n}\r\n","\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\nimport Slot1Controller from \"./Slot1.Slot1Controller\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nconst arr_animation = [\"baoliendang\", \"binhtiendon\", \"kinhchieuyeu\", \"quatbatieu\", \"thap\", \"vongcankhon\"];\r\n@ccclass\r\nexport class PopupBonus extends Dialog {\r\n    @property(cc.Node)\r\n    items: cc.Node = null;\r\n    @property(cc.Node)\r\n    nodeBoxNotify: cc.Node = null;\r\n    @property(cc.Label)\r\n    txtNotify: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblLeft: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lblHeso: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblWin: cc.Label = null;\r\n    @property([cc.SpriteFrame])\r\n    sprBgItem: cc.SpriteFrame[] = [];\r\n    @property([cc.SpriteFrame])\r\n    sprIcon: cc.SpriteFrame[] = [];\r\n    @property(cc.SpriteFrame)\r\n    sprLight: cc.SpriteFrame = null;\r\n    listRandomIcon = [];\r\n    private factor = 1;\r\n    private left = 0;\r\n    private betValue = 0;\r\n    private onFinished: () => void = null;\r\n    private onSpecialFinished: () => void = null;\r\n    private dataBonus: Array<number> = [];\r\n    private dataSpecial: number = -1;\r\n    private heso: number = 0;\r\n    private win: number = 0;\r\n    private controller: Slot1Controller = null;\r\n    onLoad() {\r\n        this.node.y = cc.winSize.height;\r\n        this.node.opacity = 0;\r\n    }\r\n    start() {\r\n        this.initItem();\r\n        for (let i = 0; i < this.items.childrenCount; i++) {\r\n            let node = this.items.children[i];\r\n            this.resetItem(node);\r\n            node[\"btn\"].node.on(\"click\", () => {\r\n                var value = this.dataBonus[this.dataBonus.length - this.left];\r\n                cc.log(\"click:\" + value + \" : \" + node[\"is_open\"]);\r\n                if (node[\"is_open\"] == false && this.left > 0) {\r\n                    node[\"is_open\"] = true;\r\n                    switch (value) {\r\n                        case 0:\r\n                            this.factor++;\r\n                            node[\"ske\"].spriteFrame = this.sprBgItem[1];\r\n                            node['icon'].node.active = false;\r\n                            node[\"btn\"].node.active = false;\r\n                            this.controller.onBtnSoundTouchBonus(false);\r\n                            break;\r\n                        case 1:\r\n                            node[\"ske\"].spriteFrame = this.sprBgItem[0];\r\n                            node['icon'].spriteFrame = this.sprLight;\r\n                            node[\"btn\"].node.active = false;\r\n                            node[\"label\"].node.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"], 4 * this.betValue, 0.3);\r\n                            this.win += 4 * this.betValue;\r\n                            Tween.numberTo(this.lblWin, this.win, 0.3);\r\n                            this.controller.onBtnSoundTouchBonus(true);\r\n                            cc.tween(node['label'].node).set({ opacity: 0, x: -100 }).to(0.5, { opacity: 255, x: 0 }, { easing: cc.easing.backOut }).start();\r\n                            break;\r\n\r\n                        case 2:\r\n                            node[\"ske\"].spriteFrame = this.sprBgItem[0];\r\n                            node['icon'].spriteFrame = this.sprLight;\r\n                            node[\"label\"].node.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"], 10 * this.betValue * this.factor, 0.3);\r\n                            this.win += 10 * this.betValue * this.factor;\r\n                            Tween.numberTo(this.lblWin, this.win, 0.3);\r\n                            this.controller.onBtnSoundTouchBonus(true);\r\n                            cc.tween(node['label'].node).set({ opacity: 0, x: -100 }).to(0.5, { opacity: 255, x: 0 }, { easing: cc.easing.backOut }).start();\r\n                            break;\r\n                        case 3:\r\n                            node[\"ske\"].spriteFrame = this.sprBgItem[0];\r\n                            node['icon'].spriteFrame = this.sprLight;\r\n                            node[\"label\"].node.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            Tween.numberTo(node[\"label\"], 15 * this.betValue * this.factor, 0.3);\r\n                            this.win += 15 * this.betValue * this.factor;\r\n                            Tween.numberTo(this.lblWin, this.win, 0.3);\r\n                            this.controller.onBtnSoundTouchBonus(true);\r\n                            cc.tween(node['label'].node).set({ opacity: 0, x: -100 }).to(0.5, { opacity: 255, x: 0 }, { easing: cc.easing.backOut }).start();\r\n                            break;\r\n                        case 4:\r\n                            node[\"ske\"].spriteFrame = this.sprBgItem[0];\r\n                            node['icon'].spriteFrame = this.sprLight;\r\n                            node[\"label\"].node.active = true;\r\n                            node[\"label\"].string = \"0\";\r\n                            this.win += 20 * this.betValue * this.factor;\r\n                            Tween.numberTo(node[\"label\"], 20 * this.betValue * this.factor, 0.3);\r\n                            Tween.numberTo(this.lblWin, this.win, 0.3);\r\n                            this.controller.onBtnSoundTouchBonus(true);\r\n                            cc.tween(node['label'].node).set({ opacity: 0, x: -100 }).to(0.5, { opacity: 255, x: 0 }, { easing: cc.easing.backOut }).start();\r\n                            break;\r\n\r\n\r\n                    }\r\n                    this.left--;\r\n                    this.lblLeft.string = \"\" + this.left;\r\n                    if (this.left <= 0) {\r\n                        this.hidden();\r\n                    }\r\n                }\r\n            });\r\n            let ranIndex = Utils.randomRangeInt(0, this.sprIcon.length);\r\n            node[\"icon\"].spriteFrame = this.sprIcon[ranIndex];\r\n        }\r\n    }\r\n    onDisable() {\r\n    }\r\n    resetItem(node) {\r\n        node[\"btn\"] = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n        node[\"label\"] = node.getChildByName(\"label\").getComponent(cc.Label);\r\n        node[\"ske\"] = node.getChildByName(\"ske\").getComponent(cc.Sprite);\r\n        node[\"icon\"] = node.getChildByName(\"icon\").getComponent(cc.Sprite);\r\n        node[\"is_open\"] = false;\r\n        node[\"btn\"].node.active = true;\r\n        node[\"icon\"].node.active = true;\r\n        node['label'].node.active = false;\r\n        node['ske'].spriteFrame = this.sprBgItem[0];\r\n        let ranIndex = Utils.randomRangeInt(0, this.sprIcon.length);\r\n        node[\"icon\"].spriteFrame = this.sprIcon[ranIndex];\r\n    }\r\n    initItem() {\r\n        for (let i = 0; i < 15; i++) {\r\n            let item = this.items.children[i];\r\n            if (!item) {\r\n                item = cc.instantiate(this.items.children[0]);\r\n                item.parent = this.items;\r\n            }\r\n        }\r\n    }\r\n    showBonus(betValue: number, bonus: string, controller, onFinished: () => void) {\r\n        // super.show();\r\n        this.node.active = true;\r\n        cc.tween(this.node).to(0.3, { y: 0, opacity: 255 }, { easing: cc.easing.sineIn }).start();\r\n        this.controller = controller;\r\n        this.win = 0;\r\n        Tween.numberTo(this.lblWin, this.win, 0.3);\r\n        for (let i = 0; i < this.items.childrenCount; i++) {\r\n            let node = this.items.children[i];\r\n            node[\"btn\"] = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            node[\"label\"] = node.getChildByName(\"label\").getComponent(cc.Label);\r\n            node[\"ske\"] = node.getChildByName(\"ske\").getComponent(cc.Sprite);\r\n            node[\"ske\"].node.active = true;\r\n            node[\"btn\"].node.active = true;\r\n            node[\"label\"].node.active = false;\r\n            node[\"is_open\"] = false;\r\n        }\r\n        for (let i = 0; i < this.items.childrenCount; i++) {\r\n            let node = this.items.children[i];\r\n            let btn = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n            btn.node.active = true;\r\n            btn.interactable = true;\r\n            node.getChildByName(\"label\").active = false;\r\n        }\r\n        this.betValue = betValue;\r\n        this.onFinished = onFinished;\r\n        let arrBonus = bonus.split(\",\");\r\n        this.dataBonus = [];\r\n        for (let i = 0; i < arrBonus.length; i++) {\r\n            this.dataBonus.push(Number(arrBonus[i]));\r\n        }\r\n        this.left = this.dataBonus.length - 1;\r\n        this.factor = 1;\r\n        this.lblLeft.string = \"\" + this.left;\r\n\r\n        this.heso = this.dataBonus[0];\r\n        this.lblHeso.string = \"x\" + this.heso;\r\n    }\r\n\r\n\r\n    hidden() {\r\n        this.controller.onBtnSoundSumary();\r\n        Tween.showPopup(this.nodeBoxNotify, this.nodeBoxNotify.parent);\r\n        Tween.numberTo(this.txtNotify, this.win, 0.3);\r\n\r\n    }\r\n\r\n    onBtnExit() {\r\n        cc.tween(this.node).to(0.3, { y: cc.winSize.height, opacity: 0 }, { easing: cc.easing.backIn }).call(() => {\r\n            Tween.hidePopup(this.nodeBoxNotify, this.nodeBoxNotify.parent, false);\r\n            for (let i = 0; i < this.items.childrenCount; i++) {\r\n                cc.log(\"chay den i===\" + i);\r\n                this.resetItem(this.items.children[i]);\r\n            }\r\n            this.node.active = false;\r\n            this.scheduleOnce(() => {\r\n                this.onFinished();\r\n            }, 1.5);\r\n        }).start();\r\n\r\n    }\r\n}\r\nexport default PopupBonus;","import Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupGuide extends Dialog {\r\n\r\n    @property([cc.Node])\r\n    pages: cc.Node[] = [];\r\n    \r\n\r\n    private page = 0;\r\n\r\n    private soundSlotState = null;\r\n\r\n    start() {\r\n    }\r\n\r\n\r\n    show() {\r\n       \r\n        super.show();\r\n        this.page = 0;\r\n        // this.reloadData();\r\n    }\r\n\r\n    actNext() {\r\n        if (this.page < this.pages.length - 1) {\r\n            this.page++;\r\n        }\r\n        this.reloadData();\r\n       \r\n    }\r\n\r\n    actPrev() {\r\n        if (this.page > 0) {\r\n            this.page--;\r\n        }\r\n        this.reloadData();\r\n      \r\n    }\r\n\r\n    private reloadData() {\r\n        for (let i = 0; i < this.pages.length; i++) {\r\n            this.pages[i].active = i == this.page;\r\n        }\r\n    }\r\n\r\n    dismiss() {\r\n        \r\n        super.dismiss();\r\n    }\r\n\r\n    canPlaySound() {\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_1\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nexport default PopupGuide;","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupHistory extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    private soundSlotState = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.show();\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 137, \"p\": this.page, \"un\": Configs.Login.Nickname, \"gn\": \"Audition\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (!res[\"success\"]) return;\r\n\r\n            if (this.items.length == 0) {\r\n                for (var i = 0; i < 8; i++) {\r\n                    let item = cc.instantiate(this.itemTemplate);\r\n                    item.parent = this.itemTemplate.parent;\r\n                    this.items.push(item);\r\n                }\r\n                this.itemTemplate.destroy();\r\n                this.itemTemplate = null;\r\n            }\r\n\r\n            this.maxPage = res[\"totalPages\"];\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                let item = this.items[i];\r\n                if (i < res[\"results\"].length) {\r\n                    let itemData = res[\"results\"][i];\r\n                    item.getChildByName(\"bg\").opacity = i % 2 == 0 ? 255 : 0;\r\n                    item.getChildByName(\"Session\").getComponent(cc.Label).string = \"#\" + itemData[\"rf\"];\r\n                    item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"].replace(\" \", \"\\n\");\r\n                    item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                    item.getChildByName(\"LineBet\").getComponent(cc.Label).string = itemData[\"lb\"] === \"\" ? 0 : itemData[\"lb\"].split(\",\").length;\r\n                    item.getChildByName(\"LineWin\").getComponent(cc.Label).string = itemData[\"lw\"] === \"\" ? 0 : itemData[\"lw\"].split(\",\").length;\r\n                    item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    canPlaySound() {\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_1\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupJackpotHistory extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    private soundSlotState = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.show();\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 138, \"p\": this.page, \"gn\": \"AUDITION\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (!res[\"success\"]) return;\r\n\r\n            if (this.items.length == 0) {\r\n                for (var i = 0; i < 8; i++) {\r\n                    let item = cc.instantiate(this.itemTemplate);\r\n                    item.parent = this.itemTemplate.parent;\r\n                    this.items.push(item);\r\n                }\r\n                this.itemTemplate.destroy();\r\n                this.itemTemplate = null;\r\n            }\r\n\r\n            this.maxPage = res[\"totalPages\"];\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                let item = this.items[i];\r\n                if (i < res[\"results\"].length) {\r\n\r\n                    let itemData = res[\"results\"][i];\r\n                    item.getChildByName(\"bg\").opacity = i % 2 == 0 ? 255 : 0;\r\n                    item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"].replace(\" \",\"\\n\");\r\n                    item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                    item.getChildByName(\"Type\").getComponent(cc.Label).string = itemData[\"rs\"] == 3 ? App.instance.getTextLang('txt_jackpot_win') : App.instance.getTextLang('txt_big_win')\r\n                    item.getChildByName(\"Account\").getComponent(cc.Label).string = itemData[\"un\"];\r\n                    item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    canPlaySound() {\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_1\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nexport default PopupJackpotHistory;","import Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupSelectLine extends Dialog {\r\n    @property(cc.Node)\r\n    buttonsLine: cc.Node = null;\r\n    @property(cc.Button)\r\n    btnClose: cc.Button = null;\r\n    @property(cc.Node)\r\n    arrLine: cc.Node = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    private soundSlotState = null;\r\n\r\n    onSelectedChanged: (lines: Array<number>) => void = null;\r\n    private readonly SELECTED = \"selected\";\r\n\r\n    start() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = true;\r\n            node.on(\"click\", () => {\r\n                node[this.SELECTED] = !node[this.SELECTED];\r\n                node.opacity = node[this.SELECTED] ? 255 : 80;\r\n                if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n                this.btnClose.interactable = this.getSelectedLines().length > 0;\r\n            });\r\n        }\r\n    }\r\n\r\n    actSelectAll() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = true;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n    }\r\n\r\n    actSelectEven() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = i % 2 != 0;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n    }\r\n\r\n    actSelectOdd() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = i % 2 == 0;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n    }\r\n\r\n    actDeselectAll() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = false;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = false;\r\n    }\r\n\r\n    private getSelectedLines() {\r\n        let lines = new Array<number>();\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            if (typeof node[this.SELECTED] == \"undefined\" || node[this.SELECTED]) {\r\n                lines.push(i + 1);\r\n            }\r\n        }\r\n        return lines;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.getSelectedLines().length > 0) {\r\n            let arrLineSelected = this.getSelectedLines();\r\n\r\n            for (let index = 0; index < 20; index++) {\r\n                this.arrLine.children[index].opacity = 80;\r\n            }\r\n\r\n            for (let index = 0; index < arrLineSelected.length; index++) {\r\n                this.arrLine.children[arrLineSelected[index] - 1].opacity = 255;\r\n            }\r\n            if (this.canPlaySound()) {\r\n                cc.audioEngine.play(this.soundClick, false, 1);\r\n            }\r\n            super.dismiss();\r\n        }\r\n    }\r\n\r\n    canPlaySound() {\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_1\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nexport default PopupSelectLine;","import BundleControl from \"../../Loading/src/BundleControl\";\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport BroadcastReceiver from \"../../Lobby/LobbyScript/Script/common/BroadcastReceiver\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\nimport InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport SlotNetworkClient from \"../../Lobby/LobbyScript/Script/networks/SlotNetworkClient\";\r\nimport cmd from \"./Slot1.Cmd\";\r\nimport Slot1ItemSlot from \"./Slot1.ItemSlot\";\r\nimport Slot1Lobby from \"./Slot1.Lobby\";\r\nimport Slot1PopupBonus from \"./Slot1.PopupBonus\";\r\nimport PopupHistory from \"./Slot1.PopupHistory\";\r\nimport PopupJackpotHistory from \"./Slot1.PopupJackpotHistory\";\r\nimport PopupSelectLine from \"./Slot1.PopupSelectLine\";\r\nimport Slot1TrialResult from \"./Slot1.TrialResults\";\r\n\r\nvar MAX_CYCCLE_SPIN = 20;\r\nvar FAST_CYCCLE_SPIN = 10;\r\nvar ERROR_CYCCLE_SPIN = 50;\r\nvar ANIM_ICON = [\r\n  \"Jackpot\",\r\n  \"wildmonkey\",\r\n  \"bonus\",\r\n  \"batgioi\",\r\n  \"satang\",\r\n  \"quadao\",\r\n  \"vongkimco\",\r\n];\r\nvar TW = cc.tween;\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot1Controller extends cc.Component {\r\n  @property(cc.Node)\r\n  nodeCoin: cc.Node = null;\r\n  @property(cc.Button)\r\n  btnBack: cc.Button = null;\r\n  @property(cc.Button)\r\n  btnPlayTry: cc.Button = null;\r\n  @property(cc.Button)\r\n  btnPlayReal: cc.Button = null;\r\n  @property(cc.Button)\r\n  btnLine: cc.Button = null;\r\n\r\n  @property(Slot1PopupBonus)\r\n  popupBonus: Slot1PopupBonus = null;\r\n\r\n  @property(cc.Node)\r\n  nodeBoxSetting: cc.Node = null;\r\n  @property(cc.Button)\r\n  toggleMusic: cc.Button = null;\r\n  @property(cc.Button)\r\n  toggleSound: cc.Button = null;\r\n\r\n  @property(cc.Sprite)\r\n  spriteSpin: cc.Sprite = null;\r\n  @property(cc.Node)\r\n  animSpin: cc.Node = null;\r\n  @property(cc.SpriteFrame)\r\n  sfSpinStart: cc.SpriteFrame = null;\r\n  @property(cc.SpriteFrame)\r\n  sfSpinStop: cc.SpriteFrame = null;\r\n  @property(cc.Node)\r\n  nodeDemo: cc.Node = null;\r\n  @property(cc.Node)\r\n  nodeWinJackpot: cc.Node = null;\r\n  @property(cc.Label)\r\n  txtWinJackpot: cc.Label = null;\r\n  @property(cc.Node)\r\n  nodeGamePlay: cc.Node = null;\r\n  @property(Slot1Lobby)\r\n  mSlotLobby: Slot1Lobby = null;\r\n  @property(cc.Label)\r\n  jackpotLabel: cc.Label = null;\r\n\r\n  @property(cc.Label)\r\n  moneyLabel: cc.Label = null;\r\n\r\n  @property(cc.Label)\r\n  totalLineLabel: cc.Label = null;\r\n\r\n  @property(cc.Button)\r\n  btnSpin: cc.Button = null;\r\n  @property(cc.Toggle)\r\n  toggleFast: cc.Toggle = null;\r\n  @property(cc.Toggle)\r\n  toggleAuto: cc.Toggle = null;\r\n  @property(cc.Label)\r\n  lblFreeSpinCount: cc.Label = null;\r\n  //win\r\n  @property(cc.Label)\r\n  lblBet: cc.Label = null;\r\n  @property(cc.Node)\r\n  bigWinNode: cc.Node = null;\r\n  @property(cc.Label)\r\n  txtWinBigWin: cc.Label = null;\r\n  @property(cc.Node)\r\n  jackpotNode: cc.Node = null;\r\n  @property(cc.Node)\r\n  bonusNode: cc.Node = null;\r\n\r\n  @property(cc.Node)\r\n  iconWildColumns: cc.Node = null;\r\n  //line win\r\n  @property(cc.Node)\r\n  lineWinParent: cc.Node = null;\r\n  @property(cc.Node)\r\n  collumParent: cc.Node = null;\r\n\r\n  //show result\r\n  @property(cc.Label)\r\n  totalWinLabel: cc.Label = null;\r\n  @property(cc.Label)\r\n  totalBetLabel: cc.Label = null;\r\n\r\n  @property({ type: cc.AudioClip })\r\n  musicLobby: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  musicBonus: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundClick: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundStartSpin: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundRepeatSpin: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundEndSpin: cc.AudioClip = null;\r\n\r\n  @property({ type: cc.AudioClip })\r\n  soundSpinWin: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundBigWin: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundJackpot: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundBonus: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundtouchBonus: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundtouchBonusLose: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundSmumary: cc.AudioClip = null;\r\n  @property([Slot1ItemSlot])\r\n  arrRealItem: Slot1ItemSlot[] = [];\r\n\r\n  popupJackpotHistory: PopupJackpotHistory = null;\r\n  popupHistory: PopupHistory = null;\r\n  popupGuide: Dialog = null;\r\n  popupSelectLine: PopupSelectLine = null;\r\n  bonusGameView: cc.Node = null;\r\n  private dailyFreeSpin = 0;\r\n  private listActiveItem: cc.Node[] = []; //list 15 item nhin thay tren man hinh\r\n  private columnsWild = [];\r\n  private TIME_DELAY_SHOW_LINE: number = 1;\r\n  private readonly wildItemId = 1;\r\n  public betId = 0;\r\n  private listBet = [100, 1000, 10000];\r\n  private listBetString = [\"100\", \"1K\", \"10K\"];\r\n  private arrLineSelected = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\r\n  ];\r\n  public isTrial: Boolean = false;\r\n  private isSpining: Boolean = false;\r\n  private autoSpin = false;\r\n  private mapLine = [\r\n    [5, 6, 7, 8, 9], //1\r\n    [0, 1, 2, 3, 4], //2\r\n    [10, 11, 12, 13, 14], //3\r\n    [5, 6, 2, 8, 9], //4\r\n    [5, 6, 12, 8, 9], //5\r\n    [0, 1, 7, 3, 4], //6\r\n    [10, 11, 7, 13, 14], //7\r\n    [0, 11, 2, 13, 4], //8\r\n    [10, 1, 12, 3, 14], //9\r\n    [5, 1, 12, 3, 9], //10\r\n    [10, 6, 2, 8, 14], //11\r\n    [0, 6, 12, 8, 4], //12\r\n    [5, 11, 7, 3, 9], //13\r\n    [5, 1, 7, 13, 9], //14\r\n    [10, 6, 7, 8, 14], //15\r\n    [0, 6, 7, 8, 4], //16\r\n    [5, 11, 12, 13, 9], //17\r\n    [5, 1, 2, 3, 9], //18\r\n    [10, 11, 7, 3, 4], //19\r\n    [0, 1, 7, 13, 14], //20\r\n  ];\r\n\r\n  //new\r\n\r\n  private isFastCurrent = false;\r\n  mutipleJpNode = null;\r\n  private isFast = false;\r\n\r\n  @property([cc.Node])\r\n  arrReel: cc.Node[] = [];\r\n\r\n  @property\r\n  distanceReel: number = 0;\r\n\r\n  @property([Slot1ItemSlot])\r\n  arrUIItemIcon: Slot1ItemSlot[] = [];\r\n\r\n  public numberSpinReel = null;\r\n  public isHaveResultSpin = false;\r\n  public dataResult = null;\r\n  private isFirst = false;\r\n\r\n  public isSound = false;\r\n  public isMusic = true;\r\n\r\n  start() {\r\n    // Configs.Login.Coin = 0;\r\n    this.dailyFreeSpin = 0;\r\n    this.isSound = true;\r\n    this.isMusic = true;\r\n    this.totalWinLabel.string = \"\";\r\n    var self = this;\r\n    SlotNetworkClient.getInstance().addOnClose(() => {\r\n      this.mSlotLobby.onBtnBack();\r\n    }, this);\r\n    this.iconWildColumns.zIndex = 3;\r\n    this.init();\r\n    SlotNetworkClient.getInstance().addListener((data) => {\r\n      let inpacket = new InPacket(data);\r\n      // cc.log(inpacket.getCmdId());\r\n      switch (inpacket.getCmdId()) {\r\n        case cmd.Code.UPDATE_JACKPOT_SLOTS:\r\n          this.mSlotLobby.onUpdateJackpot(data);\r\n          break;\r\n        case cmd.Code.UPDATE_POT:\r\n          {\r\n            let res = new cmd.ReceiveUpdatePot(data);\r\n            // cc.log(\"update Jackpot:\" + (this.betId == 0));\r\n            if (this.betId == -1) {\r\n              Tween.numberTo(this.jackpotLabel, res.valueRoom3, 4.0);\r\n            } else if (this.betId == 0) {\r\n              Tween.numberTo(this.jackpotLabel, res.valueRoom1, 4.0);\r\n            } else if (this.betId == 1) {\r\n              Tween.numberTo(this.jackpotLabel, res.valueRoom2, 4.0);\r\n            } else if (this.betId == 2) {\r\n              Tween.numberTo(this.jackpotLabel, res.valueRoom4, 4.0);\r\n            }\r\n          }\r\n          break;\r\n        case cmd.Code.UPDATE_RESULT:\r\n          {\r\n            let res = new cmd.ReceiveResult(data);\r\n            //dataBonusFake res = JSON.parse('{\"_pos\":99,\"_data\":{\"0\":1,\"1\":7,\"2\":209,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":10,\"11\":173,\"12\":5,\"13\":0,\"14\":29,\"15\":50,\"16\":44,\"17\":50,\"18\":44,\"19\":54,\"20\":44,\"21\":53,\"22\":44,\"23\":53,\"24\":44,\"25\":54,\"26\":44,\"27\":52,\"28\":44,\"29\":50,\"30\":44,\"31\":53,\"32\":44,\"33\":51,\"34\":44,\"35\":53,\"36\":44,\"37\":51,\"38\":44,\"39\":53,\"40\":44,\"41\":49,\"42\":44,\"43\":53,\"44\":0,\"45\":14,\"46\":51,\"47\":44,\"48\":54,\"49\":44,\"50\":57,\"51\":44,\"52\":49,\"53\":52,\"54\":44,\"55\":49,\"56\":55,\"57\":44,\"58\":50,\"59\":48,\"60\":0,\"61\":21,\"62\":52,\"63\":44,\"64\":49,\"65\":44,\"66\":49,\"67\":44,\"68\":49,\"69\":44,\"70\":50,\"71\":44,\"72\":49,\"73\":44,\"74\":49,\"75\":44,\"76\":49,\"77\":44,\"78\":52,\"79\":44,\"80\":49,\"81\":44,\"82\":49,\"83\":0,\"84\":0,\"85\":0,\"86\":0,\"87\":0,\"88\":40,\"89\":150,\"90\":160,\"91\":0,\"92\":0,\"93\":0,\"94\":0,\"95\":1,\"96\":126,\"97\":50,\"98\":160},\"_length\":99,\"_controllerId\":1,\"_cmdId\":2001,\"_error\":0,\"ref\":2733,\"result\":5,\"matrix\":\"2,2,6,5,5,6,4,2,5,3,5,3,5,1,5\",\"linesWin\":\"3,6,9,14,17,20\",\"haiSao\":\"4,1,0,1,2,1,0,1,4,1,1\",\"prize\":2660000,\"currentMoney\":25047712}');\r\n            this.spinResult(res);\r\n          }\r\n          break;\r\n        case cmd.Code.FREE_DAI_LY:\r\n          {\r\n            if (!this.isTrial) {\r\n              let res = new cmd.ReceiveFreeDaiLy(data);\r\n              cc.log(\"init Slot1 FreeSpin:\" + JSON.stringify(res));\r\n              this.dailyFreeSpin = res.freeSpin;\r\n              if (this.dailyFreeSpin > 0) {\r\n                this.lblFreeSpinCount.node.parent.active = true;\r\n                this.lblFreeSpinCount.string = this.dailyFreeSpin + \"\";\r\n              } else {\r\n                this.lblFreeSpinCount.node.parent.active = false;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        case cmd.Code.DATE_X2:\r\n          {\r\n            let res = new cmd.ReceiveDateX2(data);\r\n            if (this.isFirst == false) {\r\n              //vua vao lobby\r\n              this.hideGamePlay();\r\n              this.isFirst = true;\r\n            } else {\r\n              this.mSlotLobby.node.active = false;\r\n              this.onJoinRoom(res);\r\n            }\r\n          }\r\n          break;\r\n        case cmd.Code.CHANGE_ROOM:\r\n          {\r\n            cc.log(\"changeRoom:\" + JSON.stringify(data));\r\n          }\r\n          break;\r\n      }\r\n    }, this);\r\n    SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n    SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(0));\r\n\r\n    BroadcastReceiver.register(\r\n      BroadcastReceiver.USER_UPDATE_COIN,\r\n      () => {\r\n        Tween.numberTo(this.moneyLabel, Configs.Login.Coin, 1.0);\r\n        Tween.numberTo(self.mSlotLobby.moneyLabel, Configs.Login.Coin, 1.0);\r\n      },\r\n      this\r\n    );\r\n    BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n\r\n    App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n    SlotNetworkClient.getInstance().checkConnect(() => {\r\n      App.instance.showLoading(false);\r\n    });\r\n\r\n    this.mSlotLobby.init(this);\r\n    //this.initMutipleJPNode();\r\n  }\r\n  private initMutipleJPNode() {\r\n    if (!this.mutipleJpNode) {\r\n      cc.assetManager.getBundle(\"Lobby\").load(\r\n        \"prefabs/MutipleJackpotPr\",\r\n        cc.Prefab,\r\n        function (finish, total, item) {},\r\n        (err1, prefab: cc.Prefab) => {\r\n          if (err1 != null) {\r\n            cc.log(\"errr load game TIENLEN:\", err1);\r\n          } else {\r\n            this.mutipleJpNode = cc\r\n              .instantiate(prefab)\r\n              .getComponent(\"MutipleJackpot\");\r\n            this.mutipleJpNode.node.parent = cc.director\r\n              .getScene()\r\n              .getChildByName(\"Canvas\");\r\n            this.mutipleJpNode.setInfo(\"DUAXE\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n  showAnimations() {\r\n    var self = this;\r\n    for (var i = 0; i < self.arrUIItemIcon.length; i++) {\r\n      var nodeItem = self.arrUIItemIcon[i].nodeBox;\r\n      var indexCol = i % 5;\r\n      nodeItem.opacity = 0;\r\n      nodeItem.position = cc.v3(0, self.distanceReel, 0);\r\n      cc.tween(nodeItem)\r\n        .delay(indexCol * 0.1)\r\n        .to(\r\n          1,\r\n          { position: cc.v3(0, 0, 0), opacity: 255 },\r\n          { easing: \"backOut\" }\r\n        )\r\n        .start();\r\n    }\r\n  }\r\n\r\n  showGamePlay() {\r\n    this.randomIconList();\r\n    this.nodeGamePlay.active = true;\r\n    this.showAnimations();\r\n  }\r\n\r\n  hideGamePlay() {\r\n    this.nodeGamePlay.active = false;\r\n  }\r\n\r\n  init() {\r\n    this.totalWinLabel.string = \"\";\r\n  }\r\n\r\n  public onJoinRoom(res = null) {\r\n    cc.log(\"onJoinRoom:\" + this.betId);\r\n    this.lblBet.string = this.listBetString[this.betId];\r\n    var betIdTmp = this.betId;\r\n    if (betIdTmp == -1) betIdTmp = 2;\r\n    let totalbet = this.arrLineSelected.length * this.listBet[betIdTmp];\r\n    this.totalBetLabel.string = Utils.formatNumberMin(totalbet);\r\n    this.mSlotLobby.hide();\r\n    this.nodeDemo.active = this.isTrial ? true : false;\r\n    this.showGamePlay();\r\n    this.setButtonEnable(true);\r\n  }\r\n\r\n  randomIconList() {\r\n    var self = this;\r\n    for (var i = 0; i < self.arrUIItemIcon.length; i++) {\r\n      var index = i;\r\n      var itemId = Math.floor(Math.random() * 7);\r\n      self.arrUIItemIcon[i].init(itemId, index, self);\r\n      self.arrUIItemIcon[i].changeSpineIcon(itemId);\r\n      // self.arrUIItemIcon[i].spriteIcon.node.active = false;\r\n      // self.arrUIItemIcon[i].spineIcon.node.active = true;\r\n      // self.arrUIItemIcon[i].spineIcon.animation = ANIM_ICON[itemId];\r\n      self.arrUIItemIcon[i].spineIcon.loop = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * random between, min, max included\r\n   */\r\n  randomBetween(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n  onClickChangeRoom() {\r\n    if (this.isTrial) {\r\n      App.instance.showToast(App.instance.getTextLang(\"txt_slot_error\"));\r\n      return;\r\n    }\r\n    this.actBack();\r\n  }\r\n\r\n  spinClick() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n\r\n    for (var i = 0; i < this.iconWildColumns.childrenCount; i++) {\r\n      this.iconWildColumns.children[i].active = false;\r\n    }\r\n\r\n    //hide effect\r\n\r\n    // this.setButtonAuto(false);\r\n    // this.setButtonFlash(false);\r\n    cc.log(\"spinClick:\" + this.isTrial);\r\n    if (!this.isTrial) {\r\n      if (this.dailyFreeSpin > 0) {\r\n        this.dailyFreeSpin--;\r\n        if (this.dailyFreeSpin > 0) {\r\n          this.lblFreeSpinCount.node.parent.active = true;\r\n          this.lblFreeSpinCount.string = this.dailyFreeSpin + \"\";\r\n        } else {\r\n          this.lblFreeSpinCount.node.parent.active = false;\r\n        }\r\n      } else {\r\n        if (\r\n          Configs.Login.Coin <\r\n          this.listBet[this.betId] * this.arrLineSelected.length\r\n        ) {\r\n          App.instance.alertDialog.showMsg(\r\n            App.instance.getTextLang(\"txt_not_enough\")\r\n          );\r\n          return;\r\n        }\r\n      }\r\n      this.hideWinEffect();\r\n      this.hideLineWin(true);\r\n      this.setButtonEnable(false);\r\n      this.totalWinLabel.string = \"\";\r\n      cc.log(\r\n        \"total line==\",\r\n        this.arrLineSelected + \"==list bet--\" + this.listBet[this.betId]\r\n      );\r\n      SlotNetworkClient.getInstance().send(\r\n        new cmd.SendPlay(\r\n          this.listBet[this.betId],\r\n          this.arrLineSelected.toString()\r\n        )\r\n      );\r\n    } else {\r\n      this.hideWinEffect();\r\n      this.hideLineWin(true);\r\n      this.setButtonEnable(false);\r\n      this.totalWinLabel.string = \"\";\r\n      var rIdx = Utils.randomRangeInt(0, Slot1TrialResult.results.length);\r\n      cc.log(\"random index=\" + rIdx);\r\n      this.spinResult(Slot1TrialResult.results[rIdx]);\r\n    }\r\n  }\r\n\r\n  private audioIdRepeatSpin = 0;\r\n  spinResult(res: cmd.ReceiveResult | any) {\r\n    this.isSpining = true;\r\n    cc.log(\"spinResult:\" + JSON.stringify(res));\r\n    // res = JSON.parse('{\"_pos\":80,\"_data\":{\"0\":1,\"1\":7,\"2\":209,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":18,\"11\":117,\"12\":1,\"13\":0,\"14\":29,\"15\":52,\"16\":44,\"17\":52,\"18\":44,\"19\":54,\"20\":44,\"21\":54,\"22\":44,\"23\":52,\"24\":44,\"25\":51,\"26\":44,\"27\":54,\"28\":44,\"29\":53,\"30\":44,\"31\":52,\"32\":44,\"33\":53,\"34\":44,\"35\":51,\"36\":44,\"37\":51,\"38\":44,\"39\":52,\"40\":44,\"41\":51,\"42\":44,\"43\":54,\"44\":0,\"45\":16,\"46\":50,\"47\":44,\"48\":51,\"49\":44,\"50\":54,\"51\":44,\"52\":55,\"53\":44,\"54\":49,\"55\":50,\"56\":44,\"57\":49,\"58\":54,\"59\":44,\"60\":49,\"61\":55,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":3,\"70\":13,\"71\":64,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":2,\"77\":43,\"78\":233,\"79\":204},\"_length\":80,\"_controllerId\":1,\"_cmdId\":2001,\"_error\":0,\"ref\":4725,\"result\":1,\"matrix\":\"4,4,6,6,4,3,6,5,4,5,3,3,4,3,6\",\"linesWin\":\"2,3,6,7,12,16,17\",\"haiSao\":\"\",\"prize\":200000,\"currentMoney\":36432332}');\r\n    let successResult = [0, 1, 2, 3, 4, 5, 6];\r\n    let result = res.result;\r\n    if (successResult.indexOf(result) === -1) {\r\n      //fail\r\n      if (result === 102) {\r\n        //khong du tien\r\n        App.instance.alertDialog.showMsg(\r\n          App.instance.getTextLang(\"txt_not_enough\")\r\n        );\r\n      } else {\r\n        cc.log(\"co loi xay ra\");\r\n      }\r\n      return;\r\n    }\r\n\r\n    //set icon\r\n    let matrix = res.matrix.split(\",\");\r\n    this.numberSpinReel = new Array(this.arrReel.length);\r\n    this.dataResult = res;\r\n    this.isHaveResultSpin = true;\r\n    this.columnsWild.length = 0;\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundStartSpin, false, 1);\r\n    }\r\n    if (this.isSound) {\r\n      this.audioIdRepeatSpin = cc.audioEngine.play(\r\n        this.soundRepeatSpin,\r\n        true,\r\n        1\r\n      );\r\n    }\r\n    for (var i = 0; i < this.arrReel.length; i++) {\r\n      this.beginSpinReel(i);\r\n    }\r\n  }\r\n\r\n  spinFinish(hasDelay: boolean) {\r\n    cc.log(\"spin finish\");\r\n    this.changeAllItemToDark(false);\r\n    this.isSpining = false;\r\n    var that = this;\r\n    this.node.runAction(\r\n      cc.sequence(\r\n        cc.delayTime(hasDelay ? 1 : 0),\r\n        cc.callFunc(() => {\r\n          if (this.autoSpin) {\r\n            that.spinClick();\r\n          } else {\r\n            that.setButtonEnable(true);\r\n            that.setButtonFlash(true);\r\n          }\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private showCoins(prize) {\r\n    var number = prize / 20000;\r\n    if (number <= 10) number = 10;\r\n    else if (number >= 30) number = 30;\r\n    App.instance.showCoins(number, this.totalWinLabel.node, this.nodeCoin);\r\n  }\r\n\r\n  showWinEffect(prize: number, currentMoney: number, result: number) {\r\n    var self = this;\r\n    this.btnBack.interactable = true;\r\n    if (prize > 0) {\r\n      this.lineWinParent.zIndex = 1;\r\n      this.collumParent.zIndex = 0;\r\n      this.changeAllItemToDark(true);\r\n      if (result == 5) {\r\n        //bonus\r\n        if (this.isMusic) {\r\n          cc.audioEngine.playMusic(this.musicBonus, true);\r\n        }\r\n        this.bonusNode.active = true;\r\n        let bonusSpine = this.bonusNode.getComponentInChildren(sp.Skeleton);\r\n        bonusSpine.animation = \"bounus fx\";\r\n        bonusSpine.loop = true;\r\n        this.node.runAction(\r\n          cc.sequence(\r\n            cc.delayTime(3),\r\n            cc.callFunc(() => {\r\n              this.bonusNode.active = false;\r\n              this.actShowBonus(\r\n                this.isTrial ? 100 : this.listBet[this.betId],\r\n                this.dataResult.haiSao,\r\n                () => {\r\n                  this.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                  this.showCoins(prize);\r\n                  Tween.numberTo(this.totalWinLabel, prize, 1.0);\r\n                  if (!this.isTrial) {\r\n                    Tween.numberTo(this.moneyLabel, currentMoney, 1.0);\r\n                    Tween.numberTo(this.mSlotLobby.moneyLabel, currentMoney, 1.0);\r\n                  }                \r\n                  if (this.toggleFast.isChecked) {\r\n                    self.spinFinish(true);\r\n                  } else {\r\n                    if (self.dataResult.linesWin !== \"\")\r\n                      self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                    else self.spinFinish(false);\r\n                  }\r\n                }\r\n              );\r\n            })\r\n          )\r\n        );\r\n      } else if (result == 2 || result == 6) {\r\n        //thang lon\r\n        if (this.isSound) {\r\n          cc.audioEngine.play(this.soundBigWin, false, 1);\r\n        }\r\n        this.bigWinNode.active = true;\r\n        let bigwinSpine = this.bigWinNode.getComponentInChildren(sp.Skeleton);\r\n        // bigwinSpine.animation = \"thanglon\";\r\n        bigwinSpine.loop = true;\r\n        Tween.numberTo(this.txtWinBigWin, prize, 1.0);\r\n        this.node.runAction(\r\n          cc.sequence(\r\n            cc.delayTime(5),\r\n            cc.callFunc(() => {\r\n              this.bigWinNode.active = false;\r\n              if (this.toggleFast.isChecked) {\r\n                self.spinFinish(true);\r\n              } else {\r\n                if (self.dataResult.linesWin !== \"\")\r\n                  self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                else self.spinFinish(false);\r\n              }\r\n            })\r\n          )\r\n        );\r\n        this.showCoins(prize);\r\n        Tween.numberTo(this.totalWinLabel, prize, 1.0);\r\n        if (!this.isTrial) {Tween.numberTo(this.moneyLabel, currentMoney, 1.0);     Tween.numberTo(this.mSlotLobby.moneyLabel, currentMoney, 1.0);}\r\n      } else if (result == 3 || result == 4) {\r\n        //no hu\r\n        if (this.isSound) {\r\n          var audioIdJackpot = cc.audioEngine.play(this.soundJackpot, false, 1);\r\n        }\r\n\r\n        this.jackpotNode.active = true;\r\n        let jackpotSpine = this.jackpotNode.getComponentInChildren(sp.Skeleton);\r\n        jackpotSpine.animation = \"animation6\";\r\n        jackpotSpine.loop = true;\r\n\r\n        cc.Tween.stopAllByTarget(this.nodeWinJackpot);\r\n        this.txtWinJackpot.string = \"0\";\r\n        Tween.numberTo(this.txtWinJackpot, prize, 3.0);\r\n        // this.nodeWinJackpot.position = cc.v3(0, -360, 0);\r\n        this.nodeWinJackpot.active = true;\r\n        cc.tween(this.nodeWinJackpot)\r\n          .to(1, { position: cc.v3(0, 0, 0) })\r\n          .delay(3)\r\n          .to(1, { position: cc.v3(0, 0, 0) })\r\n          .start();\r\n        this.node.runAction(\r\n          cc.sequence(\r\n            cc.delayTime(5),\r\n            cc.callFunc(() => {\r\n              this.jackpotNode.active = false;\r\n              if (this.toggleFast.isChecked) {\r\n                self.spinFinish(true);\r\n              } else {\r\n                if (self.dataResult.linesWin !== \"\")\r\n                  self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n                else self.spinFinish(false);\r\n              }\r\n              if (this.isSound) {\r\n                cc.audioEngine.stop(audioIdJackpot);\r\n              }\r\n            })\r\n          )\r\n        );\r\n        this.showCoins(prize);\r\n        Tween.numberTo(this.totalWinLabel, prize, 1.0);\r\n        if (!this.isTrial) { Tween.numberTo(this.moneyLabel, currentMoney, 1.0); Tween.numberTo(this.mSlotLobby.moneyLabel, currentMoney, 1.0);}\r\n      } else {\r\n        if (this.isSound) {\r\n          cc.audioEngine.play(this.soundSpinWin, false, 1);\r\n        }\r\n        this.showCoins(prize);\r\n        Tween.numberTo(this.totalWinLabel, prize, 1.0);\r\n\r\n        if (!this.isTrial) { Tween.numberTo(this.moneyLabel, currentMoney, 1.0); Tween.numberTo(this.mSlotLobby.moneyLabel, currentMoney, 1.0);}\r\n        if (this.toggleFast.isChecked) {\r\n          if (self.dataResult.linesWin !== \"\")\r\n            self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n          else self.spinFinish(false);\r\n        } else {\r\n          if (self.dataResult.linesWin !== \"\")\r\n            self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n          else self.spinFinish(false);\r\n        }\r\n      }\r\n    } else {\r\n      // App.instance.showCoins(10,this.totalWinLabel.node,this.nodeCoin);\r\n      Tween.numberTo(this.totalWinLabel, prize, 1.0);\r\n      if (!this.isTrial) {Tween.numberTo(this.moneyLabel, currentMoney, 1.0); Tween.numberTo(this.mSlotLobby.moneyLabel, currentMoney, 1.0);}\r\n      if (this.toggleFast.isChecked) {\r\n        if (self.dataResult.linesWin !== \"\")\r\n          self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n        else self.spinFinish(false);\r\n      } else {\r\n        if (self.dataResult.linesWin !== \"\")\r\n          self.showLineWin(self.dataResult.linesWin.split(\",\"));\r\n        else self.spinFinish(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  public beginSpinReel(indexReel) {\r\n    var self = this;\r\n    self.isFastCurrent = self.toggleFast.isChecked;\r\n    self.numberSpinReel[indexReel] = 0;\r\n    cc.Tween.stopAllByTarget(self.arrReel[indexReel]);\r\n    let timeDelay = this.toggleFast.isChecked ? 0.1 : 0.2;\r\n    cc.tween(self.arrReel[indexReel])\r\n      .delay(indexReel * timeDelay)\r\n      .to(\r\n        0.1,\r\n        { position: cc.v3(self.arrReel[indexReel].position.x, 70, 0) },\r\n        { easing: \"linear\" }\r\n      )\r\n      .call(() => {\r\n        self.loopSpinReel(indexReel);\r\n      })\r\n      .start();\r\n  }\r\n\r\n  loopSpinReel(indexReel) {\r\n    var self = this;\r\n    cc.tween(self.arrReel[indexReel])\r\n      .to(\r\n        0.06,\r\n        {\r\n          position: cc.v3(\r\n            self.arrReel[indexReel].position.x,\r\n            -self.distanceReel,\r\n            0\r\n          ),\r\n        },\r\n        { easing: \"linear\" }\r\n      )\r\n      .call(() => {\r\n        self.processLoopSpinReel(indexReel);\r\n      })\r\n      .start();\r\n  }\r\n\r\n  processLoopSpinReel(indexReel) {\r\n    var self = this;\r\n    self.numberSpinReel[indexReel] += 1;\r\n    for (var i = 4; i >= 0; i--) {\r\n      var index = indexReel + i * 5;\r\n\r\n      var indexRow = Math.floor(index / 5);\r\n      var itemIdTmp = 0;\r\n      if (indexRow == 0) {\r\n        itemIdTmp = Math.floor(Math.random() * 6);\r\n      } else {\r\n        itemIdTmp = self.arrUIItemIcon[index - 5].itemId;\r\n      }\r\n      self.arrUIItemIcon[index].changeSpriteBlurByItemId(itemIdTmp);\r\n      // if (self.arrUIItemIcon[index].spriteIcon.node.active == false) {\r\n      //     self.arrUIItemIcon[index].spriteIcon.node.active = true;\r\n      //     self.arrUIItemIcon[index].spineIcon.node.active = false;\r\n      // }\r\n    }\r\n    self.arrReel[indexReel].position = cc.v3(\r\n      self.arrReel[indexReel].position.x,\r\n      0,\r\n      0\r\n    );\r\n    if (self.isHaveResultSpin) {\r\n      if (self.isFastCurrent == false) {\r\n        if (self.numberSpinReel[indexReel] >= MAX_CYCCLE_SPIN) {\r\n          self.endSpinReel(indexReel);\r\n        } else {\r\n          self.loopSpinReel(indexReel);\r\n        }\r\n      } else {\r\n        if (self.numberSpinReel[indexReel] >= FAST_CYCCLE_SPIN) {\r\n          self.endSpinReel(indexReel);\r\n        } else {\r\n          self.loopSpinReel(indexReel);\r\n        }\r\n      }\r\n    } else {\r\n      if (self.numberSpinReel[indexReel] >= ERROR_CYCCLE_SPIN) {\r\n        self.endSpinReel(indexReel);\r\n      } else {\r\n        self.loopSpinReel(indexReel);\r\n      }\r\n    }\r\n  }\r\n\r\n  endSpinReel(indexReel) {\r\n    var self = this;\r\n    if (self.dataResult == null) {\r\n      for (var i = 3; i >= 1; i--) {\r\n        var index = indexReel + i * 5;\r\n        var itemId = Math.floor(Math.random() * 7);\r\n        self.arrUIItemIcon[index].changeSpineIcon(itemId);\r\n        self.arrUIItemIcon[index].spineIcon.loop = true;\r\n      }\r\n      return;\r\n    }\r\n    var matrix = self.dataResult.matrix.split(\",\");\r\n    var roll = this.arrReel[indexReel];\r\n    self.arrReel[indexReel].position = cc.v3(\r\n      self.arrReel[indexReel].position.x,\r\n      self.distanceReel,\r\n      0\r\n    );\r\n    let arrReal = [];\r\n    for (var i = 3; i >= 1; i--) {\r\n      var index = indexReel + i * 5;\r\n      var id = matrix[index - 5];\r\n      self.arrUIItemIcon[index].changeSpineIcon(id);\r\n      self.arrUIItemIcon[index].spineIcon.loop = true;\r\n      arrReal.unshift(self.arrUIItemIcon[index]);\r\n    }\r\n    let timeStop = this.toggleFast.isChecked ? 0.2 : 0.3;\r\n    cc.tween(self.arrReel[indexReel])\r\n      .to(\r\n        timeStop,\r\n        { position: cc.v3(self.arrReel[indexReel].position.x, 0, 0) },\r\n        { easing: cc.easing.backOut }\r\n      )\r\n      .call(() => {\r\n        if (self.isSound) {\r\n          cc.audioEngine.play(self.soundEndSpin, false, 1);\r\n        }\r\n        if (indexReel == 4) {\r\n          cc.audioEngine.stop(this.audioIdRepeatSpin);\r\n          for (var i = 0; i < 5; i++) {\r\n            var itemId = Math.floor(Math.random() * 7);\r\n            self.arrUIItemIcon[i].changeSpineIcon(itemId);\r\n            self.arrUIItemIcon[i].spineIcon.loop = true;\r\n          }\r\n          for (var i = 20; i < 25; i++) {\r\n            var itemId = Math.floor(Math.random() * 7);\r\n            self.arrUIItemIcon[i].changeSpineIcon(itemId);\r\n\r\n            self.arrUIItemIcon[i].spineIcon.loop = true;\r\n          }\r\n          Configs.Login.Coin = self.dataResult.currentMoney;\r\n          self.showWinEffect(\r\n            self.dataResult.prize,\r\n            self.dataResult.currentMoney,\r\n            self.dataResult.result\r\n          );\r\n        }\r\n      })\r\n      .start();\r\n  }\r\n\r\n  onBtnSoundTouchBonus(isWin) {\r\n    if (this.isSound) {\r\n      if (isWin) {\r\n        cc.audioEngine.play(this.soundtouchBonus, false, 1);\r\n      } else {\r\n        cc.audioEngine.play(this.soundtouchBonusLose, false, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  onBtnSoundSumary() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundSmumary, false, 1);\r\n    }\r\n  }\r\n  getSpriteFrameIcon(indexIcon) {\r\n    var self = this;\r\n    return null;\r\n  }\r\n\r\n  hideWinEffect() {\r\n    this.bigWinNode.active = false;\r\n    this.jackpotNode.active = false;\r\n  }\r\n\r\n  onBtnToggleMusic() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    this.isMusic = !this.isMusic;\r\n    cc.audioEngine.setMusicVolume(this.isMusic ? 0.5 : 0);\r\n  }\r\n\r\n  onBtnToggleSound() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    this.isSound = !this.isSound;\r\n  }\r\n\r\n  onBtnHistory() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    this.onBtnHideSetting();\r\n  }\r\n\r\n  onBtnHistoryJackpot() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    this.onBtnHideSetting();\r\n  }\r\n\r\n  onBtnHideSetting() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    Tween.hidePopup(this.nodeBoxSetting, this.nodeBoxSetting.parent, false);\r\n  }\r\n\r\n  onBtnSoundClick() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n  }\r\n\r\n  onBtnSetting() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    if (this.nodeBoxSetting.active == false) {\r\n      cc.log(\"clmmm\");\r\n      this.nodeBoxSetting.active = true;\r\n    } else {\r\n      this.nodeBoxSetting.active = false;\r\n    }\r\n  }\r\n  showLineWin(lines: Array<number>) {\r\n    if (lines.length == 0) return;\r\n    for (let i = 0; i < lines.length; i++) {\r\n      let line = lines[i];\r\n      let lineNode = this.lineWinParent.children[line - 1];\r\n      lineNode.active = true;\r\n    }\r\n\r\n    let that = this;\r\n    //hide all line\r\n    let acHideAllLine = cc.sequence(\r\n      cc.delayTime(1),\r\n      cc.callFunc(() => {\r\n        this.lineWinParent.zIndex = 0;\r\n        this.collumParent.zIndex = 1;\r\n        that.hideLineWin(false);\r\n      })\r\n    );\r\n    let acShowOneByOne = cc.callFunc(() => {\r\n      //active line one by one\r\n      for (let i = 0; i < lines.length; i++) {\r\n        let line = lines[i];\r\n        let lineNode = this.lineWinParent.children[line - 1];\r\n        TW(lineNode)\r\n          .delay(i * this.TIME_DELAY_SHOW_LINE)\r\n          .call(() => {\r\n            lineNode.active = true;\r\n            let arrItem = this.getItemWinInLine(line - 1);\r\n            let arrIdOfItem = [];\r\n            let idWin = -1;\r\n            arrItem.forEach((item) => {\r\n              arrIdOfItem.push(item.itemId);\r\n            });\r\n            arrItem.forEach((item) => {\r\n              idWin = this.getItemIdWinInLine(arrIdOfItem);\r\n              if (\r\n                item.itemId == idWin ||\r\n                (item.itemId == 1 && idWin != 0 && idWin != 2)\r\n              ) {\r\n                item.checkShowSpriteOrSpine();\r\n              }\r\n            });\r\n          })\r\n          .delay(this.TIME_DELAY_SHOW_LINE)\r\n          .call(() => {\r\n            // this.changeAllItemToDark(true);\r\n            lineNode.active = false;\r\n            if (i == lines.length - 1) that.spinFinish(false);\r\n          })\r\n          .start();\r\n      }\r\n    });\r\n    if (this.toggleFast.isChecked) {\r\n      let timeDelay = this.toggleFast.isChecked ? 0 : 1.0;\r\n      this.lineWinParent.runAction(\r\n        cc.sequence(\r\n          acHideAllLine,\r\n          cc.delayTime(timeDelay),\r\n          cc.callFunc(() => {\r\n            this.spinFinish(false);\r\n          })\r\n        )\r\n      );\r\n    } else {\r\n      let duration = acHideAllLine.getDuration();\r\n      this.lineWinParent.runAction(\r\n        cc.sequence(acHideAllLine, cc.delayTime(duration), acShowOneByOne)\r\n      );\r\n    }\r\n  }\r\n\r\n  hideLineWin(stopAction: boolean) {\r\n    if (stopAction) this.lineWinParent.stopAllActions();\r\n    this.lineWinParent.children.forEach((element) => {\r\n      element.active = false;\r\n    });\r\n  }\r\n\r\n  setButtonEnable(active: boolean) {\r\n    this.btnSpin.interactable = active;\r\n    this.btnBack.interactable = active;\r\n    this.btnLine.interactable = active;\r\n    this.btnPlayTry.interactable = active;\r\n    this.btnPlayReal.interactable = active;\r\n    if (active == true) {\r\n      // this.spriteSpin.spriteFrame = this.sfSpinStart;\r\n      this.spriteSpin.node.active = false;\r\n      this.animSpin.active = true;\r\n    } else {\r\n      this.spriteSpin.spriteFrame = this.sfSpinStop;\r\n      this.spriteSpin.node.active = true;\r\n      this.animSpin.active = false;\r\n    }\r\n  }\r\n  setButtonFlash(active: boolean) {\r\n    this.toggleFast.interactable = active;\r\n    this.toggleFast.node.children[0].color = active\r\n      ? cc.Color.WHITE\r\n      : cc.Color.GRAY;\r\n  }\r\n\r\n  //#region CHANGE BET\r\n  changeBet() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n\r\n    this.mSlotLobby.node.active = !this.mSlotLobby.node.active;\r\n  }\r\n\r\n  chooseBet(event, bet) {\r\n    let oldIdx = this.betId;\r\n    this.betId = parseInt(bet);\r\n    this.dailyFreeSpin = 0;\r\n    this.lblFreeSpinCount.node.parent.active = false;\r\n    this.isTrial = bet == -1 ? true : false;\r\n    this.betId = bet == -1 ? 2 : bet;\r\n    if (this.betId >= this.listBet.length) {\r\n      this.betId = 0;\r\n      SlotNetworkClient.getInstance().send(\r\n        new cmd.SendChangeRoom(oldIdx, this.betId)\r\n      );\r\n    } else {\r\n      SlotNetworkClient.getInstance().send(\r\n        new cmd.SendChangeRoom(oldIdx, this.betId)\r\n      );\r\n      this.onJoinRoom();\r\n    }\r\n  }\r\n  changeSpeed() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    this.isFastCurrent = this.toggleFast.isChecked;\r\n    if (this.toggleFast.isChecked && !this.isSpining) {\r\n      this.spinClick();\r\n    }\r\n  }\r\n\r\n  setAutoSpin() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    this.autoSpin = !this.autoSpin;\r\n    if (!this.isSpining) {\r\n      this.spinClick();\r\n    }\r\n  }\r\n\r\n  actBack() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    SlotNetworkClient.getInstance().send(new cmd.SendUnSubcribe(this.betId));\r\n\r\n    this.mSlotLobby.show();\r\n    this.hideGamePlay();\r\n  }\r\n  actHistoryJackpot() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    if (this.isTrial) {\r\n      App.instance.showToast(App.instance.getTextLang(\"txt_slot_error\"));\r\n      return;\r\n    }\r\n    if (this.popupJackpotHistory == null) {\r\n      BundleControl.loadPrefabGame(\r\n        \"Slot1\",\r\n        \"duaxe/prefabs/PopupJackpotHistory\",\r\n        (finish, total) => {\r\n          // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n        },\r\n        (prefab) => {\r\n          App.instance.showLoading(false);\r\n          this.popupJackpotHistory = cc\r\n            .instantiate(prefab)\r\n            .getComponent(\"Slot1.PopupJackpotHistory\");\r\n          this.popupJackpotHistory.node.parent = cc.director\r\n            .getScene()\r\n            .getChildByName(\"Canvas\");\r\n          this.popupJackpotHistory.show();\r\n        }\r\n      );\r\n    } else {\r\n      this.popupJackpotHistory.show();\r\n    }\r\n  }\r\n  actHistory() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    if (this.isTrial) {\r\n      App.instance.showToast(App.instance.getTextLang(\"txt_slot_error\"));\r\n      return;\r\n    }\r\n    if (this.popupHistory == null) {\r\n      BundleControl.loadPrefabGame(\r\n        \"Slot1\",\r\n        \"duaxe/prefabs/PopupHistory\",\r\n        (finish, total) => {\r\n          // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n        },\r\n        (prefab) => {\r\n          App.instance.showLoading(false);\r\n          this.popupHistory = cc\r\n            .instantiate(prefab)\r\n            .getComponent(\"Slot1.PopupHistory\");\r\n          this.popupHistory.node.parent = cc.director\r\n            .getScene()\r\n            .getChildByName(\"Canvas\");\r\n          this.popupHistory.show();\r\n        }\r\n      );\r\n    } else {\r\n      this.popupHistory.show();\r\n    }\r\n  }\r\n  actGuide() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    if (this.popupGuide == null) {\r\n      BundleControl.loadPrefabGame(\r\n        \"Slot1\",\r\n        \"duaxe/prefabs/PopupGuide\",\r\n        (finish, total) => {\r\n          // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n        },\r\n        (prefab) => {\r\n          App.instance.showLoading(false);\r\n          this.popupGuide = cc\r\n            .instantiate(prefab)\r\n            .getComponent(\"Slot1.PopupGuide\");\r\n          this.popupGuide.node.parent = cc.director\r\n            .getScene()\r\n            .getChildByName(\"Canvas\");\r\n          this.popupGuide.show();\r\n        }\r\n      );\r\n    } else {\r\n      this.popupGuide.show();\r\n    }\r\n  }\r\n  actSelectLine() {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    if (this.isTrial) {\r\n      App.instance.showToast(App.instance.getTextLang(\"txt_slot_error\"));\r\n      return;\r\n    }\r\n    if (this.popupSelectLine == null) {\r\n      BundleControl.loadPrefabGame(\r\n        \"Slot1\",\r\n        \"duaxe/prefabs/PopupSelectLine\",\r\n        (finish, total) => {\r\n          // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n        },\r\n        (prefab) => {\r\n          App.instance.showLoading(false);\r\n          this.popupSelectLine = cc\r\n            .instantiate(prefab)\r\n            .getComponent(\"Slot1.PopupSelectLine\");\r\n          this.popupSelectLine.node.parent = cc.director\r\n            .getScene()\r\n            .getChildByName(\"Canvas\");\r\n          this.popupSelectLine.onSelectedChanged = (lines) => {\r\n            this.arrLineSelected = lines;\r\n            this.totalLineLabel.string = lines.length.toString();\r\n            this.totalBetLabel.string = Utils.formatNumberMin(\r\n              lines.length * this.listBet[this.betId]\r\n            );\r\n          };\r\n          this.popupSelectLine.show();\r\n        }\r\n      );\r\n    } else {\r\n      this.popupSelectLine.show();\r\n    }\r\n  }\r\n  // this.actShowBonus(this.isTrial ? 100 : this.listBet[this.betId], this.dataResult.haiSao, this, () => {\r\n  actShowBonus(isTrial, dataHaiSao, cb) {\r\n    if (this.isSound) {\r\n      cc.audioEngine.play(this.soundBonus, false, 1);\r\n    }\r\n    if (this.popupBonus == null) {\r\n      BundleControl.loadPrefabGame(\r\n        \"Slot1\",\r\n        \"duaxe/prefabs/PopupBonus\",\r\n        (finish, total) => {\r\n          // App.instance.showErrLoading(App.instance.getTextLang('txt_loading1') + parseInt((finish / total) * 100) + \"%\");\r\n        },\r\n        (prefab) => {\r\n          App.instance.showLoading(false);\r\n          this.popupBonus = cc\r\n            .instantiate(prefab)\r\n            .getComponent(\"Slot1.PopupBonus\");\r\n          this.popupBonus.node.parent = cc.director\r\n            .getScene()\r\n            .getChildByName(\"Canvas\");\r\n          this.popupBonus.showBonus(isTrial, dataHaiSao, this, cb);\r\n        }\r\n      );\r\n    } else {\r\n      this.popupBonus.showBonus(isTrial, dataHaiSao, this, cb);\r\n    }\r\n  }\r\n  changeAllItemToDark(state) {\r\n    this.arrUIItemIcon.forEach((item) => {\r\n      let sprite = item.getComponentInChildren(cc.Sprite);\r\n      let spine = item.getComponentInChildren(sp.Skeleton);\r\n\r\n      sprite.node.color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n      sprite.node.active = true;\r\n      spine.node.color = state ? cc.Color.GRAY : cc.Color.WHITE;\r\n      spine.node.active = false;\r\n      spine.node.scale = 0.65;\r\n      sprite.node.scale = 0.8;\r\n    });\r\n  }\r\n  getItemWinInLine(lineId) {\r\n    let lineArr = this.mapLine[lineId];\r\n    let arrItem = [];\r\n    for (let i = 0; i < lineArr.length; i++) {\r\n      arrItem.push(this.arrRealItem[lineArr[i]]);\r\n    }\r\n    return arrItem;\r\n  }\r\n  getItemIdWinInLine(arrId: Array<number>) {\r\n    let count = 0;\r\n    let idWin = -1;\r\n    arrId.forEach((id) => {\r\n      let size = arrId.filter((x) => x == id && x != 1).length;\r\n      if (size >= count) {\r\n        count = size;\r\n        idWin = id;\r\n      }\r\n    });\r\n    return idWin;\r\n  }\r\n}\r\n","export class TrialResults {\r\n    static results = [\r\n        {\"_pos\":93,\"_data\":{\"0\":1,\"1\":7,\"2\":209,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":110,\"10\":66,\"11\":136,\"12\":3,\"13\":0,\"14\":29,\"15\":52,\"16\":44,\"17\":54,\"18\":44,\"19\":51,\"20\":44,\"21\":51,\"22\":44,\"23\":54,\"24\":44,\"25\":49,\"26\":44,\"27\":52,\"28\":44,\"29\":54,\"30\":44,\"31\":49,\"32\":44,\"33\":52,\"34\":44,\"35\":48,\"36\":44,\"37\":48,\"38\":44,\"39\":48,\"40\":44,\"41\":48,\"42\":44,\"43\":48,\"44\":0,\"45\":29,\"46\":49,\"47\":44,\"48\":51,\"49\":44,\"50\":52,\"51\":44,\"52\":53,\"53\":44,\"54\":55,\"55\":44,\"56\":57,\"57\":44,\"58\":49,\"59\":49,\"60\":44,\"61\":49,\"62\":50,\"63\":44,\"64\":49,\"65\":53,\"66\":44,\"67\":49,\"68\":54,\"69\":44,\"70\":49,\"71\":55,\"72\":44,\"73\":49,\"74\":56,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":14,\"83\":227,\"84\":205,\"85\":0,\"86\":0,\"87\":0,\"88\":0,\"89\":0,\"90\":174,\"91\":242,\"92\":86},\"_length\":93,\"_controllerId\":1,\"_cmdId\":2001,\"_error\":0,\"ref\":7225992,\"result\":3,\"matrix\":\"4,6,3,3,6,1,4,6,1,4,0,0,0,0,0\",\"linesWin\":\"1,3,4,5,7,9,11,12,15,16,17,18\",\"haiSao\":\"\",\"prize\":975821,\"currentMoney\":11465302},\r\n        {\"_pos\":104,\"_data\":{\"0\":1,\"1\":7,\"2\":209,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":17,\"11\":27,\"12\":2,\"13\":0,\"14\":29,\"15\":53,\"16\":44,\"17\":53,\"18\":44,\"19\":52,\"20\":44,\"21\":51,\"22\":44,\"23\":48,\"24\":44,\"25\":52,\"26\":44,\"27\":51,\"28\":44,\"29\":52,\"30\":44,\"31\":53,\"32\":44,\"33\":49,\"34\":44,\"35\":52,\"36\":44,\"37\":52,\"38\":44,\"39\":52,\"40\":44,\"41\":52,\"42\":44,\"43\":52,\"44\":0,\"45\":40,\"46\":49,\"47\":44,\"48\":51,\"49\":44,\"50\":52,\"51\":44,\"52\":53,\"53\":44,\"54\":55,\"55\":44,\"56\":56,\"57\":44,\"58\":57,\"59\":44,\"60\":49,\"61\":48,\"62\":44,\"63\":49,\"64\":49,\"65\":44,\"66\":49,\"67\":51,\"68\":44,\"69\":49,\"70\":52,\"71\":44,\"72\":49,\"73\":53,\"74\":44,\"75\":49,\"76\":55,\"77\":44,\"78\":49,\"79\":56,\"80\":44,\"81\":49,\"82\":57,\"83\":44,\"84\":50,\"85\":48,\"86\":0,\"87\":0,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":0,\"93\":0,\"94\":79,\"95\":76,\"96\":0,\"97\":0,\"98\":0,\"99\":0,\"100\":2,\"101\":35,\"102\":148,\"103\":132},\"_length\":104,\"_controllerId\":1,\"_cmdId\":2001,\"_error\":0,\"ref\":4379,\"result\":2,\"matrix\":\"5,5,4,3,0,4,3,4,5,1,4,4,4,4,4\",\"linesWin\":\"1,3,4,5,7,8,9,10,11,13,14,15,17,18,19,20\",\"haiSao\":\"\",\"prize\":20300,\"currentMoney\":35886212},\r\n        {\"_pos\":99,\"_data\":{\"0\":1,\"1\":7,\"2\":209,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":10,\"11\":173,\"12\":5,\"13\":0,\"14\":29,\"15\":50,\"16\":44,\"17\":50,\"18\":44,\"19\":54,\"20\":44,\"21\":53,\"22\":44,\"23\":53,\"24\":44,\"25\":54,\"26\":44,\"27\":52,\"28\":44,\"29\":50,\"30\":44,\"31\":53,\"32\":44,\"33\":51,\"34\":44,\"35\":53,\"36\":44,\"37\":51,\"38\":44,\"39\":53,\"40\":44,\"41\":49,\"42\":44,\"43\":53,\"44\":0,\"45\":14,\"46\":51,\"47\":44,\"48\":54,\"49\":44,\"50\":57,\"51\":44,\"52\":49,\"53\":52,\"54\":44,\"55\":49,\"56\":55,\"57\":44,\"58\":50,\"59\":48,\"60\":0,\"61\":21,\"62\":52,\"63\":44,\"64\":49,\"65\":44,\"66\":49,\"67\":44,\"68\":49,\"69\":44,\"70\":50,\"71\":44,\"72\":49,\"73\":44,\"74\":49,\"75\":44,\"76\":49,\"77\":44,\"78\":52,\"79\":44,\"80\":49,\"81\":44,\"82\":49,\"83\":0,\"84\":0,\"85\":0,\"86\":0,\"87\":0,\"88\":40,\"89\":150,\"90\":160,\"91\":0,\"92\":0,\"93\":0,\"94\":0,\"95\":1,\"96\":126,\"97\":50,\"98\":160},\"_length\":99,\"_controllerId\":1,\"_cmdId\":2001,\"_error\":0,\"ref\":2733,\"result\":5,\"matrix\":\"2,2,6,5,5,6,4,2,5,3,5,3,5,1,5\",\"linesWin\":\"3,6,9,14,17,20\",\"haiSao\":\"4,1,0,1,2,1,0,1,4,1,1\",\"prize\":2660000,\"currentMoney\":25047712},\r\n        {\"_pos\":80,\"_data\":{\"0\":1,\"1\":7,\"2\":209,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":110,\"10\":66,\"11\":138,\"12\":3,\"13\":0,\"14\":29,\"15\":48,\"16\":44,\"17\":54,\"18\":44,\"19\":54,\"20\":44,\"21\":52,\"22\":44,\"23\":51,\"24\":44,\"25\":54,\"26\":44,\"27\":53,\"28\":44,\"29\":53,\"30\":44,\"31\":52,\"32\":44,\"33\":54,\"34\":44,\"35\":48,\"36\":44,\"37\":48,\"38\":44,\"39\":48,\"40\":44,\"41\":48,\"42\":44,\"43\":48,\"44\":0,\"45\":16,\"46\":51,\"47\":44,\"48\":55,\"49\":44,\"50\":56,\"51\":44,\"52\":57,\"53\":44,\"54\":49,\"55\":55,\"56\":44,\"57\":49,\"58\":56,\"59\":44,\"60\":50,\"61\":48,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":7,\"70\":186,\"71\":98,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":190,\"78\":108,\"79\":12},\"_length\":80,\"_controllerId\":1,\"_cmdId\":2001,\"_error\":0,\"ref\":7225994,\"result\":3,\"matrix\":\"0,6,6,4,3,6,5,5,4,6,0,0,0,0,0\",\"linesWin\":\"3,7,8,9,17,18,20\",\"haiSao\":\"\",\"prize\":506466,\"currentMoney\":12479500},\r\n        {\"_pos\":84,\"_data\":{\"0\":1,\"1\":7,\"2\":209,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":17,\"11\":19,\"12\":1,\"13\":0,\"14\":29,\"15\":53,\"16\":44,\"17\":54,\"18\":44,\"19\":53,\"20\":44,\"21\":49,\"22\":44,\"23\":53,\"24\":44,\"25\":48,\"26\":44,\"27\":52,\"28\":44,\"29\":49,\"30\":44,\"31\":53,\"32\":44,\"33\":54,\"34\":44,\"35\":51,\"36\":44,\"37\":53,\"38\":44,\"39\":54,\"40\":44,\"41\":54,\"42\":44,\"43\":53,\"44\":0,\"45\":20,\"46\":50,\"47\":44,\"48\":54,\"49\":44,\"50\":56,\"51\":44,\"52\":49,\"53\":48,\"54\":44,\"55\":49,\"56\":51,\"57\":44,\"58\":49,\"59\":52,\"60\":44,\"61\":49,\"62\":54,\"63\":44,\"64\":49,\"65\":57,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":12,\"75\":28,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":2,\"81\":35,\"82\":106,\"83\":184},\"_length\":84,\"_controllerId\":1,\"_cmdId\":2001,\"_error\":0,\"ref\":4371,\"result\":1,\"matrix\":\"5,6,5,1,5,0,4,1,5,6,3,5,6,6,5\",\"linesWin\":\"2,6,8,10,13,14,16,19\",\"haiSao\":\"\",\"prize\":3100,\"currentMoney\":35875512},\r\n        {\"_pos\":76,\"_data\":{\"0\":1,\"1\":7,\"2\":209,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":17,\"11\":24,\"12\":1,\"13\":0,\"14\":29,\"15\":51,\"16\":44,\"17\":54,\"18\":44,\"19\":48,\"20\":44,\"21\":54,\"22\":44,\"23\":54,\"24\":44,\"25\":49,\"26\":44,\"27\":53,\"28\":44,\"29\":53,\"30\":44,\"31\":51,\"32\":44,\"33\":50,\"34\":44,\"35\":53,\"36\":44,\"37\":53,\"38\":44,\"39\":51,\"40\":44,\"41\":51,\"42\":44,\"43\":51,\"44\":0,\"45\":12,\"46\":51,\"47\":44,\"48\":53,\"49\":44,\"50\":49,\"51\":50,\"52\":44,\"53\":49,\"54\":55,\"55\":44,\"56\":50,\"57\":48,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":3,\"67\":232,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":2,\"73\":35,\"74\":80,\"75\":240},\"_length\":76,\"_controllerId\":1,\"_cmdId\":2001,\"_error\":0,\"ref\":4376,\"result\":1,\"matrix\":\"3,6,0,6,6,1,5,5,3,2,5,5,3,3,3\",\"linesWin\":\"3,5,12,17,20\",\"haiSao\":\"\",\"prize\":1000,\"currentMoney\":35868912}\r\n    ]\r\n}\r\nexport default TrialResults; "],"file":"index.js"}