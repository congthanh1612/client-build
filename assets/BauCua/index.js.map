{"version":3,"sources":["assets/BauCua/BauCuaScript/BauCua.BauCuaController.ts","assets/BauCua/BauCuaScript/BauCua.ButtonPayBet.ts","assets/BauCua/BauCuaScript/BauCua.Cmd.ts","assets/BauCua/BauCuaScript/BauCua.PopupHistory.ts","assets/BauCua/BauCuaScript/BauCua.PopupHonors.ts"],"names":["Configs_1","require","MiniGame_1","App_1","BroadcastReceiver_1","ScrollViewControl_1","Utils_1","MiniGameNetworkClient_1","Network_InPacket_1","BauCua_ButtonPayBet_1","BauCua_Cmd_1","TW","cc","tween","_a","_decorator","ccclass","property","ButtonBet","this","button","sfNormal","sfActive","border_chip","_isActive","prototype","setActive","isActive","interactable","node","x","__decorate","Button","SpriteFrame","sp","Skeleton","exports","BauCuaController","_super","_this","apply","arguments","sprSmallDices","scrollChip","sprResultDices","lblSession","lblTime","lblToast","lblWinCoin","buttonBets","btnPayBets","nodeSoiCau","nodeHistories","itemHistoryTemplate","btnConfirm","btnCancel","btnReBet","lblsSoiCau","popups","popupContainer","scrHistory","bowl","listBet","roomId","betIdx","isBetting","historiesData","beted","betting","inited","sprResultDice","percentScroll","popupHonor","popupHistory","popupGuide","baucuaBundle","__extends","BauCuaController_1","onLoad","call","getChildByName","start","timeBet","Date","now","instance","scrollToPercentHorizontal","active","_loop_1","i","this_1","on","default","showBgMiniGame","j","length","_loop_2","this_2","actConfirm","register","USER_LOGOUT","dismiss","getInstance","addOnClose","addListener","data","getCmdId","Code","INFO","res","ReceiveInfo","bettingState","string","referenceId","longToTime","remainTime","totalBets","potData","split","betData","btnPayBet","lblTotal","moneyToK","parseInt","lblBeted","overlay","lblFactor","dice1","dice2","dice3","xValue","xPot","lichSuPhien","histories","push","loadHistory","caculatorSoiCau","START_NEW_GAME","ReceiveNewGame","actStartNewGame","color","Color","WHITE","UPDATE","ReceiveUpdate","RESULT","ReceiveResult","atcShowResult","PRIZE","ReceivePrize","Login","Coin","currentMoney","send","USER_UPDATE_COIN","stopAllActions","setPosition","opacity","formatNumber","prize","runAction","sequence","spawn","fadeIn","moveBy","v2","fadeOut","callFunc","BET","ReceiveBet","result","showToast","getTextLang","lastBeted","onBtnScrollLeft","onBtnScrollRight","spin","arrDice","then","blink","time","toString","s","money","formatMoney","addHistory","dices","historyData","listData","slice","reverse","setDataList","item","getComponent","Sprite","spriteFrame","counts","message","parent","delayTime","actSoiCau","actCancel","index","total","SendBet","actReBet","totalBeted","show","reOrder","ScrollView","scrollToTop","SendScribe","hideGameMini","SendUnScribe","_onShowed","children","bowlOn","Tween","stopAllByTarget","to","y","scale","easing","sineIn","set","initPos","getPosition","acShake","repeat","actPopupHonors","load","Prefab","err1","prefab","instantiate","actPopupHistory","actPopupGuide","Label","Node","ButtonPayBet","Component","cmd","Network_OutPacket_1","SCRIBE","UNSCRIBE","CHANGE_ROOM","initData","setControllerId","setCmdId","packHeader","putByte","updateSize","SendChangeRoom","oldBetIdx","newBetIdx","putString","getByte","getLong","room","getBool","getString","Http_1","Dialog_1","BauCua_BauCuaController_1","PopupHistory","scrList","page","maxPage","dataHistory","totalPageLoaded","scrollViewEventHandler","EventHandler","target","component","handler","scrollView","scrollEvents","setStateItem","loadData","actNextPage","actPrevPage","isReloadScr","showLoading","get","App","API","c","mt","MONEY_TYPE","p","un","Nickname","err","__spread","setItemData","bind","updateDataList","itemData","betValues","prizes","onScrollEvent","scrollview","eventType","EventType","SCROLL_TO_BOTTOM","PopupHonors","itemTemplate","items","Array","destroy","i_1"],"mappings":"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","sourcesContent":["import Configs from \"../../Loading/src/Configs\";\r\nimport MiniGame from \"../../Lobby/LobbyScript/MiniGame\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport BroadcastReceiver from \"../../Lobby/LobbyScript/Script/common/BroadcastReceiver\";\r\nimport ScrollViewControl from \"../../Lobby/LobbyScript/Script/common/ScrollViewControl\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\nimport MiniGameNetworkClient from \"../../Lobby/LobbyScript/Script/networks/MiniGameNetworkClient\";\r\nimport InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport ButtonPayBet from \"./BauCua.ButtonPayBet\";\r\nimport cmd from \"./BauCua.Cmd\";\r\nimport PopupHistory from \"./BauCua.PopupHistory\";\r\nimport PopupHonors from \"./BauCua.PopupHonors\";\r\n\r\nvar TW = cc.tween;\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass(\"BauCua.ButtonBet\")\r\nexport class ButtonBet {\r\n    @property(cc.Button)\r\n    button: cc.Button = null;\r\n    @property(cc.SpriteFrame)\r\n    sfNormal: cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    sfActive: cc.SpriteFrame = null;\r\n\r\n    @property(sp.Skeleton)\r\n    border_chip: sp.Skeleton = null;\r\n    _isActive = false;\r\n\r\n    setActive(isActive: boolean) {\r\n        this._isActive = isActive;\r\n        // this.button.getComponent(cc.Sprite).spriteFrame = isActive ? this.sfActive : this.sfNormal;\r\n        this.button.interactable = !isActive;\r\n\r\n        // this.button.getComponentInChildren(cc.Sprite).node.active = isActive;\r\n        if (isActive)\r\n            this.border_chip.node.x = this.button.node.x;\r\n    }\r\n}\r\n\r\n@ccclass\r\nexport default class BauCuaController extends MiniGame {\r\n\r\n    static instance: BauCuaController = null;\r\n    static lastBeted = null;\r\n\r\n    @property([cc.SpriteFrame])\r\n    public sprSmallDices: cc.SpriteFrame[] = [];\r\n    @property([cc.ScrollView])\r\n    public scrollChip: cc.ScrollView[] = [];\r\n    @property([cc.SpriteFrame])\r\n    public sprResultDices: cc.SpriteFrame[] = [];\r\n    @property(cc.Label)\r\n    public lblSession: cc.Label = null;\r\n    @property(cc.Label)\r\n    public lblTime: cc.Label = null;\r\n    @property(cc.Label)\r\n    public lblToast: cc.Label = null;\r\n    @property(cc.Label)\r\n    public lblWinCoin: cc.Label = null;\r\n    @property([ButtonBet])\r\n    public buttonBets: ButtonBet[] = [];\r\n    @property([ButtonPayBet])\r\n    public btnPayBets: ButtonPayBet[] = [];\r\n    @property(cc.Node)\r\n    public nodeSoiCau: cc.Node = null;\r\n    @property(cc.Node)\r\n    public nodeHistories: cc.Node = null;\r\n    @property(cc.Node)\r\n    public itemHistoryTemplate: cc.Node = null;\r\n    @property(cc.Button)\r\n    public btnConfirm: cc.Button = null;\r\n    @property(cc.Button)\r\n    public btnCancel: cc.Button = null;\r\n    @property(cc.Button)\r\n    public btnReBet: cc.Button = null;\r\n    @property([cc.Label])\r\n    public lblsSoiCau: cc.Label[] = [];\r\n    @property([cc.Node])\r\n    public popups: cc.Node[] = [];\r\n    @property(cc.Node)\r\n    public popupContainer: cc.Node = null;\r\n\r\n    @property(ScrollViewControl)\r\n    public scrHistory: ScrollViewControl = null;\r\n\r\n    @property(cc.Node)\r\n    public bowl: cc.Node = null;\r\n\r\n\r\n    private readonly listBet = [1000, 5000, 10000, 50000, 100000, 500000, 1000000, 5000000, 10000000];\r\n    private roomId = 0;\r\n    private betIdx = 0;\r\n    private isBetting = false;\r\n    private historiesData = [];\r\n    private beted = [0, 0, 0, 0, 0, 0];\r\n    private betting = [0, 0, 0, 0, 0, 0];\r\n    private inited = false;\r\n    private sprResultDice: cc.Node = null;\r\n    private percentScroll = 0;\r\n    private timeBet;\r\n    private popupHonor: PopupHonors = null;\r\n    private popupHistory: PopupHistory = null;\r\n    private popupGuide = null;\r\n    public baucuaBundle = null;\r\n    onLoad() {\r\n        super.onLoad();\r\n        this.sprResultDice = this.bowl.getChildByName(\"sprResult\");\r\n    }\r\n    start() {\r\n        this.timeBet = Date.now();\r\n        BauCuaController.instance = this;\r\n        this.percentScroll = 0;\r\n        this.scrollChip.scrollToPercentHorizontal(this.percentScroll, 0.1);\r\n        this.itemHistoryTemplate.active = false;\r\n\r\n        for (let i = 0; i < this.buttonBets.length; i++) {\r\n            var btn = this.buttonBets[i];\r\n            // btn.setActive(i == this.betIdx);\r\n            btn.button.node.on(\"click\", () => {\r\n                this.betIdx = i;\r\n                App.instance.showBgMiniGame(\"BauCua\");\r\n                for (let j = 0; j < this.buttonBets.length; j++) {\r\n                    //  cc.log(\"this:\" + this.betIdx + \":\" + j);\r\n                    this.buttonBets[j].setActive(j == this.betIdx);\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < this.btnPayBets.length; i++) {\r\n            this.btnPayBets[i].node.on(\"click\", () => {\r\n                App.instance.showBgMiniGame(\"BauCua\");\r\n                this.actConfirm(i);\r\n            });\r\n        }\r\n\r\n        BroadcastReceiver.register(BroadcastReceiver.USER_LOGOUT, () => {\r\n            if (!this.node.active) return;\r\n            this.dismiss();\r\n        }, this);\r\n\r\n        MiniGameNetworkClient.getInstance().addOnClose(() => {\r\n            if (!this.node.active) return;\r\n            this.dismiss();\r\n        }, this);\r\n\r\n        MiniGameNetworkClient.getInstance().addListener((data) => {\r\n            if (!this.node.active) return;\r\n            let inpacket = new InPacket(data);\r\n            switch (inpacket.getCmdId()) {\r\n                case cmd.Code.INFO: {\r\n                    this.inited = true;\r\n\r\n                    let res = new cmd.ReceiveInfo(data);\r\n                    this.isBetting = res.bettingState;\r\n                    this.lblSession.string = \"#\" + res.referenceId;\r\n                    this.lblTime.string = this.longToTime(res.remainTime);\r\n\r\n\r\n                    let totalBets = res.potData.split(\",\");\r\n                    let beted = res.betData.split(\",\");\r\n                    for (let i = 0; i < this.btnPayBets.length; i++) {\r\n                        let btnPayBet = this.btnPayBets[i];\r\n                        btnPayBet.lblTotal.string = this.moneyToK(parseInt(totalBets[i]));\r\n                        btnPayBet.lblBeted.string = this.moneyToK(parseInt(beted[i]));\r\n                        btnPayBet.overlay.active = true;\r\n                        btnPayBet.button.interactable = this.isBetting;\r\n                        btnPayBet.lblFactor.node.active = false;\r\n                        this.beted[i] = parseInt(beted[i]);\r\n                    }\r\n\r\n                    if (!this.isBetting) {\r\n                        this.btnPayBets[res.dice1].overlay.active = false;\r\n                        this.btnPayBets[res.dice2].overlay.active = false;\r\n                        this.btnPayBets[res.dice3].overlay.active = false;\r\n\r\n                        if (res.xValue > 1) {\r\n                            this.btnPayBets[res.xPot].lblFactor.node.active = true;\r\n                            this.btnPayBets[res.xPot].lblFactor.string = \"x\" + res.xValue;\r\n                        }\r\n                    }\r\n\r\n                    if (res.lichSuPhien != \"\") {\r\n                        let histories = res.lichSuPhien.split(\",\");\r\n                        for (let i = 0; i < histories.length; i++) {\r\n                            this.historiesData.push([parseInt(histories[i]), parseInt(histories[++i]), parseInt(histories[++i])])\r\n                            ++i;\r\n                            ++i;\r\n                        }\r\n                        this.loadHistory(this.historiesData);\r\n                        this.caculatorSoiCau();\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.START_NEW_GAME: {\r\n                    let res = new cmd.ReceiveNewGame(data);\r\n                    this.actStartNewGame();\r\n                    //  cc.log(\"BAU CUA START_NEW_GAME:\");\r\n                    this.lblSession.string = \"#\" + res.referenceId;\r\n                    for (let i = 0; i < this.btnPayBets.length; i++) {\r\n                        let btnPayBet = this.btnPayBets[i];\r\n                        btnPayBet.lblBeted.string = \"0\";\r\n                        btnPayBet.lblBeted.node.color = cc.Color.WHITE;\r\n                        btnPayBet.lblTotal.string = \"0\";\r\n                        btnPayBet.overlay.active = false;\r\n                        btnPayBet.button.interactable = true;\r\n                        btnPayBet.lblFactor.node.active = false;\r\n                    }\r\n                    this.beted = [0, 0, 0, 0, 0, 0];\r\n                    this.betting = [0, 0, 0, 0, 0, 0];\r\n                    this.btnConfirm.interactable = true;\r\n                    this.btnCancel.interactable = true;\r\n                    this.btnReBet.interactable = true;\r\n                    break;\r\n                }\r\n                case cmd.Code.UPDATE: {\r\n                    let res = new cmd.ReceiveUpdate(data);\r\n                    this.lblTime.string = this.longToTime(res.remainTime);\r\n\r\n                    this.isBetting = res.bettingState == 1;\r\n                    let totalBets = res.potData.split(\",\");\r\n                    for (let i = 0; i < this.btnPayBets.length; i++) {\r\n                        let btnPayBet = this.btnPayBets[i];\r\n                        btnPayBet.lblTotal.string = this.moneyToK(parseInt(totalBets[i]));\r\n                        if (this.isBetting) {\r\n                            btnPayBet.overlay.active = false;\r\n                            btnPayBet.lblFactor.node.active = false;\r\n                        } else {\r\n                            btnPayBet.button.interactable = false;\r\n                            btnPayBet.lblBeted.string = this.moneyToK(this.beted[i]);\r\n                            btnPayBet.lblBeted.node.color = cc.Color.WHITE;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case cmd.Code.RESULT: {\r\n                    let res = new cmd.ReceiveResult(data);\r\n                    //  cc.log(\"BAU CUA RESULT:\", res);\r\n                    this.atcShowResult(res);\r\n                    break;\r\n                }\r\n                case cmd.Code.PRIZE: {\r\n                    let res = new cmd.ReceivePrize(data);\r\n                    //  cc.log(\"BAU CUA PRIZE:\");\r\n                    //show win coin\r\n                    Configs.Login.Coin = res.currentMoney;\r\n                    BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                    this.lblWinCoin.node.stopAllActions();\r\n                    this.lblWinCoin.node.setPosition(-26, -16);\r\n                    this.lblWinCoin.node.opacity = 0;\r\n                    this.lblWinCoin.string = \"+\" + Utils.formatNumber(res.prize);\r\n                    this.lblWinCoin.node.active = true;\r\n                    this.lblWinCoin.node.runAction(cc.sequence(\r\n                        cc.spawn(cc.fadeIn(0.2), cc.moveBy(2, cc.v2(0, 100))),\r\n                        cc.fadeOut(0.15),\r\n                        cc.callFunc(() => {\r\n                            this.lblWinCoin.node.active = false;\r\n                        })\r\n                    ));\r\n                    break;\r\n                }\r\n                case cmd.Code.BET: {\r\n                    let res = new cmd.ReceiveBet(data);\r\n                    //  cc.log(\"============BAU CUA BET===============\" + res.result);\r\n                    switch (res.result) {\r\n                        case 100:\r\n                            this.showToast(App.instance.getTextLang('txt_bet_error2'));\r\n                            break;\r\n                        case 101:\r\n                            this.showToast(App.instance.getTextLang('txt_bet_error3'));\r\n                            break;\r\n                        case 102:\r\n                            this.showToast(App.instance.getTextLang('txt_not_enough'));\r\n                            break;\r\n                        case 103:\r\n                            this.showToast(\"Chỉ được cược tối đa 1000.000.\");\r\n                            this.btnConfirm.interactable = true;\r\n                            this.btnCancel.interactable = true;\r\n                            this.btnReBet.interactable = true;\r\n                            break;\r\n                    }\r\n                    if (res.result != 1) {\r\n                        break;\r\n                    }\r\n                    Configs.Login.Coin = res.currentMoney;\r\n                    BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n                    for (let i = 0; i < this.btnPayBets.length; i++) {\r\n                        this.beted[i] += this.betting[i];\r\n                        this.betting[i] = 0;\r\n\r\n                        let btnPayBet = this.btnPayBets[i];\r\n                        btnPayBet.lblBeted.string = this.moneyToK(this.beted[i]);\r\n                        btnPayBet.lblBeted.node.color = cc.Color.WHITE;\r\n                    }\r\n                    BauCuaController.lastBeted = this.beted;\r\n                    this.showToast(App.instance.getTextLang('txt_bet_success'));\r\n                    this.btnConfirm.interactable = true;\r\n                    this.btnCancel.interactable = true;\r\n                    this.btnReBet.interactable = true;\r\n                    break;\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    onBtnScrollLeft() {\r\n        this.percentScroll -= 0.3;\r\n        if (this.percentScroll <= 0) this.percentScroll = 0;\r\n\r\n        this.scrollChip.scrollToPercentHorizontal(this.percentScroll, 0.1);\r\n    }\r\n\r\n    onBtnScrollRight() {\r\n        this.percentScroll += 0.3;\r\n        if (this.percentScroll >= 1) this.percentScroll = 1;\r\n        this.scrollChip.scrollToPercentHorizontal(this.percentScroll, 0.1);\r\n    }\r\n\r\n    private spin(arrDice) {\r\n        for (let i = 0; i < this.btnPayBets.length; i++) {\r\n            let btnPayBet = this.btnPayBets[i];\r\n            btnPayBet.overlay.active = false;\r\n        }\r\n        for (let i = 0; i < arrDice.length; i++) {\r\n            let btnPayBet = this.btnPayBets[arrDice[i]];\r\n            btnPayBet.overlay.active = true;\r\n            TW(btnPayBet.overlay).then(cc.blink(2.0, 10)).start();\r\n        }\r\n\r\n    }\r\n\r\n    private longToTime(time: number): string {\r\n        let m = parseInt((time / 60).toString());\r\n        let s = time % 60;\r\n        // return (m < 10 ? \"0\" : \"\") + m + \":\" + (s < 10 ? \"0\" : \"\") + s;\r\n        return (s < 10 ? \"0\" : \"\") + s;\r\n    }\r\n\r\n    private moneyToK(money: number): string {\r\n        if (money < 100000) {\r\n            return Utils.formatNumber(money);\r\n        }\r\n        // money = parseInt((money / 1000).toString());\r\n        return Utils.formatMoney(money);\r\n    }\r\n\r\n    private addHistory(dices: Array<number>) {\r\n        // if (this.itemHistoryTemplate.parent.childrenCount > 50) {\r\n        //     this.itemHistoryTemplate.parent.children[1].removeFromParent();\r\n        //     this.historiesData.splice(0, 1);\r\n        // }\r\n        this.historiesData.push(dices);\r\n        // let item = cc.instantiate(this.itemHistoryTemplate);\r\n        // item.parent = this.itemHistoryTemplate.parent;\r\n        // item.active = true;\r\n        // item.getChildByName(\"dice1\").getComponent(cc.Sprite).spriteFrame = this.sprSmallDices[dices[0]];\r\n        // item.getChildByName(\"dice2\").getComponent(cc.Sprite).spriteFrame = this.sprSmallDices[dices[1]];\r\n        // item.getChildByName(\"dice3\").getComponent(cc.Sprite).spriteFrame = this.sprSmallDices[dices[2]];\r\n    }\r\n    private loadHistory(historyData) {\r\n        let listData = historyData.slice();\r\n        listData.reverse();\r\n        let updateCb = (item, dices) => {\r\n            item.active = true;\r\n            item.getChildByName(\"dice1\").getComponent(cc.Sprite).spriteFrame = this.sprSmallDices[dices[0]];\r\n            item.getChildByName(\"dice2\").getComponent(cc.Sprite).spriteFrame = this.sprSmallDices[dices[1]];\r\n            item.getChildByName(\"dice3\").getComponent(cc.Sprite).spriteFrame = this.sprSmallDices[dices[2]];\r\n        }\r\n        this.scrHistory.setDataList(updateCb, listData);\r\n    }\r\n    private caculatorSoiCau() {\r\n        let counts = [0, 0, 0, 0, 0, 0];\r\n        for (let i = 0; i < this.historiesData.length; i++) {\r\n            let dices = this.historiesData[i];\r\n            for (let j = 0; j < 3; j++) {\r\n                counts[dices[j]]++;\r\n            }\r\n        }\r\n        for (let i = 0; i < this.lblsSoiCau.length; i++) {\r\n            this.lblsSoiCau[i].string = counts[i].toString();\r\n        }\r\n    }\r\n\r\n    private showToast(message: string) {\r\n        this.lblToast.string = message;\r\n        let parent = this.lblToast.node.parent;\r\n        parent.stopAllActions();\r\n        parent.active = true;\r\n        parent.opacity = 0;\r\n        parent.runAction(cc.sequence(cc.fadeIn(0.1), cc.delayTime(2), cc.fadeOut(0.2), cc.callFunc(() => {\r\n            parent.active = false;\r\n        })));\r\n    }\r\n\r\n    actSoiCau() {\r\n        this.nodeHistories.active = !this.nodeHistories.active;\r\n        this.nodeSoiCau.active = !this.nodeHistories.active;\r\n    }\r\n\r\n    actCancel() {\r\n        if (!this.inited) return;\r\n        for (let i = 0; i < this.btnPayBets.length; i++) {\r\n            let btnPayBet = this.btnPayBets[i];\r\n            btnPayBet.lblBeted.node.color = cc.Color.WHITE;\r\n            btnPayBet.lblBeted.string = this.moneyToK(this.beted[i]);\r\n            this.betting[i] = 0;\r\n        }\r\n    }\r\n\r\n    actConfirm(index) {\r\n        if (!this.inited) return;\r\n        if (!this.isBetting) {\r\n            this.showToast(App.instance.getTextLang('txt_bet_error3'));\r\n            return;\r\n        }\r\n        if (Configs.Login.Coin < this.listBet[this.betIdx]) {\r\n            this.showToast(App.instance.getTextLang('txt_not_enough'));\r\n            return;\r\n        }\r\n        if (Date.now() - this.timeBet < 1000) {\r\n            this.showToast(App.instance.getTextLang('txt_notify_fast_action'));\r\n            return;\r\n        }\r\n\r\n        this.betting[index] += this.listBet[this.betIdx];\r\n        let total = 0;\r\n        for (let i = 0; i < this.betting.length; i++) {\r\n            total += this.betting[i];\r\n        }\r\n        if (total <= 0) {\r\n            this.showToast(App.instance.getTextLang('txt_bet_error4'));\r\n            return;\r\n        }\r\n        this.btnPayBets[index].lblBeted.string = this.moneyToK(this.betting[index] + this.beted[index]);\r\n\r\n        this.timeBet = Date.now();\r\n        MiniGameNetworkClient.getInstance().send(new cmd.SendBet(this.betting.toString()));\r\n        this.btnConfirm.interactable = false;\r\n        this.btnCancel.interactable = false;\r\n        this.btnReBet.interactable = false;\r\n    }\r\n\r\n\r\n\r\n    actReBet() {\r\n        if (!this.inited) return;\r\n        if (!this.isBetting) {\r\n            this.showToast(App.instance.getTextLang('txt_bet_error3'));\r\n            return;\r\n        }\r\n        if (BauCuaController.lastBeted == null) {\r\n            this.showToast(App.instance.getTextLang('txt_bet_error5'));\r\n            return;\r\n        }\r\n        let totalBeted = 0;\r\n        for (let i = 0; i < this.beted.length; i++) {\r\n            totalBeted += this.beted[i];\r\n        }\r\n        if (totalBeted > 0) {\r\n            this.showToast(App.instance.getTextLang('txt_bet_error6'));\r\n            return;\r\n        }\r\n        this.betting = BauCuaController.lastBeted;\r\n        MiniGameNetworkClient.getInstance().send(new cmd.SendBet(BauCuaController.lastBeted.toString()));\r\n        this.btnConfirm.interactable = false;\r\n        this.btnCancel.interactable = false;\r\n        this.btnReBet.interactable = false;\r\n    }\r\n\r\n    show() {\r\n        if (this.node.active) {\r\n            this.reOrder();\r\n            return;\r\n        }\r\n        super.show();\r\n        App.instance.showBgMiniGame(\"BauCua\");\r\n        this.inited = false;\r\n        this.lblToast.node.parent.active = false;\r\n        this.lblWinCoin.node.active = false;\r\n        this.betIdx = 0;\r\n        this.betting = [0, 0, 0, 0, 0, 0];\r\n        this.beted = [0, 0, 0, 0, 0, 0];\r\n        this.historiesData = [];\r\n\r\n        this.nodeHistories.active = true;\r\n        this.nodeSoiCau.active = !this.nodeHistories.active;\r\n        this.nodeHistories.getComponent(cc.ScrollView).scrollToTop(0);\r\n\r\n        for (let i = 0; i < this.buttonBets.length; i++) {\r\n            this.buttonBets[i].setActive(i == this.betIdx);\r\n        }\r\n        for (let i = 0; i < this.btnPayBets.length; i++) {\r\n            let btnPayBet = this.btnPayBets[i];\r\n            btnPayBet.lblBeted.string = \"0\";\r\n            btnPayBet.lblBeted.node.color = cc.Color.WHITE;\r\n            btnPayBet.lblTotal.string = \"0\";\r\n            btnPayBet.lblFactor.node.active = false;\r\n            btnPayBet.overlay.active = true;\r\n            btnPayBet.button.interactable = false;\r\n        }\r\n\r\n        MiniGameNetworkClient.getInstance().send(new cmd.SendScribe(this.roomId));\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        for (let i = 0; i < this.popups.length; i++) {\r\n            this.popups[i].active = false;\r\n        }\r\n\r\n        App.instance.hideGameMini(\"BauCua\");\r\n        // for (let i = 1; i < this.itemHistoryTemplate.parent.childrenCount; i++) {\r\n        //     this.itemHistoryTemplate.parent.children[i].destroy();\r\n        // }\r\n        MiniGameNetworkClient.getInstance().send(new cmd.SendUnScribe(this.roomId));\r\n    }\r\n    _onShowed() {\r\n        super._onShowed;\r\n\r\n    }\r\n\r\n    public reOrder() {\r\n        super.reOrder();\r\n    }\r\n\r\n    atcShowResult(res) {\r\n        this.sprResultDice.children[0].getComponent(cc.Sprite).spriteFrame = this.sprResultDices[res.dice1];\r\n        this.sprResultDice.children[1].getComponent(cc.Sprite).spriteFrame = this.sprResultDices[res.dice2];\r\n        this.sprResultDice.children[2].getComponent(cc.Sprite).spriteFrame = this.sprResultDices[res.dice3];\r\n        let bowlOn = this.bowl.getChildByName(\"bowl\");\r\n        cc.Tween.stopAllByTarget(bowlOn);\r\n        TW(bowlOn).to(0.7, { y: bowlOn.y + 50, opacity: 150, scale: 1.0 }, { easing: cc.easing.sineIn })\r\n            .call(() => {\r\n                this.historiesData.push([res.dice1, res.dice2, res.dice3]);\r\n                this.loadHistory(this.historiesData);\r\n                this.caculatorSoiCau();\r\n                if (res.xValue > 1) {\r\n                    this.btnPayBets[res.xPot].lblFactor.node.active = true;\r\n                    this.btnPayBets[res.xPot].lblFactor.string = \"x\" + res.xValue;\r\n                }\r\n                this.spin([res.dice1, res.dice2, res.dice3]);\r\n                bowlOn.active = false;\r\n            }).start();\r\n    }\r\n    actStartNewGame() {\r\n\r\n        let bowlOn = this.bowl.getChildByName(\"bowl\");\r\n        bowlOn.active = true;\r\n        TW(bowlOn).set({ opacity: 255, y: 0, scale: 1 }).start();\r\n        let initPos = this.bowl.getPosition();\r\n        let acShake = TW().to(0.1, { x: initPos.x - 20, scale: 1.0 }).to(0.1, { x: initPos.x }).to(0.1, { x: initPos.x + 20 }).to(0.1, { x: initPos.x, scale: 0.8 });\r\n        cc.Tween.stopAllByTarget(this.bowl);\r\n        TW(this.bowl).repeat(5, acShake).call(() => {\r\n            this.showToast(App.instance.getTextLang('txt_bet_invite'));\r\n        }).start();\r\n    }\r\n    actPopupHonors() {\r\n        App.instance.showBgMiniGame(\"BauCua\");\r\n        if (this.popupHonor == null) {\r\n            this.baucuaBundle.load(\"res/Prefabs/PopupHonors\", cc.Prefab, function (finish, total, item) {\r\n\r\n            }, (err1, prefab) => {\r\n                this.popupHonor = cc.instantiate(prefab).getComponent(\"BauCua.PopupHonors\");\r\n                this.popupHonor.node.parent = this.popupContainer;\r\n                this.popupHonor.node.active = true;\r\n                this.popupHonor.show();\r\n                this.popups.push(this.popupHonor.node);\r\n            })\r\n        } else {\r\n            this.popupHonor.show();\r\n        }\r\n    }\r\n    actPopupHistory() {\r\n        App.instance.showBgMiniGame(\"BauCua\");\r\n        if (this.popupHistory == null) {\r\n            this.baucuaBundle.load(\"res/Prefabs/PopupHistory\", cc.Prefab, function (finish, total, item) {\r\n\r\n            }, (err1, prefab) => {\r\n                this.popupHistory = cc.instantiate(prefab).getComponent(\"BauCua.PopupHistory\");\r\n                this.popupHistory.node.parent = this.popupContainer;\r\n                this.popupHistory.node.active = true;\r\n                this.popupHistory.show();\r\n                this.popups.push(this.popupHistory.node);\r\n            })\r\n        } else {\r\n            this.popupHistory.show();\r\n        }\r\n    }\r\n    actPopupGuide() {\r\n        App.instance.showBgMiniGame(\"BauCua\");\r\n        if (this.popupGuide == null) {\r\n            this.baucuaBundle.load(\"res/Prefabs/PopupGuide\", cc.Prefab, function (finish, total, item) {\r\n\r\n            }, (err1, prefab) => {\r\n                this.popupGuide = cc.instantiate(prefab).getComponent(\"Dialog\");\r\n                this.popupGuide.node.parent = this.popupContainer;\r\n                this.popupGuide.node.active = true;\r\n                this.popupGuide.show();\r\n                this.popups.push(this.popupGuide.node);\r\n            })\r\n        } else {\r\n            this.popupGuide.show();\r\n        }\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ButtonPayBet extends cc.Component {\r\n    @property(cc.Button)\r\n    button: cc.Button = null;\r\n    @property(cc.Label)\r\n    lblTotal: cc.Label = null;\r\n    @property(cc.Label)\r\n    lblBeted: cc.Label = null;\r\n    @property(cc.Node)\r\n    overlay: cc.Node = null;\r\n    @property(cc.Label)\r\n    lblFactor: cc.Label = null;\r\n}","import InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport OutPacket from \"../../Lobby/LobbyScript/Script/networks/Network.OutPacket\";\r\n\r\nexport namespace cmd {\r\n    export class Code {\r\n        static SCRIBE = 5001;\r\n        static UNSCRIBE = 5002;\r\n        static CHANGE_ROOM = 5003;\r\n        static BET = 5004;\r\n        static INFO = 5005;\r\n        static START_NEW_GAME = 5007;\r\n        static UPDATE = 5006;\r\n        static RESULT = 5008;\r\n        static PRIZE = 5009;\r\n    }\r\n\r\n    export class SendScribe extends OutPacket {\r\n        constructor(betIdx: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SCRIBE);\r\n            this.packHeader();\r\n            this.putByte(betIdx);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendUnScribe extends OutPacket {\r\n        constructor(betIdx: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.UNSCRIBE);\r\n            this.packHeader();\r\n            this.putByte(betIdx);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendChangeRoom extends OutPacket {\r\n        constructor(oldBetIdx: number, newBetIdx: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHANGE_ROOM);\r\n            this.packHeader();\r\n            this.putByte(oldBetIdx);\r\n            this.putByte(newBetIdx);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class SendBet extends OutPacket {\r\n        constructor(betData: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.BET);\r\n            this.packHeader();\r\n            this.putString(betData);\r\n            this.updateSize();\r\n        }\r\n    }\r\n\r\n    export class ReceiveBet extends InPacket {\r\n        result = 0;\r\n        currentMoney = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.result = this.getByte();\r\n            this.currentMoney = this.getLong();\r\n        }\r\n    }\r\n\r\n    export class ReceiveInfo extends InPacket {\r\n        referenceId = 0;\r\n        remainTime = 0;\r\n        bettingState = false;\r\n        potData = \"\";\r\n        betData = \"\";\r\n        lichSuPhien = \"\";\r\n        dice1 = 0;\r\n        dice2 = 0;\r\n        dice3 = 0;\r\n        xPot = 0;\r\n        xValue = 0;\r\n        room = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.referenceId = this.getLong();\r\n            this.remainTime = this.getByte();\r\n            this.bettingState = this.getBool();\r\n            this.potData = this.getString();\r\n            this.betData = this.getString();\r\n            this.lichSuPhien = this.getString();\r\n            this.dice1 = this.getByte();\r\n            this.dice2 = this.getByte();\r\n            this.dice3 = this.getByte();\r\n            this.xPot = this.getByte();\r\n            this.xValue = this.getByte();\r\n            this.room = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ReceiveNewGame extends InPacket {\r\n        referenceId = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.referenceId = this.getLong();\r\n        }\r\n    }\r\n\r\n    export class ReceiveUpdate extends InPacket {\r\n        potData = \"\";\r\n        remainTime = 0;\r\n        bettingState = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.potData = this.getString();\r\n            this.remainTime = this.getByte();\r\n            this.bettingState = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ReceiveResult extends InPacket {\r\n        dice1 = 0;\r\n        dice2 = 0;\r\n        dice3 = 0;\r\n        xPot = 0;\r\n        xValue = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.dice1 = this.getByte();\r\n            this.dice2 = this.getByte();\r\n            this.dice3 = this.getByte();\r\n            this.xPot = this.getByte();\r\n            this.xValue = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ReceivePrize extends InPacket {\r\n        prize = 0;\r\n        currentMoney = 0;\r\n        room = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.prize = this.getLong();\r\n            this.currentMoney = this.getLong();\r\n            this.room = this.getByte();\r\n        }\r\n    }\r\n}\r\nexport default cmd;","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport ScrollViewControl from \"../../Lobby/LobbyScript/Script/common/ScrollViewControl\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\nimport BauCuaController from \"./BauCua.BauCuaController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupHistory extends Dialog {\r\n    @property(ScrollViewControl)\r\n    scrList: ScrollViewControl = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private dataHistory = [];\r\n    private totalPageLoaded = 0;\r\n    onLoad() {\r\n        var scrollViewEventHandler = new cc.Component.EventHandler();\r\n        scrollViewEventHandler.target = this.node; // This node is the node to which your event handler code component belongs\r\n        scrollViewEventHandler.component = \"BauCua.PopupHistory\";// This is the code file name\r\n        scrollViewEventHandler.handler = \"onScrollEvent\";\r\n        this.scrList.scrollView.scrollEvents.push(scrollViewEventHandler);\r\n    }\r\n    show() {\r\n        super.show();\r\n        this.dataHistory = [];\r\n        this.totalPageLoaded = 0\r\n        this.scrList.setStateItem(false);\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        this.scrList.setStateItem(false);\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData(isReloadScr = true) {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 121, \"mt\": Configs.App.MONEY_TYPE, \"p\": this.page, \"un\": Configs.Login.Nickname }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (res[\"success\"]) {\r\n                this.maxPage = res[\"totalPages\"];\r\n                if (this.totalPageLoaded < this.maxPage) {\r\n                    this.dataHistory.push(...res[\"transactions\"]);\r\n                }\r\n                this.totalPageLoaded++;\r\n                let dataHistory = this.dataHistory.slice();\r\n                if (isReloadScr) {\r\n                    this.scrList.setDataList(this.setItemData.bind(this), dataHistory);\r\n                } else {\r\n                    this.scrList.updateDataList(dataHistory);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    setItemData(item, itemData) {\r\n        item.getChildByName(\"bg\").opacity = itemData.index % 2 == 0 ? 10 : 0;\r\n        item.getChildByName(\"Session\").getComponent(cc.Label).string = \"#\" + itemData[\"referenceId\"];\r\n        item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"timestamp\"];\r\n\r\n        let betValues = itemData[\"betValues\"][0] + itemData[\"betValues\"][1] + itemData[\"betValues\"][2] + itemData[\"betValues\"][3] + itemData[\"betValues\"][4] + itemData[\"betValues\"][5];\r\n        item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(betValues);\r\n\r\n        let prizes = itemData[\"prizes\"][0] + itemData[\"prizes\"][1] + itemData[\"prizes\"][2] + itemData[\"prizes\"][3] + itemData[\"prizes\"][4] + itemData[\"prizes\"][5];\r\n        item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(prizes);\r\n\r\n        let dices = itemData[\"dices\"].split(\",\");\r\n        let result = item.getChildByName(\"Result\");\r\n        result.children[0].getComponent(cc.Sprite).spriteFrame = BauCuaController.instance.sprResultDices[dices[0]];\r\n        result.children[1].getComponent(cc.Sprite).spriteFrame = BauCuaController.instance.sprResultDices[dices[1]];\r\n        result.children[2].getComponent(cc.Sprite).spriteFrame = BauCuaController.instance.sprResultDices[dices[2]];\r\n        item.active = true;\r\n    }\r\n    onScrollEvent(scrollview, eventType, customEventData) {\r\n        if (eventType == cc.ScrollView.EventType.SCROLL_TO_BOTTOM) {\r\n            if (this.page < this.maxPage) {\r\n                this.page++;\r\n                this.loadData(false);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupHonors extends Dialog {\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        super.show();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n    }\r\n\r\n    dismiss() {\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n        this.loadData();\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 120, \"mt\": Configs.App.MONEY_TYPE }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            //  cc.log(\"BauCua rank res : \", JSON.stringify(res));\r\n            if (res[\"success\"]) {\r\n                if (this.items.length == 0) {\r\n                    for (var i = 0; i < 10; i++) {\r\n                        let item = cc.instantiate(this.itemTemplate);\r\n                        item.parent = this.itemTemplate.parent;\r\n                        this.items.push(item);\r\n                    }\r\n                    this.itemTemplate.destroy();\r\n                    this.itemTemplate = null;\r\n                }\r\n\r\n                for (let i = 0; i < this.items.length; i++) {\r\n                    let item = this.items[i];\r\n                    if (i < res[\"topBC\"].length) {\r\n                        let itemData = res[\"topBC\"][i];\r\n                        item.getChildByName(\"bg\").opacity = i % 2 == 0 ? 10 : 0;\r\n                        item.getChildByName(\"Rank\").getComponent(cc.Label).string = (i + 1).toString();\r\n                        item.getChildByName(\"Account\").getComponent(cc.Label).string = itemData[\"username\"];\r\n                        item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"money\"]);\r\n                        item.active = true;\r\n                    } else {\r\n                        item.active = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n"],"file":"index.js"}