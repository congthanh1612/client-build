{"version":3,"sources":["assets/Slot7/Slot7Script/Slot7.Cmd.ts","assets/Slot7/Slot7Script/Slot7.Item.ts","assets/Slot7/Slot7Script/Slot7.Lobby.ts","assets/Slot7/Slot7Script/Slot7.PopupBonus.ts","assets/Slot7/Slot7Script/Slot7.PopupGuide.ts","assets/Slot7/Slot7Script/Slot7.PopupHistory.ts","assets/Slot7/Slot7Script/Slot7.PopupJackpotHistory.ts","assets/Slot7/Slot7Script/Slot7.PopupSelectLine.ts","assets/Slot7/Slot7Script/Slot7.Slot7Controller.ts","assets/Slot7/Slot7Script/Slot7.TrialResults.ts","assets/Slot7/Slot7Script/test.ts"],"names":["cmd","Network_InPacket_1","require","Network_OutPacket_1","cc","_decorator","ccclass","ReceiveDateX2","_super","data","_this","call","this","ngayX2","remain","currentMoney","freeSpin","lines","currentRoom","getString","getByte","getLong","__extends","default","ReceiveFreeDaiLy","Code","SUBCRIBE","UNSUBCRIBE","CHANGE_ROOM","PLAY","UPDATE_POT","AUTO","FORCE_STOP_AUTO","DATE_X2","BIG_WIN","FREE","FREE_DAI_LY","MINIMIZE","UPDATE_JACKPOT_SLOTS","SUBCRIBE_HALL_SLOT","SendSubcribe","roomId","initData","setControllerId","setCmdId","packHeader","putByte","updateSize","SendUnSubcribe","SendPlay","putString","SendChangeRoom","roomLeavedId","roomJoinedId","log","ReceiveUpdatePot","jackpot","x2","ResUpdateJackpotSlots","pots","ReceivePlay","ref","result","matrix","linesWin","haiSao","prize","isFree","itemsWild","ratio","currentNumberFreeSpin","getBool","ReqSubcribeHallSlot","exports","SLOT7_ID_ITEM","_a","property","Slot7Item","apply","arguments","sprItem","skeItem","skeDataJackpot","skeDataBonus","skeDataScatter","skeDataWild","frameX500","frameX375","frameX275","frameX150","frameX50","frameX25","frameX5","mId","prototype","getId","setId","pId","JACKPOT","WILD","BONUS","SCATTER","node","active","skeletonData","animation","setAnimationCacheMode","sp","Skeleton","AnimationCacheMode","SHARED_CACHE","X500","spriteFrame","X375","X275","X150","X50","X25","X5","__decorate","Sprite","SkeletonData","SpriteFrame","Component","App_1","Tween_1","SlotNetworkClient_1","Slot7_Cmd_1","Slot7Lobby","listPot","mSlotController","init","pSlot3Controller","zIndex","onBtnBack","soundSlotState","audioEngine","play","soundClick","getInstance","send","betIdx","stopAll","instance","loadScene","onBtn100","onJoinRoom","onBtn5k","omBtn10k","onUpdateJackpot","pData","res","resJson","JSON","parse","numberTo","p","Label","Dialog_1","PopupBonus","items","nodeBoxNotify","txtNotify","lblLeft","lblFactor","lblHeso","lblWin","factor","left","betValue","onFinished","onSpecialFinished","dataBonus","dataSpecial","heso","win","controller","start","_loop_1","i","this_1","children","getChildByName","getComponent","Button","loop","on","onBtnSoundTouchBonus","value","length","string","hidden","childrenCount","showBonus","bonus","show","btn","interactable","arrBonus","split","push","Number","scheduleOnce","dismiss","onBtnExit","hidePopup","parent","Node","PopupGuide","pageView","btnNext","btnPrev","page","canPlaySound","getCurrentPageIndex","actNext","getPages","scrollToPage","actPrev","soundSave","sys","localStorage","getItem","parseInt","PageView","type","AudioClip","Configs_1","Http_1","Utils_1","PopupHistory","lblPage","itemTemplate","maxPage","Array","_onShowed","loadData","actNextPage","actPrevPage","showLoading","get","App","API","c","un","Login","Nickname","gn","err","item","instantiate","destroy","i_1","itemData","formatNumber","PopupJackpotHistory","getTextLang","PopupSelectLine","buttonsLine","btnClose","onSelectedChanged","SELECTED","opacity","getSelectedLines","actSelectAll","actSelectEven","actSelectOdd","actDeselectAll","TYPE_WIN","Slot7_PopupSelectLine_1","Slot7_PopupBonus_1","Slot7_TrialResults_1","Slot7_Lobby_1","Slot7_Item_1","BroadcastReceiver_1","Slot7Controller","nodeCoin","mSlotLobby","preItem","mHeightItem","mWidthItem","skeSpin","reels","iconWildColumns","lblJackpot","lblBet","lblLine","lblTotalBet","lblCoin","lblWinNow","lblFreeSpinCount","toggleAuto","toggleSound","togglgeMusic","toggleBoost","btnSpin","btnBack","btnPlayTry","btnPlayReal","btnLine","toast","panelSetting","effectWinCash","effectBigWin","effectJackpot","particleJackpt","effectBonus","effectFreeSpin","popupSelectLine","popupBonus","soundSpinMis","soundSpinWin","soundBigWin","soundJackpot","soundBonus","soundSpin","soundBg","daiLyFreeSpin","rollStartItemCount","rollAddItemCount","spinDuration","addSpinDuration","listBet","listBetLabel","arrLineSelect","isSpined","wildItemId","mapLine","lastSpinRes","columnsWild","musicSlotState","remoteMusicBackground","mIsTrial","mutipleJpNode","soundInit","reel","count","j","itemNode","height","width","id","randomRangeInt","addOnClose","addListener","getCmdId","res_1","stringify","res_2","res_3","onSpinResult","sendCheck","stopShowLinesWin","toString","n","moneyToK","register","USER_UPDATE_COIN","Coin","showErrLoading","checkConnect","initMutipleJPNode","assetManager","getBundle","load","Prefab","err1","prefab","director","getScene","setInfo","showCoins","number","totalbet","showToast","msg","getComponentInChildren","stopAllActions","runAction","sequence","delayTime","callFunc","money","setEnabledAllButtons","enabled","stopAllEffects","stopAllItemEffect","scaleTo","spin","rIdx","results","alertDialog","showMsg","curMoney","stopSpin","roll","setPosition","v2","getPosition","x","showLineWins","isChecked","removeDups","splice","linesWinChildren","rolls","actions","indexOf","showWinCash","lineIdx","line","mLine","countItemWin","fisrtItemId","itemId","itemRow","repeatForever","cash","label","fadeIn","fadeOut","showEffectBigWin","cb","setAnimation","showEffectFreeSpin","showEffectJackpot","index","Math","random","resetSystem","showEffectBonus","successResult","timeScale","_loop_2","step1Pos","step2Pos","step3Pos","moveTo","position","easing","easeQuadraticActionOut","easeQuadraticActionInOut","easeQuadraticActionIn","spined","listItemNode","MISS","WIN","BIGWIN","SUPERWIN","onBtnSoundSumary","actBack","actHidden","actBetUp","actBetDown","actLine","actSetting","toggleTrialOnCheck","toggleAutoOnCheck","isTrail","toggleBoostOnCheck","musicSave","setItem","playMusic","settingMusic","stop","settingSound","Integer","Toggle","ParticleSystem","TrialResults","_pos","_data","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","_length","_controllerId","_cmdId","_error","NewClass","nodeLobby","onManHinh","offManHinh"],"mappings":"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","sourcesContent":["import InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport OutPacket from \"../../Lobby/LobbyScript/Script/networks/Network.OutPacket\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\nexport namespace cmd {\r\n    export class ReceiveDateX2 extends InPacket {\r\n        \r\n        ngayX2 = \"\";\r\n        remain = 0;\r\n        currentMoney = 0;\r\n        freeSpin = 0;\r\n        lines = \"\";\r\n        currentRoom = 0;\r\n\r\n      \r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n           \r\n            this.ngayX2 = this.getString();\r\n            this.remain = this.getByte();\r\n            this.currentMoney = this.getLong();\r\n            this.freeSpin = this.getByte();\r\n            this.lines = this.getString();\r\n            this.currentRoom = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ReceiveFreeDaiLy extends InPacket {\r\n      \r\n        freeSpin = 0;\r\n\r\n      \r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n           \r\n            this.freeSpin = this.getByte();\r\n            \r\n        }\r\n    }\r\n    export class Code {\r\n        static SUBCRIBE = 4003;\r\n        static UNSUBCRIBE = 4004;\r\n        static CHANGE_ROOM = 4005;\r\n        static PLAY = 4001;\r\n        static UPDATE_POT = 4002;\r\n        static AUTO = 4006;\r\n        static FORCE_STOP_AUTO = 4008;\r\n        static DATE_X2 = 4009;\r\n        static BIG_WIN = 4010;\r\n        static FREE = 4011;\r\n        static FREE_DAI_LY = 4012;\r\n        static MINIMIZE = 4013;\r\n        static UPDATE_JACKPOT_SLOTS = 10003;\r\n        static SUBCRIBE_HALL_SLOT = 10001;\r\n    }\r\n    export class SendSubcribe extends OutPacket {\r\n        constructor(roomId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE);\r\n            this.packHeader();\r\n            this.putByte(roomId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendUnSubcribe extends OutPacket {\r\n        constructor(roomId: number) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.UNSUBCRIBE);\r\n            this.packHeader();\r\n            this.putByte(roomId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendPlay extends OutPacket {\r\n        constructor(lines: string) {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.PLAY);\r\n            this.packHeader();\r\n            this.putString(lines);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class SendChangeRoom extends OutPacket {\r\n        constructor(roomLeavedId: number, roomJoinedId: number) {\r\n            super();\r\n            cc.log(\"room leave: \" + roomLeavedId + \", room join: \" + roomJoinedId);\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.CHANGE_ROOM);\r\n            this.packHeader();\r\n            this.putByte(roomLeavedId);\r\n            this.putByte(roomJoinedId);\r\n            this.updateSize();\r\n        }\r\n    }\r\n    export class ReceiveUpdatePot extends InPacket {\r\n        jackpot = 0;\r\n        x2 = 0;\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.jackpot = this.getLong();\r\n            this.x2 = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ResUpdateJackpotSlots extends InPacket {\r\n        pots = \"\";\r\n\r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.pots = this.getString()\r\n        }\r\n    }\r\n    export class ReceivePlay extends InPacket {\r\n        ref = 0;\r\n        result = 0;\r\n        matrix = \"\";\r\n        linesWin = \"\";\r\n        haiSao = \"\";\r\n        prize = 0;\r\n        currentMoney = 0;\r\n        freeSpin = 0;\r\n        isFree = false;\r\n        itemsWild = \"\";\r\n        ratio = 0;\r\n        currentNumberFreeSpin = 0;\r\n        \r\n        constructor(data: Uint8Array) {\r\n            super(data);\r\n            this.ref = this.getLong();\r\n            this.result = this.getByte();\r\n            this.matrix = this.getString();\r\n            this.linesWin = this.getString();\r\n            this.haiSao = this.getString();\r\n            this.prize = this.getLong();\r\n            this.currentMoney = this.getLong();\r\n            this.freeSpin = this.getByte();\r\n            this.isFree = this.getBool();\r\n            this.itemsWild = this.getString();\r\n            this.ratio = this.getByte();\r\n            this.currentNumberFreeSpin = this.getByte();\r\n        }\r\n    }\r\n\r\n    export class ReqSubcribeHallSlot extends OutPacket {\r\n        constructor() {\r\n            super();\r\n            this.initData(100);\r\n            this.setControllerId(1);\r\n            this.setCmdId(Code.SUBCRIBE_HALL_SLOT);\r\n            this.packHeader();\r\n            this.updateSize();\r\n        }\r\n    }\r\n}\r\nexport default cmd;","const { ccclass, property } = cc._decorator;\r\n\r\nconst enum SLOT7_ID_ITEM {\r\n  JACKPOT = 3,\r\n  BONUS = 1,\r\n  WILD = 2,\r\n  SCATTER = 0,\r\n  X500 = 4,\r\n  X375 = 5,\r\n  X275 = 6,\r\n  X150 = 7,\r\n  X50 = 8,\r\n  X25 = 9,\r\n  X5 = 10,\r\n}\r\n\r\n@ccclass\r\nexport default class Slot7Item extends cc.Component {\r\n  @property(cc.Sprite)\r\n  sprItem: cc.Sprite = null;\r\n\r\n  @property(sp.Skeleton)\r\n  skeItem: sp.Skeleton = null;\r\n\r\n  @property(sp.SkeletonData)\r\n  skeDataJackpot: sp.SkeletonData = null;\r\n\r\n  @property(sp.SkeletonData)\r\n  skeDataBonus: sp.SkeletonData = null;\r\n\r\n  @property(sp.SkeletonData)\r\n  skeDataScatter: sp.SkeletonData = null;\r\n\r\n  @property(sp.SkeletonData)\r\n  skeDataWild: sp.SkeletonData = null;\r\n\r\n  @property(cc.SpriteFrame)\r\n  frameX500: cc.SpriteFrame = null;\r\n\r\n  @property(cc.SpriteFrame)\r\n  frameX375: cc.SpriteFrame = null;\r\n\r\n  @property(cc.SpriteFrame)\r\n  frameX275: cc.SpriteFrame = null;\r\n\r\n  @property(cc.SpriteFrame)\r\n  frameX150: cc.SpriteFrame = null;\r\n\r\n  @property(cc.SpriteFrame)\r\n  frameX50: cc.SpriteFrame = null;\r\n\r\n  @property(cc.SpriteFrame)\r\n  frameX25: cc.SpriteFrame = null;\r\n\r\n  @property(cc.SpriteFrame)\r\n  frameX5: cc.SpriteFrame = null;\r\n\r\n  private mId: number = -1;\r\n\r\n  public getId() {\r\n    return this.mId;\r\n  }\r\n\r\n  public setId(pId: number) {\r\n    this.mId = pId;\r\n    if (\r\n      this.mId == SLOT7_ID_ITEM.JACKPOT ||\r\n      this.mId == SLOT7_ID_ITEM.WILD ||\r\n      this.mId == SLOT7_ID_ITEM.BONUS ||\r\n      this.mId == SLOT7_ID_ITEM.SCATTER\r\n    ) {\r\n      this.skeItem.node.active = true;\r\n      this.sprItem.node.active = false;\r\n\r\n      if (this.mId == SLOT7_ID_ITEM.JACKPOT) {\r\n        this.skeItem.skeletonData = this.skeDataJackpot;\r\n        this.skeItem.animation = \"animation\";\r\n        this.skeItem.setAnimationCacheMode(\r\n          sp.Skeleton.AnimationCacheMode.SHARED_CACHE\r\n        );\r\n      } else if (this.mId == SLOT7_ID_ITEM.WILD) {\r\n        this.skeItem.skeletonData = this.skeDataWild;\r\n        this.skeItem.animation = \"animation\";\r\n        this.skeItem.setAnimationCacheMode(\r\n          sp.Skeleton.AnimationCacheMode.SHARED_CACHE\r\n        );\r\n      } else if (this.mId == SLOT7_ID_ITEM.BONUS) {\r\n        this.skeItem.skeletonData = this.skeDataBonus;\r\n        this.skeItem.animation = \"animation\";\r\n        this.skeItem.setAnimationCacheMode(\r\n          sp.Skeleton.AnimationCacheMode.SHARED_CACHE\r\n        );\r\n      } else if (this.mId == SLOT7_ID_ITEM.SCATTER) {\r\n        this.skeItem.skeletonData = this.skeDataScatter;\r\n        this.skeItem.animation = \"animation\";\r\n        this.skeItem.setAnimationCacheMode(\r\n          sp.Skeleton.AnimationCacheMode.SHARED_CACHE\r\n        );\r\n      } else {\r\n      }\r\n    } else {\r\n      this.skeItem.node.active = false;\r\n      this.sprItem.node.active = true;\r\n\r\n      if (this.mId == SLOT7_ID_ITEM.X500) {\r\n        this.sprItem.spriteFrame = this.frameX500;\r\n      } else if (this.mId == SLOT7_ID_ITEM.X375) {\r\n        this.sprItem.spriteFrame = this.frameX375;\r\n      } else if (this.mId == SLOT7_ID_ITEM.X275) {\r\n        this.sprItem.spriteFrame = this.frameX275;\r\n      } else if (this.mId == SLOT7_ID_ITEM.X150) {\r\n        this.sprItem.spriteFrame = this.frameX150;\r\n      } else if (this.mId == SLOT7_ID_ITEM.X50) {\r\n        this.sprItem.spriteFrame = this.frameX50;\r\n      } else if (this.mId == SLOT7_ID_ITEM.X25) {\r\n        this.sprItem.spriteFrame = this.frameX25;\r\n      } else if (this.mId == SLOT7_ID_ITEM.X5) {\r\n        this.sprItem.spriteFrame = this.frameX5;\r\n      } else {\r\n      }\r\n    }\r\n  }\r\n}\r\n","import App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport SlotNetworkClient from \"../../Lobby/LobbyScript/Script/networks/SlotNetworkClient\";\r\nimport cmd from \"./Slot7.Cmd\";\r\nimport Slot3Controller from \"./Slot7.Slot7Controller\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot7Lobby extends cc.Component {\r\n  @property([cc.Label])\r\n  listPot: cc.Label[] = [];\r\n\r\n  mSlotController: Slot3Controller = null;\r\n\r\n  public init(pSlot3Controller: Slot3Controller) {\r\n    this.mSlotController = pSlot3Controller;\r\n    this.node.zIndex = 2;\r\n  }\r\n\r\n  public onBtnBack() {\r\n    if (this.mSlotController.soundSlotState == 1) {\r\n      cc.audioEngine.play(this.mSlotController.soundClick, false, 1);\r\n    }\r\n    SlotNetworkClient.getInstance().send(\r\n      new cmd.SendUnSubcribe(this.mSlotController.betIdx)\r\n    );\r\n    cc.audioEngine.stopAll();\r\n    App.instance.loadScene(\"Lobby\");\r\n  }\r\n\r\n  private onBtn100() {\r\n    this.mSlotController.betIdx = 0;\r\n    SlotNetworkClient.getInstance().send(\r\n      new cmd.SendSubcribe(this.mSlotController.betIdx)\r\n    );\r\n    this.node.active = false;\r\n    this.mSlotController.onJoinRoom();\r\n  }\r\n\r\n  private onBtn5k() {\r\n    this.mSlotController.betIdx = 1;\r\n    SlotNetworkClient.getInstance().send(\r\n      new cmd.SendSubcribe(this.mSlotController.betIdx)\r\n    );\r\n    this.node.active = false;\r\n    this.mSlotController.onJoinRoom();\r\n  }\r\n\r\n  private omBtn10k() {\r\n    this.mSlotController.betIdx = 2;\r\n    SlotNetworkClient.getInstance().send(\r\n      new cmd.SendSubcribe(this.mSlotController.betIdx)\r\n    );\r\n    this.node.active = false;\r\n    this.mSlotController.onJoinRoom();\r\n  }\r\n\r\n  public onUpdateJackpot(pData) {\r\n    let res = new cmd.ResUpdateJackpotSlots(pData);\r\n    let resJson = JSON.parse(res.pots);\r\n\r\n    Tween.numberTo(this.listPot[0], resJson[\"benley\"][\"100\"].p, 0.3);\r\n    Tween.numberTo(this.listPot[1], resJson[\"benley\"][\"1000\"].p, 0.3);\r\n    Tween.numberTo(this.listPot[2], resJson[\"benley\"][\"10000\"].p, 0.3);\r\n  }\r\n}\r\n","import Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Slot7Controller from \"./Slot7.Slot7Controller\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupBonus extends Dialog {\r\n  @property(cc.Node)\r\n  items: cc.Node = null;\r\n  @property(cc.Node)\r\n  nodeBoxNotify: cc.Node = null;\r\n  @property(cc.Label)\r\n  txtNotify: cc.Label = null;\r\n  @property(cc.Label)\r\n  lblLeft: cc.Label = null;\r\n  @property(cc.Label)\r\n  lblFactor: cc.Label = null;\r\n  @property(cc.Label)\r\n  lblHeso: cc.Label = null;\r\n  @property(cc.Label)\r\n  lblWin: cc.Label = null;\r\n  private factor = 1;\r\n  private left = 0;\r\n  private betValue = 0;\r\n  private onFinished: () => void = null;\r\n  private onSpecialFinished: () => void = null;\r\n  private dataBonus: Array<number> = [];\r\n  private dataSpecial: number = -1;\r\n  private heso: number = 0;\r\n  private win: number = 0;\r\n  private controller: Slot7Controller = null;\r\n  start() {\r\n    for (let i = 0; i < this.items.childrenCount; i++) {\r\n      let node = this.items.children[i];\r\n      node[\"btn\"] = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n      node[\"label\"] = node.getChildByName(\"label\").getComponent(cc.Label);\r\n      node[\"ske\"] = node.getChildByName(\"ske\").getComponent(sp.Skeleton);\r\n      node[\"ske\"].animation = \"mo\";\r\n      node[\"ske\"].loop = true;\r\n      node[\"btn\"].node.active = true;\r\n      node[\"btn\"].node.on(\"click\", () => {\r\n        this.controller.onBtnSoundTouchBonus();\r\n        var value = this.dataBonus[this.dataBonus.length - this.left];\r\n        cc.log(\"click:\" + value + \" : \" + node[\"is_open\"]);\r\n        if (node[\"is_open\"] == false && this.left > 0) {\r\n          node[\"is_open\"] = true;\r\n          switch (value) {\r\n            case 0:\r\n              this.factor++;\r\n              this.lblFactor.string = this.factor + \"\";\r\n              node[\"ske\"].animation = \"miss\";\r\n              node[\"ske\"].loop = true;\r\n              node[\"btn\"].node.active = false;\r\n              break;\r\n            case 1:\r\n              node[\"ske\"].animation = \"mo2\";\r\n              node[\"ske\"].loop = true;\r\n              node[\"btn\"].node.active = false;\r\n              node[\"label\"].node.active = true;\r\n              node[\"label\"].string = \"0\";\r\n              Tween.numberTo(node[\"label\"], 4 * this.betValue, 0.3);\r\n              this.win += 4 * this.betValue;\r\n              Tween.numberTo(this.lblWin, this.win, 0.3);\r\n              break;\r\n\r\n            case 2:\r\n              node[\"ske\"].animation = \"mo2\";\r\n              node[\"ske\"].loop = true;\r\n\r\n              node[\"label\"].node.active = true;\r\n              node[\"label\"].string = \"0\";\r\n              Tween.numberTo(\r\n                node[\"label\"],\r\n                10 * this.betValue * this.factor,\r\n                0.3\r\n              );\r\n              this.win += 10 * this.betValue * this.factor;\r\n              Tween.numberTo(this.lblWin, this.win, 0.3);\r\n              break;\r\n            case 3:\r\n              node[\"ske\"].animation = \"mo2\";\r\n              node[\"ske\"].loop = true;\r\n\r\n              node[\"label\"].node.active = true;\r\n              node[\"label\"].string = \"0\";\r\n              Tween.numberTo(\r\n                node[\"label\"],\r\n                15 * this.betValue * this.factor,\r\n                0.3\r\n              );\r\n              this.win += 15 * this.betValue * this.factor;\r\n              Tween.numberTo(this.lblWin, this.win, 0.3);\r\n              break;\r\n            case 4:\r\n              node[\"ske\"].animation = \"mo2\";\r\n              node[\"ske\"].loop = true;\r\n              node[\"label\"].node.active = true;\r\n              node[\"label\"].string = \"0\";\r\n              this.win += 20 * this.betValue * this.factor;\r\n              Tween.numberTo(\r\n                node[\"label\"],\r\n                20 * this.betValue * this.factor,\r\n                0.3\r\n              );\r\n              Tween.numberTo(this.lblWin, this.win, 0.3);\r\n              break;\r\n          }\r\n          this.left--;\r\n          this.lblLeft.string = \"\" + this.left;\r\n          if (this.left <= 0) {\r\n            this.hidden();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  showBonus(\r\n    betValue: number,\r\n    bonus: string,\r\n    controller,\r\n    onFinished: () => void\r\n  ) {\r\n    super.show();\r\n    this.controller = controller;\r\n    this.win = 0;\r\n    Tween.numberTo(this.lblWin, this.win, 0.3);\r\n    for (let i = 0; i < this.items.childrenCount; i++) {\r\n      let node = this.items.children[i];\r\n      node[\"btn\"] = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n      node[\"label\"] = node.getChildByName(\"label\").getComponent(cc.Label);\r\n      node[\"ske\"] = node.getChildByName(\"ske\").getComponent(sp.Skeleton);\r\n      node[\"ske\"].animation = \"mo\";\r\n      node[\"ske\"].loop = true;\r\n      node[\"btn\"].node.active = true;\r\n      node[\"label\"].node.active = false;\r\n      node[\"is_open\"] = false;\r\n    }\r\n    for (let i = 0; i < this.items.childrenCount; i++) {\r\n      let node = this.items.children[i];\r\n      let btn = node.getChildByName(\"btn\").getComponent(cc.Button);\r\n      btn.node.active = true;\r\n      btn.interactable = true;\r\n      node.getChildByName(\"label\").active = false;\r\n    }\r\n    this.betValue = betValue;\r\n    this.onFinished = onFinished;\r\n    let arrBonus = bonus.split(\",\");\r\n    this.dataBonus = [];\r\n    for (let i = 0; i < arrBonus.length; i++) {\r\n      this.dataBonus.push(Number(arrBonus[i]));\r\n    }\r\n    this.left = this.dataBonus.length - 1;\r\n    this.factor = 1;\r\n    this.lblLeft.string = \"\" + this.left;\r\n    this.lblFactor.string = this.factor + \"\";\r\n    this.heso = this.dataBonus[0];\r\n    this.lblHeso.string = \"x\" + this.heso;\r\n  }\r\n\r\n  hidden() {\r\n    this.scheduleOnce(() => {\r\n      this.dismiss();\r\n      this.onFinished();\r\n    }, 1.5);\r\n    // this.controller.onBtnSoundSumary();\r\n    // Tween.showPopup(this.nodeBoxNotify,this.nodeBoxNotify.parent);\r\n    // Tween.numberTo(this.txtNotify,this.win, 0.3);\r\n  }\r\n\r\n  onBtnExit() {\r\n    Tween.hidePopup(this.nodeBoxNotify, this.nodeBoxNotify.parent, false);\r\n    this.scheduleOnce(() => {\r\n      this.dismiss();\r\n      this.onFinished();\r\n    }, 1.5);\r\n  }\r\n}\r\nexport default PopupBonus;\r\n","import Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupGuide extends Dialog {\r\n\r\n    @property(cc.PageView)\r\n    pageView : cc.PageView = null;\r\n\r\n    // @property([cc.Node])\r\n    // pages: cc.Node[] = [];\r\n    @property(cc.Node)\r\n    btnNext: cc.Node = null;\r\n    @property(cc.Node)\r\n    btnPrev: cc.Node = null;\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n\r\n    private page = 0;\r\n\r\n    private soundSlotState = null;\r\n\r\n    start() {\r\n    }\r\n\r\n\r\n    show() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.show();\r\n        this.page = this.pageView.getCurrentPageIndex();\r\n        this.btnPrev.active = true;\r\n    }\r\n\r\n    actNext() {\r\n        if (this.page < this.pageView.getPages().length - 1) {\r\n            this.page++;\r\n        }\r\n\r\n        if (this.page == this.pageView.getPages().length - 1) {\r\n            this.btnNext.active = false;\r\n        }\r\n        this.btnPrev.active = true;\r\n\r\n        this.pageView.scrollToPage(this.page,0.2);\r\n    }\r\n\r\n    actPrev() {\r\n        if (this.page > 0) {\r\n            this.page--;\r\n        }\r\n\r\n        if (this.page == 0) {\r\n            this.btnPrev.active = false;\r\n        }\r\n        this.btnNext.active = true;\r\n\r\n        this.pageView.scrollToPage(this.page,0.2);\r\n    }\r\n\r\n \r\n    dismiss() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.dismiss();\r\n    }\r\n\r\n    canPlaySound() {\r\n        if(this.soundClick == null) return false;\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_1\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nexport default PopupGuide;","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopupHistory extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    private soundSlotState = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.show();\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 137, \"p\": this.page, \"un\": Configs.Login.Nickname, \"gn\": \"BENLEY\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (!res[\"success\"]) return;\r\n\r\n            if (this.items.length == 0) {\r\n                for (var i = 0; i < 8; i++) {\r\n                    let item = cc.instantiate(this.itemTemplate);\r\n                    item.parent = this.itemTemplate.parent;\r\n                    this.items.push(item);\r\n                }\r\n                this.itemTemplate.destroy();\r\n                this.itemTemplate = null;\r\n            }\r\n\r\n            this.maxPage = res[\"totalPages\"];\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                let item = this.items[i];\r\n                if (i < res[\"results\"].length) {\r\n                    let itemData = res[\"results\"][i];\r\n                    item.getChildByName(\"Session\").getComponent(cc.Label).string = itemData[\"rf\"];\r\n                    item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"];\r\n                    item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                    item.getChildByName(\"LineBet\").getComponent(cc.Label).string = itemData[\"lb\"] === \"\" ? 0 : itemData[\"lb\"].split(\",\").length;\r\n                    item.getChildByName(\"LineWin\").getComponent(cc.Label).string = itemData[\"lw\"] === \"\" ? 0 : itemData[\"lw\"].split(\",\").length;\r\n                    item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    canPlaySound() {\r\n        if(this.soundClick == null) return false;\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_1\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}","\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport Http from \"../../Loading/src/Http\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupJackpotHistory extends Dialog {\r\n    @property(cc.Label)\r\n    lblPage: cc.Label = null;\r\n    @property(cc.Node)\r\n    itemTemplate: cc.Node = null;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    soundClick: cc.AudioClip = null;\r\n    private soundSlotState = null;\r\n\r\n    private page: number = 1;\r\n    private maxPage: number = 1;\r\n    private items = new Array<cc.Node>();\r\n\r\n    show() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.show();\r\n\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n        if (this.itemTemplate != null) this.itemTemplate.active = false;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        super.dismiss();\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            this.items[i].active = false;\r\n        }\r\n    }\r\n\r\n    _onShowed() {\r\n        super._onShowed();\r\n\r\n        this.page = 1;\r\n        this.maxPage = 1;\r\n        this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n        this.loadData();\r\n    }\r\n\r\n    actNextPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page < this.maxPage) {\r\n            this.page++;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    actPrevPage() {\r\n        if (this.canPlaySound()) {\r\n            cc.audioEngine.play(this.soundClick, false, 1);\r\n        }\r\n        if (this.page > 1) {\r\n            this.page--;\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    private loadData() {\r\n        App.instance.showLoading(true);\r\n        Http.get(Configs.App.API, { \"c\": 138, \"p\": this.page, \"gn\": \"BENLEY\" }, (err, res) => {\r\n            App.instance.showLoading(false);\r\n            if (err != null) return;\r\n            if (!res[\"success\"]) return;\r\n\r\n            if (this.items.length == 0) {\r\n                for (var i = 0; i < 8; i++) {\r\n                    let item = cc.instantiate(this.itemTemplate);\r\n                    item.parent = this.itemTemplate.parent;\r\n                    this.items.push(item);\r\n                }\r\n                this.itemTemplate.destroy();\r\n                this.itemTemplate = null;\r\n            }\r\n\r\n            this.maxPage = res[\"totalPages\"];\r\n            this.lblPage.string = this.page + \"/\" + this.maxPage;\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                let item = this.items[i];\r\n                if (i < res[\"results\"].length) {\r\n                    let itemData = res[\"results\"][i];\r\n                    item.getChildByName(\"Time\").getComponent(cc.Label).string = itemData[\"ts\"];\r\n                    item.getChildByName(\"Bet\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"bv\"]);\r\n                    item.getChildByName(\"Type\").getComponent(cc.Label).string = itemData[\"rs\"] == 3 ? App.instance.getTextLang('txt_jackpot_win') : App.instance.getTextLang('txt_big_win');\r\n                    item.getChildByName(\"Account\").getComponent(cc.Label).string = itemData[\"un\"];\r\n                    item.getChildByName(\"Win\").getComponent(cc.Label).string = Utils.formatNumber(itemData[\"pz\"]);\r\n                    item.active = true;\r\n                } else {\r\n                    item.active = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    canPlaySound() {\r\n        if(this.soundClick == null) return false;\r\n        var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_1\");\r\n        if (soundSave != null) {\r\n            this.soundSlotState = parseInt(soundSave);\r\n        } else {\r\n            this.soundSlotState = 1;\r\n        }\r\n\r\n        if (this.soundSlotState == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nexport default PopupJackpotHistory;","import Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PopupSelectLine extends Dialog {\r\n    @property(cc.Node)\r\n    buttonsLine: cc.Node = null;\r\n    @property(cc.Button)\r\n    btnClose: cc.Button = null;\r\n\r\n    onSelectedChanged: (lines: Array<number>) => void = null;\r\n    private readonly SELECTED = \"selected\";\r\n\r\n    start() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = true;\r\n            node.on(\"click\", () => {\r\n                node[this.SELECTED] = !node[this.SELECTED];\r\n                node.opacity = node[this.SELECTED] ? 255 : 80;\r\n                if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n                this.btnClose.interactable = this.getSelectedLines().length > 0;\r\n            });\r\n        }\r\n    }\r\n\r\n    actSelectAll() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = true;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n    }\r\n\r\n    actSelectEven() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = i % 2 != 0;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n    }\r\n\r\n    actSelectOdd() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = i % 2 == 0;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = true;\r\n    }\r\n\r\n    actDeselectAll() {\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            node[this.SELECTED] = false;\r\n            node.opacity = node[this.SELECTED] ? 255 : 80;\r\n        }\r\n        if (this.onSelectedChanged != null) this.onSelectedChanged(this.getSelectedLines());\r\n        this.btnClose.interactable = false;\r\n    }\r\n\r\n    private getSelectedLines() {\r\n        let lines = new Array<number>();\r\n        for (let i = 0; i < this.buttonsLine.childrenCount; i++) {\r\n            let node = this.buttonsLine.children[i];\r\n            if (typeof node[this.SELECTED] == \"undefined\" || node[this.SELECTED]) {\r\n                lines.push(i + 1);\r\n            }\r\n        }\r\n        return lines;\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.getSelectedLines().length > 0) {\r\n            super.dismiss();\r\n        }\r\n    }\r\n}\r\nexport default PopupSelectLine;","import cmd from \"./Slot7.Cmd\";\r\n\r\nimport Configs from \"../../Loading/src/Configs\";\r\nimport PopupSelectLine from \"./Slot7.PopupSelectLine\";\r\nimport PopupBonus from \"./Slot7.PopupBonus\";\r\nimport TrialResults from \"./Slot7.TrialResults\";\r\nimport Slot7Lobby from \"./Slot7.Lobby\";\r\nimport Slot7Item from \"./Slot7.Item\";\r\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\r\nimport BroadcastReceiver from \"../../Lobby/LobbyScript/Script/common/BroadcastReceiver\";\r\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\r\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\r\nimport InPacket from \"../../Lobby/LobbyScript/Script/networks/Network.InPacket\";\r\nimport SlotNetworkClient from \"../../Lobby/LobbyScript/Script/networks/SlotNetworkClient\";\r\n\r\nconst enum TYPE_WIN {\r\n  MISS = 0,\r\n  WIN = 1,\r\n  BIGWIN = 2,\r\n  JACKPOT = 3,\r\n  SUPERWIN = 4,\r\n  BONUS = 5,\r\n}\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot7Controller extends cc.Component {\r\n  @property(cc.Node)\r\n  nodeCoin: cc.Node = null;\r\n\r\n  @property(Slot7Lobby)\r\n  mSlotLobby: Slot7Lobby = null;\r\n\r\n  @property(cc.Prefab)\r\n  preItem: cc.Prefab = null;\r\n\r\n  @property(cc.Integer)\r\n  mHeightItem: number = 180;\r\n\r\n  @property(cc.Integer)\r\n  mWidthItem: number = 180;\r\n\r\n  // @property([cc.SpriteFrame])\r\n  // sprFrameItems: cc.SpriteFrame[] = [];\r\n  // @property([cc.SpriteFrame])\r\n  // sprFrameItemsBlur: cc.SpriteFrame[] = [];\r\n\r\n  @property(sp.Skeleton)\r\n  skeSpin: sp.Skeleton = null;\r\n\r\n  @property(cc.Node)\r\n  reels: cc.Node = null; // reel\r\n\r\n  // @property(cc.Node)\r\n  // itemTemplate: cc.Node = null;\r\n  @property(cc.Node)\r\n  linesWin: cc.Node = null;\r\n  @property(cc.Node)\r\n  iconWildColumns: cc.Node = null; // mang cac item expand wild\r\n\r\n  @property(cc.Label)\r\n  lblJackpot: cc.Label = null;\r\n  @property(cc.Label)\r\n  lblBet: cc.Label = null;\r\n  @property(cc.Label)\r\n  lblLine: cc.Label = null;\r\n  @property(cc.Label)\r\n  lblTotalBet: cc.Label = null;\r\n  @property(cc.Label)\r\n  lblCoin: cc.Label = null;\r\n  @property(cc.Label)\r\n  lblWinNow: cc.Label = null;\r\n  @property(cc.Label)\r\n  lblFreeSpinCount: cc.Label = null;\r\n\r\n  @property(cc.Toggle)\r\n  toggleAuto: cc.Toggle = null;\r\n\r\n  @property(cc.Toggle)\r\n  toggleSound: cc.Toggle = null;\r\n\r\n  @property(cc.Toggle)\r\n  togglgeMusic: cc.Toggle = null;\r\n\r\n  @property(cc.Toggle)\r\n  toggleBoost: cc.Toggle = null;\r\n  // @property(cc.Toggle)\r\n  // toggleTrial: cc.Toggle = null;\r\n\r\n  @property(cc.Button)\r\n  btnSpin: cc.Button = null;\r\n  @property(cc.Button)\r\n  btnBack: cc.Button = null;\r\n  @property(cc.Button)\r\n  btnPlayTry: cc.Button = null;\r\n  @property(cc.Button)\r\n  btnPlayReal: cc.Button = null;\r\n  // @property(cc.Button)\r\n  // btnBetUp: cc.Button = null;\r\n  // @property(cc.Button)\r\n  // btnBetDown: cc.Button = null;\r\n  @property(cc.Button)\r\n  btnLine: cc.Button = null;\r\n\r\n  @property(cc.Node)\r\n  toast: cc.Node = null;\r\n\r\n  @property(cc.Node)\r\n  panelSetting: cc.Node = null;\r\n\r\n  @property(cc.Node)\r\n  effectWinCash: cc.Node = null;\r\n  @property(cc.Node)\r\n  effectBigWin: cc.Node = null;\r\n  @property(cc.Node)\r\n  effectJackpot: cc.Node = null;\r\n  @property(cc.ParticleSystem)\r\n  particleJackpt: cc.ParticleSystem = null;\r\n  @property(cc.Node)\r\n  effectBonus: cc.Node = null;\r\n  @property(cc.Node)\r\n  effectFreeSpin: cc.Node = null;\r\n\r\n  @property(PopupSelectLine)\r\n  popupSelectLine: PopupSelectLine = null;\r\n  @property(PopupBonus)\r\n  popupBonus: PopupBonus = null;\r\n\r\n  // //music setting\r\n  // @property(cc.Node)\r\n  // musicOff: cc.Node = null;\r\n\r\n  // @property(cc.Node)\r\n  // soundOff: cc.Node = null;\r\n\r\n  @property({ type: cc.AudioClip })\r\n  soundSpinMis: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundSpinWin: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundBigWin: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundJackpot: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundBonus: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundClick: cc.AudioClip = null;\r\n  @property({ type: cc.AudioClip })\r\n  soundSpin: cc.AudioClip = null;\r\n\r\n  //end music setting\r\n\r\n  @property({ type: cc.AudioClip })\r\n  soundBg: cc.AudioClip = null;\r\n  private currentNumberFreeSpin = 0;\r\n  private daiLyFreeSpin = 0;\r\n  private rollStartItemCount = 15;\r\n  private rollAddItemCount = 10;\r\n  private spinDuration = 1.2;\r\n  private addSpinDuration = 0.3;\r\n  //private itemHeight = 0;\r\n  public betIdx = -1;\r\n  private listBet = [100, 1000, 10000];\r\n  private listBetLabel = [\"100\", \"1000\", \"10000\"];\r\n  private arrLineSelect = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\r\n    22, 23, 24, 25,\r\n  ];\r\n  private isSpined = true;\r\n  private readonly wildItemId = 2;\r\n  private readonly mapLine = [\r\n    [5, 6, 7, 8, 9], //1\r\n    [0, 1, 2, 3, 4], //2\r\n    [10, 11, 12, 13, 14], //3\r\n    [0, 6, 12, 8, 4], //4\r\n    [10, 6, 2, 8, 14], //5\r\n    [5, 1, 2, 3, 9], //6\r\n    [5, 11, 12, 13, 9], //7\r\n    [0, 1, 7, 13, 14], //8\r\n    [10, 11, 7, 3, 4], //9\r\n    [5, 11, 7, 3, 9], //10\r\n    [5, 1, 7, 13, 9], //11\r\n    [0, 6, 7, 8, 4], //12\r\n    [10, 6, 7, 8, 14], //13\r\n    [0, 6, 2, 8, 4], //14\r\n    [10, 6, 12, 8, 14], //15\r\n    [5, 6, 2, 8, 9], //16\r\n    [5, 6, 12, 8, 9], //17\r\n    [0, 1, 12, 3, 4], //18\r\n    [10, 11, 2, 13, 14], //19\r\n    [0, 11, 12, 13, 4], //20\r\n    [10, 1, 2, 3, 14], //21\r\n    [5, 11, 2, 13, 9], //22\r\n    [5, 1, 12, 3, 9], //23\r\n    [0, 11, 2, 13, 4], //24\r\n    [10, 1, 12, 3, 14], //25\r\n  ];\r\n  private lastSpinRes: cmd.ReceivePlay = null;\r\n  private columnsWild = [];\r\n\r\n  private musicSlotState = null;\r\n  public soundSlotState = null;\r\n  private remoteMusicBackground = null;\r\n  private mIsTrial = false;\r\n  mutipleJpNode = null;\r\n\r\n  start() {\r\n    this.soundInit();\r\n    this.currentNumberFreeSpin = 0;\r\n    //this.itemHeight = this.itemTemplate.height;\r\n    for (let i = 0; i < this.reels.childrenCount; i++) {\r\n      let reel = this.reels.children[i];\r\n      let count = this.rollStartItemCount + i * this.rollAddItemCount;\r\n      for (let j = 0; j < count; j++) {\r\n        //let item = cc.instantiate(this.itemTemplate);\r\n        let itemNode = cc.instantiate(this.preItem);\r\n        itemNode.height = this.mHeightItem;\r\n        itemNode.width = this.mWidthItem;\r\n        let item: Slot7Item = itemNode.getComponent(Slot7Item);\r\n        itemNode.parent = reel;\r\n        // if (j >= 3) {\r\n        //     item.children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItemsBlur[Utils.randomRangeInt(0, this.sprFrameItemsBlur.length)];\r\n        // } else {\r\n        //     item.children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[Utils.randomRangeInt(0, this.sprFrameItems.length)];\r\n        // }\r\n        let id = Utils.randomRangeInt(0, 10);\r\n        item.setId(id);\r\n        //item.children[0].width=this.itemTemplate.children[0].width;\r\n        //item.children[0].height=this.itemTemplate.children[0].height;\r\n      }\r\n    }\r\n    // this.itemTemplate.removeFromParent();\r\n    // this.itemTemplate = null;\r\n\r\n    //dang ky khi mat ket noi tu dong back\r\n    SlotNetworkClient.getInstance().addOnClose(() => {\r\n      //this.actBack();\r\n      this.mSlotLobby.onBtnBack();\r\n    }, this);\r\n\r\n    //listenner client - server\r\n    SlotNetworkClient.getInstance().addListener((data) => {\r\n      let inpacket = new InPacket(data);\r\n      switch (inpacket.getCmdId()) {\r\n        case cmd.Code.FREE_DAI_LY:\r\n          {\r\n            if (!this.mIsTrial) {\r\n              let res = new cmd.ReceiveFreeDaiLy(data);\r\n              cc.log(\"init info Slot7:\" + JSON.stringify(res));\r\n              this.daiLyFreeSpin = res.freeSpin;\r\n            }\r\n          }\r\n          break;\r\n        case cmd.Code.DATE_X2:\r\n          {\r\n            let res = new cmd.ReceiveDateX2(data);\r\n            cc.log(\"init info Slot7:\" + JSON.stringify(res));\r\n            this.currentNumberFreeSpin = res.freeSpin + this.daiLyFreeSpin;\r\n            if (this.currentNumberFreeSpin > 0) {\r\n              this.lblFreeSpinCount.node.parent.active = true;\r\n              this.lblFreeSpinCount.string = this.currentNumberFreeSpin + \"\";\r\n            } else {\r\n              this.lblFreeSpinCount.node.parent.active = false;\r\n            }\r\n          }\r\n          break;\r\n        case cmd.Code.UPDATE_POT:\r\n          let res = new cmd.ReceiveUpdatePot(data);\r\n          Tween.numberTo(this.lblJackpot, res.jackpot, 0.3);\r\n\r\n          break;\r\n        case cmd.Code.UPDATE_JACKPOT_SLOTS:\r\n          this.mSlotLobby.onUpdateJackpot(data);\r\n          break;\r\n        case cmd.Code.PLAY:\r\n          {\r\n            let res = new cmd.ReceivePlay(data);\r\n            // cc.log(res);\r\n            this.onSpinResult(res);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }, this);\r\n    SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\r\n\r\n    //cc.log(\"Slot3Controller started\");\r\n\r\n    //SlotNetworkClient.getInstance().send(new cmd.SendSubcribe(this.betIdx));\r\n    this.stopShowLinesWin();\r\n\r\n    this.toast.active = false;\r\n    this.effectWinCash.active = false;\r\n    this.effectJackpot.active = false;\r\n    this.effectBigWin.active = false;\r\n    this.panelSetting.active = false;\r\n    this.popupSelectLine.onSelectedChanged = (lines) => {\r\n      this.arrLineSelect = lines;\r\n      this.lblLine.string = this.arrLineSelect.length.toString();\r\n      Tween.numberTo(\r\n        this.lblTotalBet,\r\n        this.arrLineSelect.length * this.listBet[this.betIdx],\r\n        0.3,\r\n        (n) => {\r\n          return this.moneyToK(n);\r\n        }\r\n      );\r\n    };\r\n    this.lblTotalBet.string = (\r\n      this.arrLineSelect.length * this.listBet[this.betIdx]\r\n    ).toString();\r\n\r\n    BroadcastReceiver.register(\r\n      BroadcastReceiver.USER_UPDATE_COIN,\r\n      () => {\r\n        Tween.numberTo(this.lblCoin, Configs.Login.Coin, 0.3);\r\n      },\r\n      this\r\n    );\r\n    BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n\r\n    App.instance.showErrLoading(\"Đang kết nối tới server...\");\r\n    SlotNetworkClient.getInstance().checkConnect(() => {\r\n      App.instance.showLoading(false);\r\n    });\r\n    //cc.log(\"Slot3Controller started\");\r\n\r\n    this.mSlotLobby.init(this);\r\n    this.mSlotLobby.node.active = true;\r\n    this.btnPlayReal.node.active = false;\r\n    this.btnPlayTry.node.active = true;\r\n    //this.initMutipleJPNode();\r\n  }\r\n  private initMutipleJPNode() {\r\n    if (!this.mutipleJpNode) {\r\n      cc.assetManager.getBundle(\"Lobby\").load(\r\n        \"prefabs/MutipleJackpotPr\",\r\n        cc.Prefab,\r\n        function (finish, total, item) {},\r\n        (err1, prefab: cc.Prefab) => {\r\n          if (err1 != null) {\r\n            cc.log(\"errr load game TIENLEN:\", err1);\r\n          } else {\r\n            this.mutipleJpNode = cc\r\n              .instantiate(prefab)\r\n              .getComponent(\"MutipleJackpot\");\r\n            this.mutipleJpNode.node.parent = cc.director\r\n              .getScene()\r\n              .getChildByName(\"Canvas\");\r\n            this.mutipleJpNode.setInfo(\"BITCOIN\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n  private showCoins(prize) {\r\n    var number = prize / 20000;\r\n    if (number <= 10) number = 10;\r\n    else if (number >= 30) number = 30;\r\n    App.instance.showCoins(number, this.lblWinNow.node, this.nodeCoin);\r\n  }\r\n\r\n  public onJoinRoom() {\r\n    this.lblBet.string = this.listBetLabel[this.betIdx];\r\n    let totalbet = this.arrLineSelect.length * this.listBet[this.betIdx];\r\n    Tween.numberTo(this.lblTotalBet, totalbet, 0.3);\r\n\r\n    this.skeSpin.animation = \"iat\";\r\n    this.skeSpin.loop = true;\r\n  }\r\n\r\n  private showToast(msg: string) {\r\n    this.toast.getComponentInChildren(cc.Label).string = msg;\r\n    this.toast.stopAllActions();\r\n    this.toast.active = true;\r\n    this.toast.runAction(\r\n      cc.sequence(\r\n        cc.delayTime(2),\r\n        cc.callFunc(() => {\r\n          this.toast.active = false;\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private moneyToK(money: number): string {\r\n    // if (money < 10000) {\r\n    //     return money.toString();\r\n    // }\r\n    // money = parseInt((money / 1000).toString());\r\n    return money.toString();\r\n  }\r\n\r\n  private setEnabledAllButtons(enabled: boolean) {\r\n    this.btnSpin.interactable = enabled;\r\n    this.btnBack.interactable = enabled;\r\n    // this.btnBetUp.interactable = enabled;\r\n    // this.btnBetDown.interactable = enabled;\r\n    this.btnLine.interactable = enabled;\r\n    this.btnPlayTry.interactable = enabled;\r\n    this.btnPlayReal.interactable = enabled;\r\n    //this.toggleTrial.interactable = enabled;\r\n  }\r\n\r\n  private stopAllEffects() {\r\n    this.effectJackpot.stopAllActions();\r\n    this.effectJackpot.active = false;\r\n    this.effectBigWin.stopAllActions();\r\n    this.effectBigWin.active = false;\r\n    this.effectFreeSpin.stopAllActions();\r\n    this.effectFreeSpin.active = false;\r\n  }\r\n\r\n  private stopShowLinesWin() {\r\n    this.linesWin.stopAllActions();\r\n    for (var i = 0; i < this.linesWin.childrenCount; i++) {\r\n      this.linesWin.children[i].active = false;\r\n    }\r\n    for (var i = 0; i < this.iconWildColumns.childrenCount; i++) {\r\n      this.iconWildColumns.children[i].active = false;\r\n    }\r\n    this.stopAllItemEffect();\r\n  }\r\n\r\n  private stopAllItemEffect() {\r\n    for (let i = 0; i < this.reels.childrenCount; i++) {\r\n      let children = this.reels.children[i].children; // ???\r\n      children[0].stopAllActions();\r\n      children[1].stopAllActions();\r\n      children[2].stopAllActions();\r\n\r\n      children[0].runAction(cc.scaleTo(0.1, 1));\r\n      children[1].runAction(cc.scaleTo(0.1, 1));\r\n      children[2].runAction(cc.scaleTo(0.1, 1));\r\n    }\r\n  }\r\n\r\n  private spin() {\r\n    if (!this.isSpined) return;\r\n\r\n    let isTrail = this.mIsTrial;\r\n    if (!isTrail) {\r\n      if (this.currentNumberFreeSpin <= 0) {\r\n        if (\r\n          Configs.Login.Coin <\r\n          this.listBet[this.betIdx] * this.arrLineSelect.length\r\n        ) {\r\n          App.instance.alertDialog.showMsg(\r\n            App.instance.getTextLang(\"txt_not_enough\")\r\n          );\r\n          return;\r\n        }\r\n        let curMoney =\r\n          Configs.Login.Coin -\r\n          this.arrLineSelect.length * this.listBet[this.betIdx];\r\n        Tween.numberTo(this.lblCoin, curMoney, 0.3);\r\n      } else {\r\n        this.currentNumberFreeSpin--;\r\n        this.lblFreeSpinCount.string = this.currentNumberFreeSpin + \"\";\r\n        if (this.currentNumberFreeSpin <= 0) {\r\n          this.currentNumberFreeSpin = 0;\r\n          this.lblFreeSpinCount.node.parent.active = false;\r\n        }\r\n      }\r\n\r\n      this.isSpined = false;\r\n      this.stopAllEffects();\r\n      this.stopShowLinesWin();\r\n      this.setEnabledAllButtons(false);\r\n      this.skeSpin.animation = \"iat2\";\r\n      this.skeSpin.loop = true;\r\n      SlotNetworkClient.getInstance().send(\r\n        new cmd.SendPlay(this.arrLineSelect.toString())\r\n      );\r\n    } else {\r\n      this.isSpined = false;\r\n      this.stopAllEffects();\r\n      this.stopShowLinesWin();\r\n      this.setEnabledAllButtons(false);\r\n      this.skeSpin.animation = \"iat2\";\r\n      this.skeSpin.loop = true;\r\n      var rIdx = Utils.randomRangeInt(0, TrialResults.results.length);\r\n      this.onSpinResult(TrialResults.results[rIdx]);\r\n    }\r\n  }\r\n\r\n  private stopSpin() {\r\n    for (var i = 0; i < this.reels.childrenCount; i++) {\r\n      var roll = this.reels.children[i];\r\n      roll.stopAllActions();\r\n      roll.setPosition(cc.v2(roll.getPosition().x, 0));\r\n    }\r\n  }\r\n\r\n  private showLineWins() {\r\n    this.isSpined = true;\r\n    Tween.numberTo(this.lblWinNow, this.lastSpinRes.prize, 0.3);\r\n    let isTrail = this.mIsTrial;\r\n    if (!isTrail) BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\r\n    if (!this.toggleAuto.isChecked && !this.toggleBoost.isChecked)\r\n      this.setEnabledAllButtons(true);\r\n\r\n    this.linesWin.stopAllActions();\r\n    let linesWin = this.lastSpinRes.linesWin.split(\",\");\r\n    linesWin = Utils.removeDups(linesWin);\r\n    for (let i = 0; i < linesWin.length; i++) {\r\n      if (linesWin[i] == \"0\") {\r\n        linesWin.splice(i, 1);\r\n        i--;\r\n      }\r\n    }\r\n    let matrix = this.lastSpinRes.matrix.split(\",\");\r\n    let linesWinChildren = this.linesWin.children;\r\n    let rolls = this.reels.children;\r\n    let actions = [];\r\n    for (let i = 0; i < linesWinChildren.length; i++) {\r\n      linesWinChildren[i].active = linesWin.indexOf(\"\" + (i + 1)) >= 0;\r\n    }\r\n    if (this.lastSpinRes.prize > 0) {\r\n      this.showWinCash(this.lastSpinRes.prize);\r\n      actions.push(cc.delayTime(1.5));\r\n      actions.push(\r\n        cc.callFunc(function () {\r\n          for (let i = 0; i < linesWinChildren.length; i++) {\r\n            linesWinChildren[i].active = false;\r\n          }\r\n        })\r\n      );\r\n      actions.push(cc.delayTime(0.3));\r\n      if (!this.toggleBoost.isChecked) {\r\n        for (let i = 0; i < linesWin.length; i++) {\r\n          let lineIdx = parseInt(linesWin[i]) - 1;\r\n          let line = linesWinChildren[lineIdx];\r\n          actions.push(\r\n            cc.callFunc(() => {\r\n              // cc.log(\"================: \" + lineIdx);\r\n              line.active = true;\r\n              let mLine = this.mapLine[lineIdx];\r\n              let countItemWin = 0;\r\n              let fisrtItemId = matrix[mLine[0]];\r\n              for (let j = 0; j < mLine.length; j++) {\r\n                let itemId = matrix[mLine[j]];\r\n                if (\r\n                  fisrtItemId == itemId ||\r\n                  parseInt(itemId) == this.wildItemId ||\r\n                  this.columnsWild.indexOf(j) >= 0\r\n                ) {\r\n                  // cc.log(\"==\" + itemId + \" j:\" + j);\r\n                  countItemWin++;\r\n                } else {\r\n                  break;\r\n                }\r\n              }\r\n              for (let j = 0; j < countItemWin; j++) {\r\n                let itemRow = parseInt((mLine[j] / 5).toString());\r\n                rolls[j].children[2 - itemRow].stopAllActions();\r\n                rolls[j].children[2 - itemRow].runAction(\r\n                  cc.repeatForever(\r\n                    cc.sequence(cc.scaleTo(0.2, 1.1), cc.scaleTo(0.2, 1))\r\n                  )\r\n                );\r\n              }\r\n              // cc.log(\"lineIdx: \" + lineIdx + \"fisrtItemId: \" + fisrtItemId + \" countItemWin: \" + countItemWin);\r\n            })\r\n          );\r\n          actions.push(cc.delayTime(1));\r\n          actions.push(\r\n            cc.callFunc(() => {\r\n              line.active = false;\r\n              this.stopAllItemEffect();\r\n            })\r\n          );\r\n          actions.push(cc.delayTime(0.1));\r\n        }\r\n      }\r\n    }\r\n    if (actions.length == 0) {\r\n      actions.push(\r\n        cc.callFunc(() => {\r\n          //fixed call cc.sequence.apply\r\n        })\r\n      );\r\n    }\r\n    actions.push(\r\n      cc.callFunc(() => {\r\n        if (this.toggleBoost.isChecked || this.toggleAuto.isChecked) {\r\n          this.spin();\r\n        }\r\n      })\r\n    );\r\n    this.linesWin.runAction(cc.sequence.apply(null, actions));\r\n  }\r\n\r\n  private showWinCash(cash: number) {\r\n    this.effectWinCash.stopAllActions();\r\n    this.effectWinCash.active = true;\r\n    let label = this.effectWinCash.getComponentInChildren(cc.Label);\r\n    label.string = \"0\";\r\n    this.effectWinCash.opacity = 0;\r\n    this.showCoins(cash);\r\n    this.effectWinCash.runAction(\r\n      cc.sequence(\r\n        cc.fadeIn(0.3),\r\n        cc.callFunc(() => {\r\n          Tween.numberTo(label, cash, 0.5);\r\n        }),\r\n        cc.delayTime(1.5),\r\n        cc.fadeOut(0.3),\r\n        cc.callFunc(() => {\r\n          this.effectWinCash.active = false;\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private showEffectBigWin(cash: number, cb: () => void) {\r\n    this.effectBigWin.stopAllActions();\r\n    this.effectBigWin.active = true;\r\n    this.effectBigWin\r\n      .getComponentInChildren(sp.Skeleton)\r\n      .setAnimation(0, \"animation\", false);\r\n    let label = this.effectBigWin.getComponentInChildren(cc.Label);\r\n    label.node.active = false;\r\n\r\n    this.effectBigWin.runAction(\r\n      cc.sequence(\r\n        cc.delayTime(1),\r\n        cc.callFunc(() => {\r\n          label.string = \"\";\r\n          label.node.active = true;\r\n          Tween.numberTo(label, cash, 1);\r\n        }),\r\n        cc.delayTime(3),\r\n        cc.callFunc(() => {\r\n          this.effectBigWin.active = false;\r\n          if (cb != null) cb();\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private showEffectFreeSpin(cb: () => void) {\r\n    this.effectFreeSpin.stopAllActions();\r\n    this.effectFreeSpin.active = true;\r\n    this.effectFreeSpin\r\n      .getComponentInChildren(sp.Skeleton)\r\n      .setAnimation(0, \"animation\", false);\r\n\r\n    this.effectFreeSpin.runAction(\r\n      cc.sequence(\r\n        cc.delayTime(1),\r\n        cc.delayTime(3),\r\n        cc.callFunc(() => {\r\n          this.effectFreeSpin.active = false;\r\n          if (cb != null) cb();\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private showEffectJackpot(cash: number, cb: () => void = null) {\r\n    var animName = [\"animation7\"];\r\n    var index = parseInt(Math.random() + \"\");\r\n    this.effectJackpot.stopAllActions();\r\n    this.effectJackpot.active = true;\r\n    this.effectJackpot\r\n      .getComponentInChildren(sp.Skeleton)\r\n      .setAnimation(0, animName[index], false);\r\n    let label = this.effectJackpot.getComponentInChildren(cc.Label);\r\n    label.node.active = false;\r\n\r\n    this.effectJackpot.runAction(\r\n      cc.sequence(\r\n        cc.delayTime(0.4),\r\n        cc.callFunc(() => {\r\n          this.particleJackpt.resetSystem();\r\n        }),\r\n        cc.delayTime(0.6),\r\n        cc.callFunc(() => {\r\n          label.string = \"\";\r\n          label.node.active = true;\r\n          Tween.numberTo(label, cash, 1);\r\n        }),\r\n        cc.delayTime(6),\r\n        cc.callFunc(() => {\r\n          this.effectJackpot.active = false;\r\n          if (cb != null) cb();\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private showEffectBonus(cb: () => void) {\r\n    this.effectBonus.stopAllActions();\r\n    this.effectBonus.active = true;\r\n    this.effectBonus\r\n      .getComponentInChildren(sp.Skeleton)\r\n      .setAnimation(0, \"animation\", false);\r\n\r\n    this.effectBonus.runAction(\r\n      cc.sequence(\r\n        cc.delayTime(3),\r\n        cc.callFunc(() => {\r\n          this.effectBonus.active = false;\r\n          if (cb != null) cb();\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private onSpinResult(res: cmd.ReceivePlay | any) {\r\n    this.stopSpin();\r\n    cc.log(\"onSpinResult:\" + JSON.stringify(res));\r\n    var successResult = [0, 1, 2, 3, 4, 5, 6];\r\n    //res.result == 5 //bonus\r\n    //res.result == 0 //khong an\r\n    //res.result == 1 //thang thuong\r\n    //res.result == 2 //thang lon\r\n    //res.result == 3 //no hu\r\n    //res.result == 6 //thang cuc lon\r\n    cc.log(\"saosao:\" + (successResult.indexOf(res.result) === -1));\r\n    if (successResult.indexOf(res.result) === -1) {\r\n      this.isSpined = true;\r\n\r\n      this.toggleAuto.isChecked = false;\r\n      this.toggleAuto.interactable = true;\r\n      this.toggleBoost.isChecked = false;\r\n      this.toggleBoost.interactable = true;\r\n\r\n      this.setEnabledAllButtons(true);\r\n      switch (res.result) {\r\n        case 102:\r\n          this.showToast(App.instance.getTextLang(\"txt_slot_error\"));\r\n          break;\r\n        default:\r\n          this.showToast(App.instance.getTextLang(\"txt_unknown_error1\"));\r\n          break;\r\n      }\r\n      return;\r\n    }\r\n    this.currentNumberFreeSpin = res.currentNumberFreeSpin;\r\n    this.lastSpinRes = res;\r\n    this.columnsWild.length = 0;\r\n\r\n    let isTrail = this.mIsTrial;\r\n    if (!isTrail && !this.lastSpinRes.isFree) {\r\n      Configs.Login.Coin = res.currentMoney;\r\n    }\r\n\r\n    let matrix = res.matrix.split(\",\");\r\n    let timeScale = this.toggleBoost.isChecked ? 0.5 : 1;\r\n    if (this.soundSlotState == 1) {\r\n      cc.audioEngine.play(this.soundSpin, false, 1);\r\n    }\r\n    for (let i = 0; i < this.reels.childrenCount; i++) {\r\n      let roll = this.reels.children[i];\r\n      let step1Pos = this.mHeightItem * 0.3;\r\n      let step2Pos =\r\n        -this.mHeightItem * roll.childrenCount +\r\n        this.mHeightItem * 3 -\r\n        this.mHeightItem * 0.3;\r\n      let step3Pos =\r\n        -this.mHeightItem * roll.childrenCount + this.mHeightItem * 3;\r\n      roll.runAction(\r\n        cc.sequence(\r\n          cc.delayTime(0.2 * i * timeScale),\r\n          cc\r\n            .moveTo(0.2 * timeScale, cc.v2(roll.position.x, step1Pos))\r\n            .easing(cc.easeQuadraticActionOut()),\r\n          cc\r\n            .moveTo(\r\n              (this.spinDuration + this.addSpinDuration * i) * timeScale,\r\n              cc.v2(roll.position.x, step2Pos)\r\n            )\r\n            .easing(cc.easeQuadraticActionInOut()),\r\n          cc\r\n            .moveTo(0.2 * timeScale, cc.v2(roll.position.x, step3Pos))\r\n            .easing(cc.easeQuadraticActionIn()),\r\n          cc.callFunc(() => {\r\n            roll.setPosition(cc.v2(roll.position.x, 0));\r\n            if (i == 4) {\r\n              //find columns wild\r\n              for (let j = 0; j < matrix.length; j++) {\r\n                if (parseInt(matrix[j]) == this.wildItemId) {\r\n                  let c = j % 5;\r\n                  if (this.columnsWild.indexOf(c) == -1)\r\n                    this.columnsWild.push(c);\r\n                }\r\n              }\r\n              //replace wild items in columns\r\n              for (let j = 0; j < this.columnsWild.length; j++) {\r\n                let c = this.columnsWild[j];\r\n                let children = this.reels.children[c].children;\r\n                children[2].getComponent(Slot7Item).setId(this.wildItemId);\r\n                children[1].getComponent(Slot7Item).setId(this.wildItemId);\r\n                children[0].getComponent(Slot7Item).setId(this.wildItemId);\r\n\r\n                // children[2].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[this.wildItemId];\r\n                // children[1].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[this.wildItemId];\r\n                // children[0].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[this.wildItemId];\r\n                this.iconWildColumns.children[c].active = true;\r\n                this.iconWildColumns.children[c].getComponent(\r\n                  sp.Skeleton\r\n                ).animation = \"1\";\r\n                this.iconWildColumns.children[c].getComponent(\r\n                  sp.Skeleton\r\n                ).loop = false;\r\n              }\r\n              if (this.columnsWild.length > 0) {\r\n                roll.runAction(\r\n                  cc.sequence(\r\n                    cc.delayTime(2.6),\r\n                    cc.callFunc(() => {\r\n                      for (\r\n                        let i = 0;\r\n                        i < this.iconWildColumns.childrenCount;\r\n                        i++\r\n                      ) {\r\n                        this.iconWildColumns.children[i].active = false;\r\n                      }\r\n                    }),\r\n                    cc.delayTime(0.1),\r\n                    cc.callFunc(() => {\r\n                      this.spined();\r\n                    })\r\n                  )\r\n                );\r\n              } else {\r\n                this.spined();\r\n              }\r\n            }\r\n          })\r\n        )\r\n      );\r\n\r\n      //rool = reel\r\n      roll.runAction(\r\n        cc.sequence(\r\n          cc.delayTime((0.47 + 0.2 * i) * timeScale),\r\n          cc.callFunc(() => {\r\n            let listItemNode = roll.children;\r\n            // listItem[2].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[parseInt(matrix[i])];\r\n            // listItem[1].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[parseInt(matrix[5 + i])];\r\n            // listItem[0].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[parseInt(matrix[10 + i])];\r\n            // listItem[listItem.length - 1].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[parseInt(matrix[i])];\r\n            // listItem[listItem.length - 2].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[parseInt(matrix[5 + i])];\r\n            // listItem[listItem.length - 3].children[0].getComponent(cc.Sprite).spriteFrame = this.sprFrameItems[parseInt(matrix[10 + i])];\r\n\r\n            listItemNode[2].getComponent(Slot7Item).setId(parseInt(matrix[i]));\r\n            listItemNode[1]\r\n              .getComponent(Slot7Item)\r\n              .setId(parseInt(matrix[5 + i]));\r\n            listItemNode[0]\r\n              .getComponent(Slot7Item)\r\n              .setId(parseInt(matrix[10 + i]));\r\n            listItemNode[listItemNode.length - 1]\r\n              .getComponent(Slot7Item)\r\n              .setId(parseInt(matrix[i]));\r\n            listItemNode[listItemNode.length - 2]\r\n              .getComponent(Slot7Item)\r\n              .setId(parseInt(matrix[5 + i]));\r\n            listItemNode[listItemNode.length - 3]\r\n              .getComponent(Slot7Item)\r\n              .setId(parseInt(matrix[10 + i]));\r\n          })\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  private spined() {\r\n    this.skeSpin.animation = \"iat\";\r\n    this.skeSpin.loop = true;\r\n    this.currentNumberFreeSpin = this.lastSpinRes.currentNumberFreeSpin;\r\n    if (this.lastSpinRes.currentNumberFreeSpin > 0) {\r\n      this.lblFreeSpinCount.node.parent.active = true;\r\n      this.lblFreeSpinCount.string = this.currentNumberFreeSpin + \"\";\r\n    } else {\r\n      this.lblFreeSpinCount.node.parent.active = false;\r\n    }\r\n    if (this.lastSpinRes.freeSpin == 1) {\r\n      this.showEffectFreeSpin(() => {\r\n        this.showLineWins();\r\n      });\r\n    } else {\r\n      var successResult = [0, 1, 3, 5, 6];\r\n      switch (this.lastSpinRes.result) {\r\n        case TYPE_WIN.MISS: //k an\r\n          if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundSpinMis, false, 1);\r\n          }\r\n          this.showLineWins();\r\n          break;\r\n        case TYPE_WIN.WIN: // thang thuong\r\n          if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundSpinWin, false, 1);\r\n          }\r\n          this.showLineWins();\r\n          break;\r\n        case TYPE_WIN.BIGWIN: // thang lon\r\n          if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundBigWin, false, 1);\r\n          }\r\n          this.showEffectBigWin(this.lastSpinRes.prize, () => {\r\n            this.showLineWins();\r\n          });\r\n          break;\r\n        case TYPE_WIN.JACKPOT: //jackpot\r\n          if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundJackpot, false, 1);\r\n          }\r\n          this.showEffectJackpot(this.lastSpinRes.prize, () => {\r\n            this.showLineWins();\r\n          });\r\n          break;\r\n        case TYPE_WIN.SUPERWIN: //jackpot\r\n          if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundJackpot, false, 1);\r\n          }\r\n          this.showEffectJackpot(this.lastSpinRes.prize, () => {\r\n            this.showLineWins();\r\n          });\r\n          break;\r\n        case 6: //thang sieu lon\r\n          if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundBigWin, false, 1);\r\n          }\r\n          this.showEffectBigWin(this.lastSpinRes.prize, () => {\r\n            this.showLineWins();\r\n          });\r\n          break;\r\n        case TYPE_WIN.BONUS: //bonus\r\n          if (this.soundSlotState == 1) {\r\n            cc.audioEngine.play(this.soundBonus, false, 1);\r\n          }\r\n          this.showEffectBonus(() => {\r\n            this.popupBonus.showBonus(\r\n              this.mIsTrial ? 100 : this.listBet[this.betIdx],\r\n              this.lastSpinRes.haiSao,\r\n              this,\r\n              () => {\r\n                this.showLineWins();\r\n              }\r\n            );\r\n          });\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  onBtnSoundTouchBonus() {}\r\n\r\n  onBtnSoundSumary() {}\r\n  actBack() {\r\n    if (this.soundSlotState == 1) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    SlotNetworkClient.getInstance().send(new cmd.SendUnSubcribe(this.betIdx));\r\n    // cc.audioEngine.stopAll();\r\n    // App.instance.loadScene(\"Lobby\");\r\n\r\n    this.mSlotLobby.node.active = true;\r\n  }\r\n\r\n  actHidden() {\r\n    this.showToast(App.instance.getTextLang(\"txt_function_in_development\"));\r\n  }\r\n\r\n  actBetUp() {\r\n    if (this.soundSlotState == 1) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n\r\n    let isTrail = this.mIsTrial;\r\n    if (isTrail) {\r\n      this.showToast(App.instance.getTextLang(\"txt_slot_error\"));\r\n      return;\r\n    }\r\n    if (this.betIdx < this.listBet.length - 1) {\r\n      this.daiLyFreeSpin = 0;\r\n      this.lblFreeSpinCount.node.parent.active = false;\r\n      SlotNetworkClient.getInstance().send(\r\n        new cmd.SendChangeRoom(this.betIdx, ++this.betIdx)\r\n      );\r\n      this.lblBet.string = this.listBetLabel[this.betIdx];\r\n      Tween.numberTo(\r\n        this.lblTotalBet,\r\n        this.arrLineSelect.length * this.listBet[this.betIdx],\r\n        0.3,\r\n        (n) => {\r\n          return this.moneyToK(n);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  actBetDown() {\r\n    if (this.soundSlotState == 1) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n\r\n    let isTrail = this.mIsTrial;\r\n    if (isTrail) {\r\n      this.showToast(App.instance.getTextLang(\"txt_slot_error\"));\r\n      return;\r\n    }\r\n    if (this.betIdx > 0) {\r\n      this.daiLyFreeSpin = 0;\r\n      this.lblFreeSpinCount.node.parent.active = false;\r\n      SlotNetworkClient.getInstance().send(\r\n        new cmd.SendChangeRoom(this.betIdx, --this.betIdx)\r\n      );\r\n      this.lblBet.string = this.listBetLabel[this.betIdx];\r\n      Tween.numberTo(\r\n        this.lblTotalBet,\r\n        this.arrLineSelect.length * this.listBet[this.betIdx],\r\n        0.3,\r\n        (n) => {\r\n          return this.moneyToK(n);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  actLine() {\r\n    if (this.soundSlotState == 1) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n\r\n    let isTrail = this.mIsTrial;\r\n    if (isTrail) {\r\n      this.showToast(App.instance.getTextLang(\"txt_slot_error\"));\r\n      return;\r\n    }\r\n    this.popupSelectLine.show();\r\n  }\r\n\r\n  actSetting() {\r\n    if (this.soundSlotState == 1) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n    this.panelSetting.active = !this.panelSetting.active;\r\n  }\r\n\r\n  toggleTrialOnCheck() {\r\n    if (this.soundSlotState == 1) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n\r\n    this.mIsTrial = !this.mIsTrial;\r\n    let isTrail = this.mIsTrial;\r\n    if (isTrail) {\r\n      this.btnPlayReal.node.active = true;\r\n      this.btnPlayTry.node.active = false;\r\n      this.lblLine.string = \"25\";\r\n      this.lblBet.string = \"100\";\r\n      Tween.numberTo(this.lblTotalBet, 2500, 0.3, (n) => this.moneyToK(n));\r\n    } else {\r\n      this.btnPlayReal.node.active = false;\r\n      this.btnPlayTry.node.active = true;\r\n      this.lblLine.string = this.arrLineSelect.length.toString();\r\n      this.lblBet.string = this.listBetLabel[this.betIdx];\r\n      Tween.numberTo(\r\n        this.lblTotalBet,\r\n        this.arrLineSelect.length * this.listBet[this.betIdx],\r\n        0.3,\r\n        (n) => this.moneyToK(n)\r\n      );\r\n    }\r\n  }\r\n\r\n  toggleAutoOnCheck() {\r\n    if (this.soundSlotState == 1) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n\r\n    let isTrail = this.mIsTrial;\r\n    if (this.toggleAuto.isChecked && isTrail) {\r\n      this.toggleAuto.isChecked = false;\r\n      this.showToast(App.instance.getTextLang(\"txt_slot_error\"));\r\n      return;\r\n    }\r\n    if (this.toggleAuto.isChecked) {\r\n      this.spin();\r\n      this.toggleBoost.interactable = false;\r\n    } else {\r\n      this.toggleBoost.interactable = true;\r\n      if (this.isSpined) {\r\n        this.setEnabledAllButtons(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleBoostOnCheck() {\r\n    if (this.soundSlotState == 1) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n\r\n    let isTrail = this.mIsTrial;\r\n    if (this.toggleBoost.isChecked && isTrail) {\r\n      this.toggleBoost.isChecked = false;\r\n      this.showToast(App.instance.getTextLang(\"txt_slot_error\"));\r\n      return;\r\n    }\r\n    if (this.toggleBoost.isChecked) {\r\n      this.spin();\r\n      this.toggleAuto.interactable = false;\r\n    } else {\r\n      this.toggleAuto.interactable = true;\r\n      if (this.isSpined) {\r\n        this.setEnabledAllButtons(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  //music setting\r\n\r\n  private soundInit() {\r\n    // musicSave :   0 == OFF , 1 == ON\r\n    var musicSave = cc.sys.localStorage.getItem(\"music_Slot_7\");\r\n    if (musicSave != null) {\r\n      this.musicSlotState = parseInt(musicSave);\r\n    } else {\r\n      this.musicSlotState = 1;\r\n      cc.sys.localStorage.setItem(\"music_Slot_7\", \"1\");\r\n    }\r\n\r\n    // soundSave :   0 == OFF , 1 == ON\r\n    var soundSave = cc.sys.localStorage.getItem(\"sound_Slot_7\");\r\n    if (soundSave != null) {\r\n      this.soundSlotState = parseInt(soundSave);\r\n    } else {\r\n      this.soundSlotState = 1;\r\n      cc.sys.localStorage.setItem(\"sound_Slot_7\", \"1\");\r\n    }\r\n\r\n    if (this.musicSlotState == 0) {\r\n      //this.musicOff.active = true;\r\n    } else {\r\n      //this.musicOff.active = false;\r\n    }\r\n\r\n    if (this.soundSlotState == 0) {\r\n      //this.soundOff.active = true;\r\n    } else {\r\n      //this.soundOff.active = false;\r\n    }\r\n\r\n    if (this.musicSlotState == 1) {\r\n      this.remoteMusicBackground = cc.audioEngine.playMusic(this.soundBg, true);\r\n    }\r\n  }\r\n  settingMusic() {\r\n    //this.musicOff.active = !this.musicOff.active;\r\n    if (!this.togglgeMusic.isChecked) {\r\n      cc.audioEngine.stop(this.remoteMusicBackground);\r\n      this.musicSlotState = 0;\r\n    } else {\r\n      this.remoteMusicBackground = cc.audioEngine.playMusic(this.soundBg, true);\r\n      this.musicSlotState = 1;\r\n    }\r\n\r\n    if (this.soundSlotState == 1) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n\r\n    cc.sys.localStorage.setItem(\"music_Slot_7\", \"\" + this.musicSlotState);\r\n  }\r\n  settingSound() {\r\n    if (this.soundSlotState == 1) {\r\n      cc.audioEngine.play(this.soundClick, false, 1);\r\n    }\r\n\r\n    if (!this.toggleSound.isChecked) {\r\n      this.soundSlotState = 0;\r\n    } else {\r\n      this.soundSlotState = 1;\r\n    }\r\n\r\n    cc.sys.localStorage.setItem(\"music_Slot_7\", \"\" + this.soundSlotState);\r\n  }\r\n}\r\n","export default class TrialResults {\r\n    static results = [\r\n        {\"_pos\":102,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":164,\"12\":3,\"13\":0,\"14\":32,\"15\":51,\"16\":44,\"17\":53,\"18\":44,\"19\":54,\"20\":44,\"21\":53,\"22\":44,\"23\":49,\"24\":48,\"25\":44,\"26\":51,\"27\":44,\"28\":51,\"29\":44,\"30\":53,\"31\":44,\"32\":51,\"33\":44,\"34\":51,\"35\":44,\"36\":55,\"37\":44,\"38\":51,\"39\":44,\"40\":51,\"41\":44,\"42\":49,\"43\":48,\"44\":44,\"45\":49,\"46\":48,\"47\":0,\"48\":29,\"49\":49,\"50\":44,\"51\":53,\"52\":44,\"53\":55,\"54\":44,\"55\":49,\"56\":48,\"57\":44,\"58\":49,\"59\":50,\"60\":44,\"61\":49,\"62\":52,\"63\":44,\"64\":49,\"65\":54,\"66\":44,\"67\":49,\"68\":55,\"69\":44,\"70\":50,\"71\":48,\"72\":44,\"73\":50,\"74\":51,\"75\":44,\"76\":50,\"77\":52,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":9,\"86\":9,\"87\":125,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":0,\"93\":136,\"94\":221,\"95\":154,\"96\":0,\"97\":0,\"98\":0,\"99\":0,\"100\":0,\"101\":0},\"_length\":102,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984420,\"result\":3,\"matrix\":\"3,5,6,5,10,3,3,5,3,3,7,3,3,10,10\",\"linesWin\":\"1,5,7,10,12,14,16,17,20,23,24\",\"haiSao\":\"\",\"prize\":592253,\"currentMoney\":8969626,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":99,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":175,\"12\":5,\"13\":0,\"14\":31,\"15\":49,\"16\":44,\"17\":52,\"18\":44,\"19\":49,\"20\":44,\"21\":52,\"22\":44,\"23\":55,\"24\":44,\"25\":53,\"26\":44,\"27\":49,\"28\":44,\"29\":53,\"30\":44,\"31\":49,\"32\":44,\"33\":57,\"34\":44,\"35\":49,\"36\":48,\"37\":44,\"38\":49,\"39\":48,\"40\":44,\"41\":49,\"42\":44,\"43\":52,\"44\":44,\"45\":57,\"46\":0,\"47\":4,\"48\":53,\"49\":44,\"50\":49,\"51\":52,\"52\":0,\"53\":23,\"54\":52,\"55\":44,\"56\":50,\"57\":44,\"58\":49,\"59\":44,\"60\":49,\"61\":44,\"62\":49,\"63\":44,\"64\":49,\"65\":44,\"66\":49,\"67\":44,\"68\":48,\"69\":44,\"70\":49,\"71\":44,\"72\":49,\"73\":44,\"74\":50,\"75\":44,\"76\":49,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":96,\"84\":224,\"85\":0,\"86\":0,\"87\":0,\"88\":0,\"89\":1,\"90\":5,\"91\":66,\"92\":201,\"93\":0,\"94\":0,\"95\":0,\"96\":0,\"97\":0,\"98\":0},\"_length\":99,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984431,\"result\":5,\"matrix\":\"1,4,1,4,7,5,1,5,1,9,10,10,1,4,9\",\"linesWin\":\"5,14\",\"haiSao\":\"4,2,1,1,1,1,1,0,1,1,2,1\",\"prize\":24800,\"currentMoney\":17121993,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":86,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":165,\"12\":3,\"13\":0,\"14\":30,\"15\":53,\"16\":44,\"17\":51,\"18\":44,\"19\":51,\"20\":44,\"21\":51,\"22\":44,\"23\":52,\"24\":44,\"25\":51,\"26\":44,\"27\":53,\"28\":44,\"29\":56,\"30\":44,\"31\":55,\"32\":44,\"33\":51,\"34\":44,\"35\":49,\"36\":48,\"37\":44,\"38\":49,\"39\":44,\"40\":51,\"41\":44,\"42\":52,\"43\":44,\"44\":52,\"45\":0,\"46\":15,\"47\":53,\"48\":44,\"49\":54,\"50\":44,\"51\":49,\"52\":49,\"53\":44,\"54\":49,\"55\":50,\"56\":44,\"57\":49,\"58\":52,\"59\":44,\"60\":50,\"61\":50,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":7,\"70\":189,\"71\":212,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":144,\"78\":145,\"79\":170,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0},\"_length\":86,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984421,\"result\":3,\"matrix\":\"5,3,3,3,4,3,5,8,7,3,10,1,3,4,4\",\"linesWin\":\"5,6,11,12,14,22\",\"haiSao\":\"\",\"prize\":507348,\"currentMoney\":9474474,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":84,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":166,\"12\":3,\"13\":0,\"14\":29,\"15\":51,\"16\":44,\"17\":55,\"18\":44,\"19\":51,\"20\":44,\"21\":53,\"22\":44,\"23\":51,\"24\":44,\"25\":57,\"26\":44,\"27\":51,\"28\":44,\"29\":51,\"30\":44,\"31\":51,\"32\":44,\"33\":52,\"34\":44,\"35\":52,\"36\":44,\"37\":52,\"38\":44,\"39\":56,\"40\":44,\"41\":52,\"42\":44,\"43\":53,\"44\":0,\"45\":14,\"46\":51,\"47\":44,\"48\":53,\"49\":44,\"50\":57,\"51\":44,\"52\":49,\"53\":50,\"54\":44,\"55\":49,\"56\":52,\"57\":44,\"58\":49,\"59\":57,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":7,\"68\":175,\"69\":63,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":152,\"76\":55,\"77\":37,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0},\"_length\":84,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984422,\"result\":3,\"matrix\":\"3,7,3,5,3,9,3,3,3,4,4,4,8,4,5\",\"linesWin\":\"3,5,9,12,14,19\",\"haiSao\":\"\",\"prize\":503615,\"currentMoney\":9975589,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":76,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":168,\"12\":1,\"13\":0,\"14\":30,\"15\":48,\"16\":44,\"17\":55,\"18\":44,\"19\":48,\"20\":44,\"21\":56,\"22\":44,\"23\":52,\"24\":44,\"25\":48,\"26\":44,\"27\":48,\"28\":44,\"29\":52,\"30\":44,\"31\":51,\"32\":44,\"33\":54,\"34\":44,\"35\":57,\"36\":44,\"37\":53,\"38\":44,\"39\":51,\"40\":44,\"41\":52,\"42\":44,\"43\":49,\"44\":48,\"45\":0,\"46\":5,\"47\":49,\"48\":52,\"49\":44,\"50\":49,\"51\":54,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":1,\"67\":4,\"68\":158,\"69\":85,\"70\":1,\"71\":0,\"72\":0,\"73\":0,\"74\":2,\"75\":2},\"_length\":76,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984424,\"result\":1,\"matrix\":\"0,7,0,8,4,0,0,4,3,6,9,5,3,4,10\",\"linesWin\":\"14,16\",\"haiSao\":\"\",\"prize\":0,\"currentMoney\":17079893,\"freeSpin\":1,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":2,\"currentNumberFreeSpin\":2},\r\n        {\"_pos\":71,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":169,\"12\":1,\"13\":0,\"14\":30,\"15\":52,\"16\":44,\"17\":53,\"18\":44,\"19\":54,\"20\":44,\"21\":52,\"22\":44,\"23\":49,\"24\":44,\"25\":52,\"26\":44,\"27\":49,\"28\":48,\"29\":44,\"30\":53,\"31\":44,\"32\":56,\"33\":44,\"34\":53,\"35\":44,\"36\":52,\"37\":44,\"38\":51,\"39\":44,\"40\":53,\"41\":44,\"42\":52,\"43\":44,\"44\":55,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":1,\"62\":4,\"63\":158,\"64\":85,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":1},\"_length\":71,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984425,\"result\":1,\"matrix\":\"4,5,6,4,1,4,10,5,8,5,4,3,5,4,7\",\"linesWin\":\"\",\"haiSao\":\"\",\"prize\":0,\"currentMoney\":17079893,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":1},\r\n        {\"_pos\":71,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":170,\"12\":1,\"13\":0,\"14\":30,\"15\":49,\"16\":44,\"17\":54,\"18\":44,\"19\":49,\"20\":48,\"21\":44,\"22\":55,\"23\":44,\"24\":53,\"25\":44,\"26\":56,\"27\":44,\"28\":53,\"29\":44,\"30\":57,\"31\":44,\"32\":51,\"33\":44,\"34\":51,\"35\":44,\"36\":56,\"37\":44,\"38\":55,\"39\":44,\"40\":52,\"41\":44,\"42\":54,\"43\":44,\"44\":52,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":1,\"62\":4,\"63\":158,\"64\":85,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0},\"_length\":71,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984426,\"result\":1,\"matrix\":\"1,6,10,7,5,8,5,9,3,3,8,7,4,6,4\",\"linesWin\":\"\",\"haiSao\":\"\",\"prize\":0,\"currentMoney\":17079893,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":74,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":171,\"12\":1,\"13\":0,\"14\":31,\"15\":49,\"16\":44,\"17\":48,\"18\":44,\"19\":48,\"20\":44,\"21\":56,\"22\":44,\"23\":49,\"24\":48,\"25\":44,\"26\":49,\"27\":48,\"28\":44,\"29\":54,\"30\":44,\"31\":52,\"32\":44,\"33\":52,\"34\":44,\"35\":51,\"36\":44,\"37\":48,\"38\":44,\"39\":52,\"40\":44,\"41\":56,\"42\":44,\"43\":51,\"44\":44,\"45\":57,\"46\":0,\"47\":2,\"48\":50,\"49\":49,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":1,\"65\":4,\"66\":148,\"67\":145,\"68\":1,\"69\":0,\"70\":0,\"71\":0,\"72\":1,\"73\":1},\"_length\":74,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984427,\"result\":1,\"matrix\":\"1,0,0,8,10,10,6,4,4,3,0,4,8,3,9\",\"linesWin\":\"21\",\"haiSao\":\"\",\"prize\":0,\"currentMoney\":17077393,\"freeSpin\":1,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":1,\"currentNumberFreeSpin\":1},\r\n        {\"_pos\":70,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":172,\"12\":1,\"13\":0,\"14\":29,\"15\":54,\"16\":44,\"17\":53,\"18\":44,\"19\":49,\"20\":44,\"21\":53,\"22\":44,\"23\":56,\"24\":44,\"25\":49,\"26\":44,\"27\":55,\"28\":44,\"29\":51,\"30\":44,\"31\":52,\"32\":44,\"33\":54,\"34\":44,\"35\":57,\"36\":44,\"37\":53,\"38\":44,\"39\":51,\"40\":44,\"41\":52,\"42\":44,\"43\":49,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":1,\"61\":4,\"62\":148,\"63\":145,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0},\"_length\":70,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984428,\"result\":1,\"matrix\":\"6,5,1,5,8,1,7,3,4,6,9,5,3,4,1\",\"linesWin\":\"\",\"haiSao\":\"\",\"prize\":0,\"currentMoney\":17077393,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0},\r\n        {\"_pos\":102,\"_data\":{\"0\":1,\"1\":15,\"2\":161,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":213,\"10\":98,\"11\":174,\"12\":5,\"13\":0,\"14\":30,\"15\":51,\"16\":44,\"17\":49,\"18\":44,\"19\":53,\"20\":44,\"21\":49,\"22\":44,\"23\":53,\"24\":44,\"25\":53,\"26\":44,\"27\":53,\"28\":44,\"29\":51,\"30\":44,\"31\":49,\"32\":48,\"33\":44,\"34\":53,\"35\":44,\"36\":49,\"37\":44,\"38\":54,\"39\":44,\"40\":49,\"41\":44,\"42\":55,\"43\":44,\"44\":57,\"45\":0,\"46\":10,\"47\":49,\"48\":44,\"49\":49,\"50\":54,\"51\":44,\"52\":49,\"53\":55,\"54\":44,\"55\":50,\"56\":53,\"57\":0,\"58\":21,\"59\":50,\"60\":44,\"61\":49,\"62\":44,\"63\":49,\"64\":44,\"65\":49,\"66\":44,\"67\":49,\"68\":44,\"69\":49,\"70\":44,\"71\":49,\"72\":44,\"73\":50,\"74\":44,\"75\":49,\"76\":44,\"77\":49,\"78\":44,\"79\":49,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":41,\"87\":104,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":1,\"93\":4,\"94\":235,\"95\":173,\"96\":0,\"97\":0,\"98\":0,\"99\":0,\"100\":0,\"101\":0},\"_length\":102,\"_controllerId\":1,\"_cmdId\":4001,\"_error\":0,\"ref\":13984430,\"result\":5,\"matrix\":\"3,1,5,1,5,5,5,3,10,5,1,6,1,7,9\",\"linesWin\":\"1,16,17,25\",\"haiSao\":\"2,1,1,1,1,1,1,2,1,1,1\",\"prize\":10600,\"currentMoney\":17099693,\"freeSpin\":0,\"isFree\":false,\"itemsWild\":\"\",\"ratio\":0,\"currentNumberFreeSpin\":0}\r\n\r\n    ]\r\n}","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n  @property(cc.Node)\r\n  nodeLobby: cc.Node = null;\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  // onLoad () {}\r\n\r\n  start() {\r\n    this.node.active = false;\r\n  }\r\n  private onManHinh() {\r\n    this.node.active = true;\r\n  }\r\n  private offManHinh() {\r\n    this.node.active = false;\r\n  }\r\n\r\n  // update (dt) {}\r\n}\r\n"],"file":"index.js"}